[
  {
    "QuestionId": "WebQTest-1198",
    "RawQuestion": "who influenced samuel taylor coleridge?",
    "ProcessedQuestion": "who influenced samuel taylor coleridge",
    "Parses": [
      {
        "ParseId": "WebQTest-1198.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078w2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078w2 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "samuel taylor coleridge",
        "TopicEntityName": "Samuel Taylor Coleridge",
        "TopicEntityMid": "m.078w2",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015_hb",
            "EntityName": "Giambattista Vico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015n8",
            "EntityName": "Baruch Spinoza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017m4j",
            "EntityName": "Thomas Browne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0182w0",
            "EntityName": "Friedrich Wilhelm Joseph Schelling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gnng",
            "EntityName": "Emanuel Swedenborg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sbs",
            "EntityName": "Immanuel Kant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0448r",
            "EntityName": "John Milton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081k8",
            "EntityName": "William Shakespeare"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09482",
            "EntityName": "Robert Burns"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nld",
            "EntityName": "Algernon Charles Swinburne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.078w2": "Samuel Taylor Coleridge"
    },
    "qid_topic_entity": {
      "Q82409": "Samuel Taylor Coleridge"
    },
    "index": 0
  },
  {
    "QuestionId": "WebQTest-1092",
    "RawQuestion": "who did viggo mortensen play in lord of the rings?",
    "ProcessedQuestion": "who did viggo mortensen play in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-1092.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gl1",
            "EntityName": "The Lord of the Rings: The Fellowship of the Ring",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017jd9 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017jd9",
            "EntityName": "The Lord of the Rings: The Return of the King",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gm7 .\n}\n",
        "PotentialTopicEntityMention": "viggo mortensen",
        "TopicEntityName": "Viggo Mortensen",
        "TopicEntityMid": "m.01ps2h8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gm7",
            "EntityName": "The Lord of the Rings: The Two Towers",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017gl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017gl1 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01ps2h8 .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Fellowship of the Ring",
        "TopicEntityMid": "m.017gl1",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01ps2h8",
            "EntityName": "Viggo Mortensen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1092.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01ps2h8 .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Return of the King",
        "TopicEntityMid": "m.017jd9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01ps2h8",
            "EntityName": "Viggo Mortensen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwlg",
            "EntityName": "Aragorn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ps2h8": "Viggo Mortensen",
      "m.017gl1": "The Lord of the Rings: The Fellowship of the Ring",
      "m.017jd9": "The Lord of the Rings: The Return of the King"
    },
    "qid_topic_entity": {
      "Q171363": "Viggo Mortensen",
      "Q127367": "The Lord of the Rings: The Fellowship of the Ring",
      "Q131074": "The Lord of the Rings: The Return of the King"
    },
    "index": 1
  },
  {
    "QuestionId": "WebQTest-713",
    "RawQuestion": "what county is st. louis park in?",
    "ProcessedQuestion": "what county is st. louis park in",
    "Parses": [
      {
        "ParseId": "WebQTest-713.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "st . louis park",
        "TopicEntityName": "St. Louis Park",
        "TopicEntityMid": "m.0xdhj",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhmw",
            "EntityName": "Hennepin County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-713.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "st . louis park",
        "TopicEntityName": "St. Louis Park",
        "TopicEntityMid": "m.0xdhj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhmw",
            "EntityName": "Hennepin County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0xdhj": "St. Louis Park"
    },
    "qid_topic_entity": {
      "Q988741": "St. Louis Park"
    },
    "index": 2
  },
  {
    "QuestionId": "WebQTest-1637",
    "RawQuestion": "what are the catholic holy days?",
    "ProcessedQuestion": "what are the catholic holy days",
    "Parses": [
      {
        "ParseId": "WebQTest-1637.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c8wxp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c8wxp ns:religion.religion.holidays ?x .\n}\n",
        "PotentialTopicEntityMention": "catholic",
        "TopicEntityName": "Catholicism",
        "TopicEntityMid": "m.0c8wxp",
        "InferentialChain": [
          "religion.religion.holidays"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kv0v5",
            "EntityName": "Feast of St. Margaret of the \u00c1rp\u00e1d House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kvb49",
            "EntityName": "Feast of Our Lady of Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kvbh6",
            "EntityName": "Feast of Our Lady of the Rosary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_l_d7h",
            "EntityName": "Our Lady of Aparecida's day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_lpd56",
            "EntityName": "Father Damien Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_lsyyw",
            "EntityName": "Our Lady of Guadalupe Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_m1438",
            "EntityName": "St. Spiridon Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_m14vv",
            "EntityName": "Saint Nicholas' Eve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_mrbts",
            "EntityName": "Feast of Assumption"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ncb1h",
            "EntityName": "Euthymius the Great's Feast Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ncyv_",
            "EntityName": "The Feast of Our Lady of Mount Carmel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nk6vg",
            "EntityName": "St. Anthony's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nkz4p",
            "EntityName": "Feast of Our Lady of Sorrows"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0148r6",
            "EntityName": "St Joseph's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016s_l",
            "EntityName": "Saint Patrick's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016v69",
            "EntityName": "Maundy Thursday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cqmf",
            "EntityName": "St. Stephen's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v147",
            "EntityName": "Corpus Christi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nlrrk",
            "EntityName": "Nativity of Mary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0497bm",
            "EntityName": "Olsok"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mrs1",
            "EntityName": "Feast of the Immaculate Conception"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qnzg",
            "EntityName": "Feast of the Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sy0c",
            "EntityName": "Feast of Christ the King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.058_lf",
            "EntityName": "Name day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0581_5",
            "EntityName": "Fat Thursday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b22_z",
            "EntityName": "World Day of Peace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060_r",
            "EntityName": "Palm Sunday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0604_c",
            "EntityName": "Saints Cyril and Methodius Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cpnkn",
            "EntityName": "Solemnity of Mary, Mother of God"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dsq86",
            "EntityName": "Feast of Saints Peter and Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6l2j",
            "EntityName": "St Crispin's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fdm1h",
            "EntityName": "St Casimir's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0c",
            "EntityName": "All Saints' Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k5y347",
            "EntityName": "Feast of St Francis of Assisi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n_fbc8",
            "EntityName": "St Nicholas Day"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c8wxp": "Catholicism"
    },
    "qid_topic_entity": {
      "Q1841": "Catholicism"
    },
    "index": 3
  },
  {
    "QuestionId": "WebQTest-1241",
    "RawQuestion": "where does the columbia river start?",
    "ProcessedQuestion": "where does the columbia river start",
    "Parses": [
      {
        "ParseId": "WebQTest-1241.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n86 ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "columbia river",
        "TopicEntityName": "Columbia River",
        "TopicEntityMid": "m.01n86",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r8kvz",
            "EntityName": "Columbia Lake"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n86": "Columbia River"
    },
    "qid_topic_entity": {
      "Q2251": "Columbia River"
    },
    "index": 4
  },
  {
    "QuestionId": "WebQTest-377",
    "RawQuestion": "what school did michael jordan attend?",
    "ProcessedQuestion": "what school did michael jordan attend",
    "Parses": [
      {
        "ParseId": "WebQTest-377.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054c1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054c1 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jordan",
        "TopicEntityName": "Michael Jordan",
        "TopicEntityMid": "m.054c1",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07qymj",
            "EntityName": "Emsley A. Laney High School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bx8pn",
            "EntityName": "University of North Carolina at Chapel Hill"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.054c1": "Michael Jordan"
    },
    "qid_topic_entity": {
      "Q41421": "Michael Jordan"
    },
    "index": 5
  },
  {
    "QuestionId": "WebQTest-1488",
    "RawQuestion": "what type of art does marc chagall do?",
    "ProcessedQuestion": "what type of art does marc chagall do",
    "Parses": [
      {
        "ParseId": "WebQTest-1488.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g_j0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g_j0 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "marc chagall",
        "TopicEntityName": "Marc Chagall",
        "TopicEntityMid": "m.0g_j0",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1",
            "EntityName": "Fauvism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073_6",
            "EntityName": "Surrealism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ff3",
            "EntityName": "Cubism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pybl",
            "EntityName": "Expressionism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g_j0": "Marc Chagall"
    },
    "qid_topic_entity": {
      "Q93284": "Marc Chagall"
    },
    "index": 6
  },
  {
    "QuestionId": "WebQTest-383",
    "RawQuestion": "what language do chinese people write in?",
    "ProcessedQuestion": "what language do chinese people write in",
    "Parses": [
      {
        "ParseId": "WebQTest-383.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.writing_system ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.writing_system"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014lbg",
            "EntityName": "N\u00fcshu script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mw7r",
            "EntityName": "Simplified Chinese character"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nf5z",
            "EntityName": "Traditional Chinese characters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050fyz",
            "EntityName": "'Phags-pa script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmzb",
            "EntityName": "Chinese characters"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 7
  },
  {
    "QuestionId": "WebQTest-1619",
    "RawQuestion": "where do the appalachian mountains run?",
    "ProcessedQuestion": "where do the appalachian mountains run",
    "Parses": [
      {
        "ParseId": "WebQTest-1619.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "lots of other predicates are equally fine: contains, mountains, partially contained by, etc."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lm0n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lm0n ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "appalachian mountains",
        "TopicEntityName": "Appalachian Mountains",
        "TopicEntityMid": "m.0lm0n",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lm0n": "Appalachian Mountains"
    },
    "qid_topic_entity": {
      "Q93332": "Appalachian Mountains"
    },
    "index": 8
  },
  {
    "QuestionId": "WebQTest-1508",
    "RawQuestion": "when did bill clinton go to college?",
    "ProcessedQuestion": "when did bill clinton go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1508.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "bill clinton",
        "TopicEntityName": "Bill Clinton",
        "TopicEntityMid": "m.0157m",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bq1j",
            "EntityName": "Yale Law School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ckl3",
            "EntityName": "Edmund A. Walsh School of Foreign Service"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08815",
            "EntityName": "University Yale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pspl",
            "EntityName": "Georgetown University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ymf1",
            "EntityName": "University College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0157m": "Bill Clinton"
    },
    "qid_topic_entity": {
      "Q1124": "Bill Clinton"
    },
    "index": 9
  },
  {
    "QuestionId": "WebQTest-266",
    "RawQuestion": "what is there to do for fun in kansas city?",
    "ProcessedQuestion": "what is there to do for fun in kansas city",
    "Parses": [
      {
        "ParseId": "WebQTest-266.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_d ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.04f_d",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02665lb",
            "EntityName": "Kansas City Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g4b1",
            "EntityName": "Kauffman Center for the Performing Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rccg",
            "EntityName": "18th and Vine-Downtown East"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0321ly",
            "EntityName": "Kemper Museum of Contemporary Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03n2sf",
            "EntityName": "Liberty Memorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p0kv",
            "EntityName": "Harry S. Truman Presidential Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wglg",
            "EntityName": "Crown Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065tqj",
            "EntityName": "Worlds of Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rchd",
            "EntityName": "Sprint Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0724nn",
            "EntityName": "Negro Leagues Baseball Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075m4m",
            "EntityName": "Boulevard Brewing Company"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08c_14",
            "EntityName": "Oceans of Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnyls8",
            "EntityName": "Hotel Phillips"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gfgk80",
            "EntityName": "Deer Creek Golf Course"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jyw372",
            "EntityName": "Ewing and Muriel Kauffman Memorial Garden"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f_d": "Kansas City"
    },
    "qid_topic_entity": {
      "Q41819": "Kansas City"
    },
    "index": 10
  },
  {
    "QuestionId": "WebQTest-191",
    "RawQuestion": "where did drew brees go to college wikianswers?",
    "ProcessedQuestion": "where did drew brees go to college wikianswers",
    "Parses": [
      {
        "ParseId": "WebQTest-191.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030bdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030bdd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "drew brees",
        "TopicEntityName": "Drew Brees",
        "TopicEntityMid": "m.030bdd",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bb47",
            "EntityName": "Stanford Graduate School of Business"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05x_5",
            "EntityName": "Purdue University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030bdd": "Drew Brees"
    },
    "qid_topic_entity": {
      "Q38952": "Drew Brees"
    },
    "index": 11
  },
  {
    "QuestionId": "WebQTest-554",
    "RawQuestion": "what money do they use in spain?",
    "ProcessedQuestion": "what money do they use in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-554.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 12
  },
  {
    "QuestionId": "WebQTest-637",
    "RawQuestion": "what type of government did soviet union have?",
    "ProcessedQuestion": "what type of government did soviet union have",
    "Parses": [
      {
        "ParseId": "WebQTest-637.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "soviet union",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fkst",
            "EntityName": "Communist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025tbxf",
            "EntityName": "Socialist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zgbt",
            "EntityName": "Soviet democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 13
  },
  {
    "QuestionId": "WebQTest-875",
    "RawQuestion": "where did hugo chavez go to school?",
    "ProcessedQuestion": "where did hugo chavez go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-875.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1b_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1b_ ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "hugo chavez",
        "TopicEntityName": "Hugo Ch\u00e1vez",
        "TopicEntityMid": "m.0d1b_",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467r_n",
            "EntityName": "Julian Pino School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467s09",
            "EntityName": "Daniel Florencio O'Leary School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fc47",
            "EntityName": "Sim\u00f3n Bol\u00edvar University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fk_z",
            "EntityName": "Bolivarian Military University of Venezuela"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d1b_": "Hugo Ch\u00e1vez"
    },
    "qid_topic_entity": {
      "Q8440": "Hugo Ch\u00e1vez"
    },
    "index": 14
  },
  {
    "QuestionId": "WebQTest-438",
    "RawQuestion": "what university did romney graduated from?",
    "ProcessedQuestion": "what university did romney graduated from",
    "Parses": [
      {
        "ParseId": "WebQTest-438.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? undergraduate or higher degree?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.014mlp",
            "EntityName": "Bachelor of Arts",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2tk",
            "EntityName": "Brigham Young University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 15
  },
  {
    "QuestionId": "WebQTest-234",
    "RawQuestion": "what countries does the panama canal go through?",
    "ProcessedQuestion": "what countries does the panama canal go through",
    "Parses": [
      {
        "ParseId": "WebQTest-234.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.066rl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.066rl ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "panama canal",
        "TopicEntityName": "Panama Canal",
        "TopicEntityMid": "m.066rl",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qx1",
            "EntityName": "Panama"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.066rl": "Panama Canal"
    },
    "qid_topic_entity": {
      "Q7350": "Panama Canal"
    },
    "index": 16
  },
  {
    "QuestionId": "WebQTest-461",
    "RawQuestion": "where did clay matthews go to school?",
    "ProcessedQuestion": "where did clay matthews go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-461.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04zy7pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04zy7pw ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "clay matthews",
        "TopicEntityName": "Clay Matthews III",
        "TopicEntityMid": "m.04zy7pw",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065y4w7",
            "EntityName": "University of Southern California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w97y",
            "EntityName": "Agoura High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04zy7pw": "Clay Matthews III"
    },
    "qid_topic_entity": {
      "Q390698": "Clay Matthews III"
    },
    "index": 17
  },
  {
    "QuestionId": "WebQTest-1441",
    "RawQuestion": "where all did picasso live?",
    "ProcessedQuestion": "where all did picasso live",
    "Parses": [
      {
        "ParseId": "WebQTest-1441.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060_7 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "picasso",
        "TopicEntityName": "Pablo Picasso",
        "TopicEntityMid": "m.060_7",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01978d",
            "EntityName": "M\u00e1laga"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056_y",
            "EntityName": "Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060_7": "Pablo Picasso"
    },
    "qid_topic_entity": {
      "Q5593": "Pablo Picasso"
    },
    "index": 18
  },
  {
    "QuestionId": "WebQTest-1622",
    "RawQuestion": "what ocean is around hawaii?",
    "ProcessedQuestion": "what ocean is around hawaii",
    "Parses": [
      {
        "ParseId": "WebQTest-1622.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:geography.island.body_of_water ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.0jbt3",
        "InferentialChain": [
          "geography.island.body_of_water"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1622.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01y2jks .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2jks",
            "EntityName": "Body Of Water",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jbt3": "Hawaii",
      "m.03gh4": "Hawaii"
    },
    "qid_topic_entity": {
      "Q68740": "Hawaii",
      "Q782": "Hawaii"
    },
    "index": 19
  },
  {
    "QuestionId": "WebQTest-1757",
    "RawQuestion": "what did michael crabtree do?",
    "ProcessedQuestion": "what did michael crabtree do",
    "Parses": [
      {
        "ParseId": "WebQTest-1757.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:american_football.football_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "american_football.football_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g_6x",
            "EntityName": "Wide receiver"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1757.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01445t",
            "EntityName": "Athlete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h665k",
            "EntityName": "American football player"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1757.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
        "PotentialTopicEntityMention": "michael crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.position"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g_6x",
            "EntityName": "Wide receiver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ccsym": "Michael Crabtree"
    },
    "qid_topic_entity": {
      "Q2351787": "Michael Crabtree"
    },
    "index": 20
  },
  {
    "QuestionId": "WebQTest-1328",
    "RawQuestion": "what did hayes do?",
    "ProcessedQuestion": "what did hayes do",
    "Parses": [
      {
        "ParseId": "WebQTest-1328.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06g42)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06g42 ns:common.topic.notable_for ?y .\n?y ns:common.notable_for.object ?x .\n}\n",
        "PotentialTopicEntityMention": "hayes",
        "TopicEntityName": "Rutherford B. Hayes",
        "TopicEntityMid": "m.06g42",
        "InferentialChain": [
          "common.topic.notable_for",
          "common.notable_for.object"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xljv7",
            "EntityName": "US President"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06g42": "Rutherford B. Hayes"
    },
    "qid_topic_entity": {
      "Q35686": "Rutherford B. Hayes"
    },
    "index": 21
  },
  {
    "QuestionId": "WebQTest-296",
    "RawQuestion": "what kind of government does libya have today?",
    "ProcessedQuestion": "what kind of government does libya have today",
    "Parses": [
      {
        "ParseId": "WebQTest-296.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gqr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "libya",
        "TopicEntityName": "Libya",
        "TopicEntityMid": "m.04gqr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tz3y",
            "EntityName": "Provisional government"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04gqr": "Libya"
    },
    "qid_topic_entity": {
      "Q1016": "Libya"
    },
    "index": 22
  },
  {
    "QuestionId": "WebQTest-527",
    "RawQuestion": "what country borders slovakia?",
    "ProcessedQuestion": "what country borders slovakia",
    "Parses": [
      {
        "ParseId": "WebQTest-527.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06npd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06npd ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "slovakia",
        "TopicEntityName": "Slovakia",
        "TopicEntityMid": "m.06npd",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mjq",
            "EntityName": "Czech Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gj2",
            "EntityName": "Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t21",
            "EntityName": "Ukraine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06npd": "Slovakia"
    },
    "qid_topic_entity": {
      "Q214": "Slovakia"
    },
    "index": 23
  },
  {
    "QuestionId": "WebQTest-2001",
    "RawQuestion": "who won the 2000 fa cup final?",
    "ProcessedQuestion": "who won the 2000 fa cup final",
    "Parses": [
      {
        "ParseId": "WebQTest-2001.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.03wcq72 .\n}\n",
        "PotentialTopicEntityMention": "fa cup",
        "TopicEntityName": "FA Cup",
        "TopicEntityMid": "m.02_p0",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03wcq72",
            "EntityName": "1999\u20132000 FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023fb",
            "EntityName": "Chelsea F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_p0": "FA Cup"
    },
    "qid_topic_entity": {
      "Q11151": "FA Cup"
    },
    "index": 24
  },
  {
    "QuestionId": "WebQTest-1997",
    "RawQuestion": "who does owen schmitt play for?",
    "ProcessedQuestion": "who does owen schmitt play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1997.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.games ?y .\n?y ns:american_football.player_game_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.games",
          "american_football.player_game_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1997.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.receiving ?y .\n?y ns:american_football.player_receiving_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.receiving",
          "american_football.player_receiving_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1997.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.rushing ?y .\n?y ns:american_football.player_rushing_statistics.team ?x .\n}\n",
        "PotentialTopicEntityMention": "owen schmitt",
        "TopicEntityName": "Owen Schmitt",
        "TopicEntityMid": "m.027rvyc",
        "InferentialChain": [
          "american_football.football_player.rushing",
          "american_football.player_rushing_statistics.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xg",
            "EntityName": "Seattle Seahawks"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rvyc": "Owen Schmitt"
    },
    "qid_topic_entity": {
      "Q3887743": "Owen Schmitt"
    },
    "index": 25
  },
  {
    "QuestionId": "WebQTest-1848",
    "RawQuestion": "what instrument does louis armstrong?",
    "ProcessedQuestion": "what instrument does louis armstrong",
    "Parses": [
      {
        "ParseId": "WebQTest-1848.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "louis armstrong",
        "TopicEntityName": "Louis Armstrong",
        "TopicEntityMid": "m.04n32",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020w2",
            "EntityName": "Cornet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07gql",
            "EntityName": "Trumpet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n32": "Louis Armstrong"
    },
    "qid_topic_entity": {
      "Q1779": "Louis Armstrong"
    },
    "index": 26
  },
  {
    "QuestionId": "WebQTest-482",
    "RawQuestion": "who plays blaine in batman?",
    "ProcessedQuestion": "who plays blaine in batman",
    "Parses": [
      {
        "ParseId": "WebQTest-482.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F not clear what blaine refers too or what batman"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\tns:m.0321b4 ns:film.film_character.portrayed_in_films ?y .\n\t?y ns:film.performance.actor ?x .\n\t}\n\tUNION\n\t{\n\tns:m.0321b4 ns:tv.tv_character.appeared_in_tv_program ?y .\n\t?y ns:tv.regular_tv_appearance.actor ?x .\n\t}\n}",
        "PotentialTopicEntityMention": "batman",
        "TopicEntityName": "Batman",
        "TopicEntityMid": "m.01hp5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0115x7ps",
            "EntityName": "Matthew Wagner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xllf",
            "EntityName": "Danny Trejo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hblj",
            "EntityName": "Carlos Alazraqui"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xf75",
            "EntityName": "Tom Hardy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hp5": "Batman"
    },
    "qid_topic_entity": {
      "Q116852": "Batman"
    },
    "index": 27
  },
  {
    "QuestionId": "WebQTest-1780",
    "RawQuestion": "who does michael oher play for in 2010?",
    "ProcessedQuestion": "who does michael oher play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1780.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7q7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7q7b ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "michael oher",
        "TopicEntityName": "Michael Oher",
        "TopicEntityMid": "m.0h7q7b",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ct6",
            "EntityName": "Baltimore Ravens"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7q7b": "Michael Oher"
    },
    "qid_topic_entity": {
      "Q977601": "Michael Oher"
    },
    "index": 28
  },
  {
    "QuestionId": "WebQTest-504",
    "RawQuestion": "who was philip in acts chapter 8?",
    "ProcessedQuestion": "who was philip in acts chapter 8",
    "Parses": [
      {
        "ParseId": "WebQTest-504.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012tjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012tjy ns:fictional_universe.person_in_fiction.representations_in_fiction ?x .\n}\n",
        "PotentialTopicEntityMention": "philip",
        "TopicEntityName": "Philip the Apostle",
        "TopicEntityMid": "m.012tjy",
        "InferentialChain": [
          "fictional_universe.person_in_fiction.representations_in_fiction"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075pg8m",
            "EntityName": "Apostle Philip"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012tjy": "Philip the Apostle"
    },
    "qid_topic_entity": {
      "Q43675": "Philip the Apostle"
    },
    "index": 29
  },
  {
    "QuestionId": "WebQTest-410",
    "RawQuestion": "what are the major cities in ukraine?",
    "ProcessedQuestion": "what are the major cities in ukraine",
    "Parses": [
      {
        "ParseId": "WebQTest-410.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "ukraine",
        "TopicEntityName": "Ukraine",
        "TopicEntityMid": "m.07t21",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02sn34",
            "EntityName": "Kiev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t21": "Ukraine"
    },
    "qid_topic_entity": {
      "Q212": "Ukraine"
    },
    "index": 30
  },
  {
    "QuestionId": "WebQTest-2005",
    "RawQuestion": "who plays bob kelso in scrubs?",
    "ProcessedQuestion": "who plays bob kelso in scrubs",
    "Parses": [
      {
        "ParseId": "WebQTest-2005.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ck2ty)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ck2ty ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.01fs__ .\n}\n",
        "PotentialTopicEntityMention": "bob kelso",
        "TopicEntityName": "Bob Kelso",
        "TopicEntityMid": "m.0ck2ty",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01fs__",
            "EntityName": "Scrubs",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w8hh",
            "EntityName": "Ken Jenkins"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ck2ty": "Bob Kelso"
    },
    "qid_topic_entity": {
      "Q2532197": "Bob Kelso"
    },
    "index": 31
  },
  {
    "QuestionId": "WebQTest-1894",
    "RawQuestion": "what baseball team was jackie robinson on?",
    "ProcessedQuestion": "what baseball team was jackie robinson on",
    "Parses": [
      {
        "ParseId": "WebQTest-1894.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0443c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0443c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?x ns:sports.sports_team.sport ns:m.018jz .\n}\n",
        "PotentialTopicEntityMention": "jackie robinson",
        "TopicEntityName": "Jackie Robinson",
        "TopicEntityMid": "m.0443c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.018jz",
            "EntityName": "Baseball",
            "SourceNodeIndex": 1,
            "NodePredicate": "sports.sports_team.sport",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_cjl",
            "EntityName": "Kansas City Monarchs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_wkh",
            "EntityName": "Montreal Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fc8c9",
            "EntityName": "Brooklyn Dodgers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0443c": "Jackie Robinson"
    },
    "qid_topic_entity": {
      "Q221048": "Jackie Robinson"
    },
    "index": 32
  },
  {
    "QuestionId": "WebQTest-1303",
    "RawQuestion": "what other movies is josh hutcherson in?",
    "ProcessedQuestion": "what other movies is josh hutcherson in",
    "Parses": [
      {
        "ParseId": "WebQTest-1303.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "josh hutcherson",
        "TopicEntityName": "Josh Hutchersonm",
        "TopicEntityMid": "m.08wjf4",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b7k0v3hq",
            "EntityName": "In Dubious Battle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135_65p",
            "EntityName": "The Long Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026gt8b",
            "EntityName": "Bridge to Terabithia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270k40",
            "EntityName": "Cirque du Freak: The Vampire's Assistant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q02ql",
            "EntityName": "Firehouse Dog"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qd6h2",
            "EntityName": "Winged Creatures"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qh9b",
            "EntityName": "Party Wagon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f8ttb",
            "EntityName": "Journey to the Center of the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0_gm",
            "EntityName": "One Last Ride"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1g18",
            "EntityName": "Wilder Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1phy",
            "EntityName": "Miracle Dogs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05spvb",
            "EntityName": "Kicking & Screaming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sbq6c",
            "EntityName": "Red Dawn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y296",
            "EntityName": "Motocross Kids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09qs_s",
            "EntityName": "Zathura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09tqkv2",
            "EntityName": "The Kids Are All Right"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v9dsq",
            "EntityName": "The Forger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09w6br",
            "EntityName": "The Polar Express"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bcs_f",
            "EntityName": "RV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crnh6",
            "EntityName": "Little Manhattan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds2_k2",
            "EntityName": "Journey 2: The Mysterious Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzz6g",
            "EntityName": "American Splendor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g4tknw",
            "EntityName": "Detention"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkp_k",
            "EntityName": "House Blend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkz15s",
            "EntityName": "The Hunger Games"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy8kqb",
            "EntityName": "7 Days in Havana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy8kv2",
            "EntityName": "The Third Rule"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhgh69",
            "EntityName": "Epic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n40qmp",
            "EntityName": "The Hunger Games: Catching Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvsvk",
            "EntityName": "The Hunger Games: Mockingjay, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvtb_",
            "EntityName": "The Hunger Games: Mockingjay, Part 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x1xc_w",
            "EntityName": "Escobar: Paradise Lost"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08wjf4": "Josh Hutchersonm"
    },
    "qid_topic_entity": {
      "Q217004": "Josh Hutchersonm"
    },
    "index": 33
  },
  {
    "QuestionId": "WebQTest-1017",
    "RawQuestion": "who plays charlie in the santa clause movies?",
    "ProcessedQuestion": "who plays charlie in the santa clause movies",
    "Parses": [
      {
        "ParseId": "WebQTest-1017.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0129g2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0129g2 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0dlsybb .\n}\n",
        "PotentialTopicEntityMention": "the santa clause",
        "TopicEntityName": "The Santa Clause",
        "TopicEntityMid": "m.0129g2",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0dlsybb",
            "EntityName": "Charlie Calvin",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d7whx",
            "EntityName": "Eric Lloyd"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0129g2": "The Santa Clause"
    },
    "qid_topic_entity": {
      "Q497850": "The Santa Clause"
    },
    "index": 34
  },
  {
    "QuestionId": "WebQTest-1526",
    "RawQuestion": "how many languages do they speak in switzerland?",
    "ProcessedQuestion": "how many languages do they speak in switzerland",
    "Parses": [
      {
        "ParseId": "WebQTest-1526.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ctk",
            "EntityName": "Romansh language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1526.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ctk",
            "EntityName": "Romansh language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 35
  },
  {
    "QuestionId": "WebQTest-634",
    "RawQuestion": "what county is san antonio in?",
    "ProcessedQuestion": "what county is san antonio in",
    "Parses": [
      {
        "ParseId": "WebQTest-634.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "san antonio",
        "TopicEntityName": "San Antonio",
        "TopicEntityMid": "m.0f2w0",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ms5v",
            "EntityName": "Comal County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-634.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "san antonio",
        "TopicEntityName": "San Antonio",
        "TopicEntityMid": "m.0f2w0",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mqr8",
            "EntityName": "Medina County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ms5v",
            "EntityName": "Comal County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mskq",
            "EntityName": "Bexar County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2w0": "San Antonio"
    },
    "qid_topic_entity": {
      "Q975": "San Antonio"
    },
    "index": 36
  },
  {
    "QuestionId": "WebQTest-698",
    "RawQuestion": "who is robin roberts father?",
    "ProcessedQuestion": "who is robin roberts father",
    "Parses": [
      {
        "ParseId": "WebQTest-698.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06k3_t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06k3_t ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "robin roberts",
        "TopicEntityName": "Robin Roberts",
        "TopicEntityMid": "m.06k3_t",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czc1yg",
            "EntityName": "Lawrence E. Roberts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06k3_t": "Robin Roberts"
    },
    "qid_topic_entity": {
      "Q2041541": "Robin Roberts"
    },
    "index": 37
  },
  {
    "QuestionId": "WebQTest-1708",
    "RawQuestion": "what are dallas cowboys colors?",
    "ProcessedQuestion": "what are dallas cowboys colors",
    "Parses": [
      {
        "ParseId": "WebQTest-1708.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02896)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02896 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "dallas cowboys",
        "TopicEntityName": "Dallas Cowboys",
        "TopicEntityMid": "m.02896",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnmb",
            "EntityName": "Navy Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vtbc",
            "EntityName": "Silver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kqt3",
            "EntityName": "Royal blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02896": "Dallas Cowboys"
    },
    "qid_topic_entity": {
      "Q204862": "Dallas Cowboys"
    },
    "index": 38
  },
  {
    "QuestionId": "WebQTest-1990",
    "RawQuestion": "who plays timon's voice in the lion king?",
    "ProcessedQuestion": "who plays timon 's voice in the lion king",
    "Parses": [
      {
        "ParseId": "WebQTest-1990.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0m63c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0m63c ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0c31r0 .\n}\n",
        "PotentialTopicEntityMention": "the lion king",
        "TopicEntityName": "The Lion King",
        "TopicEntityMid": "m.0m63c",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0c31r0",
            "EntityName": "Timon",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nxzv",
            "EntityName": "Nathan Lane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0m63c": "The Lion King"
    },
    "qid_topic_entity": {
      "Q36479": "The Lion King"
    },
    "index": 39
  },
  {
    "QuestionId": "WebQTest-163",
    "RawQuestion": "what year did the seahawks win the superbowl?",
    "ProcessedQuestion": "what year did the seahawks win the superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-163.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.070xg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.070xg ns:sports.sports_team.championships ?x .\n?x ns:time.event.instance_of_recurring_event ns:m.06x5s .\n}\n",
        "PotentialTopicEntityMention": "seahawks",
        "TopicEntityName": "Seattle Seahawks",
        "TopicEntityMid": "m.070xg",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "time.event.instance_of_recurring_event",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4qg3",
            "EntityName": "Super Bowl XLVIII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.070xg": "Seattle Seahawks"
    },
    "qid_topic_entity": {
      "Q221878": "Seattle Seahawks"
    },
    "index": 40
  },
  {
    "QuestionId": "WebQTest-1566",
    "RawQuestion": "what kind of guitar john mayer?",
    "ProcessedQuestion": "what kind of guitar john mayer",
    "Parses": [
      {
        "ParseId": "WebQTest-1566.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s21dg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s21dg ns:music.guitarist.guitars_played ?x .\n}\n",
        "PotentialTopicEntityMention": "john mayer",
        "TopicEntityName": "John Mayer",
        "TopicEntityMid": "m.01s21dg",
        "InferentialChain": [
          "music.guitarist.guitars_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02m873",
            "EntityName": "Fender Stratocaster"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01s21dg": "John Mayer"
    },
    "qid_topic_entity": {
      "Q215215": "John Mayer"
    },
    "index": 41
  },
  {
    "QuestionId": "WebQTest-1614",
    "RawQuestion": "what religion was king louis xiv?",
    "ProcessedQuestion": "what religion was king louis xiv",
    "Parses": [
      {
        "ParseId": "WebQTest-1614.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04pwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04pwg ns:people.person.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "king louis xiv",
        "TopicEntityName": "Louis XIV of France",
        "TopicEntityMid": "m.04pwg",
        "InferentialChain": [
          "people.person.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04pwg": "Louis XIV of France"
    },
    "qid_topic_entity": {
      "Q7742": "Louis XIV of France"
    },
    "index": 42
  },
  {
    "QuestionId": "WebQTest-1533",
    "RawQuestion": "what planet did luke skywalker came from?",
    "ProcessedQuestion": "what planet did luke skywalker came from",
    "Parses": [
      {
        "ParseId": "WebQTest-1533.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:fictional_universe.fictional_character.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "luke skywalker",
        "TopicEntityName": "Luke Skywalker",
        "TopicEntityMid": "m.0f1bg",
        "InferentialChain": [
          "fictional_universe.fictional_character.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.120mc0gk",
            "EntityName": "Polis Massa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f1bg": "Luke Skywalker"
    },
    "qid_topic_entity": {
      "Q51746": "Luke Skywalker"
    },
    "index": 43
  },
  {
    "QuestionId": "WebQTest-1470",
    "RawQuestion": "what kind of government does poland have?",
    "ProcessedQuestion": "what kind of government does poland have",
    "Parses": [
      {
        "ParseId": "WebQTest-1470.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "poland",
        "TopicEntityName": "Poland",
        "TopicEntityMid": "m.05qhw",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wp",
            "EntityName": "Democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qhw": "Poland"
    },
    "qid_topic_entity": {
      "Q36": "Poland"
    },
    "index": 44
  },
  {
    "QuestionId": "WebQTest-1557",
    "RawQuestion": "where do florida panthers play?",
    "ProcessedQuestion": "where do florida panthers play",
    "Parses": [
      {
        "ParseId": "WebQTest-1557.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j8js)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j8js ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "florida panthers",
        "TopicEntityName": "Florida Panthers",
        "TopicEntityMid": "m.0j8js",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038hc3",
            "EntityName": "BB&T Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039xlz",
            "EntityName": "Miami Arena"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j8js": "Florida Panthers"
    },
    "qid_topic_entity": {
      "Q204623": "Florida Panthers"
    },
    "index": 45
  },
  {
    "QuestionId": "WebQTest-1917",
    "RawQuestion": "what did charles babbage discover?",
    "ProcessedQuestion": "what did charles babbage discover",
    "Parses": [
      {
        "ParseId": "WebQTest-1917.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qmz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qmz ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "charles babbage",
        "TopicEntityName": "Charles Babbage",
        "TopicEntityMid": "m.01qmz",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029wv",
            "EntityName": "Difference engine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nf_",
            "EntityName": "Analytical Engine"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01qmz": "Charles Babbage"
    },
    "qid_topic_entity": {
      "Q46633": "Charles Babbage"
    },
    "index": 46
  },
  {
    "QuestionId": "WebQTest-512",
    "RawQuestion": "who were mary shelley?",
    "ProcessedQuestion": "who were mary shelley",
    "Parses": [
      {
        "ParseId": "WebQTest-512.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_by)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_by ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "mary shelley",
        "TopicEntityName": "Mary Shelley",
        "TopicEntityMid": "m.04_by",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6676",
            "EntityName": "Editor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6nsx",
            "EntityName": "Biographer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hv44_",
            "EntityName": "Playwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kvk_g",
            "EntityName": "Travel writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f1hr",
            "EntityName": "Essayist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04_by": "Mary Shelley"
    },
    "qid_topic_entity": {
      "Q47152": "Mary Shelley"
    },
    "index": 47
  },
  {
    "QuestionId": "WebQTest-1047",
    "RawQuestion": "who does amy stiller play in dodgeball?",
    "ProcessedQuestion": "who does amy stiller play in dodgeball",
    "Parses": [
      {
        "ParseId": "WebQTest-1047.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0194r1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0194r1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.034qrh .\n}\n",
        "PotentialTopicEntityMention": "amy stiller",
        "TopicEntityName": "Amy Stiller",
        "TopicEntityMid": "m.0194r1",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.034qrh",
            "EntityName": "DodgeBall: A True Underdog Story",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5kk2x",
            "EntityName": "Keno Waitress"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1047.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034qrh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034qrh ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.0194r1 .\n}\n",
        "PotentialTopicEntityMention": "dodgeball",
        "TopicEntityName": "DodgeBall: A True Underdog Story",
        "TopicEntityMid": "m.034qrh",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0194r1",
            "EntityName": "Amy Stiller",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5kk2x",
            "EntityName": "Keno Waitress"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0194r1": "Amy Stiller",
      "m.034qrh": "DodgeBall: A True Underdog Story"
    },
    "qid_topic_entity": {
      "Q443128": "Amy Stiller",
      "Q908473": "DodgeBall: A True Underdog Story"
    },
    "index": 48
  },
  {
    "QuestionId": "WebQTest-1685",
    "RawQuestion": "where did benjamin franklin went to school?",
    "ProcessedQuestion": "where did benjamin franklin went to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1685.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "benjamin franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kj7g",
            "EntityName": "Boston Latin School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 49
  },
  {
    "QuestionId": "WebQTest-218",
    "RawQuestion": "in which continent is germany?",
    "ProcessedQuestion": "in which continent is germany",
    "Parses": [
      {
        "ParseId": "WebQTest-218.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 50
  },
  {
    "QuestionId": "WebQTest-938",
    "RawQuestion": "who was queen elizabeth ii mom?",
    "ProcessedQuestion": "who was queen elizabeth ii mom",
    "Parses": [
      {
        "ParseId": "WebQTest-938.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d1_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d1_f ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "elizabeth ii",
        "TopicEntityName": "Elizabeth II",
        "TopicEntityMid": "m.0d1_f",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm63",
            "EntityName": "Queen Elizabeth The Queen Mother"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d1_f": "Elizabeth II"
    },
    "qid_topic_entity": {
      "Q9682": "Elizabeth II"
    },
    "index": 51
  },
  {
    "QuestionId": "WebQTest-1570",
    "RawQuestion": "where is the arizona cardinals stadium located?",
    "ProcessedQuestion": "where is the arizona cardinals stadium located",
    "Parses": [
      {
        "ParseId": "WebQTest-1570.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ws7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ws7 ns:sports.sports_team.location ?x .\n}\n",
        "PotentialTopicEntityMention": "arizona cardinals",
        "TopicEntityName": "Arizona Cardinals",
        "TopicEntityMid": "m.0ws7",
        "InferentialChain": [
          "sports.sports_team.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vmt",
            "EntityName": "Arizona"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ws7": "Arizona Cardinals"
    },
    "qid_topic_entity": {
      "Q224164": "Arizona Cardinals"
    },
    "index": 52
  },
  {
    "QuestionId": "WebQTest-935",
    "RawQuestion": "where was osama bin laden killed?",
    "ProcessedQuestion": "where was osama bin laden killed",
    "Parses": [
      {
        "ParseId": "WebQTest-935.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "osama bin laden",
        "TopicEntityName": "Osama bin Laden",
        "TopicEntityMid": "m.05mg9",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hs1",
            "EntityName": "Abbottabad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mg9": "Osama bin Laden"
    },
    "qid_topic_entity": {
      "Q1317": "Osama bin Laden"
    },
    "index": 53
  },
  {
    "QuestionId": "WebQTest-454",
    "RawQuestion": "where did hank marvin come from?",
    "ProcessedQuestion": "where did hank marvin come from",
    "Parses": [
      {
        "ParseId": "WebQTest-454.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x2fx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x2fx0 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "hank marvin",
        "TopicEntityName": "Hank Marvin",
        "TopicEntityMid": "m.01x2fx0",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7ng",
            "EntityName": "Newcastle upon Tyne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01x2fx0": "Hank Marvin"
    },
    "qid_topic_entity": {
      "Q365478": "Hank Marvin"
    },
    "index": 54
  },
  {
    "QuestionId": "WebQTest-1807",
    "RawQuestion": "what was wayne gretzky's first team?",
    "ProcessedQuestion": "what was wayne gretzky 's first team",
    "Parses": [
      {
        "ParseId": "WebQTest-1807.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0839s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0839s ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "wayne gretzky",
        "TopicEntityName": "Wayne Gretzky",
        "TopicEntityMid": "m.0839s",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "sports.sports_team_roster.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jnmj",
            "EntityName": "Edmonton Oilers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0839s": "Wayne Gretzky"
    },
    "qid_topic_entity": {
      "Q209518": "Wayne Gretzky"
    },
    "index": 55
  },
  {
    "QuestionId": "WebQTest-1960",
    "RawQuestion": "when was the last time the toronto maple leafs win the stanley cup?",
    "ProcessedQuestion": "when was the last time the toronto maple leafs win the stanley cup",
    "Parses": [
      {
        "ParseId": "WebQTest-1960.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6tr ns:sports.sports_team.championships ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "toronto maple leafs",
        "TopicEntityName": "Toronto Maple Leafs",
        "TopicEntityMid": "m.0j6tr",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.start_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by199",
            "EntityName": "1967 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j6tr": "Toronto Maple Leafs"
    },
    "qid_topic_entity": {
      "Q203384": "Toronto Maple Leafs"
    },
    "index": 56
  },
  {
    "QuestionId": "WebQTest-757",
    "RawQuestion": "who is angelina jolie mom and dad?",
    "ProcessedQuestion": "who is angelina jolie mom and dad",
    "Parses": [
      {
        "ParseId": "WebQTest-757.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.parents ?x .\n}\n",
        "PotentialTopicEntityMention": "angelina jolie",
        "TopicEntityName": "Angelina Jolie",
        "TopicEntityMid": "m.0f4vbz",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mqgf",
            "EntityName": "Marcheline Bertrand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046qq",
            "EntityName": "Jon Voight"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f4vbz": "Angelina Jolie"
    },
    "qid_topic_entity": {
      "Q13909": "Angelina Jolie"
    },
    "index": 57
  },
  {
    "QuestionId": "WebQTest-721",
    "RawQuestion": "what kind of leukemia did jill clayburgh have?",
    "ProcessedQuestion": "what kind of leukemia did jill clayburgh have",
    "Parses": [
      {
        "ParseId": "WebQTest-721.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gw8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gw8b ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "jill clayburgh",
        "TopicEntityName": "Jill Clayburgh",
        "TopicEntityMid": "m.01gw8b",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bg7m",
            "EntityName": "B-cell chronic lymphocytic leukemia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04psf",
            "EntityName": "Leukemia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gw8b": "Jill Clayburgh"
    },
    "qid_topic_entity": {
      "Q230665": "Jill Clayburgh"
    },
    "index": 58
  },
  {
    "QuestionId": "WebQTest-123",
    "RawQuestion": "what all does google now do?",
    "ProcessedQuestion": "what all does google now do",
    "Parses": [
      {
        "ParseId": "WebQTest-123.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:business.consumer_company.products ?y .\n?y ns:business.company_product_relationship.consumer_product ?x .\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.from_date ?sk0} || \nEXISTS {?y ns:business.company_product_relationship.from_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:business.company_product_relationship.to_date ?sk2} || \nEXISTS {?y ns:business.company_product_relationship.to_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "business.consumer_company.products",
          "business.company_product_relationship.consumer_product"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "business.company_product_relationship.from_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "business.company_product_relationship.to_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "now"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010pkp62",
            "EntityName": "Google Classroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w9g0f",
            "EntityName": "Google Drive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064qgt0",
            "EntityName": "Apache Wave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ny5h",
            "EntityName": "Google Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b6g2kz",
            "EntityName": "Google Buzz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dm258",
            "EntityName": "Google Docs, Sheets, and Slides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpj3tb",
            "EntityName": "Nexus S"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7m2zm",
            "EntityName": "Google Glass"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0p036",
            "EntityName": "Nexus 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k2998k",
            "EntityName": "Nexus Q"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nb7n8f",
            "EntityName": "Nexus 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pb8gtr",
            "EntityName": "Google Maps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wf0rgl",
            "EntityName": "Chromecast"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 59
  },
  {
    "QuestionId": "WebQTest-361",
    "RawQuestion": "what to do and see in vienna austria?",
    "ProcessedQuestion": "what to do and see in vienna austria",
    "Parses": [
      {
        "ParseId": "WebQTest-361.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhp9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhp9 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "vienna",
        "TopicEntityName": "Vienna",
        "TopicEntityMid": "m.0fhp9",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.121ymzrf",
            "EntityName": "Rock im Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015_kq",
            "EntityName": "Sch\u00f6nbrunn Palace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c921",
            "EntityName": "Minoritenkirche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fdmj",
            "EntityName": "St. Stephen's Cathedral, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021c8v",
            "EntityName": "Vienna State Opera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025zg_7",
            "EntityName": "Liechtenstein Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027fx_h",
            "EntityName": "Schloss Hof"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q__dl",
            "EntityName": "mumok"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w4zw",
            "EntityName": "Imperial Crypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037yl3",
            "EntityName": "Belvedere, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yy70",
            "EntityName": "Kunsthistorisches Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lv9z",
            "EntityName": "Karlskirche, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zct1",
            "EntityName": "Albertina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0547jg",
            "EntityName": "Naturhistorisches Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ksgz",
            "EntityName": "Hofburg Palace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071ygm",
            "EntityName": "Jesuit Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079jqn",
            "EntityName": "Schottenkirche, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07xjrz",
            "EntityName": "Museum of Military History, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gckp",
            "EntityName": "Vienna International Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08j7nmv",
            "EntityName": "Sigmund Freud Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08k4xy",
            "EntityName": "Vienna Observatory"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08v5y9",
            "EntityName": "Augustinian Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.098gjd",
            "EntityName": "Capuchin Church, Vienna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09fvwy",
            "EntityName": "Prater"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b0lgr",
            "EntityName": "Millennium Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bygq4",
            "EntityName": "St. Peter's Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1v9t",
            "EntityName": "Leopold Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czbmkt",
            "EntityName": "Haus der Musik"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnhg8",
            "EntityName": "Rathaus, Vienna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fhp9": "Vienna"
    },
    "qid_topic_entity": {
      "Q1741": "Vienna"
    },
    "index": 60
  },
  {
    "QuestionId": "WebQTest-111",
    "RawQuestion": "where is the carpathian mountain range located?",
    "ProcessedQuestion": "where is the carpathian mountain range located",
    "Parses": [
      {
        "ParseId": "WebQTest-111.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cdsk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cdsk ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "carpathian mountain range",
        "TopicEntityName": "Carpathian Mountains",
        "TopicEntityMid": "m.0cdsk",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cdsk": "Carpathian Mountains"
    },
    "qid_topic_entity": {
      "Q1288": "Carpathian Mountains"
    },
    "index": 61
  },
  {
    "QuestionId": "WebQTest-673",
    "RawQuestion": "where did robert kardashian go to college?",
    "ProcessedQuestion": "where did robert kardashian go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-673.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x48v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x48v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "robert kardashian",
        "TopicEntityName": "Robert Kardashian",
        "TopicEntityMid": "m.01x48v",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rky4",
            "EntityName": "University of San Diego"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pyvz",
            "EntityName": "University of San Diego School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065y4w7",
            "EntityName": "University of Southern California"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01x48v": "Robert Kardashian"
    },
    "qid_topic_entity": {
      "Q1816737": "Robert Kardashian"
    },
    "index": 62
  },
  {
    "QuestionId": "WebQTest-987",
    "RawQuestion": "what does barbara bush do for work?",
    "ProcessedQuestion": "what does barbara bush do for work",
    "Parses": [
      {
        "ParseId": "WebQTest-987.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nr6 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara bush",
        "TopicEntityName": "Barbara Bush",
        "TopicEntityMid": "m.015nr6",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dz7z",
            "EntityName": "First Lady"
          }
        ]
      },
      {
        "ParseId": "WebQTest-987.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nr6 ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.title ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara bush",
        "TopicEntityName": "Barbara Bush",
        "TopicEntityMid": "m.015nr6",
        "InferentialChain": [
          "people.person.employment_history",
          "business.employment_tenure.title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dz7z",
            "EntityName": "First Lady"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015nr6": "Barbara Bush"
    },
    "qid_topic_entity": {
      "Q190628": "Barbara Bush"
    },
    "index": 63
  },
  {
    "QuestionId": "WebQTest-773",
    "RawQuestion": "where is the sony ericsson company?",
    "ProcessedQuestion": "where is the sony ericsson company",
    "Parses": [
      {
        "ParseId": "WebQTest-773.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spxd ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "sony",
        "TopicEntityName": "Sony Mobile Communications",
        "TopicEntityMid": "m.01spxd",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024bqj",
            "EntityName": "Minato"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01spxd": "Sony Mobile Communications"
    },
    "qid_topic_entity": {
      "Q376692": "Sony Mobile Communications"
    },
    "index": 64
  },
  {
    "QuestionId": "WebQTest-1616",
    "RawQuestion": "what did shannon hoon die from?",
    "ProcessedQuestion": "what did shannon hoon die from",
    "Parses": [
      {
        "ParseId": "WebQTest-1616.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w2x6z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w2x6z ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "shannon hoon",
        "TopicEntityName": "Shannon Hoon",
        "TopicEntityMid": "m.01w2x6z",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tf_6",
            "EntityName": "Drug overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01w2x6z": "Shannon Hoon"
    },
    "qid_topic_entity": {
      "Q531978": "Shannon Hoon"
    },
    "index": 65
  },
  {
    "QuestionId": "WebQTest-874",
    "RawQuestion": "what language do people from bosnia speak?",
    "ProcessedQuestion": "what language do people from bosnia speak",
    "Parses": [
      {
        "ParseId": "WebQTest-874.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "bosnia",
        "TopicEntityName": "Bosnia and Herzegovina",
        "TopicEntityMid": "m.0166b",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06x8y",
            "EntityName": "Serbo-Croatian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-874.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0166b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0166b ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "bosnia",
        "TopicEntityName": "Bosnia and Herzegovina",
        "TopicEntityMid": "m.0166b",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01841n",
            "EntityName": "Bosnian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sv",
            "EntityName": "Croatian language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0166b": "Bosnia and Herzegovina"
    },
    "qid_topic_entity": {
      "Q225": "Bosnia and Herzegovina"
    },
    "index": 66
  },
  {
    "QuestionId": "WebQTest-766",
    "RawQuestion": "what is malaysian currency?",
    "ProcessedQuestion": "what is malaysian currency",
    "Parses": [
      {
        "ParseId": "WebQTest-766.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09pmkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09pmkv ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "malaysian",
        "TopicEntityName": "Malaysia",
        "TopicEntityMid": "m.09pmkv",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_c9q",
            "EntityName": "Malaysian ringgit"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09pmkv": "Malaysia"
    },
    "qid_topic_entity": {
      "Q833": "Malaysia"
    },
    "index": 67
  },
  {
    "QuestionId": "WebQTest-1445",
    "RawQuestion": "what tv series did mark harmon star in?",
    "ProcessedQuestion": "what tv series did mark harmon star in",
    "Parses": [
      {
        "ParseId": "WebQTest-1445.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037gjc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037gjc ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.series ?x .\n}\n",
        "PotentialTopicEntityMention": "mark harmon",
        "TopicEntityName": "Mark Harmon",
        "TopicEntityMid": "m.037gjc",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.series"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fx1l",
            "EntityName": "Chicago Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02996d",
            "EntityName": "Centennial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kk_c",
            "EntityName": "From the Earth to the Moon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02md2d",
            "EntityName": "St. Elsewhere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x6r9",
            "EntityName": "Flamingo Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m8sg",
            "EntityName": "NCIS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c2j5_",
            "EntityName": "Eleanor and Franklin: The White House Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p4qwd",
            "EntityName": "Sam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yg5s",
            "EntityName": "240-Robert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cgcf9",
            "EntityName": "Charlie Grace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dl6q1_",
            "EntityName": "The Dream Merchants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g6sm2",
            "EntityName": "Reasonable Doubts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.037gjc": "Mark Harmon"
    },
    "qid_topic_entity": {
      "Q296774": "Mark Harmon"
    },
    "index": 68
  },
  {
    "QuestionId": "WebQTest-153",
    "RawQuestion": "what are the sights to see in madrid?",
    "ProcessedQuestion": "what are the sights to see in madrid",
    "Parses": [
      {
        "ParseId": "WebQTest-153.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.056_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.056_y ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "madrid",
        "TopicEntityName": "Madrid",
        "TopicEntityMid": "m.056_y",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bc9m",
            "EntityName": "El Escorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hlq3",
            "EntityName": "Museo Nacional Del Prado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jcyh",
            "EntityName": "Museo Nacional Centro de Arte Reina Sof\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9yg7",
            "EntityName": "Summercase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chy63",
            "EntityName": "Festimad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rmzx",
            "EntityName": "Buen Retiro Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04m3yk",
            "EntityName": "Royal Palace of Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053llq",
            "EntityName": "Almudena Cathedral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bvn8g",
            "EntityName": "Sorolla Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_l58",
            "EntityName": "Plaza de Cibeles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cgmf",
            "EntityName": "Madrid Arena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j2nj",
            "EntityName": "Paseo del Prado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nd2f",
            "EntityName": "Parque Warner Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073z19",
            "EntityName": "Thyssen-Bornemisza Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f__f",
            "EntityName": "Temple of Debod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07mpc7",
            "EntityName": "Puerta del Sol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09s07b",
            "EntityName": "Gran V\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwg9f0",
            "EntityName": "Madrid Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cd2rc",
            "EntityName": "Plaza Mayor, Madrid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fphvtq",
            "EntityName": "La Vaguada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3lmf1",
            "EntityName": "Museum of L\u00e1zaro Galdiano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3tjjc",
            "EntityName": "Palace of la Bolsa de Madrid"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.056_y": "Madrid"
    },
    "qid_topic_entity": {
      "Q2807": "Madrid"
    },
    "index": 69
  },
  {
    "QuestionId": "WebQTest-420",
    "RawQuestion": "where is perpignan located?",
    "ProcessedQuestion": "where is perpignan located",
    "Parses": [
      {
        "ParseId": "WebQTest-420.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09nkq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09nkq ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "perpignan",
        "TopicEntityName": "Perpignan",
        "TopicEntityMid": "m.09nkq",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01087l",
            "EntityName": "Pyr\u00e9n\u00e9es-Orientales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lwkz",
            "EntityName": "Languedoc-Roussillon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09nkq": "Perpignan"
    },
    "qid_topic_entity": {
      "Q6730": "Perpignan"
    },
    "index": 70
  },
  {
    "QuestionId": "WebQTest-1416",
    "RawQuestion": "what was franklin pierce famous for?",
    "ProcessedQuestion": "what was franklin pierce famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-1416.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z51)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z51 ns:common.topic.notable_types ?x .\n}\n",
        "PotentialTopicEntityMention": "franklin pierce",
        "TopicEntityName": "Franklin Pierce",
        "TopicEntityMid": "m.02z51",
        "InferentialChain": [
          "common.topic.notable_types"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xljv7",
            "EntityName": "US President"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02z51": "Franklin Pierce"
    },
    "qid_topic_entity": {
      "Q12312": "Franklin Pierce"
    },
    "index": 71
  },
  {
    "QuestionId": "WebQTest-1748",
    "RawQuestion": "through which countries of the sahel does the niger river flow?",
    "ProcessedQuestion": "through which countries of the sahel does the niger river flow",
    "Parses": [
      {
        "ParseId": "WebQTest-1748.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05csx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05csx ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n?x ns:location.location.partially_contains ns:m.0l5_l .\n}\n",
        "PotentialTopicEntityMention": "niger river",
        "TopicEntityName": "Niger River",
        "TopicEntityMid": "m.05csx",
        "InferentialChain": [
          "location.location.partially_containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0l5_l",
            "EntityName": "Sahel",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location.partially_contains",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09",
            "EntityName": "Mali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cc1",
            "EntityName": "Niger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05csx": "Niger River"
    },
    "qid_topic_entity": {
      "Q3542": "Niger River"
    },
    "index": 72
  },
  {
    "QuestionId": "WebQTest-354",
    "RawQuestion": "what art movement did leonardo da vinci belong to?",
    "ProcessedQuestion": "what art movement did leonardo da vinci belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-354.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nkkt6",
            "EntityName": "Pastel Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z__d",
            "EntityName": "High Renaissance"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 73
  },
  {
    "QuestionId": "WebQTest-1392",
    "RawQuestion": "what the language spoken in indonesia?",
    "ProcessedQuestion": "what the language spoken in indonesia",
    "Parses": [
      {
        "ParseId": "WebQTest-1392.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qzl2",
            "EntityName": "Sunda Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0201jz",
            "EntityName": "Bali Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020257",
            "EntityName": "Madura Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bv9",
            "EntityName": "Dutch Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwx1l",
            "EntityName": "Javanese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075yc64",
            "EntityName": "Batak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097kp",
            "EntityName": "Indonesian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9fsf",
            "EntityName": "Tobelo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y1mh",
            "EntityName": "Malay Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1392.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097kp",
            "EntityName": "Indonesian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ryn": "Indonesia"
    },
    "qid_topic_entity": {
      "Q252": "Indonesia"
    },
    "index": 74
  },
  {
    "QuestionId": "WebQTest-90",
    "RawQuestion": "who played on the jeffersons?",
    "ProcessedQuestion": "who played on the jeffersons",
    "Parses": [
      {
        "ParseId": "WebQTest-90.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02f8jf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02f8jf ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "the jeffersons",
        "TopicEntityName": "The Jeffersons",
        "TopicEntityMid": "m.02f8jf",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_yyp",
            "EntityName": "Sherman Hemsley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_z06",
            "EntityName": "Isabel Sanford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0279gxy",
            "EntityName": "Damon Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0279gyz",
            "EntityName": "Berlinda Tolbert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h436",
            "EntityName": "Roxie Roker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k25c",
            "EntityName": "Zara Cully"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03zwg4",
            "EntityName": "Marla Gibbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_nc",
            "EntityName": "Franklin Cover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6b4y",
            "EntityName": "Paul Benedict"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0clm34",
            "EntityName": "Mike Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gydmc",
            "EntityName": "Jay Hammer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02f8jf": "The Jeffersons"
    },
    "qid_topic_entity": {
      "Q153227": "The Jeffersons"
    },
    "index": 75
  },
  {
    "QuestionId": "WebQTest-1916",
    "RawQuestion": "what county is utica ny in?",
    "ProcessedQuestion": "what county is utica ny in",
    "Parses": [
      {
        "ParseId": "WebQTest-1916.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "utica ny",
        "TopicEntityName": "Utica",
        "TopicEntityMid": "m.0lpk3",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_9",
            "EntityName": "Oneida County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1916.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "utica ny",
        "TopicEntityName": "Utica",
        "TopicEntityMid": "m.0lpk3",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_9",
            "EntityName": "Oneida County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lpk3": "Utica"
    },
    "qid_topic_entity": {
      "Q2495519": "Utica"
    },
    "index": 76
  },
  {
    "QuestionId": "WebQTest-1489",
    "RawQuestion": "what character did billy d williams play in star wars?",
    "ProcessedQuestion": "what character did billy d williams play in star wars",
    "Parses": [
      {
        "ParseId": "WebQTest-1489.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0g55yqj .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g55yqj",
            "EntityName": "Robot Chicken: Star Wars Episode III",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1489.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0f3m1 .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0f3m1",
            "EntityName": "Star Wars Episode V: The Empire Strikes Back",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1489.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027_sn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027_sn ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n",
        "PotentialTopicEntityMention": "billy d williams",
        "TopicEntityName": "Billy Dee Williams",
        "TopicEntityMid": "m.027_sn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0ddjy",
            "EntityName": "Return of the Jedi",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddrb",
            "EntityName": "Lando Calrissian"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027_sn": "Billy Dee Williams"
    },
    "qid_topic_entity": {
      "Q358345": "Billy Dee Williams"
    },
    "index": 77
  },
  {
    "QuestionId": "WebQTest-1955",
    "RawQuestion": "who are the judges appointed in the supreme court?",
    "ProcessedQuestion": "who are the judges appointed in the supreme court",
    "Parses": [
      {
        "ParseId": "WebQTest-1955.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sz1 ns:law.court.judges ?y .\n?y ns:law.judicial_tenure.judge ?x .\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.from_date ?sk0} || \nEXISTS {?y ns:law.judicial_tenure.from_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:law.judicial_tenure.to_date ?sk2} || \nEXISTS {?y ns:law.judicial_tenure.to_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "supreme court",
        "TopicEntityName": "Supreme Court of the United States",
        "TopicEntityMid": "m.07sz1",
        "InferentialChain": [
          "law.court.judges",
          "law.judicial_tenure.judge"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "law.judicial_tenure.from_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "law.judicial_tenure.to_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_4j",
            "EntityName": "Clarence Thomas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166zk",
            "EntityName": "Antonin Scalia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m0v",
            "EntityName": "Stephen Breyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0199pk",
            "EntityName": "Ruth Bader Ginsburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019s7r",
            "EntityName": "Anthony Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gnxk",
            "EntityName": "Samuel Alito"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066vhq",
            "EntityName": "John Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lnfm",
            "EntityName": "Elena Kagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lvrr",
            "EntityName": "Sonia Sotomayor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07sz1": "Supreme Court of the United States"
    },
    "qid_topic_entity": {
      "Q11201": "Supreme Court of the United States"
    },
    "index": 78
  },
  {
    "QuestionId": "WebQTest-708",
    "RawQuestion": "who won fa cup 1976?",
    "ProcessedQuestion": "who won fa cup 1976",
    "Parses": [
      {
        "ParseId": "WebQTest-708.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.04gp5lx .\n}\n",
        "PotentialTopicEntityMention": "fa cup",
        "TopicEntityName": "FA Cup",
        "TopicEntityMid": "m.02_p0",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04gp5lx",
            "EntityName": "1975\u201376 FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k_l4",
            "EntityName": "Southampton F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_p0": "FA Cup"
    },
    "qid_topic_entity": {
      "Q11151": "FA Cup"
    },
    "index": 79
  },
  {
    "QuestionId": "WebQTest-342",
    "RawQuestion": "what countries have english as their official language?",
    "ProcessedQuestion": "what countries have english as their official language",
    "Parses": [
      {
        "ParseId": "WebQTest-342.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.02h40lc .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h40lc",
            "EntityName": "English Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 80
  },
  {
    "QuestionId": "WebQTest-921",
    "RawQuestion": "what was the cause of death for huell howser?",
    "ProcessedQuestion": "what was the cause of death for huell howser",
    "Parses": [
      {
        "ParseId": "WebQTest-921.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kddt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kddt ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "huell howser",
        "TopicEntityName": "Huell Howser",
        "TopicEntityMid": "m.02kddt",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m32h",
            "EntityName": "Prostate cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02kddt": "Huell Howser"
    },
    "qid_topic_entity": {
      "Q2837916": "Huell Howser"
    },
    "index": 81
  },
  {
    "QuestionId": "WebQTest-774",
    "RawQuestion": "what kind of currency does the dominican republic have?",
    "ProcessedQuestion": "what kind of currency does the dominican republic have",
    "Parses": [
      {
        "ParseId": "WebQTest-774.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "dominican republic",
        "TopicEntityName": "Dominican Republic",
        "TopicEntityMid": "m.027rn",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lt7_",
            "EntityName": "Dominican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rn": "Dominican Republic"
    },
    "qid_topic_entity": {
      "Q786": "Dominican Republic"
    },
    "index": 82
  },
  {
    "QuestionId": "WebQTest-279",
    "RawQuestion": "what county is st paul va in?",
    "ProcessedQuestion": "what county is st paul va in",
    "Parses": [
      {
        "ParseId": "WebQTest-279.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013nm2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013nm2 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "st paul va",
        "TopicEntityName": "St. Paul",
        "TopicEntityMid": "m.013nm2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmy6",
            "EntityName": "Wise County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mn3x",
            "EntityName": "Russell County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013nm2": "St. Paul"
    },
    "qid_topic_entity": {
      "Q2989543": "St. Paul"
    },
    "index": 83
  },
  {
    "QuestionId": "WebQTest-172",
    "RawQuestion": "what do you call members of the senate?",
    "ProcessedQuestion": "what do you call members of the senate",
    "Parses": [
      {
        "ParseId": "WebQTest-172.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t58)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t58 ns:government.governmental_body.members ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "senate",
        "TopicEntityName": "United States Senate",
        "TopicEntityMid": "m.07t58",
        "InferentialChain": [
          "government.governmental_body.members",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hvfh",
            "EntityName": "President of the Senate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01t7n9",
            "EntityName": "State Senator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025whr1",
            "EntityName": "Chief of staff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p31rg",
            "EntityName": "President pro tempore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.048zv9l",
            "EntityName": "Senator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k99t",
            "EntityName": "Senate majority leader"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t58": "United States Senate"
    },
    "qid_topic_entity": {
      "Q66096": "United States Senate"
    },
    "index": 84
  },
  {
    "QuestionId": "WebQTest-825",
    "RawQuestion": "who does nolan ryan play for?",
    "ProcessedQuestion": "who does nolan ryan play for",
    "Parses": [
      {
        "ParseId": "WebQTest-825.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hctb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hctb ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "nolan ryan",
        "TopicEntityName": "Nolan Ryan",
        "TopicEntityMid": "m.0hctb",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m1n",
            "EntityName": "Houston Astros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmnv1",
            "EntityName": "California Angels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hctb": "Nolan Ryan"
    },
    "qid_topic_entity": {
      "Q721948": "Nolan Ryan"
    },
    "index": 85
  },
  {
    "QuestionId": "WebQTest-128",
    "RawQuestion": "who plays juni cortez?",
    "ProcessedQuestion": "who plays juni cortez",
    "Parses": [
      {
        "ParseId": "WebQTest-128.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ql73)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ql73 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "juni cortez",
        "TopicEntityName": "Juni Cortez",
        "TopicEntityMid": "m.02ql73",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042ldz",
            "EntityName": "Daryl Sabara"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ql73": "Juni Cortez"
    },
    "qid_topic_entity": {
      "Q6313015": "Juni Cortez"
    },
    "index": 86
  },
  {
    "QuestionId": "WebQTest-178",
    "RawQuestion": "who was the leader of the us during wwii?",
    "ProcessedQuestion": "who was the leader of the us during wwii",
    "Parses": [
      {
        "ParseId": "WebQTest-178.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Date range join. Original comment: F nested"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.081pw ns:time.event.start_date ?start ;\n             ns:time.event.end_date ?end .\n  ?x ns:government.politician.government_positions_held  ?y .\n  ?y ns:government.government_position_held.office_position_or_title ns:m.060d2 ; # President of the United States\n     ns:government.government_position_held.from  ?from ;\n     ns:government.government_position_held.to  ?to .\n  FILTER (?from < ?end)\n  FILTER (?to > ?start)\n}",
        "PotentialTopicEntityMention": "wwii",
        "TopicEntityName": "World War II",
        "TopicEntityMid": "m.081pw",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yy8",
            "EntityName": "Franklin D. Roosevelt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09bg4l",
            "EntityName": "Harry S. Truman"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.081pw": "World War II"
    },
    "qid_topic_entity": {
      "Q362": "World War II"
    },
    "index": 87
  },
  {
    "QuestionId": "WebQTest-621",
    "RawQuestion": "what countries have german as the official language?",
    "ProcessedQuestion": "what countries have german as the official language",
    "Parses": [
      {
        "ParseId": "WebQTest-621.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "german",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 88
  },
  {
    "QuestionId": "WebQTest-671",
    "RawQuestion": "who are the senators of hawaii 2012?",
    "ProcessedQuestion": "who are the senators of hawaii 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-671.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.jurisdiction_of_office ns:m.09c7w0 .\n?y ns:government.government_position_held.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09c7w0",
            "EntityName": "United States of America",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.jurisdiction_of_office",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "government.government_position_held.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0357cd",
            "EntityName": "Mazie Hirono"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gh4": "Hawaii"
    },
    "qid_topic_entity": {
      "Q782": "Hawaii"
    },
    "index": 89
  },
  {
    "QuestionId": "WebQTest-346",
    "RawQuestion": "who does donnie wahlberg play in the sixth sense?",
    "ProcessedQuestion": "who does donnie wahlberg play in the sixth sense",
    "Parses": [
      {
        "ParseId": "WebQTest-346.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02stwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02stwg ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.07j94 .\n}\n",
        "PotentialTopicEntityMention": "donnie wahlberg",
        "TopicEntityName": "Donnie Wahlberg",
        "TopicEntityMid": "m.02stwg",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07j94",
            "EntityName": "The Sixth Sense",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyxn2c",
            "EntityName": "Vincent Grey"
          }
        ]
      },
      {
        "ParseId": "WebQTest-346.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07j94)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07j94 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.02stwg .\n}\n",
        "PotentialTopicEntityMention": "the sixth sense",
        "TopicEntityName": "The Sixth Sense",
        "TopicEntityMid": "m.07j94",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02stwg",
            "EntityName": "Donnie Wahlberg",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyxn2c",
            "EntityName": "Vincent Grey"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02stwg": "Donnie Wahlberg",
      "m.07j94": "The Sixth Sense"
    },
    "qid_topic_entity": {
      "Q313470": "Donnie Wahlberg",
      "Q183063": "The Sixth Sense"
    },
    "index": 90
  },
  {
    "QuestionId": "WebQTest-331",
    "RawQuestion": "where was the temple of karnak built?",
    "ProcessedQuestion": "where was the temple of karnak built",
    "Parses": [
      {
        "ParseId": "WebQTest-331.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wy4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wy4 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "temple of karnak",
        "TopicEntityName": "Karnak",
        "TopicEntityMid": "m.014wy4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fhym",
            "EntityName": "Luxor Governorate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k54",
            "EntityName": "Egypt"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.014wy4": "Karnak"
    },
    "qid_topic_entity": {
      "Q522862": "Karnak"
    },
    "index": 91
  },
  {
    "QuestionId": "WebQTest-100",
    "RawQuestion": "what language is spoken in haiti today?",
    "ProcessedQuestion": "what language is spoken in haiti today",
    "Parses": [
      {
        "ParseId": "WebQTest-100.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "haiti",
        "TopicEntityName": "Haiti",
        "TopicEntityMid": "m.03gyl",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dhwl",
            "EntityName": "Haitian Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      },
      {
        "ParseId": "WebQTest-100.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gyl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gyl ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "haiti",
        "TopicEntityName": "Haiti",
        "TopicEntityMid": "m.03gyl",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dhwl",
            "EntityName": "Haitian Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gyl": "Haiti"
    },
    "qid_topic_entity": {
      "Q790": "Haiti"
    },
    "index": 92
  },
  {
    "QuestionId": "WebQTest-852",
    "RawQuestion": "what province is toronto in ( 7 letters )?",
    "ProcessedQuestion": "what province is toronto in ( 7 letters )",
    "Parses": [
      {
        "ParseId": "WebQTest-852.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:base.biblioness.bibs_location.state ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "base.biblioness.bibs_location.state"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      },
      {
        "ParseId": "WebQTest-852.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nm .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nm",
            "EntityName": "Canadian Province",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 93
  },
  {
    "QuestionId": "WebQTest-1634",
    "RawQuestion": "who does peter griffin voice?",
    "ProcessedQuestion": "who does peter griffin voice",
    "Parses": [
      {
        "ParseId": "WebQTest-1634.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n6jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n6jv ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "peter griffin",
        "TopicEntityName": "Peter Griffin",
        "TopicEntityMid": "m.03n6jv",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021yw7",
            "EntityName": "Seth MacFarlane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03n6jv": "Peter Griffin"
    },
    "qid_topic_entity": {
      "Q28465": "Peter Griffin"
    },
    "index": 94
  },
  {
    "QuestionId": "WebQTest-1915",
    "RawQuestion": "where did harry s truman go to school?",
    "ProcessedQuestion": "where did harry s truman go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1915.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09bg4l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09bg4l ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "harry s truman",
        "TopicEntityName": "Harry S. Truman",
        "TopicEntityMid": "m.09bg4l",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016vf7",
            "EntityName": "University of Missouri\u2013Kansas City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064r775",
            "EntityName": "University of Missouri\u2013Kansas City School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvjpw",
            "EntityName": "William Chrisman High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09bg4l": "Harry S. Truman"
    },
    "qid_topic_entity": {
      "Q11613": "Harry S. Truman"
    },
    "index": 95
  },
  {
    "QuestionId": "WebQTest-257",
    "RawQuestion": "who was the soviet leader during world war ii?",
    "ProcessedQuestion": "who was the soviet leader during world war ii",
    "Parses": [
      {
        "ParseId": "WebQTest-257.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?x ns:military.military_person.participated_in_conflicts ns:m.081pw .\n}\n",
        "PotentialTopicEntityMention": "soviet",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.081pw",
            "EntityName": "World War II",
            "SourceNodeIndex": 1,
            "NodePredicate": "military.military_person.participated_in_conflicts",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bphp",
            "EntityName": "Nikita Khrushchev"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8xy",
            "EntityName": "Leonid Brezhnev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 96
  },
  {
    "QuestionId": "WebQTest-633",
    "RawQuestion": "what is claire danes famous for?",
    "ProcessedQuestion": "what is claire danes famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-633.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gq0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gq0b ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "claire danes",
        "TopicEntityName": "Claire Danes",
        "TopicEntityMid": "m.01gq0b",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gjzk",
            "EntityName": "Television producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gq0b": "Claire Danes"
    },
    "qid_topic_entity": {
      "Q867813": "Claire Danes"
    },
    "index": 97
  },
  {
    "QuestionId": "WebQTest-1004",
    "RawQuestion": "what movies did christopher plummer play in?",
    "ProcessedQuestion": "what movies did christopher plummer play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1004.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ycbq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ycbq ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "christopher plummer",
        "TopicEntityName": "Christopher Plummer",
        "TopicEntityMid": "m.01ycbq",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010h352r",
            "EntityName": "Elsa & Fred"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011f26pr",
            "EntityName": "Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011yth",
            "EntityName": "The Insider"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012wjtcf",
            "EntityName": "I Love N.Y."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015bpl",
            "EntityName": "Star Trek VI: The Undiscovered Country"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jwxx",
            "EntityName": "Battle of Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rwyq",
            "EntityName": "Malcolm X"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0224yq",
            "EntityName": "The Fall of the Roman Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0269yjk",
            "EntityName": "Little Gloria... Happy at Last"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026n9yk",
            "EntityName": "Money"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027c4mq",
            "EntityName": "Stage Struck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r7k",
            "EntityName": "Murder by Decree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pgkdn",
            "EntityName": "Triple Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q9_sn",
            "EntityName": "A Doll's House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qjg31",
            "EntityName": "Young Catherine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqrpy",
            "EntityName": "Dolores Claiborne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qy2zv",
            "EntityName": "Lily in Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r79_h",
            "EntityName": "The Imaginarium of Doctor Parnassus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rn00y",
            "EntityName": "Up"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rn15c",
            "EntityName": "The Pyx"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w0_2l",
            "EntityName": "Babes in Toyland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz1ch",
            "EntityName": "Eyewitness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x983k",
            "EntityName": "The Clown at Midnight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xkm8r",
            "EntityName": "Firehead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0nhq",
            "EntityName": "Nicholas Nickleby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0qgs",
            "EntityName": "9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z14lh",
            "EntityName": "American Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z7v8z",
            "EntityName": "Hamlet at Elsinore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032xx4",
            "EntityName": "Wolf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033srr",
            "EntityName": "National Treasure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03grp9d",
            "EntityName": "Man in the Chair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hhtw_",
            "EntityName": "Lucky Break"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jsdr",
            "EntityName": "Ararat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mddt9",
            "EntityName": "Riel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p_np",
            "EntityName": "Somewhere in Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qj86j",
            "EntityName": "The Amateur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vp54",
            "EntityName": "An American Tail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y8bw0",
            "EntityName": "The Spiral Staircase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y96y8",
            "EntityName": "My Dog Tulip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047myg9",
            "EntityName": "The Last Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049mql",
            "EntityName": "Alexander"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f6hpg",
            "EntityName": "A Hazard of Hearts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g14gk",
            "EntityName": "Conduct Unbecoming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gm93",
            "EntityName": "Aces High"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0834",
            "EntityName": "Already Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0f9m",
            "EntityName": "The Conspiracy of Fear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0ls5",
            "EntityName": "Liar's Edge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1_xc",
            "EntityName": "Blackheart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j16jd",
            "EntityName": "Blizzard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1j4g",
            "EntityName": "The Dinosaur Hunter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j27vd",
            "EntityName": "Prototype"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2m2s",
            "EntityName": "The First Circle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jdgq",
            "EntityName": "Dracula 2000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jh6fj",
            "EntityName": "Lock Up Your Daughters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jmkts",
            "EntityName": "Nobody Runs Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pmnt",
            "EntityName": "The New World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qgzk",
            "EntityName": "Dreamscape"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ynd_",
            "EntityName": "Cold Creek Manor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051zdz6",
            "EntityName": "The Boss' Wife"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0520m52",
            "EntityName": "Wind Across the Everglades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b5472",
            "EntityName": "Our Fathers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f05n",
            "EntityName": "Inside Daisy Clover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r1bb",
            "EntityName": "The Return of the Pink Panther"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zqyzp",
            "EntityName": "When the Circus Came to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zrzs1",
            "EntityName": "Shadow Dancing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qhp",
            "EntityName": "Rock-a-Doodle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065tqqx",
            "EntityName": "On Golden Pond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068__1",
            "EntityName": "The Night of the Generals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069687",
            "EntityName": "Hanover Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vggv",
            "EntityName": "Gandahar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zk4vw",
            "EntityName": "The Man Who Planted Trees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zp5gf",
            "EntityName": "Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_7th",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076xkps",
            "EntityName": "Priest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.078sj4",
            "EntityName": "Syriana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079f7l",
            "EntityName": "The Scarlet and the Black"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzb3",
            "EntityName": "Must Love Dogs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j6w",
            "EntityName": "12 Monkeys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083fl",
            "EntityName": "Waterloo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087623",
            "EntityName": "Where the Heart Is"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fsq3",
            "EntityName": "Full Disclosure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08xvx8",
            "EntityName": "Starcrash"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09db8r",
            "EntityName": "The Boy in Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m6kg",
            "EntityName": "A Beautiful Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09nl36",
            "EntityName": "Inside Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pyqc",
            "EntityName": "The Man Who Would Be King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v2wgp",
            "EntityName": "Winchell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b44shh",
            "EntityName": "Beginners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4gnw",
            "EntityName": "Dragnet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b753df",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b79dp9",
            "EntityName": "Impolite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b813t",
            "EntityName": "Vampire in Venice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbmkh",
            "EntityName": "The Lake House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbr312",
            "EntityName": "Night Flight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbw1jk",
            "EntityName": "The Day That Shook the World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bg1bn",
            "EntityName": "The Gospel of John"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhbwpw",
            "EntityName": "Heidi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bnqf7",
            "EntityName": "Madeline: Lost in Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvpzw5",
            "EntityName": "Oedipus the King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3tmhs",
            "EntityName": "The Royal Hunt of the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5fq4",
            "EntityName": "Woman Wanted"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chdsfl",
            "EntityName": "A Marriage: Georgia O'Keeffe and Alfred Stieglitz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq7tx",
            "EntityName": "The Sound of Music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw6bn",
            "EntityName": "Four Minutes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crybp9",
            "EntityName": "Hidden Agenda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czbcwb",
            "EntityName": "The Assignment"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d6mrfb",
            "EntityName": "Highpoint"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddgbq3",
            "EntityName": "Souvenir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0df1tr",
            "EntityName": "Harrison Bergeron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgq_kn",
            "EntityName": "The Girl with the Dragon Tattoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgr9sj",
            "EntityName": "Five Good Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnn1j",
            "EntityName": "The Silent Partner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc8w8",
            "EntityName": "Closing the Ring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fdrns",
            "EntityName": "International Velvet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0hgp",
            "EntityName": "Rumpelstiltskin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gh5_tc",
            "EntityName": "Silver Blaze"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gzqzl",
            "EntityName": "Emotional Arithmetic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hlpnhn",
            "EntityName": "Barrymore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt2423",
            "EntityName": "Dark Descent of the Forgotten Empress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3ddp2",
            "EntityName": "Kali the Little Vampire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0njcp_c",
            "EntityName": "Skeletons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pmf3l5",
            "EntityName": "The Gnomes' Great Adventure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8w0dm",
            "EntityName": "Imagine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpfm51",
            "EntityName": "The Legend of Sarila"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpt56y",
            "EntityName": "The Tempest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_pgt2",
            "EntityName": "Hector and the Search for Happiness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x0gfps",
            "EntityName": "Caesar and Cleopatra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xnph63",
            "EntityName": "Muhammad Ali's Greatest Fight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ztkpk6",
            "EntityName": "The Forger"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ycbq": "Christopher Plummer"
    },
    "qid_topic_entity": {
      "Q190523": "Christopher Plummer"
    },
    "index": 98
  },
  {
    "QuestionId": "WebQTest-797",
    "RawQuestion": "what is the zip code for newark california?",
    "ProcessedQuestion": "what is the zip code for newark california",
    "Parses": [
      {
        "ParseId": "WebQTest-797.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qx_6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qx_6 ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "newark california",
        "TopicEntityName": "Newark",
        "TopicEntityMid": "m.0qx_6",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zjg6s",
            "EntityName": "94560"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0qx_6": "Newark"
    },
    "qid_topic_entity": {
      "Q850812": "Newark"
    },
    "index": 99
  },
  {
    "QuestionId": "WebQTest-1252",
    "RawQuestion": "who plays eowyn in lord of the rings?",
    "ProcessedQuestion": "who plays eowyn in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-1252.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gynx .\n}\n",
        "PotentialTopicEntityMention": "lord of the rings",
        "TopicEntityName": "The Lord of the Rings: The Return of the King",
        "TopicEntityMid": "m.017jd9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0gynx",
            "EntityName": "\u00c9owyn",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0294fd",
            "EntityName": "Miranda Otto"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.017jd9": "The Lord of the Rings: The Return of the King"
    },
    "qid_topic_entity": {
      "Q131074": "The Lord of the Rings: The Return of the King"
    },
    "index": 100
  },
  {
    "QuestionId": "WebQTest-184",
    "RawQuestion": "what state does romney live in?",
    "ProcessedQuestion": "what state does romney live in",
    "Parses": [
      {
        "ParseId": "WebQTest-184.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpys4",
            "EntityName": "US State",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k7sb",
            "EntityName": "Massachusetts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 101
  },
  {
    "QuestionId": "WebQTest-2012",
    "RawQuestion": "what is london uk time zone?",
    "ProcessedQuestion": "what is london uk time zone",
    "Parses": [
      {
        "ParseId": "WebQTest-2012.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jpl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jpl ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "london",
        "TopicEntityName": "London",
        "TopicEntityMid": "m.04jpl",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bdv",
            "EntityName": "Greenwich Mean Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04jpl": "London"
    },
    "qid_topic_entity": {
      "Q84": "London"
    },
    "index": 102
  },
  {
    "QuestionId": "WebQTest-318",
    "RawQuestion": "what is the money of switzerland called?",
    "ProcessedQuestion": "what is the money of switzerland called",
    "Parses": [
      {
        "ParseId": "WebQTest-318.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_h4b",
            "EntityName": "Swiss franc"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 103
  },
  {
    "QuestionId": "WebQTest-1007",
    "RawQuestion": "what district does nancy pelosi represent?",
    "ProcessedQuestion": "what district does nancy pelosi represent",
    "Parses": [
      {
        "ParseId": "WebQTest-1007.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012v1t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012v1t ns:base.government2.elected_official.elected_positions_held ?y .\n?y ns:base.government2.elected_government_positions_held.district_represented ?x .\n}\n",
        "PotentialTopicEntityMention": "nancy pelosi",
        "TopicEntityName": "Nancy Pelosi",
        "TopicEntityMid": "m.012v1t",
        "InferentialChain": [
          "base.government2.elected_official.elected_positions_held",
          "base.government2.elected_government_positions_held.district_represented"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09d70l",
            "EntityName": "California\u2019s 5th congressional district"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b10j3",
            "EntityName": "California\u2019s 8th congressional district"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1007.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012v1t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012v1t ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n",
        "PotentialTopicEntityMention": "nancy pelosi",
        "TopicEntityName": "Nancy Pelosi",
        "TopicEntityMid": "m.012v1t",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.district_represented"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09d70l",
            "EntityName": "California\u2019s 5th congressional district"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b10j3",
            "EntityName": "California\u2019s 8th congressional district"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dv6yz",
            "EntityName": "California\u2019s 12th congressional district"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012v1t": "Nancy Pelosi"
    },
    "qid_topic_entity": {
      "Q170581": "Nancy Pelosi"
    },
    "index": 104
  },
  {
    "QuestionId": "WebQTest-1911",
    "RawQuestion": "where did scott fitzgerald go to college?",
    "ProcessedQuestion": "where did scott fitzgerald go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1911.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "scott fitzgerald",
        "TopicEntityName": "F. Scott Fitzgerald",
        "TopicEntityMid": "m.02zjd",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zl0",
            "EntityName": "Princeton University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02zjd": "F. Scott Fitzgerald"
    },
    "qid_topic_entity": {
      "Q93354": "F. Scott Fitzgerald"
    },
    "index": 105
  },
  {
    "QuestionId": "WebQTest-1121",
    "RawQuestion": "what is kentucky state slogan?",
    "ProcessedQuestion": "what is kentucky state slogan",
    "Parses": [
      {
        "ParseId": "WebQTest-1121.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0498y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0498y ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.0j749 .\n}\n",
        "PotentialTopicEntityMention": "kentucky",
        "TopicEntityName": "Kentucky",
        "TopicEntityMid": "m.0498y",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0j749",
            "EntityName": "Motto",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b0jhz",
            "EntityName": "United we stand, divided we fall"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0498y": "Kentucky"
    },
    "qid_topic_entity": {
      "Q1603": "Kentucky"
    },
    "index": 106
  },
  {
    "QuestionId": "WebQTest-224",
    "RawQuestion": "where did william morris go to college?",
    "ProcessedQuestion": "where did william morris go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-224.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08304)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08304 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "william morris",
        "TopicEntityName": "William Morris",
        "TopicEntityMid": "m.08304",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ylvj",
            "EntityName": "Exeter College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08304": "William Morris"
    },
    "qid_topic_entity": {
      "Q182589": "William Morris"
    },
    "index": 107
  },
  {
    "QuestionId": "WebQTest-617",
    "RawQuestion": "where did tim tebow grow up?",
    "ProcessedQuestion": "where did tim tebow grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-617.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g7km1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g7km1 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "tim tebow",
        "TopicEntityName": "Tim Tebow",
        "TopicEntityMid": "m.0g7km1",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dvzy",
            "EntityName": "Makati"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g7km1": "Tim Tebow"
    },
    "qid_topic_entity": {
      "Q517467": "Tim Tebow"
    },
    "index": 108
  },
  {
    "QuestionId": "WebQTest-1251",
    "RawQuestion": "which countries speak germanic languages?",
    "ProcessedQuestion": "which countries speak germanic languages",
    "Parses": [
      {
        "ParseId": "WebQTest-1251.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "germanic languages",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 109
  },
  {
    "QuestionId": "WebQTest-124",
    "RawQuestion": "what language does egyptian people speak?",
    "ProcessedQuestion": "what language does egyptian people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-124.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "egyptian",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025rvv7",
            "EntityName": "Modern Standard Arabic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 110
  },
  {
    "QuestionId": "WebQTest-1230",
    "RawQuestion": "what to see in christchurch new zealand?",
    "ProcessedQuestion": "what to see in christchurch new zealand",
    "Parses": [
      {
        "ParseId": "WebQTest-1230.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yc5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yc5b ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "christchurch",
        "TopicEntityName": "Christchurch",
        "TopicEntityMid": "m.02yc5b",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qld5z",
            "EntityName": "International Antarctic Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vzw6",
            "EntityName": "Ferrymead Heritage Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04bgpr",
            "EntityName": "Cathedral Square, Christchurch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zrshr",
            "EntityName": "Willowbank Wildlife Reserve, Christchurch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.061hdn",
            "EntityName": "Christchurch Botanic Gardens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06drcd",
            "EntityName": "Christchurch Arts Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nnvz",
            "EntityName": "Air Force Museum of New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06srm9",
            "EntityName": "Canterbury Museum, Christchurch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d902k",
            "EntityName": "TranzAlpine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gh8h3s",
            "EntityName": "Lyttelton Timeball Station"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02yc5b": "Christchurch"
    },
    "qid_topic_entity": {
      "Q79990": "Christchurch"
    },
    "index": 111
  },
  {
    "QuestionId": "WebQTest-204",
    "RawQuestion": "what is the capital of modern egypt?",
    "ProcessedQuestion": "what is the capital of modern egypt",
    "Parses": [
      {
        "ParseId": "WebQTest-204.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w2v",
            "EntityName": "Cairo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 112
  },
  {
    "QuestionId": "WebQTest-1070",
    "RawQuestion": "what are the names of michael jackson's 3 children?",
    "ProcessedQuestion": "what are the names of michael jackson 's 3 children",
    "Parses": [
      {
        "ParseId": "WebQTest-1070.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jackson",
        "TopicEntityName": "Michael Jackson",
        "TopicEntityMid": "m.09889g",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0598rm4",
            "EntityName": "Paris-Michael Katherine Jackson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0598rmb",
            "EntityName": "Michael Joseph Jackson, Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qbyj",
            "EntityName": "Prince Michael Jackson II"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09889g": "Michael Jackson"
    },
    "qid_topic_entity": {
      "Q2831": "Michael Jackson"
    },
    "index": 113
  },
  {
    "QuestionId": "WebQTest-166",
    "RawQuestion": "what was dr seuss education?",
    "ProcessedQuestion": "what was dr seuss education",
    "Parses": [
      {
        "ParseId": "WebQTest-166.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02g3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02g3w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "dr seuss",
        "TopicEntityName": "Theodore Lesieg",
        "TopicEntityMid": "m.02g3w",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bqy",
            "EntityName": "Dartmouth College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ym1n",
            "EntityName": "Lincoln College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02g3w": "Theodore Lesieg"
    },
    "qid_topic_entity": {
      "Q298685": "Theodore Lesieg"
    },
    "index": 114
  },
  {
    "QuestionId": "WebQTest-1217",
    "RawQuestion": "what is monta ellis career high points?",
    "ProcessedQuestion": "what is monta ellis career high points",
    "Parses": [
      {
        "ParseId": "WebQTest-1217.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06rsnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06rsnl ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.award ?x .\n}\n",
        "PotentialTopicEntityMention": "monta ellis",
        "TopicEntityName": "Monta Ellis",
        "TopicEntityMid": "m.06rsnl",
        "InferentialChain": [
          "sports.sports_award_winner.awards",
          "sports.sports_award.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06js8m",
            "EntityName": "NBA Most Improved Player Award"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06rsnl": "Monta Ellis"
    },
    "qid_topic_entity": {
      "Q381746": "Monta Ellis"
    },
    "index": 115
  },
  {
    "QuestionId": "WebQTest-717",
    "RawQuestion": "what timezone is tucson arizona in right now?",
    "ProcessedQuestion": "what timezone is tucson arizona in right now",
    "Parses": [
      {
        "ParseId": "WebQTest-717.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fr0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fr0t ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "tucson arizona",
        "TopicEntityName": "Tucson",
        "TopicEntityMid": "m.0fr0t",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hczc",
            "EntityName": "Mountain Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fr0t": "Tucson"
    },
    "qid_topic_entity": {
      "Q18575": "Tucson"
    },
    "index": 116
  },
  {
    "QuestionId": "WebQTest-575",
    "RawQuestion": "who is louisiana state senator?",
    "ProcessedQuestion": "who is louisiana state senator",
    "Parses": [
      {
        "ParseId": "WebQTest-575.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ly1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ly1 ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "PotentialTopicEntityMention": "louisiana",
        "TopicEntityName": "Louisiana",
        "TopicEntityMid": "m.04ly1",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7l8y",
            "EntityName": "United States Senator",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_nrx",
            "EntityName": "John Slidell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019tyn",
            "EntityName": "Mary Landrieu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bxb3",
            "EntityName": "Edward Livingston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fptq",
            "EntityName": "Judah P. Benjamin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gqtx",
            "EntityName": "Russell B. Long"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xctw",
            "EntityName": "John Breaux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025jr2",
            "EntityName": "David Vitter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02s1w9",
            "EntityName": "William C. C. Claiborne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0337h3",
            "EntityName": "Edward Douglass White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jm72",
            "EntityName": "Pierre Soul\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04r1w2",
            "EntityName": "James Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mmtq",
            "EntityName": "Thomas Posey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tvn8",
            "EntityName": "Charles Magill Conrad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.095vrl",
            "EntityName": "Eligius Fromentin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b079s",
            "EntityName": "Jean Noel Destr\u00e9han"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cvwfs",
            "EntityName": "Henry Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d04_1",
            "EntityName": "Alexander Barrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d21y8",
            "EntityName": "Charles Dominique Joseph Bouligny"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2rbw",
            "EntityName": "Jeremiah B. Howell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2s6n",
            "EntityName": "George A. Waggaman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3287",
            "EntityName": "Robert C. Nicholas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d32rg",
            "EntityName": "Allan B. Magruder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d32vk",
            "EntityName": "Josiah S. Johnston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3g7j",
            "EntityName": "Alexander Porter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3g9m",
            "EntityName": "Alexandre Mouton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0py1g",
            "EntityName": "Huey Long"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ly1": "Louisiana"
    },
    "qid_topic_entity": {
      "Q1588": "Louisiana"
    },
    "index": 117
  },
  {
    "QuestionId": "WebQTest-96",
    "RawQuestion": "where did richard nixon die?",
    "ProcessedQuestion": "where did richard nixon die",
    "Parses": [
      {
        "ParseId": "WebQTest-96.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c97 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "richard nixon",
        "TopicEntityName": "Richard Nixon",
        "TopicEntityMid": "m.06c97",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06c97": "Richard Nixon"
    },
    "qid_topic_entity": {
      "Q9588": "Richard Nixon"
    },
    "index": 118
  },
  {
    "QuestionId": "WebQTest-1357",
    "RawQuestion": "where is the fukushima daiichi nuclear power station?",
    "ProcessedQuestion": "where is the fukushima daiichi nuclear power station",
    "Parses": [
      {
        "ParseId": "WebQTest-1357.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vkzy2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vkzy2 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "fukushima daiichi nuclear power station",
        "TopicEntityName": "Fukushima Daiichi Nuclear Power Plant",
        "TopicEntityMid": "m.02vkzy2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k_g5",
            "EntityName": "Okuma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02vkzy2": "Fukushima Daiichi Nuclear Power Plant"
    },
    "qid_topic_entity": {
      "Q114295": "Fukushima Daiichi Nuclear Power Plant"
    },
    "index": 119
  },
  {
    "QuestionId": "WebQTest-968",
    "RawQuestion": "what do people speak in germany?",
    "ProcessedQuestion": "what do people speak in germany",
    "Parses": [
      {
        "ParseId": "WebQTest-968.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0140n_",
            "EntityName": "Bavarian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nt2n",
            "EntityName": "Frisian, Northern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lmb2",
            "EntityName": "Turoyo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06d010",
            "EntityName": "Saxon, Upper Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-968.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxrs_",
            "EntityName": "Low German"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 120
  },
  {
    "QuestionId": "WebQTest-277",
    "RawQuestion": "who was esther's husband?",
    "ProcessedQuestion": "who was esther 's husband",
    "Parses": [
      {
        "ParseId": "WebQTest-277.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pn7 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "esther",
        "TopicEntityName": "Esther",
        "TopicEntityMid": "m.02pn7",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjm1",
            "EntityName": "Xerxes I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hy00",
            "EntityName": "Ahasuerus"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02pn7": "Esther"
    },
    "qid_topic_entity": {
      "Q732413": "Esther"
    },
    "index": 121
  },
  {
    "QuestionId": "WebQTest-1774",
    "RawQuestion": "who was judi dench married to?",
    "ProcessedQuestion": "who was judi dench married to",
    "Parses": [
      {
        "ParseId": "WebQTest-1774.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpjn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpjn ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "judi dench",
        "TopicEntityName": "Judi Dench",
        "TopicEntityMid": "m.0lpjn",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016sm7",
            "EntityName": "Michael Williams"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lpjn": "Judi Dench"
    },
    "qid_topic_entity": {
      "Q28054": "Judi Dench"
    },
    "index": 122
  },
  {
    "QuestionId": "WebQTest-306",
    "RawQuestion": "who is the head coach of inter milan?",
    "ProcessedQuestion": "who is the head coach of inter milan",
    "Parses": [
      {
        "ParseId": "WebQTest-306.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03x6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03x6m ns:sports.sports_team.coaches ?y .\n?y ns:sports.sports_team_coach_tenure.coach ?x .\n?y ns:sports.sports_team_coach_tenure.position ns:m.02md_2 .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_coach_tenure.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_coach_tenure.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "inter milan",
        "TopicEntityName": "Inter Milan",
        "TopicEntityMid": "m.03x6m",
        "InferentialChain": [
          "sports.sports_team.coaches",
          "sports.sports_team_coach_tenure.coach"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02md_2",
            "EntityName": "Head coach",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_coach_tenure.position",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_coach_tenure.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_coach_tenure.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g1wf",
            "EntityName": "Walter Mazzarri"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03x6m": "Inter Milan"
    },
    "qid_topic_entity": {
      "Q631": "Inter Milan"
    },
    "index": 123
  },
  {
    "QuestionId": "WebQTest-1429",
    "RawQuestion": "what currency is accepted in new zealand?",
    "ProcessedQuestion": "what currency is accepted in new zealand",
    "Parses": [
      {
        "ParseId": "WebQTest-1429.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ctw_b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ctw_b ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "new zealand",
        "TopicEntityName": "New Zealand",
        "TopicEntityMid": "m.0ctw_b",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015f1d",
            "EntityName": "New Zealand dollar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ctw_b": "New Zealand"
    },
    "qid_topic_entity": {
      "Q664": "New Zealand"
    },
    "index": 124
  },
  {
    "QuestionId": "WebQTest-214",
    "RawQuestion": "which continents were part of the roman empire?",
    "ProcessedQuestion": "which continents were part of the roman empire",
    "Parses": [
      {
        "ParseId": "WebQTest-214.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? Partially Contained By returns regions and continents. Can we take the regions and get the continent that contains the region?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cmp ns:location.location.partially_contained_by ?y .\n?y ns:location.partial_containment_relationship.partially_contained_by ?x .\n}\n",
        "PotentialTopicEntityMention": "roman empire",
        "TopicEntityName": "Roman Empire",
        "TopicEntityMid": "m.06cmp",
        "InferentialChain": [
          "location.location.partially_contained_by",
          "location.partial_containment_relationship.partially_contained_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wsz",
            "EntityName": "Middle East"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g2v",
            "EntityName": "North Africa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06cmp": "Roman Empire"
    },
    "qid_topic_entity": {
      "Q2277": "Roman Empire"
    },
    "index": 125
  },
  {
    "QuestionId": "WebQTest-1586",
    "RawQuestion": "who was queen isabella's mother?",
    "ProcessedQuestion": "who was queen isabella 's mother",
    "Parses": [
      {
        "ParseId": "WebQTest-1586.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jd6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jd6m ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "queen isabella",
        "TopicEntityName": "Isabella I of Castile",
        "TopicEntityMid": "m.0jd6m",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d18m0",
            "EntityName": "Isabella of Portugal, Queen of Castile"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jd6m": "Isabella I of Castile"
    },
    "qid_topic_entity": {
      "Q45859": "Isabella I of Castile"
    },
    "index": 126
  },
  {
    "QuestionId": "WebQTest-213",
    "RawQuestion": "who did scarlett johansson date?",
    "ProcessedQuestion": "who did scarlett johansson date",
    "Parses": [
      {
        "ParseId": "WebQTest-213.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02114t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02114t ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "scarlett johansson",
        "TopicEntityName": "Scarlett Johansson",
        "TopicEntityMid": "m.02114t",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g0jn",
            "EntityName": "nm1157013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kgv4",
            "EntityName": "Josh Hartnett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028r4y",
            "EntityName": "Topher Grace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fybl",
            "EntityName": "Jared Leto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036hf4",
            "EntityName": "Ryan Reynolds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.055zkh",
            "EntityName": "Patrick Wilson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1yf",
            "EntityName": "Justin Timberlake"
          }
        ]
      },
      {
        "ParseId": "WebQTest-213.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02114t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02114t ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n}\n",
        "PotentialTopicEntityMention": "scarlett johansson",
        "TopicEntityName": "Scarlett Johansson",
        "TopicEntityMid": "m.02114t",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g0jn",
            "EntityName": "nm1157013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kgv4",
            "EntityName": "Josh Hartnett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qscs",
            "EntityName": "Benicio del Toro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fybl",
            "EntityName": "Jared Leto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1yf",
            "EntityName": "Justin Timberlake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wz5p2s",
            "EntityName": "Romain Dauriac"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02114t": "Scarlett Johansson"
    },
    "qid_topic_entity": {
      "Q34436": "Scarlett Johansson"
    },
    "index": 127
  },
  {
    "QuestionId": "WebQTest-1085",
    "RawQuestion": "who was demi lovato dating?",
    "ProcessedQuestion": "who was demi lovato dating",
    "Parses": [
      {
        "ParseId": "WebQTest-1085.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wb6yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wb6yq ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "demi lovato",
        "TopicEntityName": "Demi Lovato",
        "TopicEntityMid": "m.02wb6yq",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cg2rv",
            "EntityName": "Nicholas Braun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cr6qv",
            "EntityName": "Joe Jonas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq3wn",
            "EntityName": "Cody Linley"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1085.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wb6yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wb6yq ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n}\n",
        "PotentialTopicEntityMention": "demi lovato",
        "TopicEntityName": "Demi Lovato",
        "TopicEntityMid": "m.02wb6yq",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hhtj",
            "EntityName": "Wilmer Valderrama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cr6qv",
            "EntityName": "Joe Jonas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02wb6yq": "Demi Lovato"
    },
    "qid_topic_entity": {
      "Q41173": "Demi Lovato"
    },
    "index": 128
  },
  {
    "QuestionId": "WebQTest-1304",
    "RawQuestion": "what was hitler the leader of?",
    "ProcessedQuestion": "what was hitler the leader of",
    "Parses": [
      {
        "ParseId": "WebQTest-1304.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:organization.organization_founder.organizations_founded ?x .\n}\n",
        "PotentialTopicEntityMention": "hitler",
        "TopicEntityName": "Adolf Hitler",
        "TopicEntityMid": "m.07_m9_",
        "InferentialChain": [
          "organization.organization_founder.organizations_founded"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c73n",
            "EntityName": "Hitler Youth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqs",
            "EntityName": "Gestapo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w7xf",
            "EntityName": "1st SS Panzer Division Leibstandarte SS Adolf Hitler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g9h",
            "EntityName": "Nazi Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qmk",
            "EntityName": "Schutzstaffel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082mc",
            "EntityName": "Waffen-SS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082x5",
            "EntityName": "Wehrmacht"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6ck",
            "EntityName": "Sturmabteilung"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07_m9_": "Adolf Hitler"
    },
    "qid_topic_entity": {
      "Q352": "Adolf Hitler"
    },
    "index": 129
  },
  {
    "QuestionId": "WebQTest-1610",
    "RawQuestion": "who was gerald ford vp?",
    "ProcessedQuestion": "who was gerald ford vp",
    "Parses": [
      {
        "ParseId": "WebQTest-1610.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_md_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_md_ ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "gerald ford",
        "TopicEntityName": "Gerald Ford",
        "TopicEntityMid": "m.0c_md_",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jd_",
            "EntityName": "Nelson Rockefeller"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c_md_": "Gerald Ford"
    },
    "qid_topic_entity": {
      "Q9582": "Gerald Ford"
    },
    "index": 130
  },
  {
    "QuestionId": "WebQTest-440",
    "RawQuestion": "where is jason mraz from?",
    "ProcessedQuestion": "where is jason mraz from",
    "Parses": [
      {
        "ParseId": "WebQTest-440.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0259r0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0259r0 ns:music.artist.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "jason mraz",
        "TopicEntityName": "Jason Mraz",
        "TopicEntityMid": "m.0259r0",
        "InferentialChain": [
          "music.artist.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n7q",
            "EntityName": "California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wkmq",
            "EntityName": "Mechanicsville"
          }
        ]
      },
      {
        "ParseId": "WebQTest-440.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0259r0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0259r0 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "jason mraz",
        "TopicEntityName": "Jason Mraz",
        "TopicEntityMid": "m.0259r0",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wkmq",
            "EntityName": "Mechanicsville"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0259r0": "Jason Mraz"
    },
    "qid_topic_entity": {
      "Q192515": "Jason Mraz"
    },
    "index": 131
  },
  {
    "QuestionId": "WebQTest-108",
    "RawQuestion": "what was the book written by charles darwin?",
    "ProcessedQuestion": "what was the book written by charles darwin",
    "Parses": [
      {
        "ParseId": "WebQTest-108.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "charles darwin",
        "TopicEntityName": "Charles Darwin",
        "TopicEntityMid": "m.01lwx",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvk_0",
            "EntityName": "Charles Darwin's zoology notes & specimen lists from H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvk_h",
            "EntityName": "From so simple a beginning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvk_s",
            "EntityName": "On Natural Selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkw8",
            "EntityName": "Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkwq",
            "EntityName": "On evolution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkx4",
            "EntityName": "The origin of species : complete and fully illustrated"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkxl",
            "EntityName": "A student's introduction to Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvky0",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkyg",
            "EntityName": "The Structure and Distribution of Coral Reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkyq",
            "EntityName": "The descent of man, and selection in relation to sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkz4",
            "EntityName": "The origin of species by means of natural selection, or, The preservation of favored races in the struggle for life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvkzl",
            "EntityName": "Charles Darwin's letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvl01",
            "EntityName": "Charles Darwin's natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvl0q",
            "EntityName": "The Autobiography of Charles Darwin (Great Minds Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tvl36",
            "EntityName": "The Correspondence of Charles Darwin, Volume 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s5_",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s51",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s5j",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s6g",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s6q",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s6z",
            "EntityName": "The Origin Of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s76",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s7g",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s7q",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s7z",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s86",
            "EntityName": "The Origin Of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s8h",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0s8r",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t7v",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t8c",
            "EntityName": "The Origin Of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t8m",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t8w",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t93",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0t9c",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tb2",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tbc",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tbm",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tbx",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0tc5",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wf1",
            "EntityName": "Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wfk",
            "EntityName": "The Origin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wg1",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0x_6",
            "EntityName": "The Origin of Species (Collector's Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0x_r",
            "EntityName": "The Origin of Species (Variorum Reprint)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xy8",
            "EntityName": "The origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xyp",
            "EntityName": "The Origin of Species (Mentor)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xz6",
            "EntityName": "The Origin of Species (Mentor)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0xzg",
            "EntityName": "The Origin of Species (World's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0zkt",
            "EntityName": "The Origin of Species (Enriched Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v10qf",
            "EntityName": "The Origin of Species (Oxford World's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11qz",
            "EntityName": "Origin of Species (Everyman's University Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11tx",
            "EntityName": "The Origin of Species (Great Minds Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v136y",
            "EntityName": "The origin of species : complete and fully illustrated"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v137n",
            "EntityName": "The Origin of Species (Great Books : Learning Channel)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1385",
            "EntityName": "THE ORIGIN OF SPECIES (Wordsworth Collection) (Wordsworth Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v138q",
            "EntityName": "Origin of Species (Harvard Classics, Part 11)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v14tk",
            "EntityName": "The Origin of Species (Barnes & Noble Classics Series) (Barnes & Noble Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9f_",
            "EntityName": "The Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9fr",
            "EntityName": "Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9gj",
            "EntityName": "The Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9h2",
            "EntityName": "The autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9hb",
            "EntityName": "Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9hm",
            "EntityName": "The Autobiography of Charles Darwin (Dodo Press)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9hx",
            "EntityName": "The Autobiography Of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9jr",
            "EntityName": "The autobiography of Charles Darwin, 1809-1882"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9k6",
            "EntityName": "The Autobiography of Charles Darwin [EasyRead Edition]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9kx",
            "EntityName": "The Autobiography of Charles Darwin (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9lm",
            "EntityName": "The autobiography of Charles Darwin, 1809-1882"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vd9lx",
            "EntityName": "The Autobiography of Charles Darwin, and selected letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vdbgc",
            "EntityName": "The Autobiography of Charles Darwin [EasyRead Comfort Edition]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vdbgy",
            "EntityName": "The Autobiography of Charles Darwin [EasyRead Large Edition]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb60",
            "EntityName": "The descent of man, and selection in relation to sex."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb6b",
            "EntityName": "The descent of man and selection in relation to sex."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb6t",
            "EntityName": "The descent of man, and selection in relation to sex."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgb78",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgch9",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgcjf",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgcjz",
            "EntityName": "The Descent of Man and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgd8k",
            "EntityName": "Descent of Man and Selection in Relation to Sex (Barnes & Noble Library of Essential Reading)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgd8v",
            "EntityName": "The Descent Of Man And Selection In Relation To Sex (Kessinger Publishing's Rare Reprints)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_s2",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_sd",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_tf",
            "EntityName": "The expression of the emotions in man and animals."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_tx",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_vn",
            "EntityName": "The Expression Of The Emotions In Man And Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_vy",
            "EntityName": "The Expression of the Emotions in Man And Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_w6",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_wr",
            "EntityName": "The Expression of the Emotions in Man And Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl14g",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl14r",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl150",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl15k",
            "EntityName": "The Expression of the Emotions in Man and Animals (Large Print Edition): The Expression of the Emotions in Man and Animals (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl15v",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl16d",
            "EntityName": "The expression of the emotions in man and animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrf1",
            "EntityName": "From So Simple a Beginning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrq6",
            "EntityName": "Voyage Of The Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrqg",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrqq",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrqz",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrr7",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrsd",
            "EntityName": "The Correspondence of Charles Darwin, Volume 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrsp",
            "EntityName": "The Correspondence of Charles Darwin, Volume 11"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrsz",
            "EntityName": "The Correspondence of Charles Darwin, Volume 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrt7",
            "EntityName": "The Correspondence of Charles Darwin, Volume 9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrtj",
            "EntityName": "The Correspondence of Charles Darwin, Volume 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrtt",
            "EntityName": "The Correspondence of Charles Darwin, Volume 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrv3",
            "EntityName": "The Correspondence of Charles Darwin, Volume 14"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrvd",
            "EntityName": "The Correspondence of Charles Darwin, Volume 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrvz",
            "EntityName": "The Correspondence of Charles Darwin, Volume 15"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrw8",
            "EntityName": "The Correspondence of Charles Darwin, Volume 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrrwl",
            "EntityName": "The Correspondence of Charles Darwin, Volume 12"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrry5",
            "EntityName": "The Correspondence of Charles Darwin, Volume 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrryj",
            "EntityName": "The Correspondence of Charles Darwin, Volume 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrryw",
            "EntityName": "The Correspondence of Charles Darwin, Volume 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrs1h",
            "EntityName": "The structure and distribution of coral reefs."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrs2v",
            "EntityName": "The structure and distribution of coral reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrs3k",
            "EntityName": "The Structure And Distribution of Coral Reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrsm9",
            "EntityName": "Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrsmk",
            "EntityName": "The voyage of the Beagle."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_0",
            "EntityName": "The Voyage of the \\\"Beagle\\\" (Everyman's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_9",
            "EntityName": "The Voyage of the Beagle (Adventure Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_l",
            "EntityName": "The Voyage of the Beagle (Everyman Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrt_v",
            "EntityName": "Voyage of the Beagle (Dover Value Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrtzh",
            "EntityName": "The Voyage of the Beagle (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrtzs",
            "EntityName": "The Voyage of the Beagle (Mentor)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv03",
            "EntityName": "The Voyage of the Beagle (Great Minds Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv0d",
            "EntityName": "The Voyage of the Beagle (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv0p",
            "EntityName": "The Voyage of the Beagle (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrv0y",
            "EntityName": "Voyage of the Beagle (NG Adventure Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrvkv",
            "EntityName": "Voyage of the Beagle (Harvard Classics, Part 29)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrx_h",
            "EntityName": "The Voyage of the Beagle (Classics of World Literature) (Classics of World Literature)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bpx0q",
            "EntityName": "The Darwin Reader First Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bpx1m",
            "EntityName": "The Darwin Reader Second Edition"
          }
        ]
      },
      {
        "ParseId": "WebQTest-108.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n}\n",
        "PotentialTopicEntityMention": "charles darwin",
        "TopicEntityName": "Charles Darwin",
        "TopicEntityMid": "m.01lwx",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xryvm",
            "EntityName": "Book",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010rjsvs",
            "EntityName": "Charles Darwin's zoology notes & specimen lists from H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sfr1g",
            "EntityName": "Charles Darwin's letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qq45",
            "EntityName": "The Voyage of the Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l2z6",
            "EntityName": "The Descent of Man, and Selection in Relation to Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pzzmw",
            "EntityName": "The zoology of the voyage of H.M.S. Beagle during the years 1832-1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d86kx",
            "EntityName": "The Effects of Cross and Self Fertilisation in the Vegetable Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39p_",
            "EntityName": "On evolution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39qh",
            "EntityName": "A student's introduction to Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39qr",
            "EntityName": "The Structure and Distribution of Coral Reefs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39r_",
            "EntityName": "On Natural Selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39rr",
            "EntityName": "From so simple a beginning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t39s7",
            "EntityName": "Charles Darwin's natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bktj1",
            "EntityName": "The Different Forms of Flowers on Plants of the Same Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bpx28",
            "EntityName": "The Essential Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f3_5v",
            "EntityName": "Fertilisation of Orchids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f3187",
            "EntityName": "The Formation of Vegetable Mould through the Action of Worms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kdgws",
            "EntityName": "The Darwin Reader First Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kdgx0",
            "EntityName": "The Darwin Reader Second Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nhwt",
            "EntityName": "The Autobiography of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pskf",
            "EntityName": "The Expression of the Emotions in Man and Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067jgzq",
            "EntityName": "The principal works"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067q6ks",
            "EntityName": "ontstaan der soorten door natuurlijke teeltkeus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0682dh_",
            "EntityName": "More Letters of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0685fg8",
            "EntityName": "Der Ausdruck der Gem\u00fcthsbewegungen bei dem Menschen und den Thieren"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068kgmb",
            "EntityName": "Wu zhong qi yuan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068zv2w",
            "EntityName": "The collected papers of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0698p22",
            "EntityName": "Reise eines Naturforschers um die Welt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069gx8t",
            "EntityName": "Rejse om jorden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069j1zn",
            "EntityName": "Das Variiren der Thiere und Pflanzen im Zustande der Domestication"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069mjtn",
            "EntityName": "Leben und Briefe von Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bk806",
            "EntityName": "La facult\u00e9 motrice dans les plantes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06by4cp",
            "EntityName": "Darwin for Today"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c2mtr",
            "EntityName": "Die Bewegungen und Lebensweise der kletternden Pflanzen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c6q4x",
            "EntityName": "red notebook of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c9lwy",
            "EntityName": "Darwin en Patagonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cbh6d",
            "EntityName": "Die geschlechtliche Zuchtwahl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cjxqf",
            "EntityName": "Het uitdrukken van emoties bij mens en dier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cnkd2",
            "EntityName": "vari\u00eberen der huisdieren en cultuurplanten"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cvnt5",
            "EntityName": "To the members of the Down Friendly Club"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06czk9t",
            "EntityName": "Letters from C. Darwin, Esq., to A. Hancock, Esq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dgzf9",
            "EntityName": "Cartas de Darwin 18251859"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dhg29",
            "EntityName": "Darwin and Henslow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dhg2k",
            "EntityName": "Darwin's notebooks on transmutation of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dp_0n",
            "EntityName": "El Origin De Las Especies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dplrp",
            "EntityName": "A Darwin Selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dv5j2",
            "EntityName": "Vospominanii\ufe20a\ufe21 o razvitii moego uma i kharaktera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f6v8g",
            "EntityName": "Voyage d'un naturaliste autour du monde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fdzsg",
            "EntityName": "The\u0301orie de l'e\u0301volution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fkngp",
            "EntityName": "Notebooks on transmutation of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fp6__",
            "EntityName": "Darwin on humus and the earthworm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fz4ys",
            "EntityName": "Opsht\u0323amung fun menshen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06g77fm",
            "EntityName": "\u00dcber den Bau und die Verbreitung der Corallen-Riffe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ggf11",
            "EntityName": "Darwin Compendium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gx9nb",
            "EntityName": "The geology of the voyage of H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gxb0v",
            "EntityName": "Gesammelte kleinere Schriften"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06h4s28",
            "EntityName": "The portable Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06h96f4",
            "EntityName": "H.M.S. Beagle in South America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hggft",
            "EntityName": "Diario del Viaje de Un Naturalista Alrededor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hks6x",
            "EntityName": "Reise um die Welt 1831 - 36"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hv624",
            "EntityName": "Viaje de Un Naturalista Alrededor del Mundo 2 Vol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hxnc2",
            "EntityName": "Die fundamente zur entstehung der arten"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hz4px",
            "EntityName": "Metaphysics, Materialism, & the evolution of mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j18wj",
            "EntityName": "\u00dcber die Wege der Hummel-M\u00e4nnchen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j8lmr",
            "EntityName": "The education of Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jbq8m",
            "EntityName": "monograph on the sub-class Cirripedia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jc2s7",
            "EntityName": "The Orgin of Species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jcl9b",
            "EntityName": "Questions about the breeding of animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jj8zx",
            "EntityName": "Kleinere geologische Abhandlungen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jw00r",
            "EntityName": "Darwin Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jygl6",
            "EntityName": "Les mouvements et les habitudes des plantes grimpantes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06k4hmf",
            "EntityName": "Les r\u00e9cifs de corail, leur structure et leur distribution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06k7t44",
            "EntityName": "Die Entstehung der Arten durch nat\u00fcrliche Zuchtwahl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06km_gd",
            "EntityName": "Del Plata a Tierra del Fuego"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kmynd",
            "EntityName": "Darwinism stated by Darwin himself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l7w7c",
            "EntityName": "Human nature, Darwin's view"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lcpyv",
            "EntityName": "The action of carbonate of ammonia on the roots of certain plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m68vy",
            "EntityName": "Darwin-Wallace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mc3j5",
            "EntityName": "Die Wirkungen der Kreuz- und Selbst-Befruchtung im Pflanzenreich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mmypb",
            "EntityName": "From Darwin's unpublished notebooks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06msmgd",
            "EntityName": "Beagle letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mwj8z",
            "EntityName": "The living thoughts of Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mx6qb",
            "EntityName": "Notes on the fertilization of orchids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n4jwv",
            "EntityName": "Volcanic Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n65g8",
            "EntityName": "Darwin's journal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n8gzr",
            "EntityName": "Memorias y epistolario i\u0301ntimo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n8zlx",
            "EntityName": "On the tendency of species to form varieties"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ndlh7",
            "EntityName": "Darwin's Ornithological notes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nhv9s",
            "EntityName": "Proiskhozhdenie vidov"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nxw56",
            "EntityName": "The Power of Movement in Plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06p4t1s",
            "EntityName": "Seul celui qui change reste fid\u00e8le \u00e0 lui-m\u00eame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pw5vt",
            "EntityName": "Les moyens d'expression chez les animaux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06px17_",
            "EntityName": "Part I: Contributions to the Theory of Natural Selection / Part II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q9dnn",
            "EntityName": "Resa kring jorden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qr9xq",
            "EntityName": "Tesakneri tsagume\u030c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qs0k_",
            "EntityName": "La vie et la correspondance de Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qxf6m",
            "EntityName": "Evolution by natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06r08pz",
            "EntityName": "Motsa ha-minim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06r9mwf",
            "EntityName": "La descendance de l'homme et la s\u00a9\u00d8election sexuelle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rg6nf",
            "EntityName": "Un m\u00e9moire in\u00e9dit de Charles Darwin sur l'instinct"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sh5th",
            "EntityName": "Die verschiedenen Bl\u00fctenformen an Pflanzen der n\u00e4mlichen Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06syjt2",
            "EntityName": "Darwin's insects"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tjzfj",
            "EntityName": "Diary of the voyage of H.M.S. Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tz8bh",
            "EntityName": "genese\u014ds t\u014dn eid\u014dn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kbf6f",
            "EntityName": "Insectivorous Plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kd9wf",
            "EntityName": "The Variation of Animals and Plants under Domestication"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdm2",
            "EntityName": "Charles Darwin, 1809-1882--Anton Dohrn, 1840-1909"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdm8",
            "EntityName": "On a remarkable bar of sandstone off Pernambuco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdmk",
            "EntityName": "The voyage of Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdmn",
            "EntityName": "Works"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqynz",
            "EntityName": "Geological observations on the volcanic islands and parts of South America visited during the voyage of H.M.S. 'Beagle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyp6",
            "EntityName": "Journal of researches into the natural history and geology of the countries visited during the voyage round the world of the H. M. S. 'Beagle' under the command of Captain Fitz Roy, R. N"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1lr",
            "EntityName": "Charles Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1ly",
            "EntityName": "Charles Darwin on the routes of male humble bees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1m3",
            "EntityName": "Charles Darwin's marginalia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1m6",
            "EntityName": "Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1mh",
            "EntityName": "Evolution"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1ml",
            "EntityName": "Evolution and natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1ms",
            "EntityName": "The foundations of the Origin of species"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1mz",
            "EntityName": "Monographs of the fossil Lepadidae and the fossil Balanidae"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1n1",
            "EntityName": "On the origin of species by means of natural selection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1nb",
            "EntityName": "Origins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc54s",
            "EntityName": "The Life of Erasmus Darwin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_3d1b",
            "EntityName": "The Correspondence of Charles Darwin, Volume 1: 1821-1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_472q",
            "EntityName": "The Correspondence of Charles Darwin, Volume 2: 1837-1843"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0bz0f",
            "EntityName": "The Correspondence of Charles Darwin, Volume 3: 1844-1846"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0c_dr",
            "EntityName": "The Correspondence of Charles Darwin, Volume 8: 1860"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0c2xv",
            "EntityName": "The Correspondence of Charles Darwin, Volume 4: 1847-1850"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0c7c3",
            "EntityName": "The Correspondence of Charles Darwin, Volume 5: 1851-1855"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0ccfx",
            "EntityName": "The Correspondence of Charles Darwin, Volume 6: 1856-1857"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0cnxy",
            "EntityName": "The Correspondence of Charles Darwin, Volume 7: 1858-1859"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0dh7c",
            "EntityName": "The Correspondence of Charles Darwin, Volume 9: 1861"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0dvyt",
            "EntityName": "The Correspondence of Charles Darwin, Volume 10: 1862"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0fhpx",
            "EntityName": "The Correspondence of Charles Darwin, Volume 11: 1863"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0fsbb",
            "EntityName": "The Correspondence of Charles Darwin, Volume 12: 1864"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0g5py",
            "EntityName": "The Correspondence of Charles Darwin, Volume 13: 1865"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0gnbh",
            "EntityName": "The Correspondence of Charles Darwin, Volume 14: 1866"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0hdk1",
            "EntityName": "The Correspondence of Charles Darwin, Volume 15: 1867"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0jl1d",
            "EntityName": "The Correspondence of Charles Darwin, Volume 18: 1870"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0jl1p",
            "EntityName": "The Correspondence of Charles Darwin, Volume 17: 1869"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0jl1z",
            "EntityName": "The Correspondence of Charles Darwin, Volume 16: 1868"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhv3fy",
            "EntityName": "On the Movements and Habits of Climbing Plants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kfsvj7",
            "EntityName": "Geological Observations on South America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01lwx": "Charles Darwin"
    },
    "qid_topic_entity": {
      "Q1035": "Charles Darwin"
    },
    "index": 132
  },
  {
    "QuestionId": "WebQTest-1434",
    "RawQuestion": "who is in the american league in baseball?",
    "ProcessedQuestion": "who is in the american league in baseball",
    "Parses": [
      {
        "ParseId": "WebQTest-1434.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h8b0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h8b0 ns:baseball.baseball_league.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "american league",
        "TopicEntityName": "American League",
        "TopicEntityMid": "m.0h8b0",
        "InferentialChain": [
          "baseball.baseball_league.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d5z",
            "EntityName": "Boston Red Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d6g",
            "EntityName": "Baltimore Orioles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01slc",
            "EntityName": "Chicago White Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yhm",
            "EntityName": "Cleveland Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d02",
            "EntityName": "Detroit Tigers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m1n",
            "EntityName": "Houston Astros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049n7",
            "EntityName": "Kansas City Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wmvz",
            "EntityName": "Los Angeles Angels of Anaheim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0512p",
            "EntityName": "Minnesota Twins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lkwhs",
            "EntityName": "Washington Senators"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ll0s1",
            "EntityName": "Washington Senators"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m_8",
            "EntityName": "Oakland Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nlyxv",
            "EntityName": "Philadelphia Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.062s316",
            "EntityName": "Tampa Bay Devil Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wpc",
            "EntityName": "Seattle Mariners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l4z",
            "EntityName": "Toronto Blue Jays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8f",
            "EntityName": "Tampa Bay Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8x",
            "EntityName": "Texas Rangers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqt41",
            "EntityName": "New York Yankees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq2vj2",
            "EntityName": "Seattle Pilots"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1434.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h8b0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h8b0 ns:sports.sports_league.teams ?y .\n?y ns:sports.sports_league_participation.team ?x .\n}\n",
        "PotentialTopicEntityMention": "american league",
        "TopicEntityName": "American League",
        "TopicEntityMid": "m.0h8b0",
        "InferentialChain": [
          "sports.sports_league.teams",
          "sports.sports_league_participation.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d5z",
            "EntityName": "Boston Red Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d6g",
            "EntityName": "Baltimore Orioles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01slc",
            "EntityName": "Chicago White Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yhm",
            "EntityName": "Cleveland Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d02",
            "EntityName": "Detroit Tigers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042v_h4",
            "EntityName": "St. Louis Browns"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049n7",
            "EntityName": "Kansas City Royals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wmvz",
            "EntityName": "Los Angeles Angels of Anaheim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0512p",
            "EntityName": "Minnesota Twins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051vz",
            "EntityName": "Milwaukee Brewers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c8tcn",
            "EntityName": "New York Highlanders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmk3z",
            "EntityName": "Chicago White Stockings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmkc5",
            "EntityName": "Cleveland Naps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmkd0",
            "EntityName": "Kansas City Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmnv1",
            "EntityName": "California Angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kmp0g",
            "EntityName": "Anaheim Angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lkwhs",
            "EntityName": "Washington Senators"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m_8",
            "EntityName": "Oakland Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05n6l3_",
            "EntityName": "Milwaukee Brewers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05n6ll4",
            "EntityName": "Baltimore Orioles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wpc",
            "EntityName": "Seattle Mariners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l4z",
            "EntityName": "Toronto Blue Jays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8f",
            "EntityName": "Tampa Bay Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8x",
            "EntityName": "Texas Rangers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqt41",
            "EntityName": "New York Yankees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq2vj2",
            "EntityName": "Seattle Pilots"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h8b0": "American League"
    },
    "qid_topic_entity": {
      "Q465469": "American League"
    },
    "index": 133
  },
  {
    "QuestionId": "WebQTest-1875",
    "RawQuestion": "what type of political system is brazil?",
    "ProcessedQuestion": "what type of political system is brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1875.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 134
  },
  {
    "QuestionId": "WebQTest-1670",
    "RawQuestion": "who is tatyana ali parents?",
    "ProcessedQuestion": "who is tatyana ali parents",
    "Parses": [
      {
        "ParseId": "WebQTest-1670.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01knh9l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01knh9l ns:people.person.parents ?x .\n}\n",
        "PotentialTopicEntityMention": "tatyana ali",
        "TopicEntityName": "Tatyana Ali",
        "TopicEntityMid": "m.01knh9l",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwnfyd",
            "EntityName": "Sheriff Ali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwnfyl",
            "EntityName": "Sonia Ali"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01knh9l": "Tatyana Ali"
    },
    "qid_topic_entity": {
      "Q240541": "Tatyana Ali"
    },
    "index": 135
  },
  {
    "QuestionId": "WebQTest-1853",
    "RawQuestion": "what made richard hammond famous?",
    "ProcessedQuestion": "what made richard hammond famous",
    "Parses": [
      {
        "ParseId": "WebQTest-1853.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02508x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02508x ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "richard hammond",
        "TopicEntityName": "Richard Hammond",
        "TopicEntityMid": "m.02508x",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015cjr",
            "EntityName": "Presenter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tkqy",
            "EntityName": "Stunt Performer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gjzk",
            "EntityName": "Television producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08z956",
            "EntityName": "Radio personality"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8qb",
            "EntityName": "Journalist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxtg",
            "EntityName": "Screenwriter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02508x": "Richard Hammond"
    },
    "qid_topic_entity": {
      "Q297265": "Richard Hammond"
    },
    "index": 136
  },
  {
    "QuestionId": "WebQTest-667",
    "RawQuestion": "what is the capital of republic of ireland?",
    "ProcessedQuestion": "what is the capital of republic of ireland",
    "Parses": [
      {
        "ParseId": "WebQTest-667.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rt9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rt9 ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "ireland",
        "TopicEntityName": "Republic of Ireland",
        "TopicEntityMid": "m.03rt9",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cft",
            "EntityName": "Dublin"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rt9": "Republic of Ireland"
    },
    "qid_topic_entity": {
      "Q27": "Republic of Ireland"
    },
    "index": 137
  },
  {
    "QuestionId": "WebQTest-1181",
    "RawQuestion": "what is the current time in kauai hawaii?",
    "ProcessedQuestion": "what is the current time in kauai hawaii",
    "Parses": [
      {
        "ParseId": "WebQTest-1181.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gh4 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.03gh4",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wxc ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaiian Islands",
        "TopicEntityMid": "m.014wxc",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbsn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbsn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "kauai",
        "TopicEntityName": "Kauai",
        "TopicEntityMid": "m.0jbsn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lmg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lmg4 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "kauai",
        "TopicEntityName": "Kauai County",
        "TopicEntityMid": "m.0lmg4",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1181.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hawaii",
        "TopicEntityName": "Hawaii",
        "TopicEntityMid": "m.0jbt3",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gh4": "Hawaii",
      "m.014wxc": "Hawaiian Islands",
      "m.0jbsn": "Kauai",
      "m.0lmg4": "Kauai County",
      "m.0jbt3": "Hawaii"
    },
    "qid_topic_entity": {
      "Q782": "Hawaii",
      "Q192626": "Hawaiian Islands",
      "Q201026": "Kauai",
      "Q111517": "Kauai County",
      "Q68740": "Hawaii"
    },
    "index": 138
  },
  {
    "QuestionId": "WebQTest-397",
    "RawQuestion": "what are the school colors for harvard university?",
    "ProcessedQuestion": "what are the school colors for harvard university",
    "Parses": [
      {
        "ParseId": "WebQTest-397.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ksy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ksy ns:education.educational_institution.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "harvard university",
        "TopicEntityName": "Harvard University",
        "TopicEntityMid": "m.03ksy",
        "InferentialChain": [
          "education.educational_institution.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jnf1",
            "EntityName": "Crimson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ksy": "Harvard University"
    },
    "qid_topic_entity": {
      "Q13371": "Harvard University"
    },
    "index": 139
  },
  {
    "QuestionId": "WebQTest-60",
    "RawQuestion": "where did eleanor roosevelt die?",
    "ProcessedQuestion": "where did eleanor roosevelt die",
    "Parses": [
      {
        "ParseId": "WebQTest-60.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02n9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02n9k ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "eleanor roosevelt",
        "TopicEntityName": "Eleanor Roosevelt",
        "TopicEntityMid": "m.02n9k",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc56",
            "EntityName": "Manhattan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02n9k": "Eleanor Roosevelt"
    },
    "qid_topic_entity": {
      "Q83396": "Eleanor Roosevelt"
    },
    "index": 140
  },
  {
    "QuestionId": "WebQTest-284",
    "RawQuestion": "where did the latin language originate from?",
    "ProcessedQuestion": "where did the latin language originate from",
    "Parses": [
      {
        "ParseId": "WebQTest-284.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04h9h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04h9h ns:language.human_language.language_family ?x .\n}\n",
        "PotentialTopicEntityMention": "latin",
        "TopicEntityName": "Latin Language",
        "TopicEntityMid": "m.04h9h",
        "InferentialChain": [
          "language.human_language.language_family"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t28",
            "EntityName": "Italic languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v09",
            "EntityName": "Indo-European languages"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04h9h": "Latin Language"
    },
    "qid_topic_entity": {
      "Q397": "Latin Language"
    },
    "index": 141
  },
  {
    "QuestionId": "WebQTest-481",
    "RawQuestion": "what kind of money do they use in germany?",
    "ProcessedQuestion": "what kind of money do they use in germany",
    "Parses": [
      {
        "ParseId": "WebQTest-481.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 142
  },
  {
    "QuestionId": "WebQTest-1972",
    "RawQuestion": "where did john franklin live?",
    "ProcessedQuestion": "where did john franklin live",
    "Parses": [
      {
        "ParseId": "WebQTest-1972.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hw0m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hw0m ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "john franklin",
        "TopicEntityName": "John Franklin",
        "TopicEntityMid": "m.06hw0m",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0s4jk",
            "EntityName": "Blue Island"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06hw0m": "John Franklin"
    },
    "qid_topic_entity": {
      "Q1647693": "John Franklin"
    },
    "index": 143
  },
  {
    "QuestionId": "WebQTest-1350",
    "RawQuestion": "what did jesse owens won?",
    "ProcessedQuestion": "what did jesse owens won",
    "Parses": [
      {
        "ParseId": "WebQTest-1350.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cmr3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cmr3 ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "PotentialTopicEntityMention": "jesse owens",
        "TopicEntityName": "Jesse Owens",
        "TopicEntityMid": "m.0cmr3",
        "InferentialChain": [
          "award.award_winner.awards_won",
          "award.award_honor.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04kc5dv",
            "EntityName": "Associated Press Male Athlete of the Year"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cmr3": "Jesse Owens"
    },
    "qid_topic_entity": {
      "Q52651": "Jesse Owens"
    },
    "index": 144
  },
  {
    "QuestionId": "WebQTest-1656",
    "RawQuestion": "what are some of leonardo da vinci most famous inventions?",
    "ProcessedQuestion": "what are some of leonardo da vinci most famous inventions",
    "Parses": [
      {
        "ParseId": "WebQTest-1656.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rm",
            "EntityName": "Anemometer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w6mc",
            "EntityName": "Diving suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x3y7",
            "EntityName": "Ornithopter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05my_3",
            "EntityName": "Viola organista"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0796wt",
            "EntityName": "Double hull"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cyfs",
            "EntityName": "Parachute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11gwh",
            "EntityName": "Triple Barrel Canon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11h15",
            "EntityName": "33-Barreled Organ"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11hbh",
            "EntityName": "Aerial Screw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y8r",
            "EntityName": "Armored car"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 145
  },
  {
    "QuestionId": "WebQTest-1771",
    "RawQuestion": "what is the islamic belief?",
    "ProcessedQuestion": "what is the islamic belief",
    "Parses": [
      {
        "ParseId": "WebQTest-1771.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.beliefs ?x .\n}\n",
        "PotentialTopicEntityMention": "islamic",
        "TopicEntityName": "Islam",
        "TopicEntityMid": "m.0flw86",
        "InferentialChain": [
          "religion.religion.beliefs"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019vqj",
            "EntityName": "Mahdi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bbmp",
            "EntityName": "Tawhid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024b22",
            "EntityName": "Prophets in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025w817",
            "EntityName": "Predestination in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wvcg4",
            "EntityName": "Entering Heaven alive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xy3",
            "EntityName": "Monotheism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0698fs",
            "EntityName": "Islamic view of angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rvp0",
            "EntityName": "Qiyamah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074hw",
            "EntityName": "Sharia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bfrc",
            "EntityName": "Masih ad-Dajjal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07r6vw",
            "EntityName": "Islamic holy books"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09kb_2",
            "EntityName": "God in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hr6vbp",
            "EntityName": "\u1e6c\u016bb\u0101"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0flw86": "Islam"
    },
    "qid_topic_entity": {
      "Q432": "Islam"
    },
    "index": 146
  },
  {
    "QuestionId": "WebQTest-1569",
    "RawQuestion": "what jamaican money called?",
    "ProcessedQuestion": "what jamaican money called",
    "Parses": [
      {
        "ParseId": "WebQTest-1569.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "jamaican",
        "TopicEntityName": "Jamaica",
        "TopicEntityMid": "m.03_r3",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xc2m",
            "EntityName": "Jamaican dollar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_r3": "Jamaica"
    },
    "qid_topic_entity": {
      "Q766": "Jamaica"
    },
    "index": 147
  },
  {
    "QuestionId": "WebQTest-1132",
    "RawQuestion": "what did coretta scott king died from?",
    "ProcessedQuestion": "what did coretta scott king died from",
    "Parses": [
      {
        "ParseId": "WebQTest-1132.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0289jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0289jv ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "coretta scott king",
        "TopicEntityName": "Coretta Scott King",
        "TopicEntityMid": "m.0289jv",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019dmc",
            "EntityName": "Respiratory failure"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0289jv": "Coretta Scott King"
    },
    "qid_topic_entity": {
      "Q230969": "Coretta Scott King"
    },
    "index": 148
  },
  {
    "QuestionId": "WebQTest-823",
    "RawQuestion": "what does bolivia border?",
    "ProcessedQuestion": "what does bolivia border",
    "Parses": [
      {
        "ParseId": "WebQTest-823.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0165v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0165v ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n}\n",
        "PotentialTopicEntityMention": "bolivia",
        "TopicEntityName": "Bolivia",
        "TopicEntityMid": "m.0165v",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015fr",
            "EntityName": "Brazil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wzw",
            "EntityName": "Peru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1v",
            "EntityName": "Chile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v10",
            "EntityName": "Paraguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jgd",
            "EntityName": "Argentina"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0165v": "Bolivia"
    },
    "qid_topic_entity": {
      "Q750": "Bolivia"
    },
    "index": 149
  },
  {
    "QuestionId": "WebQTest-1282",
    "RawQuestion": "under what political system does the united states government operate?",
    "ProcessedQuestion": "under what political system does the united states government operate",
    "Parses": [
      {
        "ParseId": "WebQTest-1282.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "united states government",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 150
  },
  {
    "QuestionId": "WebQTest-564",
    "RawQuestion": "what is arkansas state capitol?",
    "ProcessedQuestion": "what is arkansas state capitol",
    "Parses": [
      {
        "ParseId": "WebQTest-564.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05yzfg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05yzfg ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "arkansas state capitol",
        "TopicEntityName": "Arkansas State Capitol",
        "TopicEntityMid": "m.05yzfg",
        "InferentialChain": [
          "location.location.street_address",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftvg",
            "EntityName": "Little Rock"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05yzfg": "Arkansas State Capitol"
    },
    "qid_topic_entity": {
      "Q673076": "Arkansas State Capitol"
    },
    "index": 151
  },
  {
    "QuestionId": "WebQTest-534",
    "RawQuestion": "what is the milwaukee brewers mascot?",
    "ProcessedQuestion": "what is the milwaukee brewers mascot",
    "Parses": [
      {
        "ParseId": "WebQTest-534.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051vz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051vz ns:sports.sports_team.team_mascot ?x .\n}\n",
        "PotentialTopicEntityMention": "milwaukee brewers",
        "TopicEntityName": "Milwaukee Brewers",
        "TopicEntityMid": "m.051vz",
        "InferentialChain": [
          "sports.sports_team.team_mascot"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0100sszz",
            "EntityName": "Hank"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049kl_",
            "EntityName": "Bernie Brewer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0blvgb",
            "EntityName": "Bonnie Brewer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051vz": "Milwaukee Brewers"
    },
    "qid_topic_entity": {
      "Q848103": "Milwaukee Brewers"
    },
    "index": 152
  },
  {
    "QuestionId": "WebQTest-873",
    "RawQuestion": "where does toronto get its water from?",
    "ProcessedQuestion": "where does toronto get its water from",
    "Parses": [
      {
        "ParseId": "WebQTest-873.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:base.infrastructure.infrastructural_municipality.sewage_treatment_plant ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "base.infrastructure.infrastructural_municipality.sewage_treatment_plant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vnl7x",
            "EntityName": "Ashbridges Bay Wastewater Treatment Plant"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 153
  },
  {
    "QuestionId": "WebQTest-918",
    "RawQuestion": "who is the king of cambodia now?",
    "ProcessedQuestion": "who is the king of cambodia now",
    "Parses": [
      {
        "ParseId": "WebQTest-918.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xbgx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xbgx ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.03w9bnr .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "cambodia",
        "TopicEntityName": "Cambodia",
        "TopicEntityMid": "m.01xbgx",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03w9bnr",
            "EntityName": "King",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "now"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0418zp",
            "EntityName": "Norodom Sihamoni"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01xbgx": "Cambodia"
    },
    "qid_topic_entity": {
      "Q424": "Cambodia"
    },
    "index": 154
  },
  {
    "QuestionId": "WebQTest-531",
    "RawQuestion": "what style of music does michael jackson perform?",
    "ProcessedQuestion": "what style of music does michael jackson perform",
    "Parses": [
      {
        "ParseId": "WebQTest-531.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jackson",
        "TopicEntityName": "Michael Jackson",
        "TopicEntityMid": "m.09889g",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021_z5",
            "EntityName": "New jack swing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025sc50",
            "EntityName": "Contemporary R&B"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026z9",
            "EntityName": "Disco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bqnt",
            "EntityName": "Motown Sound"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lkt",
            "EntityName": "Electronic music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lnbg",
            "EntityName": "Dance-pop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vjzr",
            "EntityName": "Adult contemporary music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x8m",
            "EntityName": "Funk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c34yl",
            "EntityName": "Post-disco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bt6j",
            "EntityName": "Pop rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064t9",
            "EntityName": "Pop music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06by7",
            "EntityName": "Rock music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j6l",
            "EntityName": "Rhythm and blues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggx5q",
            "EntityName": "Dance music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gywn",
            "EntityName": "Soul music"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09889g": "Michael Jackson"
    },
    "qid_topic_entity": {
      "Q2831": "Michael Jackson"
    },
    "index": 155
  },
  {
    "QuestionId": "WebQTest-1323",
    "RawQuestion": "what to visit in atlanta?",
    "ProcessedQuestion": "what to visit in atlanta",
    "Parses": [
      {
        "ParseId": "WebQTest-1323.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013yq ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "atlanta",
        "TopicEntityName": "Atlanta",
        "TopicEntityMid": "m.013yq",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0130ft",
            "EntityName": "Atlanta Symphony Orchestra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020fp1",
            "EntityName": "Turner Field"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r6hr",
            "EntityName": "Cobb Energy Performing Arts Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027t71h",
            "EntityName": "Four Seasons Hotel Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029fnx",
            "EntityName": "Underground Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jnft",
            "EntityName": "Atlanta Marriott Marquis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wl1b",
            "EntityName": "Georgia World Congress Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xmrp",
            "EntityName": "The Tabernacle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030pkm",
            "EntityName": "Peachtree Road Race"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033h7k",
            "EntityName": "Georgia Aquarium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038bv6",
            "EntityName": "Georgia Dome"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038gvs",
            "EntityName": "Philips Arena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039xmp",
            "EntityName": "Omni Coliseum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cspcp",
            "EntityName": "Hyatt Regency Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03l1zc",
            "EntityName": "Centennial Olympic Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03q1hw",
            "EntityName": "Zoo Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sm22",
            "EntityName": "Six Flags Over Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spbl",
            "EntityName": "Six Flags White Water"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wm34",
            "EntityName": "Atlanta Cyclorama & Civil War Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xrf5",
            "EntityName": "Georgia State Capitol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_mbv",
            "EntityName": "World of Coca-Cola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d135",
            "EntityName": "CNN Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04htb5",
            "EntityName": "Fernbank Science Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jny9",
            "EntityName": "Fernbank Museum of Natural History"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qrhq",
            "EntityName": "Fox Theatre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050m_5",
            "EntityName": "Woodruff Arts Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050mtz",
            "EntityName": "Margaret Mitchell House & Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050my1",
            "EntityName": "Martin Luther King, Jr. National Historic Site"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050n0y",
            "EntityName": "Atlanta History Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c25f2",
            "EntityName": "Variety Playhouse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bxs4",
            "EntityName": "Jimmy Carter Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5g4p",
            "EntityName": "Masquerade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3cp2",
            "EntityName": "Arbor Place Mall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpmfg",
            "EntityName": "Atlanta Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gln9p",
            "EntityName": "Center for Puppetry Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j28sdt",
            "EntityName": "Atlanta Jewish Film Festival"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013yq": "Atlanta"
    },
    "qid_topic_entity": {
      "Q23556": "Atlanta"
    },
    "index": 156
  },
  {
    "QuestionId": "WebQTest-1623",
    "RawQuestion": "what is the most common language spoken in argentina?",
    "ProcessedQuestion": "what is the most common language spoken in argentina",
    "Parses": [
      {
        "ParseId": "WebQTest-1623.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 157
  },
  {
    "QuestionId": "WebQTest-1088",
    "RawQuestion": "who originally voiced meg on family guy?",
    "ProcessedQuestion": "who originally voiced meg on family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-1088.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.035szd .\n?y ns:tv.regular_tv_appearance.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "family guy",
        "TopicEntityName": "Family Guy",
        "TopicEntityMid": "m.019nnl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.035szd",
            "EntityName": "Meg Griffin",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "tv.regular_tv_appearance.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k4b2",
            "EntityName": "Lacey Chabert"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019nnl": "Family Guy"
    },
    "qid_topic_entity": {
      "Q5930": "Family Guy"
    },
    "index": 158
  },
  {
    "QuestionId": "WebQTest-401",
    "RawQuestion": "who plays edward scissorhands?",
    "ProcessedQuestion": "who plays edward scissorhands",
    "Parses": [
      {
        "ParseId": "WebQTest-401.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s3vk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s3vk ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gmm518 .\n}\n",
        "PotentialTopicEntityMention": "edward scissorhands",
        "TopicEntityName": "Edward Scissorhands",
        "TopicEntityMid": "m.01s3vk",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0gmm518",
            "EntityName": "Edward Scissorhands",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jfx1",
            "EntityName": "Johnny Depp"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01s3vk": "Edward Scissorhands"
    },
    "qid_topic_entity": {
      "Q217182": "Edward Scissorhands"
    },
    "index": 159
  },
  {
    "QuestionId": "WebQTest-304",
    "RawQuestion": "what is jamie oliver children names?",
    "ProcessedQuestion": "what is jamie oliver children names",
    "Parses": [
      {
        "ParseId": "WebQTest-304.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01myph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01myph ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "jamie oliver",
        "TopicEntityName": "Jamie Oliver",
        "TopicEntityMid": "m.01myph",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7m2p0",
            "EntityName": "Petal Blossom Rainbow Oliver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7m2p7",
            "EntityName": "Daisy Boo Pamela Oliver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7m2pg",
            "EntityName": "Poppy Honey Rosie Oliver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyd_td",
            "EntityName": "Buddy Bear Maurice Oliver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01myph": "Jamie Oliver"
    },
    "qid_topic_entity": {
      "Q190051": "Jamie Oliver"
    },
    "index": 160
  },
  {
    "QuestionId": "WebQTest-276",
    "RawQuestion": "where was mission san rafael located?",
    "ProcessedQuestion": "where was mission san rafael located",
    "Parses": [
      {
        "ParseId": "WebQTest-276.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gbyx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gbyx ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mission san rafael",
        "TopicEntityName": "Mission San Rafael Arc\u00e1ngel",
        "TopicEntityMid": "m.0gbyx",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zmfk0",
            "EntityName": "94901"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2hf",
            "EntityName": "Marin County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gbyx": "Mission San Rafael Arc\u00e1ngel"
    },
    "qid_topic_entity": {
      "Q728990": "Mission San Rafael Arc\u00e1ngel"
    },
    "index": 161
  },
  {
    "QuestionId": "WebQTest-1239",
    "RawQuestion": "what is the zip code for concord?",
    "ProcessedQuestion": "what is the zip code for concord",
    "Parses": [
      {
        "ParseId": "WebQTest-1239.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qymv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qymv ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "concord",
        "TopicEntityName": "Concord",
        "TopicEntityMid": "m.0qymv",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcvrz",
            "EntityName": "94520"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcvv5",
            "EntityName": "94521"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcw0h",
            "EntityName": "94519"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcwkm",
            "EntityName": "94518"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_n_",
            "EntityName": "94529"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_pf",
            "EntityName": "94527"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_pn",
            "EntityName": "94524"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07np_pw",
            "EntityName": "94522"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0qymv": "Concord"
    },
    "qid_topic_entity": {
      "Q490441": "Concord"
    },
    "index": 162
  },
  {
    "QuestionId": "WebQTest-1495",
    "RawQuestion": "where does airtran airways fly?",
    "ProcessedQuestion": "where does airtran airways fly",
    "Parses": [
      {
        "ParseId": "WebQTest-1495.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? airport served?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vk4t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vk4t ns:aviation.airline.airports_served ?y .\n?y ns:aviation.airline_airport_presence.airport ?x .\n}\n",
        "PotentialTopicEntityMention": "airtran airways",
        "TopicEntityName": "AirTran Airways",
        "TopicEntityMid": "m.01vk4t",
        "InferentialChain": [
          "aviation.airline.airports_served",
          "aviation.airline_airport_presence.airport"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01f07x",
            "EntityName": "Logan International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kyln",
            "EntityName": "LaGuardia Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mz5z",
            "EntityName": "Philadelphia International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n2vy",
            "EntityName": "Denver International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nhvq",
            "EntityName": "Raleigh\u2013Durham International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cy71",
            "EntityName": "Baltimore\u2013Washington International Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vk4t": "AirTran Airways"
    },
    "qid_topic_entity": {
      "Q406695": "AirTran Airways"
    },
    "index": 163
  },
  {
    "QuestionId": "WebQTest-1080",
    "RawQuestion": "where did abraham and his descendants live?",
    "ProcessedQuestion": "where did abraham and his descendants live",
    "Parses": [
      {
        "ParseId": "WebQTest-1080.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "abraham",
        "TopicEntityName": "Abraham",
        "TopicEntityMid": "m.0pwb",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0524v",
            "EntityName": "Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9f2",
            "EntityName": "Canaan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pwb": "Abraham"
    },
    "qid_topic_entity": {
      "Q9181": "Abraham"
    },
    "index": 164
  },
  {
    "QuestionId": "WebQTest-655",
    "RawQuestion": "what is the zip code for wyoming michigan?",
    "ProcessedQuestion": "what is the zip code for wyoming michigan",
    "Parses": [
      {
        "ParseId": "WebQTest-655.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v9xs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v9xs ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "wyoming",
        "TopicEntityName": "Wyoming",
        "TopicEntityMid": "m.0v9xs",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_xtr9",
            "EntityName": "49509"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_xv47",
            "EntityName": "49519"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0v9xs": "Wyoming"
    },
    "qid_topic_entity": {
      "Q1022953": "Wyoming"
    },
    "index": 165
  },
  {
    "QuestionId": "WebQTest-344",
    "RawQuestion": "what county is west st paul in?",
    "ProcessedQuestion": "what county is west st paul in",
    "Parses": [
      {
        "ParseId": "WebQTest-344.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vz77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vz77 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "west st paul",
        "TopicEntityName": "West St. Paul",
        "TopicEntityMid": "m.0vz77",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhr5",
            "EntityName": "Dakota County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-344.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vz77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vz77 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "west st paul",
        "TopicEntityName": "West St. Paul",
        "TopicEntityMid": "m.0vz77",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhr5",
            "EntityName": "Dakota County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0vz77": "West St. Paul"
    },
    "qid_topic_entity": {
      "Q2036838": "West St. Paul"
    },
    "index": 166
  },
  {
    "QuestionId": "WebQTest-1502",
    "RawQuestion": "what city and state is yale located in?",
    "ProcessedQuestion": "what city and state is yale located in",
    "Parses": [
      {
        "ParseId": "WebQTest-1502.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08815)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08815 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "yale",
        "TopicEntityName": "University Yale",
        "TopicEntityMid": "m.08815",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2nf",
            "EntityName": "New Haven"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08815": "University Yale"
    },
    "qid_topic_entity": {
      "Q49112": "University Yale"
    },
    "index": 167
  },
  {
    "QuestionId": "WebQTest-686",
    "RawQuestion": "when the atlanta braves won the world series?",
    "ProcessedQuestion": "when the atlanta braves won the world series",
    "Parses": [
      {
        "ParseId": "WebQTest-686.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x2p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x2p ns:sports.sports_team.championships ?x .\n}\n",
        "PotentialTopicEntityMention": "atlanta braves",
        "TopicEntityName": "Atlanta Braves",
        "TopicEntityMid": "m.0x2p",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j712",
            "EntityName": "1995 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0x2p": "Atlanta Braves"
    },
    "qid_topic_entity": {
      "Q461595": "Atlanta Braves"
    },
    "index": 168
  },
  {
    "QuestionId": "WebQTest-380",
    "RawQuestion": "where is mount st helens volcano?",
    "ProcessedQuestion": "where is mount st helens volcano",
    "Parses": [
      {
        "ParseId": "WebQTest-380.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094xz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094xz ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mount st helens",
        "TopicEntityName": "Mount St. Helens",
        "TopicEntityMid": "m.094xz",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081yw",
            "EntityName": "Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3nk",
            "EntityName": "Cascade Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mly4",
            "EntityName": "Skamania County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.094xz": "Mount St. Helens"
    },
    "qid_topic_entity": {
      "Q4675": "Mount St. Helens"
    },
    "index": 169
  },
  {
    "QuestionId": "WebQTest-1201",
    "RawQuestion": "who played carlton lassiter on psych?",
    "ProcessedQuestion": "who played carlton lassiter on psych",
    "Parses": [
      {
        "ParseId": "WebQTest-1201.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ds5jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ds5jv ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0fdxxb .\n}\n",
        "PotentialTopicEntityMention": "psych",
        "TopicEntityName": "Psych",
        "TopicEntityMid": "m.0ds5jv",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fdxxb",
            "EntityName": "Carlton Lassiter",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8yw1",
            "EntityName": "Timothy Omundson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ds5jv": "Psych"
    },
    "qid_topic_entity": {
      "Q48758": "Psych"
    },
    "index": 170
  },
  {
    "QuestionId": "WebQTest-589",
    "RawQuestion": "what russian language called?",
    "ProcessedQuestion": "what russian language called",
    "Parses": [
      {
        "ParseId": "WebQTest-589.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? could mean alias of \"russian language\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "russian",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 171
  },
  {
    "QuestionId": "WebQTest-885",
    "RawQuestion": "who is sir james dyson?",
    "ProcessedQuestion": "who is sir james dyson",
    "Parses": [
      {
        "ParseId": "WebQTest-885.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0209vm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0209vm ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "sir james dyson",
        "TopicEntityName": "James Dyson",
        "TopicEntityMid": "m.0209vm",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c979",
            "EntityName": "Designer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgy6",
            "EntityName": "Industrial designer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sbb",
            "EntityName": "Inventor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09j9h",
            "EntityName": "Engineer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0209vm": "James Dyson"
    },
    "qid_topic_entity": {
      "Q1346101": "James Dyson"
    },
    "index": 172
  },
  {
    "QuestionId": "WebQTest-13",
    "RawQuestion": "who was vice president after kennedy died?",
    "ProcessedQuestion": "who was vice president after kennedy died",
    "Parses": [
      {
        "ParseId": "WebQTest-13.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? Assume VP succeeds P"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d3k14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d3k14 ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "kennedy",
        "TopicEntityName": "John F. Kennedy",
        "TopicEntityMid": "m.0d3k14",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f7fy",
            "EntityName": "Lyndon B. Johnson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d3k14": "John F. Kennedy"
    },
    "qid_topic_entity": {
      "Q9696": "John F. Kennedy"
    },
    "index": 173
  },
  {
    "QuestionId": "WebQTest-1091",
    "RawQuestion": "what type of religions are in the united states?",
    "ProcessedQuestion": "what type of religions are in the united states",
    "Parses": [
      {
        "ParseId": "WebQTest-1091.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lp8",
            "EntityName": "Christianity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_gx",
            "EntityName": "Judaism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03j6c",
            "EntityName": "Hinduism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w8f",
            "EntityName": "Unitarian Universalism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.092bf5",
            "EntityName": "Buddhism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kpl",
            "EntityName": "Atheism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 174
  },
  {
    "QuestionId": "WebQTest-239",
    "RawQuestion": "where do american bulldogs originate from?",
    "ProcessedQuestion": "where do american bulldogs originate from",
    "Parses": [
      {
        "ParseId": "WebQTest-239.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02z_05)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02z_05 ns:biology.animal_breed.place_of_origin ?x .\n}\n",
        "PotentialTopicEntityMention": "american bulldogs",
        "TopicEntityName": "American Bulldog",
        "TopicEntityMid": "m.02z_05",
        "InferentialChain": [
          "biology.animal_breed.place_of_origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02z_05": "American Bulldog"
    },
    "qid_topic_entity": {
      "Q37604": "American Bulldog"
    },
    "index": 175
  },
  {
    "QuestionId": "WebQTest-1200",
    "RawQuestion": "where did the mississippi river end?",
    "ProcessedQuestion": "where did the mississippi river end",
    "Parses": [
      {
        "ParseId": "WebQTest-1200.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04yf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04yf_ ns:geography.river.mouth ?x .\n}\n",
        "PotentialTopicEntityMention": "mississippi river",
        "TopicEntityName": "Mississippi River",
        "TopicEntityMid": "m.04yf_",
        "InferentialChain": [
          "geography.river.mouth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f_9",
            "EntityName": "Gulf of Mexico"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04yf_": "Mississippi River"
    },
    "qid_topic_entity": {
      "Q1497": "Mississippi River"
    },
    "index": 176
  },
  {
    "QuestionId": "WebQTest-1163",
    "RawQuestion": "what rainforest is in south america?",
    "ProcessedQuestion": "what rainforest is in south america",
    "Parses": [
      {
        "ParseId": "WebQTest-1163.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n3y ns:location.location.contains ?x .\n?x ns:geography.geographical_feature.category ns:m.02zr8 .\n}\n",
        "PotentialTopicEntityMention": "south america",
        "TopicEntityName": "South America",
        "TopicEntityMid": "m.06n3y",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zr8",
            "EntityName": "Forest",
            "SourceNodeIndex": 0,
            "NodePredicate": "geography.geographical_feature.category",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cx4p",
            "EntityName": "Amazon rainforest"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06n3y": "South America"
    },
    "qid_topic_entity": {
      "Q18": "South America"
    },
    "index": 177
  },
  {
    "QuestionId": "WebQTest-1194",
    "RawQuestion": "what club does cristiano ronaldo play for in 2010?",
    "ProcessedQuestion": "what club does cristiano ronaldo play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1194.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xt6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xt6q ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "cristiano ronaldo",
        "TopicEntityName": "Cristiano Ronaldo",
        "TopicEntityMid": "m.02xt6q",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rqxc",
            "EntityName": "Portugal national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l22",
            "EntityName": "Real Madrid C.F."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xt6q": "Cristiano Ronaldo"
    },
    "qid_topic_entity": {
      "Q11571": "Cristiano Ronaldo"
    },
    "index": 178
  },
  {
    "QuestionId": "WebQTest-908",
    "RawQuestion": "what awards gary paulsen won?",
    "ProcessedQuestion": "what awards gary paulsen won",
    "Parses": [
      {
        "ParseId": "WebQTest-908.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fpcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fpcx ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "PotentialTopicEntityMention": "gary paulsen",
        "TopicEntityName": "Gary Paulsen",
        "TopicEntityMid": "m.04fpcx",
        "InferentialChain": [
          "award.award_winner.awards_won",
          "award.award_honor.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cd7p",
            "EntityName": "John Newbery Medal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027x4ws",
            "EntityName": "Dorothy Canfield Fisher Children's Book Award"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0463dxd",
            "EntityName": "Margaret Edwards Award"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p1pmd",
            "EntityName": "Spur Award for Best Juvenile Fiction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p1pmh",
            "EntityName": "Spur Award for Best Juvenile Nonfiction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09kkqzd",
            "EntityName": "Anne V. Zarrow Award for Young Readers' Literature"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djddy",
            "EntityName": "Regina Medal"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04fpcx": "Gary Paulsen"
    },
    "qid_topic_entity": {
      "Q718463": "Gary Paulsen"
    },
    "index": 179
  },
  {
    "QuestionId": "WebQTest-1127",
    "RawQuestion": "which country in north america is divided into provinces?",
    "ProcessedQuestion": "which country in north america is divided into provinces",
    "Parses": [
      {
        "ParseId": "WebQTest-1127.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x \nWHERE {\n    ns:m.059g4 ns:location.location.contains ?x .  # North America\n    ?x ns:common.topic.notable_types ns:m.01mp . # Country\n    ?x ns:location.location.contains ?y .\n    ?y ns:common.topic.notable_types ?t . \n# All the possible \"province\" type\nFILTER ((?t = ns:m.01nm) ||\n(?t = ns:m.02_1y_9) ||\n(?t = ns:m.02_3ny_) ||\n(?t = ns:m.02_3phk) ||\n(?t = ns:m.02_3r2r) ||\n(?t = ns:m.02_3rt3) ||\n(?t = ns:m.02_3zf4) ||\n(?t = ns:m.02_40h1) ||\n(?t = ns:m.02_96lm) ||\n(?t = ns:m.02yxk5c) ||\n(?t = ns:m.02zd6yn) ||\n(?t = ns:m.03z96kq) ||\n(?t = ns:m.04g7rg9) ||\n(?t = ns:m.04js0h5) ||\n(?t = ns:m.065rjpr) ||\n(?t = ns:m.078_8dm) ||\n(?t = ns:m.0hzcb3l) ||\n(?t = ns:m.0hzcb5p) ||\n(?t = ns:m.0hzcb69) ||\n(?t = ns:m.0hzcb7p) ||\n(?t = ns:m.0hzcd76) ||\n(?t = ns:m.0hzcd7v) ||\n(?t = ns:m.0hzcdb0) ||\n(?t = ns:m.0hzcdd6) ||\n(?t = ns:m.0hzcdlq) ||\n(?t = ns:m.0hzcdmg) ||\n(?t = ns:m.0hzcdrj) ||\n(?t = ns:m.0hzcdzg) ||\n(?t = ns:m.0hzcdzv) ||\n(?t = ns:m.0hzcf4d) ||\n(?t = ns:m.0hzcf50) ||\n(?t = ns:m.0hzcfdx) ||\n(?t = ns:m.0hzcffv) ||\n(?t = ns:m.0hzcfgg) ||\n(?t = ns:m.0hzcfj0) ||\n(?t = ns:m.0hzcfm2) ||\n(?t = ns:m.0hzcfpz) ||\n(?t = ns:m.0hzcfsv) ||\n(?t = ns:m.0hzcfyb) ||\n(?t = ns:m.0hzcg20) ||\n(?t = ns:m.0hzcg90) ||\n(?t = ns:m.0hzcgdz) ||\n(?t = ns:m.0hzcgfl) ||\n(?t = ns:m.0hzcggv) ||\n(?t = ns:m.0hzcgj2) ||\n(?t = ns:m.0hzcgk4) ||\n(?t = ns:m.0hzcgny) ||\n(?t = ns:m.0hzcgqt) ||\n(?t = ns:m.0hzcgsp) ||\n(?t = ns:m.0hzcgvh) ||\n(?t = ns:m.0hzcgvw) ||\n(?t = ns:m.0hzcgxf) ||\n(?t = ns:m.0hzcjv6) ||\n(?t = ns:m.0hzcjvv) ||\n(?t = ns:m.0hzcjxq) ||\n(?t = ns:m.0hzck_1) ||\n(?t = ns:m.0hzck1r) ||\n(?t = ns:m.0hzck47) ||\n(?t = ns:m.0hzck7p) ||\n(?t = ns:m.0hzckbh) ||\n(?t = ns:m.0hzckgc) ||\n(?t = ns:m.0hzcklh) ||\n(?t = ns:m.0hzckv_) ||\n(?t = ns:m.0hzckvp) ||\n(?t = ns:m.0hzckwy) ||\n(?t = ns:m.0hzcl1k) ||\n(?t = ns:m.0hzcl2t) ||\n(?t = ns:m.0hzfxh6) ||\n(?t = ns:m.0hzfxjh) ||\n(?t = ns:m.0hzfxny) ||\n(?t = ns:m.0hzfxv1) ||\n(?t = ns:m.0hzfxx7) ||\n(?t = ns:m.0hzfxzs) ||\n(?t = ns:m.0hzfy0d) ||\n(?t = ns:m.0hz_gjz) ||\n(?t = ns:m.0hzjldq) ||\n(?t = ns:m.0hzjm9b) ||\n(?t = ns:m.0hzjmf9) ||\n(?t = ns:m.0hzjmjf) ||\n(?t = ns:m.0hzjmlj) ||\n(?t = ns:m.0hzjmm6) ||\n(?t = ns:m.0hzjmmx) ||\n(?t = ns:m.0j1zd59) ||\n(?t = ns:m.0j1zd5w) )\n}",
        "PotentialTopicEntityMention": "north america",
        "TopicEntityName": "North America",
        "TopicEntityMid": "m.059g4",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.059g4": "North America"
    },
    "qid_topic_entity": {
      "Q49": "North America"
    },
    "index": 180
  },
  {
    "QuestionId": "WebQTest-680",
    "RawQuestion": "what team did aguero play for?",
    "ProcessedQuestion": "what team did aguero play for",
    "Parses": [
      {
        "ParseId": "WebQTest-680.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? answering as if they typed \"teams\" and don't care about getting the current team also"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099vgz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099vgz ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "aguero",
        "TopicEntityName": "Sergio Ag\u00fcero",
        "TopicEntityMid": "m.099vgz",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01634x",
            "EntityName": "Manchester City F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bh_v",
            "EntityName": "Argentina national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047yd6",
            "EntityName": "Club Atl\u00e9tico Independiente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lg7v",
            "EntityName": "Atl\u00e9tico Madrid"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.099vgz": "Sergio Ag\u00fcero"
    },
    "qid_topic_entity": {
      "Q119562": "Sergio Ag\u00fcero"
    },
    "index": 181
  },
  {
    "QuestionId": "WebQTest-1336",
    "RawQuestion": "what is utah's state capitol?",
    "ProcessedQuestion": "what is utah 's state capitol",
    "Parses": [
      {
        "ParseId": "WebQTest-1336.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b86q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b86q ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "state capitol",
        "TopicEntityName": "Utah State Capitol",
        "TopicEntityMid": "m.09b86q",
        "InferentialChain": [
          "location.location.street_address",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1336.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:base.aareas.schema.administrative_area.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1336.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.administrative_division.capital ?y .\n?y ns:location.administrative_division_capital_relationship.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "location.administrative_division.capital",
          "location.administrative_division_capital_relationship.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1336.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.us_state.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "location.us_state.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2r6",
            "EntityName": "Salt Lake City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09b86q": "Utah State Capitol",
      "m.07srw": "Utah"
    },
    "qid_topic_entity": {
      "Q2627661": "Utah State Capitol",
      "Q829": "Utah"
    },
    "index": 182
  },
  {
    "QuestionId": "WebQTest-157",
    "RawQuestion": "where is mission san buenaventura located?",
    "ProcessedQuestion": "where is mission san buenaventura located",
    "Parses": [
      {
        "ParseId": "WebQTest-157.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gbsb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gbsb ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mission san buenaventura",
        "TopicEntityName": "Mission San Buenaventura",
        "TopicEntityMid": "m.0gbsb",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zs2h_",
            "EntityName": "93001"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l38x",
            "EntityName": "Ventura County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gbsb": "Mission San Buenaventura"
    },
    "qid_topic_entity": {
      "Q12061890": "Mission San Buenaventura"
    },
    "index": 183
  },
  {
    "QuestionId": "WebQTest-1062",
    "RawQuestion": "what is the name of the currency used in italy?",
    "ProcessedQuestion": "what is the name of the currency used in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-1062.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 184
  },
  {
    "QuestionId": "WebQTest-525",
    "RawQuestion": "who are the senators of virginia 2013?",
    "ProcessedQuestion": "who are the senators of virginia 2013",
    "Parses": [
      {
        "ParseId": "WebQTest-525.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07z1m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07z1m ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.governmental_body ns:m.07t58 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "virginia",
        "TopicEntityName": "Virginia",
        "TopicEntityMid": "m.07z1m",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07t58",
            "EntityName": "United States Senate",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.governmental_body",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2013-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2013-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2013-01-01",
          "End": "2013-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2013"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024mm1",
            "EntityName": "Mark Warner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053f8h",
            "EntityName": "Tim Kaine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0574xy",
            "EntityName": "Jim Webb"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07z1m": "Virginia"
    },
    "qid_topic_entity": {
      "Q1370": "Virginia"
    },
    "index": 185
  },
  {
    "QuestionId": "WebQTest-145",
    "RawQuestion": "what college did albert einstein go to?",
    "ProcessedQuestion": "what college did albert einstein go to",
    "Parses": [
      {
        "ParseId": "WebQTest-145.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "albert einstein",
        "TopicEntityName": "Albert Einstein",
        "TopicEntityMid": "m.0jcx",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dyk8",
            "EntityName": "ETH Zurich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tpvt",
            "EntityName": "University of Zurich"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jcx": "Albert Einstein"
    },
    "qid_topic_entity": {
      "Q937": "Albert Einstein"
    },
    "index": 186
  },
  {
    "QuestionId": "WebQTest-778",
    "RawQuestion": "what was jesse owens education?",
    "ProcessedQuestion": "what was jesse owens education",
    "Parses": [
      {
        "ParseId": "WebQTest-778.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cmr3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cmr3 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "jesse owens",
        "TopicEntityName": "Jesse Owens",
        "TopicEntityMid": "m.0cmr3",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05krk",
            "EntityName": "Ohio State University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fcddh",
            "EntityName": "East Technical High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cmr3": "Jesse Owens"
    },
    "qid_topic_entity": {
      "Q52651": "Jesse Owens"
    },
    "index": 187
  },
  {
    "QuestionId": "WebQTest-1178",
    "RawQuestion": "where is tupac from originally?",
    "ProcessedQuestion": "where is tupac from originally",
    "Parses": [
      {
        "ParseId": "WebQTest-1178.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "tupac",
        "TopicEntityName": "Tupac Shakur",
        "TopicEntityMid": "m.07pzc",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cx_2",
            "EntityName": "East Harlem"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07pzc": "Tupac Shakur"
    },
    "qid_topic_entity": {
      "Q6107": "Tupac Shakur"
    },
    "index": 188
  },
  {
    "QuestionId": "WebQTest-791",
    "RawQuestion": "what other books did louis sachar write?",
    "ProcessedQuestion": "what other books did louis sachar write",
    "Parses": [
      {
        "ParseId": "WebQTest-791.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq8d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq8d ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "louis sachar",
        "TopicEntityName": "Louis Sachar",
        "TopicEntityMid": "m.01bq8d",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xsvy",
            "EntityName": "Small Steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028y3lc",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028y9y6",
            "EntityName": "Sixth Grade Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028yqjw",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5dp",
            "EntityName": "Johnny's in the basement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5f_",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5fk",
            "EntityName": "Wayside School gets a little stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5gf",
            "EntityName": "Class President (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5gn",
            "EntityName": "A magic crystal?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5h2",
            "EntityName": "Der Fluch des David Ballinger. ( Ab 11 J.)."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5h9",
            "EntityName": "Sixth Grade Secrets (Apple Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5hj",
            "EntityName": "Wayside School is falling down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5hz",
            "EntityName": "There's a boy in the girls bathroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5jd",
            "EntityName": "Kidnapped at Birth? (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5jm",
            "EntityName": "The Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5jw",
            "EntityName": "Il y a un gar\u00e7on dans les toilettes des filles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5k2",
            "EntityName": "A Flying Birthday Cake? (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5k9",
            "EntityName": "Why Pick on Me? (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5kj",
            "EntityName": "Small steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5kt",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5l7",
            "EntityName": "Wayside School Boxed Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5lg",
            "EntityName": "Stanley Yelnats' Survival Guide to Camp Green Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5lp",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5m3",
            "EntityName": "Super Fast, Out of Control! (A Stepping Stone Book(TM))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5mb",
            "EntityName": "Holes Activity Pack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5mk",
            "EntityName": "L\u00f6cher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5mt",
            "EntityName": "Dogs Don't Tell Jokes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tx5n0",
            "EntityName": "Sideways Arithmetic From Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cdl",
            "EntityName": "Small Steps (Readers Circle)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cdw",
            "EntityName": "Small steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kj_",
            "EntityName": "Someday Angeline (Avon/Camelot Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kj0",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kjh",
            "EntityName": "Someday Angeline (Avon/Camelot Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kjr",
            "EntityName": "Someday Angeline (Avon/Camelot Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09_5",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09_n",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09wp",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09x5",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09xf",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09xp",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09xy",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09yr",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09zg",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5xwx",
            "EntityName": "More Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5xx4",
            "EntityName": "More Sideways Arithmetic From Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5xxw",
            "EntityName": "More Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfmz4",
            "EntityName": "Stanley Yelnats Survival Guide to Camp Green Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsfw",
            "EntityName": "The boy who lost his face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsh_",
            "EntityName": "Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsh5",
            "EntityName": "The boy who lost his face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfsj7",
            "EntityName": "The Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy26",
            "EntityName": "Wayside School Gets a Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy2h",
            "EntityName": "Wayside School Gets a Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy3m",
            "EntityName": "Wayside School Gets a Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy3x",
            "EntityName": "Wayside School Gets a Little Stranger (rack) (Wayside School)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfy9y",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfybn",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfyby",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_0q",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_1f",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_1z",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_26",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_2z",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_3p",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_47",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_4h",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_4s",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_50",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_58",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_5j",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_5s",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_60",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_68",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_6j",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_6t",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_71",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_80",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk_8s",
            "EntityName": "Marvin Redpost."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0f_",
            "EntityName": "Wayside School is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0g_",
            "EntityName": "Wayside School is falling down (Celebrate reading, Scott Foresman)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0gr",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0h_",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0hh",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0hr",
            "EntityName": "Wayside School Is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk0jj",
            "EntityName": "Wayside School is falling down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj56",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj5g",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj5q",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj5z",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj6z",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj76",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj7g",
            "EntityName": "Sideways stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj8s",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl07k",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl080",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl08h",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl08z",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vl09f",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztq0",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztq9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztqt",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztrl",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztrv",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzts9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztst",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztt1",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztt9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzttl",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztv0",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztv9",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztvk",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztvv",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztw2",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztwb",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztwl",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztww",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vztx4",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwd7",
            "EntityName": "Holes (Yearling Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwdh",
            "EntityName": "Holes (with \\\"Connections\\\") HRW Library (HRW library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwf8",
            "EntityName": "Holes. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwfv",
            "EntityName": "Holes (Cascades)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwg2",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwgy",
            "EntityName": "Holes. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwh6",
            "EntityName": "Holes (Readers Circle)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwhg",
            "EntityName": "Holes (World Book Day 2001)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzwj8",
            "EntityName": "Holes (Listening Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w058k",
            "EntityName": "Sixth Grade Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w059b",
            "EntityName": "Sixth grade secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w059v",
            "EntityName": "Sixth Grade Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w05b2",
            "EntityName": "Sixth Grade Secrets (An Apple Paperback)"
          }
        ]
      },
      {
        "ParseId": "WebQTest-791.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq8d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq8d ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "louis sachar",
        "TopicEntityName": "Louis Sachar",
        "TopicEntityMid": "m.01bq8d",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1218f5g0",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r2x8r",
            "EntityName": "Kidnapped at Birth?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r3l0q",
            "EntityName": "A Flying Birthday Cake?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011brh75",
            "EntityName": "More Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bxn3",
            "EntityName": "Sideways Stories from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bxq6",
            "EntityName": "Wayside School is Falling Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bxzt",
            "EntityName": "Wayside School Gets A Little Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027by4_",
            "EntityName": "Sideways Arithmetic from Wayside School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03tgtr",
            "EntityName": "Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t484_",
            "EntityName": "Der Fluch des David Ballinger. ( Ab 11 J.)."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t4842",
            "EntityName": "Johnny's in the Basement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t484b",
            "EntityName": "Class President"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t484l",
            "EntityName": "A magic crystal?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t485_",
            "EntityName": "Why Pick on Me?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t485h",
            "EntityName": "Il y a un gar\u00e7on dans les toilettes des filles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t4867",
            "EntityName": "Wayside School Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t486h",
            "EntityName": "Super Fast, Out of Control!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067d3d8",
            "EntityName": "Alone in His Teacher's House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069nlkb",
            "EntityName": "Pequenos Pasos/ Small Steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06blrtc",
            "EntityName": "Louis Sacher Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ck0yg",
            "EntityName": "Hoyos/Holes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dymp",
            "EntityName": "The Boy Who Lost His Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hhh6t",
            "EntityName": "Hay Un Chico En El Bano De Las Chicas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tm95g",
            "EntityName": "Monkey soup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09yl25",
            "EntityName": "Dogs Don't Tell Jokes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cmt6c",
            "EntityName": "Small Steps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dh2fh",
            "EntityName": "There's a Boy in the Girls' Bathroom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dl1lt",
            "EntityName": "Someday Angeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8d9g",
            "EntityName": "Stanley Yelnats' Survival Guide to Camp Green Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f95rs",
            "EntityName": "Marvin Redpost"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq08x0",
            "EntityName": "The Cardturner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0jhl",
            "EntityName": "Sixth Grade Secrets"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bq8d": "Louis Sachar"
    },
    "qid_topic_entity": {
      "Q553137": "Louis Sachar"
    },
    "index": 189
  },
  {
    "QuestionId": "WebQTest-820",
    "RawQuestion": "what are the names of harry potter movies in order?",
    "ProcessedQuestion": "what are the names of harry potter movies in order",
    "Parses": [
      {
        "ParseId": "WebQTest-820.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? did not order "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02676m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02676m4 ns:film.film_series.films_in_series ?x .\n}\n",
        "PotentialTopicEntityMention": "harry potter movies",
        "TopicEntityName": "Harry Potter",
        "TopicEntityMid": "m.02676m4",
        "InferentialChain": [
          "film.film_series.films_in_series"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pth35",
            "EntityName": "Harry Potter and the Deathly Hallows - Part I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03176f",
            "EntityName": "Harry Potter and the Philosopher's Stone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031778",
            "EntityName": "Harry Potter and the Chamber of Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03177r",
            "EntityName": "Harry Potter and the Prisoner of Azkaban"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031786",
            "EntityName": "Harry Potter and the Goblet of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031hcx",
            "EntityName": "Harry Potter and the Order of the Phoenix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hxsv",
            "EntityName": "Harry Potter and the Half-Blood Prince"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gvsynb",
            "EntityName": "Harry Potter and the Deathly Hallows \u2013 Part 2"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02676m4": "Harry Potter"
    },
    "qid_topic_entity": {
      "Q216930": "Harry Potter"
    },
    "index": 190
  },
  {
    "QuestionId": "WebQTest-41",
    "RawQuestion": "where is the galapagos islands located on a world map?",
    "ProcessedQuestion": "where is the galapagos islands located on a world map",
    "Parses": [
      {
        "ParseId": "WebQTest-41.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016zjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016zjj ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "galapagos islands",
        "TopicEntityName": "Gal\u00e1pagos Islands",
        "TopicEntityMid": "m.016zjj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k1b",
            "EntityName": "Ecuador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03660b",
            "EntityName": "Gal\u00e1pagos Province"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rgl",
            "EntityName": "Pacific Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016zjj": "Gal\u00e1pagos Islands"
    },
    "qid_topic_entity": {
      "Q38095": "Gal\u00e1pagos Islands"
    },
    "index": 191
  },
  {
    "QuestionId": "WebQTest-775",
    "RawQuestion": "what to do this weekend in manchester with kids?",
    "ProcessedQuestion": "what to do this weekend in manchester with kids",
    "Parses": [
      {
        "ParseId": "WebQTest-775.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.052bw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.052bw ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "manchester",
        "TopicEntityName": "Manchester",
        "TopicEntityMid": "m.052bw",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lv55",
            "EntityName": "Imperial War Museum North"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w89p",
            "EntityName": "Urbis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030lpl",
            "EntityName": "Old Trafford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0383g6",
            "EntityName": "Whitworth Art Gallery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0383jm",
            "EntityName": "Manchester Art Gallery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039s65",
            "EntityName": "Manchester Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039s6j",
            "EntityName": "Manchester Jewish Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cwfv_",
            "EntityName": "Great Manchester Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d5f9f",
            "EntityName": "Chinatown, Manchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041xlb",
            "EntityName": "Manchester Cathedral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm8swc",
            "EntityName": "The Moon Under Water, Manchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gg7rlr",
            "EntityName": "Wheel of Manchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n4890m",
            "EntityName": "Albert Hall, Manchester"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.052bw": "Manchester"
    },
    "qid_topic_entity": {
      "Q18125": "Manchester"
    },
    "index": 192
  },
  {
    "QuestionId": "WebQTest-2017",
    "RawQuestion": "what party was abe lincoln part of?",
    "ProcessedQuestion": "what party was abe lincoln part of",
    "Parses": [
      {
        "ParseId": "WebQTest-2017.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "abe lincoln",
        "TopicEntityName": "Abraham Lincoln",
        "TopicEntityMid": "m.0gzh",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wbk",
            "EntityName": "Republican Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wdw",
            "EntityName": "Whig Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9fdp",
            "EntityName": "National Union Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g7ly4",
            "EntityName": "Illinois Republican Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gzh": "Abraham Lincoln"
    },
    "qid_topic_entity": {
      "Q91": "Abraham Lincoln"
    },
    "index": 193
  },
  {
    "QuestionId": "WebQTest-1426",
    "RawQuestion": "where is ibrahim afellay from?",
    "ProcessedQuestion": "where is ibrahim afellay from",
    "Parses": [
      {
        "ParseId": "WebQTest-1426.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08w78j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08w78j ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "ibrahim afellay",
        "TopicEntityName": "Ibrahim Afellay",
        "TopicEntityMid": "m.08w78j",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9s5",
            "EntityName": "Utrecht"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08w78j": "Ibrahim Afellay"
    },
    "qid_topic_entity": {
      "Q165014": "Ibrahim Afellay"
    },
    "index": 194
  },
  {
    "QuestionId": "WebQTest-220",
    "RawQuestion": "what language turkey people speak?",
    "ProcessedQuestion": "what language turkey people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-220.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyss",
            "EntityName": "Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033xvz",
            "EntityName": "Zaza language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p7x",
            "EntityName": "Ladino Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b1g2",
            "EntityName": "Kurdish languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzc",
            "EntityName": "Arabic Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-220.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyss",
            "EntityName": "Turkish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 195
  },
  {
    "QuestionId": "WebQTest-859",
    "RawQuestion": "what are the predominant religions in russia?",
    "ProcessedQuestion": "what are the predominant religions in russia",
    "Parses": [
      {
        "ParseId": "WebQTest-859.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b06q",
            "EntityName": "Russian Orthodox Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 196
  },
  {
    "QuestionId": "WebQTest-996",
    "RawQuestion": "where do ireland play rugby union?",
    "ProcessedQuestion": "where do ireland play rugby union",
    "Parses": [
      {
        "ParseId": "WebQTest-996.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03t3zk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03t3zk ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "rugby union",
        "TopicEntityName": "Ireland national rugby union team",
        "TopicEntityMid": "m.03t3zk",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h4fd2",
            "EntityName": "Aviva Stadium"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03t3zk": "Ireland national rugby union team"
    },
    "qid_topic_entity": {
      "Q599903": "Ireland national rugby union team"
    },
    "index": 197
  },
  {
    "QuestionId": "WebQTest-821",
    "RawQuestion": "what did pamela courson die from?",
    "ProcessedQuestion": "what did pamela courson die from",
    "Parses": [
      {
        "ParseId": "WebQTest-821.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ms9g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ms9g ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "pamela courson",
        "TopicEntityName": "Pamela Courson",
        "TopicEntityMid": "m.07ms9g",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tf_6",
            "EntityName": "Drug overdose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kp1qn",
            "EntityName": "Heroin overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ms9g": "Pamela Courson"
    },
    "qid_topic_entity": {
      "Q428967": "Pamela Courson"
    },
    "index": 198
  },
  {
    "QuestionId": "WebQTest-371",
    "RawQuestion": "what are the major languages spoken in greece?",
    "ProcessedQuestion": "what are the major languages spoken in greece",
    "Parses": [
      {
        "ParseId": "WebQTest-371.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "greece",
        "TopicEntityName": "Greece",
        "TopicEntityMid": "m.035qy",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0349s",
            "EntityName": "Greek Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035qy": "Greece"
    },
    "qid_topic_entity": {
      "Q41": "Greece"
    },
    "index": 199
  },
  {
    "QuestionId": "WebQTest-830",
    "RawQuestion": "where is taylor swift from?",
    "ProcessedQuestion": "where is taylor swift from",
    "Parses": [
      {
        "ParseId": "WebQTest-830.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dl567)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dl567 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "taylor swift",
        "TopicEntityName": "Taylor Swift",
        "TopicEntityMid": "m.0dl567",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgm",
            "EntityName": "Reading"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dl567": "Taylor Swift"
    },
    "qid_topic_entity": {
      "Q112865783": "Taylor Swift"
    },
    "index": 200
  },
  {
    "QuestionId": "WebQTest-684",
    "RawQuestion": "what sort of government does nigeria have?",
    "ProcessedQuestion": "what sort of government does nigeria have",
    "Parses": [
      {
        "ParseId": "WebQTest-684.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cgv ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "nigeria",
        "TopicEntityName": "Nigeria",
        "TopicEntityMid": "m.05cgv",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05cgv": "Nigeria"
    },
    "qid_topic_entity": {
      "Q1033": "Nigeria"
    },
    "index": 201
  },
  {
    "QuestionId": "WebQTest-1378",
    "RawQuestion": "who does kellan lutz play in prom night?",
    "ProcessedQuestion": "who does kellan lutz play in prom night",
    "Parses": [
      {
        "ParseId": "WebQTest-1378.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pjwn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pjwn5 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.02rxbq6 .\n}\n",
        "PotentialTopicEntityMention": "kellan lutz",
        "TopicEntityName": "Kellan Lutz",
        "TopicEntityMid": "m.02pjwn5",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02rxbq6",
            "EntityName": "Prom Night",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyg58j",
            "EntityName": "Rick Leland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02pjwn5": "Kellan Lutz"
    },
    "qid_topic_entity": {
      "Q235707": "Kellan Lutz"
    },
    "index": 202
  },
  {
    "QuestionId": "WebQTest-1866",
    "RawQuestion": "what is the state name of new york city?",
    "ProcessedQuestion": "what is the state name of new york city",
    "Parses": [
      {
        "ParseId": "WebQTest-1866.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:base.biblioness.bibs_location.state ?x .\n}\n",
        "PotentialTopicEntityMention": "new york city",
        "TopicEntityName": "New York City",
        "TopicEntityMid": "m.02_286",
        "InferentialChain": [
          "base.biblioness.bibs_location.state"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rby",
            "EntityName": "New York"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_286": "New York City"
    },
    "qid_topic_entity": {
      "Q60": "New York City"
    },
    "index": 203
  },
  {
    "QuestionId": "WebQTest-759",
    "RawQuestion": "who brad pitt has dated?",
    "ProcessedQuestion": "who brad pitt has dated",
    "Parses": [
      {
        "ParseId": "WebQTest-759.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? should this be a union with those that he was engaged to? probably"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c6qh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c6qh ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\n}\n",
        "PotentialTopicEntityMention": "brad pitt",
        "TopicEntityName": "Brad Pitt",
        "TopicEntityMid": "m.0c6qh",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7k44",
            "EntityName": "Dated",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.relationship_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cpb7",
            "EntityName": "Thandie Newton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g0mx",
            "EntityName": "Juliette Lewis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j9sl",
            "EntityName": "Sinitta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bblqk",
            "EntityName": "Shalane McCall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hjxj",
            "EntityName": "Robin Givens"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c6qh": "Brad Pitt"
    },
    "qid_topic_entity": {
      "Q35332": "Brad Pitt"
    },
    "index": 204
  },
  {
    "QuestionId": "WebQTest-1806",
    "RawQuestion": "what position did lebron james play?",
    "ProcessedQuestion": "what position did lebron james play",
    "Parses": [
      {
        "ParseId": "WebQTest-1806.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "basketball.basketball_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pv51",
            "EntityName": "Power forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0355dz",
            "EntityName": "Small forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ww62",
            "EntityName": "Point forward"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1806.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.position"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pv51",
            "EntityName": "Power forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03558l",
            "EntityName": "Shooting guard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0355dz",
            "EntityName": "Small forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ww62",
            "EntityName": "Point forward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ch8k9",
            "EntityName": "Forward"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01jz6d": "LeBron James"
    },
    "qid_topic_entity": {
      "Q36159": "LeBron James"
    },
    "index": 205
  },
  {
    "QuestionId": "WebQTest-608",
    "RawQuestion": "when did liverpool fc last win the champions league?",
    "ProcessedQuestion": "when did liverpool fc last win the champions league",
    "Parses": [
      {
        "ParseId": "WebQTest-608.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? last"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ltf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ltf ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.012dbw .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "liverpool fc",
        "TopicEntityName": "Liverpool F.C.",
        "TopicEntityMid": "m.04ltf",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.012dbw",
            "EntityName": "Football League Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h_b67k",
            "EntityName": "2012 Football League Cup Final"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ltf": "Liverpool F.C."
    },
    "qid_topic_entity": {
      "Q1130849": "Liverpool F.C."
    },
    "index": 206
  },
  {
    "QuestionId": "WebQTest-960",
    "RawQuestion": "who plays dwight in the office?",
    "ProcessedQuestion": "who plays dwight in the office",
    "Parses": [
      {
        "ParseId": "WebQTest-960.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08jgk1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08jgk1 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.089pwh .\n}\n",
        "PotentialTopicEntityMention": "the office",
        "TopicEntityName": "The Office",
        "TopicEntityMid": "m.08jgk1",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.089pwh",
            "EntityName": "Dwight Schrute",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083chw",
            "EntityName": "Rainn Wilson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08jgk1": "The Office"
    },
    "qid_topic_entity": {
      "Q23831": "The Office"
    },
    "index": 207
  },
  {
    "QuestionId": "WebQTest-696",
    "RawQuestion": "when did juventus win the champions league?",
    "ProcessedQuestion": "when did juventus win the champions league",
    "Parses": [
      {
        "ParseId": "WebQTest-696.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045xx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045xx ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.05nblxt .\n}\n",
        "PotentialTopicEntityMention": "juventus",
        "TopicEntityName": "Juventus F.C.",
        "TopicEntityMid": "m.045xx",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05nblxt",
            "EntityName": "UEFA Champions League Final",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pt_57",
            "EntityName": "1996 UEFA Champions League Final"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045xx": "Juventus F.C."
    },
    "qid_topic_entity": {
      "Q1422": "Juventus F.C."
    },
    "index": 208
  },
  {
    "QuestionId": "WebQTest-133",
    "RawQuestion": "where did dolly parton grow up?",
    "ProcessedQuestion": "where did dolly parton grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-133.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02f1c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02f1c ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "dolly parton",
        "TopicEntityName": "Dolly Parton",
        "TopicEntityMid": "m.02f1c",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_wrs",
            "EntityName": "Sevierville"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02f1c": "Dolly Parton"
    },
    "qid_topic_entity": {
      "Q180453": "Dolly Parton"
    },
    "index": 209
  },
  {
    "QuestionId": "WebQTest-752",
    "RawQuestion": "what drink did john pemberton create?",
    "ProcessedQuestion": "what drink did john pemberton create",
    "Parses": [
      {
        "ParseId": "WebQTest-752.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h24w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h24w ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "john pemberton",
        "TopicEntityName": "John Pemberton",
        "TopicEntityMid": "m.0h24w",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yvs",
            "EntityName": "Coca-Cola"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h24w": "John Pemberton"
    },
    "qid_topic_entity": {
      "Q215959": "John Pemberton"
    },
    "index": 210
  },
  {
    "QuestionId": "WebQTest-1010",
    "RawQuestion": "what did bruce jenner win gold medal for?",
    "ProcessedQuestion": "what did bruce jenner win gold medal for",
    "Parses": [
      {
        "ParseId": "WebQTest-1010.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bbdn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bbdn ns:olympics.olympic_athlete.medals_won ?y .\n?y ns:olympics.olympic_medal_honor.event ?x .\n?y ns:olympics.olympic_medal_honor.medal ns:m.02lpp7 .\n}\n",
        "PotentialTopicEntityMention": "bruce jenner",
        "TopicEntityName": "Caitlyn Jenner",
        "TopicEntityMid": "m.03bbdn",
        "InferentialChain": [
          "olympics.olympic_athlete.medals_won",
          "olympics.olympic_medal_honor.event"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02lpp7",
            "EntityName": "Gold medal",
            "SourceNodeIndex": 0,
            "NodePredicate": "olympics.olympic_medal_honor.medal",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ygntp",
            "EntityName": "Athletics at the 1976 Summer Olympics - Men's Decathlon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03bbdn": "Caitlyn Jenner"
    },
    "qid_topic_entity": {
      "Q365144": "Caitlyn Jenner"
    },
    "index": 211
  },
  {
    "QuestionId": "WebQTest-2022",
    "RawQuestion": "where is dwayne johnson ethnicity?",
    "ProcessedQuestion": "where is dwayne johnson ethnicity",
    "Parses": [
      {
        "ParseId": "WebQTest-2022.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014g_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014g_s ns:people.person.ethnicity ?x .\n}\n",
        "PotentialTopicEntityMention": "dwayne johnson",
        "TopicEntityName": "Dwayne Johnson",
        "TopicEntityMid": "m.014g_s",
        "InferentialChain": [
          "people.person.ethnicity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j80c",
            "EntityName": "Samoan American"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x67",
            "EntityName": "African American"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.014g_s": "Dwayne Johnson"
    },
    "qid_topic_entity": {
      "Q10738": "Dwayne Johnson"
    },
    "index": 212
  },
  {
    "QuestionId": "WebQTest-249",
    "RawQuestion": "what was the cause of death for bruce lee?",
    "ProcessedQuestion": "what was the cause of death for bruce lee",
    "Parses": [
      {
        "ParseId": "WebQTest-249.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.099d4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.099d4 ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bruce lee",
        "TopicEntityName": "Bruce Lee",
        "TopicEntityMid": "m.099d4",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0219bz",
            "EntityName": "Cerebral edema"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.099d4": "Bruce Lee"
    },
    "qid_topic_entity": {
      "Q16397": "Bruce Lee"
    },
    "index": 213
  },
  {
    "QuestionId": "WebQTest-768",
    "RawQuestion": "who owns volkswagen car company?",
    "ProcessedQuestion": "who owns volkswagen car company",
    "Parses": [
      {
        "ParseId": "WebQTest-768.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ywl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ywl ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\n}\n",
        "PotentialTopicEntityMention": "volkswagen",
        "TopicEntityName": "Volkswagen Passenger Cars",
        "TopicEntityMid": "m.07ywl",
        "InferentialChain": [
          "organization.organization.parent",
          "organization.organization_relationship.parent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_zt",
            "EntityName": "Volkswagen Group"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ywl": "Volkswagen Passenger Cars"
    },
    "qid_topic_entity": {
      "Q246": "Volkswagen Passenger Cars"
    },
    "index": 214
  },
  {
    "QuestionId": "WebQTest-648",
    "RawQuestion": "who did kimberly williams marry?",
    "ProcessedQuestion": "who did kimberly williams marry",
    "Parses": [
      {
        "ParseId": "WebQTest-648.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d5mc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d5mc ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "kimberly williams",
        "TopicEntityName": "Kimberly Williams-Paisley",
        "TopicEntityMid": "m.05d5mc",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gr7w",
            "EntityName": "Brad Paisley"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05d5mc": "Kimberly Williams-Paisley"
    },
    "qid_topic_entity": {
      "Q234967": "Kimberly Williams-Paisley"
    },
    "index": 215
  },
  {
    "QuestionId": "WebQTest-519",
    "RawQuestion": "what timezone is nashville tn?",
    "ProcessedQuestion": "what timezone is nashville tn",
    "Parses": [
      {
        "ParseId": "WebQTest-519.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jbn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "nashville tn",
        "TopicEntityName": "Nashville",
        "TopicEntityMid": "m.05jbn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05jbn": "Nashville"
    },
    "qid_topic_entity": {
      "Q23197": "Nashville"
    },
    "index": 216
  },
  {
    "QuestionId": "WebQTest-1009",
    "RawQuestion": "where did george herbert walker bush go to college?",
    "ProcessedQuestion": "where did george herbert walker bush go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1009.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034ls)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034ls ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "george herbert walker bush",
        "TopicEntityName": "George H. W. Bush",
        "TopicEntityMid": "m.034ls",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08815",
            "EntityName": "University Yale"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034ls": "George H. W. Bush"
    },
    "qid_topic_entity": {
      "Q23505": "George H. W. Bush"
    },
    "index": 217
  },
  {
    "QuestionId": "WebQTest-427",
    "RawQuestion": "what is the zip code for midland tx?",
    "ProcessedQuestion": "what is the zip code for midland tx",
    "Parses": [
      {
        "ParseId": "WebQTest-427.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013n2h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013n2h ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "midland tx",
        "TopicEntityName": "Midland",
        "TopicEntityMid": "m.013n2h",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020zz8q",
            "EntityName": "79702"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215s_p",
            "EntityName": "79705"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t0_",
            "EntityName": "79701"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t3_",
            "EntityName": "79707"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t88",
            "EntityName": "79703"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0215t9t",
            "EntityName": "79706"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9l_",
            "EntityName": "79711"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9ls",
            "EntityName": "79712"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9m6",
            "EntityName": "79710"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9mf",
            "EntityName": "79708"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq9mn",
            "EntityName": "79704"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013n2h": "Midland"
    },
    "qid_topic_entity": {
      "Q128321": "Midland"
    },
    "index": 218
  },
  {
    "QuestionId": "WebQTest-958",
    "RawQuestion": "what are some famous people from el salvador?",
    "ProcessedQuestion": "what are some famous people from el salvador",
    "Parses": [
      {
        "ParseId": "WebQTest-958.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k8k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k8k ns:location.location.people_born_here ?x .\n}\n",
        "PotentialTopicEntityMention": "el salvador",
        "TopicEntityName": "El Salvador",
        "TopicEntityMid": "m.02k8k",
        "InferentialChain": [
          "location.location.people_born_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b8058v7j",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010h0d8y",
            "EntityName": "William Armando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011k0bpp",
            "EntityName": "Victor Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011k0bx8",
            "EntityName": "Johnny Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v5_6y",
            "EntityName": "Francisco Funes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_0d7s",
            "EntityName": "Damaris Qu\u00e9les"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_0fc_",
            "EntityName": "Francisca Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012z_6bb",
            "EntityName": "Ricardo L\u00f3pez Tenorio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01311sns",
            "EntityName": "Xenia Estrada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131y42k",
            "EntityName": "Mauricio Alvarenga"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013b7xby",
            "EntityName": "Milton Palacios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xmgs",
            "EntityName": "Alexander Campos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02phhjj",
            "EntityName": "Jose Orlando Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pyjqw",
            "EntityName": "Mauricio Alonso Rodr\u00edguez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qgkkg",
            "EntityName": "Miguel Ca\u00f1izalez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsc86",
            "EntityName": "Francisco Gavidia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qscbm",
            "EntityName": "Pedro Geoffroy Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsclj",
            "EntityName": "Camilo Minero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02v_3hr",
            "EntityName": "Ana Sol Gutierrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vmtpg",
            "EntityName": "Joel Aguilar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x5pqn",
            "EntityName": "Wilfredo Iraheta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c250_",
            "EntityName": "Mauricio Alfaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5z5s",
            "EntityName": "Jos\u00e9 Luis Rugamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c9124",
            "EntityName": "Eduardo Hern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cblzx",
            "EntityName": "Roberto Carlos Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cfwyh",
            "EntityName": "Jos\u00e9 Manfredi Portillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chqtt",
            "EntityName": "Melvin Barrera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chr1c",
            "EntityName": "Pedro Chavarria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ck2fb",
            "EntityName": "Jos\u00e9 Mar\u00eda Ca\u00f1as"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ctvv4",
            "EntityName": "Ruben Cedillos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f4fxd",
            "EntityName": "Keoki"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hzxty",
            "EntityName": "DJ Quest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m4f_f",
            "EntityName": "Prudencia Ayala"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nxgl4",
            "EntityName": "Andr\u00e9s Eduardo Men\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nxqf0",
            "EntityName": "William Renderos Iraheta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_076h",
            "EntityName": "Laura Molina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043ks6h",
            "EntityName": "F\u00e9lix Pineda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cykvj",
            "EntityName": "Jos\u00e9 Castellanos Contreras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dyyg2",
            "EntityName": "Jose Solis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f4spb",
            "EntityName": "Edwin Ramos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f69lb",
            "EntityName": "Roberto Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lhqln",
            "EntityName": "Alfredo Ruano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n3xqn",
            "EntityName": "Rafael Menj\u00edvar Ochoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8w4h",
            "EntityName": "Papa A.P."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y963w",
            "EntityName": "Elmer Acevedo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yfkr7",
            "EntityName": "Armando Chac\u00f3n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b_737",
            "EntityName": "Saturnino Osorio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c2y_f",
            "EntityName": "Ernesto Aparicio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m3gg",
            "EntityName": "Arturo Armando Molina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yr4wm",
            "EntityName": "Diego Vel\u00e1zquez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zkrkw",
            "EntityName": "Miguel Cruz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zv1fd",
            "EntityName": "Juan Rafael Bustillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065thkd",
            "EntityName": "Sarah Ramos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066127x",
            "EntityName": "Juan Ram\u00f3n S\u00e1nchez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w9_j6",
            "EntityName": "Jorge B\u00facaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1sn",
            "EntityName": "Tom\u00e1s Medina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1tb",
            "EntityName": "Doroteo Vasconcelos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1yh",
            "EntityName": "Rafael Campo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1yv",
            "EntityName": "Francisco Due\u00f1as"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y25k",
            "EntityName": "Gerardo Barrios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y27b",
            "EntityName": "Francisco Men\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2bv",
            "EntityName": "Pedro Jos\u00e9 Escal\u00f3n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2cw",
            "EntityName": "Manuel Enrique Araujo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2kd",
            "EntityName": "Jorge Mel\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2mv",
            "EntityName": "Salvador Castaneda Castro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2q9",
            "EntityName": "Julio Adalberto Rivera Carballo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bk65",
            "EntityName": "Consuelo de Saint Exup\u00e9ry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07p8ps",
            "EntityName": "Rub\u00e9n Zamora"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07swd6",
            "EntityName": "Rutilio Grande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080bz0l",
            "EntityName": "V\u00edctor Ram\u00edrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08vz5d",
            "EntityName": "Nicolas F. Shi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ggck_",
            "EntityName": "Eva Dimas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v1mhy",
            "EntityName": "Fausto Omar V\u00e1squez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b__gm3",
            "EntityName": "Steve Montenegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_qjns",
            "EntityName": "Carlos Linares"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm9y7c",
            "EntityName": "Miguel Angel Deras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc70k9",
            "EntityName": "Gualberto Fern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc8gnq",
            "EntityName": "Paula Heredia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cny39v",
            "EntityName": "Jorge Rivera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dbk9r",
            "EntityName": "Erwin McManus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dd34w",
            "EntityName": "Claudia Lars"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dlnrmt",
            "EntityName": "Victor Manuel Ochoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drw_42",
            "EntityName": "Ra\u00fal Cicero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds0ght",
            "EntityName": "Carlos Barrios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbs00",
            "EntityName": "Jos\u00e9 Inocencio Alas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gck6d6",
            "EntityName": "Elena Diaz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glt20_",
            "EntityName": "Patricia Chica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx_9sj",
            "EntityName": "Bernard Lewinsky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyr_2r",
            "EntityName": "Jaime Portillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gysvkq",
            "EntityName": "Genaro Serme\u00f1o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1bw_6",
            "EntityName": "Ana Maria de Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1gfdk",
            "EntityName": "Eduardo \\\"Volkswagen\\\" Hern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2lqh",
            "EntityName": "Arturo Rivera y Damas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3cwk",
            "EntityName": "Enrique \u00c1lvarez C\u00f3rdova"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3vkz2",
            "EntityName": "Mario Montoya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5595b",
            "EntityName": "Jos\u00e9 Francisco Valiente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7mwf5",
            "EntityName": "Norman Quijano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h8k38b",
            "EntityName": "Rene Moran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hr5tm9",
            "EntityName": "Jose B. Gonzalez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrgx45",
            "EntityName": "Richard Oriani"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3y75j",
            "EntityName": "Alexander M\u00e9ndoza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j442fb",
            "EntityName": "\u00c1ngel Orellana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9k7c7",
            "EntityName": "Emilio Guardado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9nts6",
            "EntityName": "Am\u00e9rico Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k_fvt",
            "EntityName": "Bobby Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kg2yh2",
            "EntityName": "\u00d3scar Antonio Ulloa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kmy4yx",
            "EntityName": "Guillermo Garc\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knmfg3",
            "EntityName": "Selvin Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knxpym",
            "EntityName": "William L\u00f3pez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ktzqtz",
            "EntityName": "Marlon Menj\u00edvar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n484vf",
            "EntityName": "Isa\u00edas Choto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ndx3dp",
            "EntityName": "Takeshi Fujiwara"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pmg_63",
            "EntityName": "Mario Wilfredo Contreras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q200b9",
            "EntityName": "Malin Arvidsson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_3g3z",
            "EntityName": "Robert Renderos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yzmtry",
            "EntityName": "Santiago \\\"Jimmy\\\" Mellado"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k8k": "El Salvador"
    },
    "qid_topic_entity": {
      "Q792": "El Salvador"
    },
    "index": 219
  },
  {
    "QuestionId": "WebQTest-327",
    "RawQuestion": "what two continents is turkey on?",
    "ProcessedQuestion": "what two continents is turkey on",
    "Parses": [
      {
        "ParseId": "WebQTest-327.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qkt",
            "EntityName": "Eurasia"
          }
        ]
      },
      {
        "ParseId": "WebQTest-327.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mh .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.location.partially_containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mh",
            "EntityName": "Continent",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j0k",
            "EntityName": "Asia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 220
  },
  {
    "QuestionId": "WebQTest-73",
    "RawQuestion": "what language do the maasai tribe speak?",
    "ProcessedQuestion": "what language do the maasai tribe speak",
    "Parses": [
      {
        "ParseId": "WebQTest-73.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054vv ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "maasai",
        "TopicEntityName": "Maasai people",
        "TopicEntityMid": "m.054vv",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064kl7",
            "EntityName": "Maasai Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.054vv": "Maasai people"
    },
    "qid_topic_entity": {
      "Q163022": "Maasai people"
    },
    "index": 221
  },
  {
    "QuestionId": "WebQTest-618",
    "RawQuestion": "where is chesapeake bay bridge?",
    "ProcessedQuestion": "where is chesapeake bay bridge",
    "Parses": [
      {
        "ParseId": "WebQTest-618.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03xksb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03xksb ns:transportation.bridge.locale ?x .\n}\n",
        "PotentialTopicEntityMention": "chesapeake bay bridge",
        "TopicEntityName": "Chesapeake Bay Bridge",
        "TopicEntityMid": "m.03xksb",
        "InferentialChain": [
          "transportation.bridge.locale"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dn8b",
            "EntityName": "Anne Arundel County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g834",
            "EntityName": "Queen Anne's County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03xksb": "Chesapeake Bay Bridge"
    },
    "qid_topic_entity": {
      "Q1319988": "Chesapeake Bay Bridge"
    },
    "index": 222
  },
  {
    "QuestionId": "WebQTest-1340",
    "RawQuestion": "what is steve nash nationality?",
    "ProcessedQuestion": "what is steve nash nationality",
    "Parses": [
      {
        "ParseId": "WebQTest-1340.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yqrk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yqrk ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "steve nash",
        "TopicEntityName": "Steve Nash",
        "TopicEntityMid": "m.01yqrk",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01yqrk": "Steve Nash"
    },
    "qid_topic_entity": {
      "Q192955": "Steve Nash"
    },
    "index": 223
  },
  {
    "QuestionId": "WebQTest-1342",
    "RawQuestion": "what kind of language does france speak?",
    "ProcessedQuestion": "what kind of language does france speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1342.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 224
  },
  {
    "QuestionId": "WebQTest-903",
    "RawQuestion": "where turkish people originate?",
    "ProcessedQuestion": "where turkish people originate",
    "Parses": [
      {
        "ParseId": "WebQTest-903.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hb7h_z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hb7h_z ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "turkish people",
        "TopicEntityName": "Turkish people",
        "TopicEntityMid": "m.0hb7h_z",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015qh",
            "EntityName": "Bulgaria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166b",
            "EntityName": "Bosnia and Herzegovina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nx28",
            "EntityName": "Northern Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01znc_",
            "EntityName": "Turkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047lj",
            "EntityName": "Kazakhstan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fh3",
            "EntityName": "Republic of Kosovo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059j2",
            "EntityName": "Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b4w",
            "EntityName": "Norway"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vbd",
            "EntityName": "Syria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0vqn",
            "EntityName": "Sweden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jhd",
            "EntityName": "Azerbaijan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt3tjf",
            "EntityName": "Kyrgyzstan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k6nt",
            "EntityName": "Denmark"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hb7h_z": "Turkish people"
    },
    "qid_topic_entity": {
      "UnknownQID": "Turkish people"
    },
    "index": 225
  },
  {
    "QuestionId": "WebQTest-1625",
    "RawQuestion": "what are some inventions that leonardo da vinci invented?",
    "ProcessedQuestion": "what are some inventions that leonardo da vinci invented",
    "Parses": [
      {
        "ParseId": "WebQTest-1625.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rm",
            "EntityName": "Anemometer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w6mc",
            "EntityName": "Diving suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x3y7",
            "EntityName": "Ornithopter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05my_3",
            "EntityName": "Viola organista"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0796wt",
            "EntityName": "Double hull"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cyfs",
            "EntityName": "Parachute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11gwh",
            "EntityName": "Triple Barrel Canon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11h15",
            "EntityName": "33-Barreled Organ"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w11hbh",
            "EntityName": "Aerial Screw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y8r",
            "EntityName": "Armored car"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 226
  },
  {
    "QuestionId": "WebQTest-1854",
    "RawQuestion": "who originally voiced lois griffin?",
    "ProcessedQuestion": "who originally voiced lois griffin",
    "Parses": [
      {
        "ParseId": "WebQTest-1854.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pcqz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pcqz ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "lois griffin",
        "TopicEntityName": "Lois Griffin",
        "TopicEntityMid": "m.03pcqz",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jldb",
            "EntityName": "Alex Borstein"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03pcqz": "Lois Griffin"
    },
    "qid_topic_entity": {
      "Q853073": "Lois Griffin"
    },
    "index": 227
  },
  {
    "QuestionId": "WebQTest-1050",
    "RawQuestion": "who does mila kunis play on family guy?",
    "ProcessedQuestion": "who does mila kunis play on family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-1050.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.actor ns:m.023v4_ .\n}\n",
        "PotentialTopicEntityMention": "family guy",
        "TopicEntityName": "Family Guy",
        "TopicEntityMid": "m.019nnl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.023v4_",
            "EntityName": "Mila Kunis",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035szd",
            "EntityName": "Meg Griffin"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019nnl": "Family Guy"
    },
    "qid_topic_entity": {
      "Q5930": "Family Guy"
    },
    "index": 228
  },
  {
    "QuestionId": "WebQTest-1479",
    "RawQuestion": "who is dustin johnson the golfer?",
    "ProcessedQuestion": "who is dustin johnson the golfer",
    "Parses": [
      {
        "ParseId": "WebQTest-1479.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n4sw4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n4sw4 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "dustin johnson",
        "TopicEntityName": "Dustin Johnson",
        "TopicEntityMid": "m.04n4sw4",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025smyp",
            "EntityName": "Golfer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n4sw4": "Dustin Johnson"
    },
    "qid_topic_entity": {
      "Q1002293": "Dustin Johnson"
    },
    "index": 229
  },
  {
    "QuestionId": "WebQTest-965",
    "RawQuestion": "where did anne frank go to school?",
    "ProcessedQuestion": "where did anne frank go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-965.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d9rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d9rk ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "anne frank",
        "TopicEntityName": "Anne Frank",
        "TopicEntityMid": "m.03d9rk",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wf8d8",
            "EntityName": "Montessori Lyceum Amsterdam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074600n",
            "EntityName": "Jewish Lyceum"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03d9rk": "Anne Frank"
    },
    "qid_topic_entity": {
      "Q4583": "Anne Frank"
    },
    "index": 230
  },
  {
    "QuestionId": "WebQTest-508",
    "RawQuestion": "what is the best currency to take to turkey?",
    "ProcessedQuestion": "what is the best currency to take to turkey",
    "Parses": [
      {
        "ParseId": "WebQTest-508.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dq0w",
            "EntityName": "Turkish lira"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 231
  },
  {
    "QuestionId": "WebQTest-418",
    "RawQuestion": "what league are the indianapolis colts in?",
    "ProcessedQuestion": "what league are the indianapolis colts in",
    "Parses": [
      {
        "ParseId": "WebQTest-418.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wnh ns:sports.sports_team.league ?y .\n?y ns:sports.sports_league_participation.league ?x .\n}\n",
        "PotentialTopicEntityMention": "indianapolis colts",
        "TopicEntityName": "Indianapolis Colts",
        "TopicEntityMid": "m.03wnh",
        "InferentialChain": [
          "sports.sports_team.league",
          "sports.sports_league_participation.league"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059yj",
            "EntityName": "National Football League"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068g_2",
            "EntityName": "AFC South"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hh4",
            "EntityName": "American Football Conference"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03wnh": "Indianapolis Colts"
    },
    "qid_topic_entity": {
      "Q193753": "Indianapolis Colts"
    },
    "index": 232
  },
  {
    "QuestionId": "WebQTest-1534",
    "RawQuestion": "who are the coaches for the oakland raiders?",
    "ProcessedQuestion": "who are the coaches for the oakland raiders",
    "Parses": [
      {
        "ParseId": "WebQTest-1534.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l71)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l71 ns:american_football.football_team.current_head_coach ?x .\n}\n",
        "PotentialTopicEntityMention": "oakland raiders",
        "TopicEntityName": "Oakland Raiders",
        "TopicEntityMid": "m.05l71",
        "InferentialChain": [
          "american_football.football_team.current_head_coach"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h4k5d",
            "EntityName": "Tony Sparano"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05l71": "Oakland Raiders"
    },
    "qid_topic_entity": {
      "Q324523": "Oakland Raiders"
    },
    "index": 233
  },
  {
    "QuestionId": "WebQTest-1813",
    "RawQuestion": "what team does messi play for 2011?",
    "ProcessedQuestion": "what team does messi play for 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1813.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06qjgc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06qjgc ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "messi",
        "TopicEntityName": "Lionel Messi",
        "TopicEntityMid": "m.06qjgc",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bh_v",
            "EntityName": "Argentina national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hvgt",
            "EntityName": "FC Barcelona"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06qjgc": "Lionel Messi"
    },
    "qid_topic_entity": {
      "Q615": "Lionel Messi"
    },
    "index": 234
  },
  {
    "QuestionId": "WebQTest-944",
    "RawQuestion": "what was van halen first album?",
    "ProcessedQuestion": "what was van halen first album",
    "Parses": [
      {
        "ParseId": "WebQTest-944.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ycfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ycfj ns:music.artist.album ?x .\n?x ns:music.album.release_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "van halen",
        "TopicEntityName": "Van Halen",
        "TopicEntityMid": "m.0ycfj",
        "InferentialChain": [
          "music.artist.album"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "music.album.release_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vs85p3",
            "EntityName": "Ain't Talkin' 'Bout Love"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ycfj": "Van Halen"
    },
    "qid_topic_entity": {
      "Q190155": "Van Halen"
    },
    "index": 235
  },
  {
    "QuestionId": "WebQTest-1477",
    "RawQuestion": "what episode of how i met your mother is carrie underwood on?",
    "ProcessedQuestion": "what episode of how i met your mother is carrie underwood on",
    "Parses": [
      {
        "ParseId": "WebQTest-1477.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058s57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058s57 ns:tv.tv_actor.guest_roles ?y .\n?y ns:tv.tv_guest_role.episodes_appeared_in ?x .\n?x ns:tv.tv_series_episode.series ns:m.07zhjj .\n}\n",
        "PotentialTopicEntityMention": "carrie underwood",
        "TopicEntityName": "Carrie Underwood",
        "TopicEntityMid": "m.058s57",
        "InferentialChain": [
          "tv.tv_actor.guest_roles",
          "tv.tv_guest_role.episodes_appeared_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07zhjj",
            "EntityName": "How I Met Your Mother",
            "SourceNodeIndex": 1,
            "NodePredicate": "tv.tv_series_episode.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbt_3x",
            "EntityName": "Hooked"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.058s57": "Carrie Underwood"
    },
    "qid_topic_entity": {
      "Q215546": "Carrie Underwood"
    },
    "index": 236
  },
  {
    "QuestionId": "WebQTest-1052",
    "RawQuestion": "who played damien in the omen 2006?",
    "ProcessedQuestion": "who played damien in the omen 2006",
    "Parses": [
      {
        "ParseId": "WebQTest-1052.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07c5kt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07c5kt ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.09s4pt .\n}\n",
        "PotentialTopicEntityMention": "the omen 2006",
        "TopicEntityName": "The Omen",
        "TopicEntityMid": "m.07c5kt",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09s4pt",
            "EntityName": "Damien Thorn",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h9v7d",
            "EntityName": "Tomas Wooler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dcshy",
            "EntityName": "Seamus Davey-Fitzpatrick"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07c5kt": "The Omen"
    },
    "qid_topic_entity": {
      "Q518863": "The Omen"
    },
    "index": 237
  },
  {
    "QuestionId": "WebQTest-16",
    "RawQuestion": "what countries are part of the uk?",
    "ProcessedQuestion": "what countries are part of the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-16.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzjlmp",
            "EntityName": "UK constituent country",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 238
  },
  {
    "QuestionId": "WebQTest-484",
    "RawQuestion": "what language does australia use?",
    "ProcessedQuestion": "what language does australia use",
    "Parses": [
      {
        "ParseId": "WebQTest-484.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gd7",
            "EntityName": "Lojban"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 239
  },
  {
    "QuestionId": "WebQTest-1356",
    "RawQuestion": "what drug killed marilyn monroe?",
    "ProcessedQuestion": "what drug killed marilyn monroe",
    "Parses": [
      {
        "ParseId": "WebQTest-1356.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wqr ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "marilyn monroe",
        "TopicEntityName": "Marilyn Monroe",
        "TopicEntityMid": "m.04wqr",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwj2gf",
            "EntityName": "Barbiturate overdose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04wqr": "Marilyn Monroe"
    },
    "qid_topic_entity": {
      "Q4616": "Marilyn Monroe"
    },
    "index": 240
  },
  {
    "QuestionId": "WebQTest-1520",
    "RawQuestion": "what language speak in brazil?",
    "ProcessedQuestion": "what language speak in brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1520.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zj58",
            "EntityName": "Brazilian Portuguese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1520.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 241
  },
  {
    "QuestionId": "WebQTest-1177",
    "RawQuestion": "where did mario lopez go to school?",
    "ProcessedQuestion": "where did mario lopez go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1177.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w5q6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w5q6 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "mario lopez",
        "TopicEntityName": "Mario Lopez",
        "TopicEntityMid": "m.02w5q6",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0sx6",
            "EntityName": "Chula Vista High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02w5q6": "Mario Lopez"
    },
    "qid_topic_entity": {
      "Q372559": "Mario Lopez"
    },
    "index": 242
  },
  {
    "QuestionId": "WebQTest-294",
    "RawQuestion": "who was carolus linnaeus?",
    "ProcessedQuestion": "who was carolus linnaeus",
    "Parses": [
      {
        "ParseId": "WebQTest-294.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwd ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "carolus linnaeus",
        "TopicEntityName": "Carl Linnaeus",
        "TopicEntityMid": "m.01lwd",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6p1f",
            "EntityName": "Botanist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t4q",
            "EntityName": "Physician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07lqg0",
            "EntityName": "Biologist"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01lwd": "Carl Linnaeus"
    },
    "qid_topic_entity": {
      "Q1043": "Carl Linnaeus"
    },
    "index": 243
  },
  {
    "QuestionId": "WebQTest-1609",
    "RawQuestion": "who played alf on tv show?",
    "ProcessedQuestion": "who played alf on tv show",
    "Parses": [
      {
        "ParseId": "WebQTest-1609.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01klc1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01klc1 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0sgqfm0 .\n}\n",
        "PotentialTopicEntityMention": "alf",
        "TopicEntityName": "ALF",
        "TopicEntityMid": "m.01klc1",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0sgqfm0",
            "EntityName": "ALF",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082765",
            "EntityName": "Paul Fusco"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01klc1": "ALF"
    },
    "qid_topic_entity": {
      "Q264221": "ALF"
    },
    "index": 244
  },
  {
    "QuestionId": "WebQTest-447",
    "RawQuestion": "what did laura ingalls wilder wrote?",
    "ProcessedQuestion": "what did laura ingalls wilder wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-447.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xv15",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3_d",
            "EntityName": "On the banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3_v",
            "EntityName": "Dance at Grandpa's (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3sz",
            "EntityName": "A Little house reader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3td",
            "EntityName": "A little house sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3v8",
            "EntityName": "A little house treasury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3vt",
            "EntityName": "Winter on the Farm (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3w0",
            "EntityName": "Little House Farm Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3w7",
            "EntityName": "My Little House Chapter Book Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3wg",
            "EntityName": "By the shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3wx",
            "EntityName": "Little town on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3x_",
            "EntityName": "Laura & Mr. Edwards (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3xb",
            "EntityName": "Little House the Laura Years Boxed Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3xk",
            "EntityName": "Prairie Day (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3xs",
            "EntityName": "The Little House Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3y6",
            "EntityName": "West from home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3ym",
            "EntityName": "Laura's Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3yw",
            "EntityName": "A Little Prairie House (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3z2",
            "EntityName": "These happy golden years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3zj",
            "EntityName": "Going to Town (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3zr",
            "EntityName": "Dear Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv3zz",
            "EntityName": "On the way home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv401",
            "EntityName": "The adventures of Laura and Jack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv40h",
            "EntityName": "My Book of Little House Paper Dolls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv40r",
            "EntityName": "Laura & Nellie (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv40z",
            "EntityName": "Christmas Stories (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv415",
            "EntityName": "Pioneer Sisters (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv41d",
            "EntityName": "The long winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv41v",
            "EntityName": "Little House (9 Books, Boxed Set)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv421",
            "EntityName": "Hard Times on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv428",
            "EntityName": "Going West (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv42h",
            "EntityName": "Little House Friends (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv42q",
            "EntityName": "School Days (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv42y",
            "EntityName": "Christmas in the Big Woods (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv434",
            "EntityName": "The First Four Years CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv43c",
            "EntityName": "A Little house traveler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv43n",
            "EntityName": "Sugar Snow (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv43w",
            "EntityName": "Saving graces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv449",
            "EntityName": "Animal Adventures (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv44j",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv44r",
            "EntityName": "Santa comes to little house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv455",
            "EntityName": "County Fair (My First Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv45d",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv45v",
            "EntityName": "Words from a fearless heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv468",
            "EntityName": "A Farmer Boy Birthday (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv46h",
            "EntityName": "Little House Parties (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv46q",
            "EntityName": "Laura's Early Years Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv46y",
            "EntityName": "Farmer Boy Days (Little House Chapter Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tv474",
            "EntityName": "My Little House Songbook (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60_0",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60_g",
            "EntityName": "Little House in the Big Woods."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60_q",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60xs",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60yj",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60yt",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60z2",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60zb",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v60zr",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6103",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v610t",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6136",
            "EntityName": "Little house in the big woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v619n",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v619x",
            "EntityName": "Farmer boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61bb",
            "EntityName": "Farmer boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61bt",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61c1",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61c9",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61cl",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61cv",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61d2",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61db",
            "EntityName": "Farmer boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61dt",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61fj",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61g0",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v61gk",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62r4",
            "EntityName": "Little House in the Big Woods (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62rn",
            "EntityName": "Little House in the Big Woods (Classic Mammoth)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62ry",
            "EntityName": "Little House in the Big Woods (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62sf",
            "EntityName": "Little House in the Big Woods 75th Anniversary Edition (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62sp",
            "EntityName": "Little House in the Big Woods (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62sy",
            "EntityName": "Little House In The Big Woods CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62t5",
            "EntityName": "Little House in the Big Woods (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62tf",
            "EntityName": "Little House in the Big Woods (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62tp",
            "EntityName": "Little House in the Big Woods Book and Charm (Charming Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62ty",
            "EntityName": "A Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62vf",
            "EntityName": "Farmer Boy (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62w4",
            "EntityName": "Farmer Boy (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62wz",
            "EntityName": "Farmer Boy (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v63s9",
            "EntityName": "Little House in the Big Woods (Isis Large Print for Children Windrush)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v63sl",
            "EntityName": "Little House In The Big Woods Unabr CD Low Price (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk6g",
            "EntityName": "The first four years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk6x",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk74",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk7d",
            "EntityName": "The first four years."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk7w",
            "EntityName": "The first four years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk8b",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk8l",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk8v",
            "EntityName": "The First Four Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk92",
            "EntityName": "The First Four Years (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk9n",
            "EntityName": "First Four Years (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfk9x",
            "EntityName": "The First Four Years (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfkbm",
            "EntityName": "The First Four Years (Little House (Original Series Library))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfkbw",
            "EntityName": "First Four Years (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcqn",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcr5",
            "EntityName": "Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcrf",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcrq",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcs_",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcs7",
            "EntityName": "Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcsh",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcsr",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhct7",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhcth",
            "EntityName": "The Long Winter (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf3b",
            "EntityName": "Long Winter (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf3w",
            "EntityName": "The Long Winter (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf43",
            "EntityName": "Long Winter (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhf4w",
            "EntityName": "The Long Winter (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj_94",
            "EntityName": "By the Shores of Silver Lake (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj_bg",
            "EntityName": "By the Shores of Silver Lake (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2kx",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2mg",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2mq",
            "EntityName": "Little Town on the Prairie CD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2mz",
            "EntityName": "Little Town on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2n_",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2n6",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2nh",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2nr",
            "EntityName": "Little Town on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2pr",
            "EntityName": "Little Town on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2q0",
            "EntityName": "Little Town on the Prairie (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj2q8",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj347",
            "EntityName": "Little Town On The Prairie (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5v9",
            "EntityName": "These Happy Golden Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5x3",
            "EntityName": "These Happy Golden Years CD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5xc",
            "EntityName": "These happy golden years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5xt",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5y1",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5y9",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5yk",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5z2",
            "EntityName": "These Happy Golden Years (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5zb",
            "EntityName": "These Happy Golden Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj5zl",
            "EntityName": "These Happy Golden Years (Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6sy",
            "EntityName": "These Happy Golden Years (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6ty",
            "EntityName": "These Happy Golden Years (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6vq",
            "EntityName": "These Happy Golden Years (Little House on the Prairie)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vj6w8",
            "EntityName": "These Happy Golden Years (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy1q",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy1z",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy27",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy2k",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy2w",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy3d",
            "EntityName": "On the Banks of Plum Creek (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy3p",
            "EntityName": "On the Banks of Plum Creek (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy3z",
            "EntityName": "On the Banks of Plum Creek (One Cassette)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy46",
            "EntityName": "On the Banks of Plum Creek (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy4g",
            "EntityName": "On the Banks of Plum Creek (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjy4q",
            "EntityName": "On the Banks of Plum Creek (Classic Mammoth)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjysz",
            "EntityName": "On the Banks of Plum Creek CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjyt6",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjytq",
            "EntityName": "On the Banks of Plum Creek (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjyvg",
            "EntityName": "On the Banks of Plum Creek (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjz_f",
            "EntityName": "By the Shores of Silver Lake (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzw_",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzxk",
            "EntityName": "By the shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzy0",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzy8",
            "EntityName": "By the Shores of Silver Lake (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzyj",
            "EntityName": "By the shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzyy",
            "EntityName": "By the Shores of Silver Lake CD (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzz5",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzzg",
            "EntityName": "By the Shores of Silver Lake (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjzzq",
            "EntityName": "By the Shores of Silver Lake (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk2qs",
            "EntityName": "West from Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk2rb",
            "EntityName": "West from home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk2rt",
            "EntityName": "West from Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk30q",
            "EntityName": "On the way home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk34c",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk34p",
            "EntityName": "On the way home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk35b",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk35m",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vk35w",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9mc",
            "EntityName": "A Little House Reader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9ns",
            "EntityName": "A Little House Sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9p3",
            "EntityName": "A Little House Sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9qg",
            "EntityName": "A Little Prairie House (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9r1",
            "EntityName": "Little House Farm Days (Little House Chapter Books/the Laura Years, 7)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9rb",
            "EntityName": "Little House Farm Days (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9s3",
            "EntityName": "Dear Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9vt",
            "EntityName": "Winter on the Farm (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9x4",
            "EntityName": "Winter on the Farm (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9xg",
            "EntityName": "The Adventures of Laura and Jack (A Little House Chapter Book) (A Little house chapter book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9xr",
            "EntityName": "Christmas Stories (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr9yb",
            "EntityName": "Christmas Stories (Little House Chapter Books/the Laura Years, 10)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb04",
            "EntityName": "Going to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb0k",
            "EntityName": "My Book of Little House Paper Dolls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb0t",
            "EntityName": "Going to Town (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb12",
            "EntityName": "Going to Town (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb1c",
            "EntityName": "Little House Friends (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb1n",
            "EntityName": "Going to Town (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb1x",
            "EntityName": "Little House Friends (Little House Chapter Books/the Laura Years, 9)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb24",
            "EntityName": "Hard Times on the Prairie (Little House Chapter Books/the Laura Years, 8)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb2d",
            "EntityName": "Going to town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb2p",
            "EntityName": "Going West (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb2y",
            "EntityName": "Hard Times on the Prairie (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb3_",
            "EntityName": "Pioneer Sisters (Laura (Econo-Clad))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb36",
            "EntityName": "Pioneer Sisters (Little House Chapter Books/the Laura Years, 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb49",
            "EntityName": "Going West (My First Little Houe Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb4l",
            "EntityName": "Christmas in the Big Woods (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb4x",
            "EntityName": "Going West (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb55",
            "EntityName": "Christmas in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb5f",
            "EntityName": "Christmas in the Big Woods (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb5q",
            "EntityName": "Sugar Snow (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb5z",
            "EntityName": "Sugar Snow (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb6d",
            "EntityName": "A Little House Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb6n",
            "EntityName": "Animal Adventures (Little House Chapter Books/the Laura Years, 3)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb6x",
            "EntityName": "The Little House Collection Box Set (Full Color) (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb75",
            "EntityName": "Animal Adventures (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb7f",
            "EntityName": "School Days (Little House Chapter Books/the Laura Years, 4)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb7q",
            "EntityName": "School Days (Laura (Econo-Clad))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb80",
            "EntityName": "School days (Little house chapter book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb88",
            "EntityName": "County Fair (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb8l",
            "EntityName": "Little House Parties (Little House Chapter Books/the Laura Years, 14)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb8y",
            "EntityName": "Little House Parties (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb96",
            "EntityName": "Farmer Boy Days (Little House Chapter Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb9h",
            "EntityName": "Farmer Boy Days (Little House Chapter Books/the Laura Years, 6)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrb9r",
            "EntityName": "Santa Comes to Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbb1",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbb9",
            "EntityName": "My Little House Songbook (My First Little House Books Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbbl",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbbv",
            "EntityName": "My Little House Songbook (My First Little House Books, No 1)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbc2",
            "EntityName": "Santa Comes to Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbcb",
            "EntityName": "Santa Comes to Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbcm",
            "EntityName": "Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbcy",
            "EntityName": "The deer in the wood (My first Little house books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbd5",
            "EntityName": "The Deer in the Wood (My First Little House Books (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbdf",
            "EntityName": "The Deer in the Wood (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbdp",
            "EntityName": "The Deer in the Wood (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vrbdz",
            "EntityName": "The Deer in the Wood (My First Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01c1",
            "EntityName": "Little House on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01c9",
            "EntityName": "Little House on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01ck",
            "EntityName": "Little House on the Prairie (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01d2",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01db",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01dn",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01f5",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01g5",
            "EntityName": "The Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01h5",
            "EntityName": "The Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01hg",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w01j7",
            "EntityName": "Little House On The Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w03z6",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w040v",
            "EntityName": "Little house on the prairie."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w0412",
            "EntityName": "Little house on the prairie."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w041j",
            "EntityName": "Little House On The Prairie (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w041s",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w0426",
            "EntityName": "Little house on the prairie."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w043p",
            "EntityName": "Little house on the prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06jj",
            "EntityName": "Little House on the Prairie (Classic Mammoth)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06jt",
            "EntityName": "Little House on the Prairie NW 247"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06ks",
            "EntityName": "Little House on the Prairie (Little Brown Notebook Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06l1",
            "EntityName": "Little House on the Prairie (Little House Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06l9",
            "EntityName": "Little House on the Prairie (Little House (HarperTrophy))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06lt",
            "EntityName": "Little House On The Prairie CD (Little House the Laura Years)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06mm",
            "EntityName": "Little House on the Prairie Tie-in Edition (Little House)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06mw",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06ng",
            "EntityName": "Little House On The Prairie (Little House (Original Series Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w06nq",
            "EntityName": "Little House on the Prairie Book and Charm (Charming Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w07f9",
            "EntityName": "Little House On The Prairie Low Price CD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w07gk",
            "EntityName": "Little House on the Prairie Boxed Set ((9 Books) Little House On the Prairie; Farmer Boy; On the Banks of Plum Creek; the Long Winter; These Happy Golden Years; the First Four Years; By the Shores of Silver Lake; Little House In the Big Woods; Little Town On the Prairie)"
          }
        ]
      },
      {
        "ParseId": "WebQTest-447.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b60fcs_w",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.122chq7m",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ggzp5",
            "EntityName": "Little House in the Ozarks: The Rediscovered Writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh1b9",
            "EntityName": "A Little House Birthday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh2zr",
            "EntityName": "Summertime in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh312",
            "EntityName": "Winter Days in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh3gq",
            "EntityName": "Bedtime for Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh4d6",
            "EntityName": "Laura Helps Pa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh67y",
            "EntityName": "Laura's Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh69s",
            "EntityName": "Hello, Laura!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gh9fh",
            "EntityName": "My Book of Little House Christmas Paper Dolls: Christmas on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghb47",
            "EntityName": "My Little House 123"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghcz6",
            "EntityName": "My Little House Birthday Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghdw7",
            "EntityName": "My Little House Book of Animals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghdyx",
            "EntityName": "My Little House Book of Family"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghfbg",
            "EntityName": "My Little House Book of Memories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghfvc",
            "EntityName": "My Little House Diary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghfx8",
            "EntityName": "Dear Laura: Letters from Children to Laura Ingalls Wilder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghgcw",
            "EntityName": "Little House Sisters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ghgmr",
            "EntityName": "The Little House Baby Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r34qs",
            "EntityName": "Santa comes to little house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r3lf1",
            "EntityName": "Laura & Mr. Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r4070",
            "EntityName": "Saving graces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r40l7",
            "EntityName": "Little House Friends"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r4f77",
            "EntityName": "A Farmer Boy Birthday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r4sgv",
            "EntityName": "A Little House Reader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r506y",
            "EntityName": "Little House Farm Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r8h92",
            "EntityName": "Country Fair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010rnr_1",
            "EntityName": "Christmas Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027qfnk",
            "EntityName": "The Long Winter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q8085",
            "EntityName": "The First Four Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqh0p",
            "EntityName": "Little House in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vl7t6",
            "EntityName": "On the Banks of Plum Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x87pj",
            "EntityName": "By the Shores of Silver Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x87s8",
            "EntityName": "Little Town on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x87t_",
            "EntityName": "These Happy Golden Years"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x880w",
            "EntityName": "Farmer Boy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0462nj3",
            "EntityName": "West from Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0462r95",
            "EntityName": "On the Way Home"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31_h",
            "EntityName": "School Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31_r",
            "EntityName": "Christmas in the Big Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31th",
            "EntityName": "A little house sampler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31v_",
            "EntityName": "Little House the Laura Years Boxed Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31v7",
            "EntityName": "Winter on the Farm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31vr",
            "EntityName": "My Little House Chapter Book Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31w_",
            "EntityName": "Laura's Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31w7",
            "EntityName": "Prairie Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31wh",
            "EntityName": "A little house treasury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31x_",
            "EntityName": "Dance at Grandpa's"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31x7",
            "EntityName": "A Little Prairie House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31xh",
            "EntityName": "Going to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31xr",
            "EntityName": "Dear Laura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31y7",
            "EntityName": "The adventures of Laura and Jack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31yh",
            "EntityName": "My Book of Little House Paper Dolls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31yr",
            "EntityName": "Laura & Nellie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31z_",
            "EntityName": "Going West"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31z7",
            "EntityName": "Pioneer Sisters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31zh",
            "EntityName": "Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t31zr",
            "EntityName": "Hard Times on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t320_",
            "EntityName": "The Deer in the Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3207",
            "EntityName": "Sugar Snow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t320r",
            "EntityName": "Animal Adventures"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t321r",
            "EntityName": "Words from a fearless heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t322_",
            "EntityName": "My Little House Songbook"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3227",
            "EntityName": "Little House Parties"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t322h",
            "EntityName": "Laura's Early Years Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t322r",
            "EntityName": "Farmer Boy Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_tw6s",
            "EntityName": "A Little House Traveler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06614rb",
            "EntityName": "Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068f65l",
            "EntityName": "A FAMILY COLLECTION"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069832t",
            "EntityName": "Orillas del r\u00edo Plum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bwxcn",
            "EntityName": "1998 Laura Ingalls Wilder Country Engagement Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dgz9j",
            "EntityName": "Caroline and Her Sister"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dwl46",
            "EntityName": "The Complete Little House on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jjd8t",
            "EntityName": "Laura's Little House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qllnk",
            "EntityName": "Laura Ingalls Wilder's prairie wisdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qzzw7",
            "EntityName": "Largo Invierno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s4dxs",
            "EntityName": "A Day on the Prairie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tlq0c",
            "EntityName": "Laura's Pa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tprs4",
            "EntityName": "Writings to young women from Laura Ingalls Wilder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3zd0c",
            "EntityName": "Little House on the Prairie"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bt87": "Laura Ingalls Wilder"
    },
    "qid_topic_entity": {
      "Q237514": "Laura Ingalls Wilder"
    },
    "index": 245
  },
  {
    "QuestionId": "WebQTest-1582",
    "RawQuestion": "what time in china hong kong?",
    "ProcessedQuestion": "what time in china hong kong",
    "Parses": [
      {
        "ParseId": "WebQTest-1582.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h64)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h64 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hong kong",
        "TopicEntityName": "Hong Kong",
        "TopicEntityMid": "m.03h64",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qqww",
            "EntityName": "Hong Kong Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03h64": "Hong Kong"
    },
    "qid_topic_entity": {
      "Q8646": "Hong Kong"
    },
    "index": 246
  },
  {
    "QuestionId": "WebQTest-1501",
    "RawQuestion": "where is the un based?",
    "ProcessedQuestion": "where is the un based",
    "Parses": [
      {
        "ParseId": "WebQTest-1501.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t65)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t65 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "un",
        "TopicEntityName": "United Nations",
        "TopicEntityMid": "m.07t65",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07t65": "United Nations"
    },
    "qid_topic_entity": {
      "Q1065": "United Nations"
    },
    "index": 247
  },
  {
    "QuestionId": "WebQTest-559",
    "RawQuestion": "what instrument did robin gibb play?",
    "ProcessedQuestion": "what instrument did robin gibb play",
    "Parses": [
      {
        "ParseId": "WebQTest-559.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137hn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137hn ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "robin gibb",
        "TopicEntityName": "Robin Gibb",
        "TopicEntityMid": "m.0137hn",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r5c",
            "EntityName": "Piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y_7",
            "EntityName": "Violin"
          }
        ]
      },
      {
        "ParseId": "WebQTest-559.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137hn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137hn ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?x ns:common.topic.notable_types ns:m.0kpv25 .\n}\n",
        "PotentialTopicEntityMention": "robin gibb",
        "TopicEntityName": "Robin Gibb",
        "TopicEntityMid": "m.0137hn",
        "InferentialChain": [
          "music.group_member.membership",
          "music.group_membership.role"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpv25",
            "EntityName": "Musical instrument",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0290ngj",
            "EntityName": "Vocals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qjg",
            "EntityName": "Harmonica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r5c",
            "EntityName": "Piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y_7",
            "EntityName": "Violin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cfdd",
            "EntityName": "Drum machine"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0137hn": "Robin Gibb"
    },
    "qid_topic_entity": {
      "Q188482": "Robin Gibb"
    },
    "index": 248
  },
  {
    "QuestionId": "WebQTest-1562",
    "RawQuestion": "what countries constitute the eu?",
    "ProcessedQuestion": "what countries constitute the eu",
    "Parses": [
      {
        "ParseId": "WebQTest-1562.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_6t_z8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_6t_z8 ns:organization.membership_organization.members ?y .\n?y ns:organization.organization_membership.member ?x .\n}\n",
        "PotentialTopicEntityMention": "eu",
        "TopicEntityName": "European Union",
        "TopicEntityMid": "m.0_6t_z8",
        "InferentialChain": [
          "organization.membership_organization.members",
          "organization.organization_membership.member"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015qh",
            "EntityName": "Bulgaria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mjq",
            "EntityName": "Czech Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pj7",
            "EntityName": "Croatia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kmm",
            "EntityName": "Estonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vzc",
            "EntityName": "Finland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035qy",
            "EntityName": "Greece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gj2",
            "EntityName": "Hungary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rjj",
            "EntityName": "Italy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g5k",
            "EntityName": "Latvia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gzd",
            "EntityName": "Lithuania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059j2",
            "EntityName": "Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r4w",
            "EntityName": "Portugal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c1y",
            "EntityName": "Romania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06npd",
            "EntityName": "Slovakia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t8v",
            "EntityName": "Slovenia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0vqn",
            "EntityName": "Sweden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k6nt",
            "EntityName": "Denmark"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0_6t_z8": "European Union"
    },
    "qid_topic_entity": {
      "Q458": "European Union"
    },
    "index": 249
  },
  {
    "QuestionId": "WebQTest-20",
    "RawQuestion": "what did st augustine do?",
    "ProcessedQuestion": "what did st augustine do",
    "Parses": [
      {
        "ParseId": "WebQTest-20.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0w6w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0w6w ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "augustine",
        "TopicEntityName": "Augustine of Hippo",
        "TopicEntityMid": "m.0w6w",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t4q",
            "EntityName": "Physician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0w6w": "Augustine of Hippo"
    },
    "qid_topic_entity": {
      "Q8018": "Augustine of Hippo"
    },
    "index": 250
  },
  {
    "QuestionId": "WebQTest-1607",
    "RawQuestion": "who won fedex cup 2012?",
    "ProcessedQuestion": "who won fedex cup 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1607.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? 2012"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08q5ws)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08q5ws ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.0hrfg40 .\n}\n",
        "PotentialTopicEntityMention": "fedex cup",
        "TopicEntityName": "FedEx Cup",
        "TopicEntityMid": "m.08q5ws",
        "InferentialChain": [
          "sports.sports_award_type.winners",
          "sports.sports_award.award_winner"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hrfg40",
            "EntityName": "2012 PGA Tour",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.season",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vnxb_",
            "EntityName": "Brandt Snedeker"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08q5ws": "FedEx Cup"
    },
    "qid_topic_entity": {
      "Q1399835": "FedEx Cup"
    },
    "index": 251
  },
  {
    "QuestionId": "WebQTest-1696",
    "RawQuestion": "what did ferdinand magellan do?",
    "ProcessedQuestion": "what did ferdinand magellan do",
    "Parses": [
      {
        "ParseId": "WebQTest-1696.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033ky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033ky ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "ferdinand magellan",
        "TopicEntityName": "Ferdinand Magellan",
        "TopicEntityMid": "m.033ky",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wtf",
            "EntityName": "Sailor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023nrw",
            "EntityName": "Navigator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040vc4s",
            "EntityName": "Explorer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033ky": "Ferdinand Magellan"
    },
    "qid_topic_entity": {
      "Q1496": "Ferdinand Magellan"
    },
    "index": 252
  },
  {
    "QuestionId": "WebQTest-1553",
    "RawQuestion": "where does sami yusuf live?",
    "ProcessedQuestion": "where does sami yusuf live",
    "Parses": [
      {
        "ParseId": "WebQTest-1553.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08cnsg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08cnsg ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "sami yusuf",
        "TopicEntityName": "Sami Yusuf",
        "TopicEntityMid": "m.08cnsg",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftlx",
            "EntityName": "Tehran"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08cnsg": "Sami Yusuf"
    },
    "qid_topic_entity": {
      "Q558226": "Sami Yusuf"
    },
    "index": 253
  },
  {
    "QuestionId": "WebQTest-561",
    "RawQuestion": "when was abe lincoln president?",
    "ProcessedQuestion": "when was abe lincoln president",
    "Parses": [
      {
        "ParseId": "WebQTest-561.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:base.inaugurations.inauguration_speaker.inauguration ?x .\n}\n",
        "PotentialTopicEntityMention": "abe lincoln",
        "TopicEntityName": "Abraham Lincoln",
        "TopicEntityMid": "m.0gzh",
        "InferentialChain": [
          "base.inaugurations.inauguration_speaker.inauguration"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05brd51",
            "EntityName": "Abraham Lincoln 1861 presidential inauguration"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05brd5c",
            "EntityName": "Abraham Lincoln 1865 presidential inauguration"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gzh": "Abraham Lincoln"
    },
    "qid_topic_entity": {
      "Q91": "Abraham Lincoln"
    },
    "index": 254
  },
  {
    "QuestionId": "WebQTest-300",
    "RawQuestion": "who is sir francis bacon?",
    "ProcessedQuestion": "who is sir francis bacon",
    "Parses": [
      {
        "ParseId": "WebQTest-300.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030dr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030dr ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "francis bacon",
        "TopicEntityName": "Francis Bacon",
        "TopicEntityMid": "m.030dr",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.125_hzb47",
            "EntityName": "Spy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fc2",
            "EntityName": "Statesman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030dr": "Francis Bacon"
    },
    "qid_topic_entity": {
      "Q37388": "Francis Bacon"
    },
    "index": 255
  },
  {
    "QuestionId": "WebQTest-638",
    "RawQuestion": "what languages are there in japan?",
    "ProcessedQuestion": "what languages are there in japan",
    "Parses": [
      {
        "ParseId": "WebQTest-638.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "japan",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwhyv",
            "EntityName": "Korean Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_9r",
            "EntityName": "Japanese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jdg7",
            "EntityName": "Ainu Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 256
  },
  {
    "QuestionId": "WebQTest-83",
    "RawQuestion": "which countries speak german officially?",
    "ProcessedQuestion": "which countries speak german officially",
    "Parses": [
      {
        "ParseId": "WebQTest-83.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.04306rv .\n}\n",
        "PotentialTopicEntityMention": "german",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04306rv",
            "EntityName": "German Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 257
  },
  {
    "QuestionId": "WebQTest-502",
    "RawQuestion": "where did al qaeda attack?",
    "ProcessedQuestion": "where did al qaeda attack",
    "Parses": [
      {
        "ParseId": "WebQTest-502.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? attack event vs. where"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v74)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v74 ns:base.disaster2.attacker.attack_s ?y .\n?y ns:base.disaster2.attack_process.attack_event ?x .\n?y ns:base.disaster2.attack_process.attacker ns:m.0v74 .\n}\n",
        "PotentialTopicEntityMention": "al qaeda",
        "TopicEntityName": "Al-Qaeda",
        "TopicEntityMid": "m.0v74",
        "InferentialChain": [
          "base.disaster2.attacker.attack_s",
          "base.disaster2.attack_process.attack_event"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0v74",
            "EntityName": "Al-Qaeda",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.disaster2.attack_process.attacker",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6cwg",
            "EntityName": "Taliban insurgency"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0vp3",
            "EntityName": "September 11 attacks"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0v74": "Al-Qaeda"
    },
    "qid_topic_entity": {
      "Q34490": "Al-Qaeda"
    },
    "index": 258
  },
  {
    "QuestionId": "WebQTest-1617",
    "RawQuestion": "what did nicholas copernicus discover?",
    "ProcessedQuestion": "what did nicholas copernicus discover",
    "Parses": [
      {
        "ParseId": "WebQTest-1617.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvm4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvm4 ns:base.argumentmaps.innovator.original_ideas ?x .\n}\n",
        "PotentialTopicEntityMention": "nicholas copernicus",
        "TopicEntityName": "Nicolaus Copernicus",
        "TopicEntityMid": "m.01vvm4",
        "InferentialChain": [
          "base.argumentmaps.innovator.original_ideas"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kf8z",
            "EntityName": "Heliocentrism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027lfyz",
            "EntityName": "Copernican heliocentrism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p6y2z",
            "EntityName": "Copernican Revolution"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vvm4": "Nicolaus Copernicus"
    },
    "qid_topic_entity": {
      "Q619": "Nicolaus Copernicus"
    },
    "index": 259
  },
  {
    "QuestionId": "WebQTest-1101",
    "RawQuestion": "who is martin luther king jr facts?",
    "ProcessedQuestion": "who is martin luther king jr facts",
    "Parses": [
      {
        "ParseId": "WebQTest-1101.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "martin luther king jr",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010b8yqs",
            "EntityName": "Civil rights activist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fhsb",
            "EntityName": "Pastor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0377kt",
            "EntityName": "Minister"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065qmpf",
            "EntityName": "Humanitarian"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0db79",
            "EntityName": "Clergy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 260
  },
  {
    "QuestionId": "WebQTest-1269",
    "RawQuestion": "where was the boston tea party 1773?",
    "ProcessedQuestion": "where was the boston tea party 1773",
    "Parses": [
      {
        "ParseId": "WebQTest-1269.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ccd96)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ccd96 ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "boston tea party",
        "TopicEntityName": "Boston Tea Party",
        "TopicEntityMid": "m.0ccd96",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n7kgz",
            "EntityName": "Boston Harbor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ccd96": "Boston Tea Party"
    },
    "qid_topic_entity": {
      "Q19024": "Boston Tea Party"
    },
    "index": 261
  },
  {
    "QuestionId": "WebQTest-116",
    "RawQuestion": "which country was justin bieber born in?",
    "ProcessedQuestion": "which country was justin bieber born in",
    "Parses": [
      {
        "ParseId": "WebQTest-116.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F place_of_birth -> contained_by & type = country"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.06w2sn5 ns:people.person.place_of_birth ?y .\n\t?y ns:location.location.containedby ?x .\n\t?x ns:common.topic.notable_types ns:m.01mp .  #Country\n}",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 262
  },
  {
    "QuestionId": "WebQTest-659",
    "RawQuestion": "what form of government is the uk?",
    "ProcessedQuestion": "what form of government is the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-659.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 263
  },
  {
    "QuestionId": "WebQTest-1020",
    "RawQuestion": "what highschool did r. kelly attend?",
    "ProcessedQuestion": "what highschool did r. kelly attend",
    "Parses": [
      {
        "ParseId": "WebQTest-1020.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ffgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ffgh ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:education.educational_institution.school_type ns:m.0bpgx .\n}\n",
        "PotentialTopicEntityMention": "r . kelly",
        "TopicEntityName": "R. Kelly",
        "TopicEntityMid": "m.0ffgh",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0bpgx",
            "EntityName": "High school",
            "SourceNodeIndex": 1,
            "NodePredicate": "education.educational_institution.school_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012vtjc5",
            "EntityName": "Kenwood Academy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ffgh": "R. Kelly"
    },
    "qid_topic_entity": {
      "Q273055": "R. Kelly"
    },
    "index": 264
  },
  {
    "QuestionId": "WebQTest-1362",
    "RawQuestion": "who is the state governor of florida?",
    "ProcessedQuestion": "who is the state governor of florida",
    "Parses": [
      {
        "ParseId": "WebQTest-1362.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xry ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "florida",
        "TopicEntityName": "Florida",
        "TopicEntityMid": "m.02xry",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fkvn",
            "EntityName": "Governor",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0btx2g",
            "EntityName": "Rick Scott"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xry": "Florida"
    },
    "qid_topic_entity": {
      "Q812": "Florida"
    },
    "index": 265
  },
  {
    "QuestionId": "WebQTest-1344",
    "RawQuestion": "what two states is st louis in?",
    "ProcessedQuestion": "what two states is st louis in",
    "Parses": [
      {
        "ParseId": "WebQTest-1344.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "not in two states, but we ignore when the question has the count wrong."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06wxw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06wxw ns:location.location.containedby ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"State\")\n}\n",
        "PotentialTopicEntityMention": "st louis",
        "TopicEntityName": "St. Louis",
        "TopicEntityMid": "m.06wxw",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "State",
            "EntityName": null,
            "SourceNodeIndex": 0,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06wxw": "St. Louis"
    },
    "qid_topic_entity": {
      "Q38022": "St. Louis"
    },
    "index": 266
  },
  {
    "QuestionId": "WebQTest-256",
    "RawQuestion": "what is the primary language of china?",
    "ProcessedQuestion": "what is the primary language of china",
    "Parses": [
      {
        "ParseId": "WebQTest-256.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "china",
        "TopicEntityName": "China",
        "TopicEntityMid": "m.0d05w3",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0653m",
            "EntityName": "Standard Chinese"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d05w3": "China"
    },
    "qid_topic_entity": {
      "Q148": "China"
    },
    "index": 267
  },
  {
    "QuestionId": "WebQTest-51",
    "RawQuestion": "who will play mr gray in the film?",
    "ProcessedQuestion": "who will play mr gray in the film",
    "Parses": [
      {
        "ParseId": "WebQTest-51.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nfjvrm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nfjvrm ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "mr gray",
        "TopicEntityName": "Christian Grey",
        "TopicEntityMid": "m.0nfjvrm",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fs4kv",
            "EntityName": "Jamie Dornan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0nfjvrm": "Christian Grey"
    },
    "qid_topic_entity": {
      "UnknownQID": "Christian Grey"
    },
    "index": 268
  },
  {
    "QuestionId": "WebQTest-193",
    "RawQuestion": "what school did ben roethlisberger go to?",
    "ProcessedQuestion": "what school did ben roethlisberger go to",
    "Parses": [
      {
        "ParseId": "WebQTest-193.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033t8w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033t8w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "ben roethlisberger",
        "TopicEntityName": "Ben Roethlisberger",
        "TopicEntityMid": "m.033t8w",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01r3y2",
            "EntityName": "Miami University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033t8w": "Ben Roethlisberger"
    },
    "qid_topic_entity": {
      "Q537679": "Ben Roethlisberger"
    },
    "index": 269
  },
  {
    "QuestionId": "WebQTest-740",
    "RawQuestion": "who was selena gomez in barney and friends?",
    "ProcessedQuestion": "who was selena gomez in barney and friends",
    "Parses": [
      {
        "ParseId": "WebQTest-740.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1n1 .\n}\n",
        "PotentialTopicEntityMention": "selena gomez",
        "TopicEntityName": "Selena Gomez",
        "TopicEntityMid": "m.0gs6vr",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1n1",
            "EntityName": "Barney & Friends - Season 7",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1vj .\n}\n",
        "PotentialTopicEntityMention": "selena gomez",
        "TopicEntityName": "Selena Gomez",
        "TopicEntityMid": "m.0gs6vr",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1vj",
            "EntityName": "Barney & Friends - Season 8",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gs6vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gs6vr ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.01f4yy .\n}\n",
        "PotentialTopicEntityMention": "selena gomez",
        "TopicEntityName": "Selena Gomez",
        "TopicEntityMid": "m.0gs6vr",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01f4yy",
            "EntityName": "Barney & Friends",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f4yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f4yy ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.actor ns:m.0gs6vr .\n}\n",
        "PotentialTopicEntityMention": "barney and friends",
        "TopicEntityName": "Barney & Friends",
        "TopicEntityMid": "m.01f4yy",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0gs6vr",
            "EntityName": "Selena Gomez",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f4yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f4yy ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1n1 .\n}\n",
        "PotentialTopicEntityMention": "barney and friends",
        "TopicEntityName": "Barney & Friends",
        "TopicEntityMid": "m.01f4yy",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1n1",
            "EntityName": "Barney & Friends - Season 7",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      },
      {
        "ParseId": "WebQTest-740.P5",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f4yy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f4yy ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.06xv1vj .\n}\n",
        "PotentialTopicEntityMention": "barney and friends",
        "TopicEntityName": "Barney & Friends",
        "TopicEntityMid": "m.01f4yy",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06xv1vj",
            "EntityName": "Barney & Friends - Season 8",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3b6x",
            "EntityName": "Gianna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gs6vr": "Selena Gomez",
      "m.01f4yy": "Barney & Friends"
    },
    "qid_topic_entity": {
      "Q83287": "Selena Gomez",
      "Q213588": "Barney & Friends"
    },
    "index": 270
  },
  {
    "QuestionId": "WebQTest-1435",
    "RawQuestion": "who did kurt warner play 4?",
    "ProcessedQuestion": "who did kurt warner play 4",
    "Parses": [
      {
        "ParseId": "WebQTest-1435.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025j0c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025j0c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "kurt warner",
        "TopicEntityName": "Kurt Warner",
        "TopicEntityMid": "m.025j0c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02y5f_",
            "EntityName": "Amsterdam Admirals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m3x9z",
            "EntityName": "Northern Iowa Panthers football"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bd9b5",
            "EntityName": "Iowa Barnstormers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05gg4",
            "EntityName": "New York Giants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06x76",
            "EntityName": "St. Louis Rams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ws7",
            "EntityName": "Arizona Cardinals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.025j0c": "Kurt Warner"
    },
    "qid_topic_entity": {
      "Q945750": "Kurt Warner"
    },
    "index": 271
  },
  {
    "QuestionId": "WebQTest-651",
    "RawQuestion": "what is the currency of germany now?",
    "ProcessedQuestion": "what is the currency of germany now",
    "Parses": [
      {
        "ParseId": "WebQTest-651.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 272
  },
  {
    "QuestionId": "WebQTest-1068",
    "RawQuestion": "what famous people are from barbados?",
    "ProcessedQuestion": "what famous people are from barbados",
    "Parses": [
      {
        "ParseId": "WebQTest-1068.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0162v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0162v ns:location.location.people_born_here ?x .\n}\n",
        "PotentialTopicEntityMention": "barbados",
        "TopicEntityName": "Barbados",
        "TopicEntityMid": "m.0162v",
        "InferentialChain": [
          "location.location.people_born_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b7k2x4z9",
            "EntityName": "Hadan Holligan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_g9k3x",
            "EntityName": "Xavier Marcus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0107zsh2",
            "EntityName": "Kycia Knight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0108fxhy",
            "EntityName": "Shaquana Quintyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0108k30n",
            "EntityName": "Shakera Selman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010944fr",
            "EntityName": "Kyshona Knight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010q858j",
            "EntityName": "Shane Dowrich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010q8lnv",
            "EntityName": "Ryan Wiggins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010q998q",
            "EntityName": "Rashidi Boucher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qdk6m",
            "EntityName": "Kyle Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qdlf6",
            "EntityName": "Kyle Corbin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qxhv6",
            "EntityName": "Dadrian Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010qy9tk",
            "EntityName": "Anthony Alleyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r2ym6",
            "EntityName": "Romario Harewood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010r2yzx",
            "EntityName": "Chai Lloyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v60p4",
            "EntityName": "Michael Stoute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v8dhb",
            "EntityName": "Kensley Reece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v9695",
            "EntityName": "Richard Roett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v9y2t",
            "EntityName": "Colin Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0120_tpt",
            "EntityName": "Raheim Sargeant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012ccfhn",
            "EntityName": "Renaldo Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012fbp3v",
            "EntityName": "Eyre Sealy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012fnq_t",
            "EntityName": "Thomas Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012hswmw",
            "EntityName": "Alana Shipp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012zwmn9",
            "EntityName": "Andy Straughn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131804q",
            "EntityName": "Jabarry Chandler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131l5ld",
            "EntityName": "Shai Hope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m_td",
            "EntityName": "Cecil Foster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n9gcl",
            "EntityName": "Rayvon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01sx302",
            "EntityName": "Kat Flint"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vr2hw",
            "EntityName": "Arturo Tappin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0230n8",
            "EntityName": "Owen Arthur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025tkwd",
            "EntityName": "Hartley Alleyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_1p7",
            "EntityName": "John Lucas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_9br",
            "EntityName": "Arthur Hendy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_9fv",
            "EntityName": "Hal Padmore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026tz62",
            "EntityName": "Albert Beckles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026vyy9",
            "EntityName": "Ricky Hoyte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026vzz_",
            "EntityName": "Winston Reid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xq_7",
            "EntityName": "Wendell White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026yx_5",
            "EntityName": "Roger Blades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027m7rb",
            "EntityName": "Ashley Bickerton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028bj87",
            "EntityName": "Martin Nurse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02plmkt",
            "EntityName": "Emmerson Trotman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pv7kl",
            "EntityName": "Mabel Keaton Staupers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q3vwy",
            "EntityName": "Jim Hendy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q7q0v",
            "EntityName": "William T. Shorey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qbst5",
            "EntityName": "Greg Armstrong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qq4b0",
            "EntityName": "Pamela Lavine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qx5n1",
            "EntityName": "Richard B. Moore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r19k7",
            "EntityName": "Float Woods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rct77",
            "EntityName": "Avinash Persaud"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rs2md",
            "EntityName": "Frank L. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vwvpy",
            "EntityName": "Alvin Rouse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w111v",
            "EntityName": "Percy Tarilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w9x1g",
            "EntityName": "George Blackman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wxfxz",
            "EntityName": "Redd Pepper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz40d",
            "EntityName": "Chris Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x05p0",
            "EntityName": "Clyde Mascoll"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z2pb2",
            "EntityName": "Sam Seale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034vf3",
            "EntityName": "Anne Cools"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5cr8",
            "EntityName": "Tony Cordle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c9nv4",
            "EntityName": "Wyndham Gittens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cd2zh",
            "EntityName": "Magnet Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m5gpf",
            "EntityName": "Mia Mottley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m73t1",
            "EntityName": "Shawn Terry Cox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rtck",
            "EntityName": "Gordon Greenidge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y1rjj",
            "EntityName": "Douglas Dummett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ypd7",
            "EntityName": "Billie Miller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0404cm7",
            "EntityName": "Rickey A. Walcott"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04117kf",
            "EntityName": "Priya Balachandran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043jyyl",
            "EntityName": "Norman Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043ld4n",
            "EntityName": "Dave Wilkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043nldb",
            "EntityName": "Henry Doorly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047g6p6",
            "EntityName": "Kirk Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047q1c6",
            "EntityName": "John Parris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qgtj",
            "EntityName": "Frank Leslie Walcott"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cwrys",
            "EntityName": "Seibert Straughn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ljlgb",
            "EntityName": "Sylvester Braithwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mh9r",
            "EntityName": "Tom Adams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mzc8r",
            "EntityName": "George Alleyne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n4k80",
            "EntityName": "William Perkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qj3s",
            "EntityName": "Arnold Josiah Ford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y7h9y",
            "EntityName": "Edwin Lascelles, 1st Baron Harewood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zy_n7",
            "EntityName": "Ricardo Ellcock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.052bx2",
            "EntityName": "Wilfred Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05693hn",
            "EntityName": "Anthony Forde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056yxj6",
            "EntityName": "Micky Welch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b_1p_",
            "EntityName": "Hal Linton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b1nny",
            "EntityName": "Lunden De'Leon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p12q",
            "EntityName": "Nita Barrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p94m0",
            "EntityName": "Deandra Dottin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05st_5s",
            "EntityName": "Renn Dickson Hampden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vbn23",
            "EntityName": "June Gibbons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vbn2b",
            "EntityName": "Jennifer Gibbons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05x9ntq",
            "EntityName": "Austin Clarke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xcwdm",
            "EntityName": "Odimumba Kwamdela"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yp45f",
            "EntityName": "Hilary Beckles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zqm30",
            "EntityName": "Colin Young"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zyb9w",
            "EntityName": "Hugh Laing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0642g82",
            "EntityName": "John Holder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065__bc",
            "EntityName": "Nick Nanton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yqvq",
            "EntityName": "Michael Stoute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06z_b2",
            "EntityName": "Alison Sealy-Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bgh9",
            "EntityName": "Frank Collymore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kfdb6",
            "EntityName": "G. Aubrey Goodman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07mpb5",
            "EntityName": "Lloyd Erskine Sandiford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07r45s",
            "EntityName": "Christopher Codrington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sbtf6",
            "EntityName": "Samuel Hinds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zxk1",
            "EntityName": "Tony Reid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080k9x",
            "EntityName": "Conrad Hunte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087fwn",
            "EntityName": "Ryan Hinds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0893kc",
            "EntityName": "Philo Wallace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dgms",
            "EntityName": "Tony Cozier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08k_fp",
            "EntityName": "William Maynard Gomm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08nk77",
            "EntityName": "Alan Emtage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08pv1p",
            "EntityName": "Seymour Nurse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08wk6h",
            "EntityName": "Anderson Cummins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09_thk",
            "EntityName": "Neville Goddard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09g74xf",
            "EntityName": "James Waithe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gdd5t",
            "EntityName": "Lloyd A. Thompson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gfmbm",
            "EntityName": "Jaicko"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n9zw",
            "EntityName": "Peter Lashley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09nb1m",
            "EntityName": "Prof Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pdvm",
            "EntityName": "Robert Callender"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09rt08y",
            "EntityName": "Agymah Kamau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09zmg_",
            "EntityName": "John Goddard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4pgk",
            "EntityName": "Robin Bynoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4ptg",
            "EntityName": "Charlie Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4rkl",
            "EntityName": "David Holford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5pgq",
            "EntityName": "John Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b6kq0",
            "EntityName": "Ron King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7xfc",
            "EntityName": "Tony White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bgkmm",
            "EntityName": "Zeeteah Massiah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm48p",
            "EntityName": "Robert Bailey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3v54p",
            "EntityName": "Tim Thorogood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c4nk4",
            "EntityName": "Hugh Springer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c7wb4",
            "EntityName": "Goodridge Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc5g7x",
            "EntityName": "Jon Rubin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ch4swd",
            "EntityName": "Woodie Blackman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm98yx",
            "EntityName": "Annalee Davis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cny4yb",
            "EntityName": "Nevada Phillips"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cp0yg6",
            "EntityName": "Clennell Wickham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d282g",
            "EntityName": "Henry Honychurch Gorringe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d7lc1",
            "EntityName": "Trevor W. Payne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dllk5h",
            "EntityName": "Richard Pile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtr9d",
            "EntityName": "Hugh Gordon Cummins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5cw7",
            "EntityName": "Lene Hall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhhp9",
            "EntityName": "Javon Searles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8mmz",
            "EntityName": "Earl Maynard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g9cp88",
            "EntityName": "Karen Lord"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gc1y3",
            "EntityName": "Samuel Jackman Prescod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gc9rb0",
            "EntityName": "Sylvesta Stuart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcbl8x",
            "EntityName": "Roy Callender"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gg3_l",
            "EntityName": "George Codrington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gl7xv",
            "EntityName": "Marita Payne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmdwcb",
            "EntityName": "John Richard Farre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gnjlj",
            "EntityName": "Gregory Goodridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtt10v",
            "EntityName": "Wayne Sobers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtvcmt",
            "EntityName": "Romell Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtxh22",
            "EntityName": "Dwight James"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gvs5vx",
            "EntityName": "Anthony Kellman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyrytx",
            "EntityName": "Sir William Randolph Douglas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyty25",
            "EntityName": "Denys Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0wgc",
            "EntityName": "Glenville Lovell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h30zg_",
            "EntityName": "Monica Braithwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h30zh5",
            "EntityName": "Ronald Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5b5d",
            "EntityName": "Dennis Archer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7ml7x",
            "EntityName": "William Cleeve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3fw23",
            "EntityName": "Keith Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3wx9s",
            "EntityName": "Jason Boxhill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3wxb7",
            "EntityName": "Omar Archer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfd8",
            "EntityName": "Bryan Neblett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfdz",
            "EntityName": "Adrian Chase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfg3",
            "EntityName": "Dwayne Stanford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfgl",
            "EntityName": "Barry Skeete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfh1",
            "EntityName": "Rashida Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfhr",
            "EntityName": "Kerry Holder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfjg",
            "EntityName": "Riviere Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfk6",
            "EntityName": "Jonathan Straker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfky",
            "EntityName": "Mario Harte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yflp",
            "EntityName": "Jason Carter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3yfm4",
            "EntityName": "Sheridan Grosvenor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j4nmrl",
            "EntityName": "Carlos Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5b_89",
            "EntityName": "Bentley Springer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byg1",
            "EntityName": "Ramuel Miller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bygf",
            "EntityName": "Stephen Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bygt",
            "EntityName": "Omari Eastmond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byh5",
            "EntityName": "Lionel Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byhk",
            "EntityName": "Carl Joseph"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byhy",
            "EntityName": "Renaldo Gilkes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byj9",
            "EntityName": "Jomo Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5byl5",
            "EntityName": "Andre Bourne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzqv",
            "EntityName": "Richard Lavine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzr6",
            "EntityName": "Diquan Adamson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzrl",
            "EntityName": "Kadeem Latham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzrz",
            "EntityName": "Curtis Odle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzsb",
            "EntityName": "Jamal Chandler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzsq",
            "EntityName": "Tristan Parris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5bzt2",
            "EntityName": "Kyle Gibson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9pl_l",
            "EntityName": "George Moe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9q6zl",
            "EntityName": "Horace Stoute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jkx8sh",
            "EntityName": "Adriel Brathwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jw0g75",
            "EntityName": "Dwayne Griffith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jw0s15",
            "EntityName": "Craig Worrell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0l4zp",
            "EntityName": "Shakera Reece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8g_zx",
            "EntityName": "Kandy Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8h3jx",
            "EntityName": "Crystal Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8h3k5",
            "EntityName": "Brandy Fenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr_sj",
            "EntityName": "Richard Moody"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ks4sy",
            "EntityName": "James Wedderburn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kt9r7",
            "EntityName": "David Comissiong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nb45x5",
            "EntityName": "Chris Braithwaite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pl24lc",
            "EntityName": "Edward Evelyn Greaves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q3zvll",
            "EntityName": "Kirk Corbin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ql6xn8",
            "EntityName": "Jason Holder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8q19f",
            "EntityName": "Branford Taitt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rfdtlc",
            "EntityName": "Kyle Mayers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgsb9",
            "EntityName": "Ricardo Morris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgsfc",
            "EntityName": "Malcolm Marshall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgshn",
            "EntityName": "Kemar Headley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rqgsp0",
            "EntityName": "Armando Lashley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0s9q0ly",
            "EntityName": "Louis Eugene King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vn2wtq",
            "EntityName": "Ella Jane New"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w0k1cm",
            "EntityName": "Don Kinch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w2f3c3",
            "EntityName": "Cynthia Rosalina La Touche Andersen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w5vltx",
            "EntityName": "Campbell Foster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wbkng2",
            "EntityName": "Jackie Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xpdtfn",
            "EntityName": "Ivor Germain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z3sh5m",
            "EntityName": "Menelik Shabazz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zb3j8s",
            "EntityName": "Murr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs4kpg",
            "EntityName": "Denzil H. Hurley"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0162v": "Barbados"
    },
    "qid_topic_entity": {
      "Q244": "Barbados"
    },
    "index": 273
  },
  {
    "QuestionId": "WebQTest-700",
    "RawQuestion": "where is french spoken most?",
    "ProcessedQuestion": "where is french spoken most",
    "Parses": [
      {
        "ParseId": "WebQTest-700.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? spoken most"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064_8sq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064_8sq ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "french",
        "TopicEntityName": "French",
        "TopicEntityMid": "m.064_8sq",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164v",
            "EntityName": "Benin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01699",
            "EntityName": "Burkina Faso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0169t",
            "EntityName": "Burundi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n6c",
            "EntityName": "Comoros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nyl",
            "EntityName": "Central African Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1b",
            "EntityName": "Chad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rxw",
            "EntityName": "Congo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xbgx",
            "EntityName": "Cambodia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027jk",
            "EntityName": "Djibouti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kcz",
            "EntityName": "Equatorial Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03548",
            "EntityName": "Gabon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03676",
            "EntityName": "Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c8mkv",
            "EntityName": "Habsburg Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gk2",
            "EntityName": "Holy Roman Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gyl",
            "EntityName": "Haiti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqz",
            "EntityName": "Lebanon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sj3",
            "EntityName": "Madagascar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v09",
            "EntityName": "Mali"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg8",
            "EntityName": "Martinique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vs9",
            "EntityName": "Mauritius"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w58",
            "EntityName": "Monaco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wgh",
            "EntityName": "Morocco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cc1",
            "EntityName": "Niger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06srk",
            "EntityName": "Senegal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sw9",
            "EntityName": "Seychelles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fv4v",
            "EntityName": "Ivory Coast"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8bw",
            "EntityName": "South Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.064_8sq": "French"
    },
    "qid_topic_entity": {
      "Q150": "French"
    },
    "index": 274
  },
  {
    "QuestionId": "WebQTest-1510",
    "RawQuestion": "what are staffordshire terriers?",
    "ProcessedQuestion": "what are staffordshire terriers",
    "Parses": [
      {
        "ParseId": "WebQTest-1510.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kv93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kv93 ns:biology.animal_breed.breed_of ?x .\n}\n",
        "PotentialTopicEntityMention": "staffordshire",
        "TopicEntityName": "Staffordshire Bull Terrier",
        "TopicEntityMid": "m.01kv93",
        "InferentialChain": [
          "biology.animal_breed.breed_of"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt9lr",
            "EntityName": "Dog"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1510.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kv93)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kv93 ns:biology.organism_classification.higher_classification ?x .\n}\n",
        "PotentialTopicEntityMention": "staffordshire",
        "TopicEntityName": "Staffordshire Bull Terrier",
        "TopicEntityMid": "m.01kv93",
        "InferentialChain": [
          "biology.organism_classification.higher_classification"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt9lr",
            "EntityName": "Dog"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01kv93": "Staffordshire Bull Terrier"
    },
    "qid_topic_entity": {
      "Q39285": "Staffordshire Bull Terrier"
    },
    "index": 275
  },
  {
    "QuestionId": "WebQTest-1480",
    "RawQuestion": "who did cher have a son with?",
    "ProcessedQuestion": "who did cher have a son with",
    "Parses": [
      {
        "ParseId": "WebQTest-1480.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F Spouse of Cher whose count(children) > 0"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.01vtj38 ns:people.person.children ?y .\n\t?y ns:people.person.gender ns:m.05zppz . #Male\n\t?y ns:people.person.parents ?x .\n  FILTER (?x != ns:m.01vtj38)\n}",
        "PotentialTopicEntityMention": "cher",
        "TopicEntityName": "Cher",
        "TopicEntityMid": "m.01vtj38",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jg92",
            "EntityName": "Gregg Allman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wmp",
            "EntityName": "Sonny Bono"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vtj38": "Cher"
    },
    "qid_topic_entity": {
      "Q12003": "Cher"
    },
    "index": 276
  },
  {
    "QuestionId": "WebQTest-603",
    "RawQuestion": "what money to take to turkey?",
    "ProcessedQuestion": "what money to take to turkey",
    "Parses": [
      {
        "ParseId": "WebQTest-603.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dq0w",
            "EntityName": "Turkish lira"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 277
  },
  {
    "QuestionId": "WebQTest-1433",
    "RawQuestion": "what to do with kids in asheville nc?",
    "ProcessedQuestion": "what to do with kids in asheville nc",
    "Parses": [
      {
        "ParseId": "WebQTest-1433.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ydpd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ydpd ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "asheville nc",
        "TopicEntityName": "Asheville",
        "TopicEntityMid": "m.0ydpd",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vnqb",
            "EntityName": "Blue Ridge Parkway"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rtgcx",
            "EntityName": "The Omni Grove Park Inn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d2gy",
            "EntityName": "Biltmore Estate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qhg3_",
            "EntityName": "Thomas Wolfe House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qknx1",
            "EntityName": "Folk Art Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_g_2g",
            "EntityName": "Smith-McDowell House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07pc_b",
            "EntityName": "Carl Sandburg Home National Historic Site"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gz6r",
            "EntityName": "Pisgah National Forest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhdb5",
            "EntityName": "Bele Chere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k5mxqg",
            "EntityName": "Asheville Art Museum"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ydpd": "Asheville"
    },
    "qid_topic_entity": {
      "Q648501": "Asheville"
    },
    "index": 278
  },
  {
    "QuestionId": "WebQTest-1638",
    "RawQuestion": "what language is most commonly spoken in belgium?",
    "ProcessedQuestion": "what language is most commonly spoken in belgium",
    "Parses": [
      {
        "ParseId": "WebQTest-1638.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0154j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0154j ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "belgium",
        "TopicEntityName": "Belgium",
        "TopicEntityMid": "m.0154j",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bv9",
            "EntityName": "Dutch Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0154j": "Belgium"
    },
    "qid_topic_entity": {
      "Q31": "Belgium"
    },
    "index": 279
  },
  {
    "QuestionId": "WebQTest-1266",
    "RawQuestion": "what did romo do?",
    "ProcessedQuestion": "what did romo do",
    "Parses": [
      {
        "ParseId": "WebQTest-1266.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cyz8g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cyz8g ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "romo",
        "TopicEntityName": "Sergio Romo",
        "TopicEntityMid": "m.04cyz8g",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h664g",
            "EntityName": "Baseball player"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04cyz8g": "Sergio Romo"
    },
    "qid_topic_entity": {
      "Q3041597": "Sergio Romo"
    },
    "index": 280
  },
  {
    "QuestionId": "WebQTest-1261",
    "RawQuestion": "where did the battle of passchendaele happen?",
    "ProcessedQuestion": "where did the battle of passchendaele happen",
    "Parses": [
      {
        "ParseId": "WebQTest-1261.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c3mz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c3mz ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "passchendaele",
        "TopicEntityName": "Battle of Passchendaele",
        "TopicEntityMid": "m.0c3mz",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pb6l5",
            "EntityName": "Passendale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02y4t",
            "EntityName": "Flanders"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c3mz": "Battle of Passchendaele"
    },
    "qid_topic_entity": {
      "Q426227": "Battle of Passchendaele"
    },
    "index": 281
  },
  {
    "QuestionId": "WebQTest-254",
    "RawQuestion": "what countries in the world speak chinese?",
    "ProcessedQuestion": "what countries in the world speak chinese",
    "Parses": [
      {
        "ParseId": "WebQTest-254.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0167v",
            "EntityName": "Brunei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01crd5",
            "EntityName": "Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pmkv",
            "EntityName": "Malaysia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pb4_wn",
            "EntityName": "Sh\u011bn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 282
  },
  {
    "QuestionId": "WebQTest-400",
    "RawQuestion": "what was the capital city of the east roman empire?",
    "ProcessedQuestion": "what was the capital city of the east roman empire",
    "Parses": [
      {
        "ParseId": "WebQTest-400.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017cw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017cw ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "east roman empire",
        "TopicEntityName": "Byzantine Empire",
        "TopicEntityMid": "m.017cw",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q0l",
            "EntityName": "Constantinople"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.017cw": "Byzantine Empire"
    },
    "qid_topic_entity": {
      "Q12544": "Byzantine Empire"
    },
    "index": 283
  },
  {
    "QuestionId": "WebQTest-818",
    "RawQuestion": "where was the ottoman empire based?",
    "ProcessedQuestion": "where was the ottoman empire based",
    "Parses": [
      {
        "ParseId": "WebQTest-818.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? based = containedby"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kyr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kyr ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "ottoman empire",
        "TopicEntityName": "Ottoman Empire",
        "TopicEntityMid": "m.05kyr",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ffbn",
            "EntityName": "Near East"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05kyr": "Ottoman Empire"
    },
    "qid_topic_entity": {
      "Q12560": "Ottoman Empire"
    },
    "index": 284
  },
  {
    "QuestionId": "WebQTest-1998",
    "RawQuestion": "what party was thomas jefferson affiliated with?",
    "ProcessedQuestion": "what party was thomas jefferson affiliated with",
    "Parses": [
      {
        "ParseId": "WebQTest-1998.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07cbs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07cbs ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "thomas jefferson",
        "TopicEntityName": "Thomas Jefferson",
        "TopicEntityMid": "m.07cbs",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wf9",
            "EntityName": "Democratic-Republican Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07cbs": "Thomas Jefferson"
    },
    "qid_topic_entity": {
      "Q11812": "Thomas Jefferson"
    },
    "index": 285
  },
  {
    "QuestionId": "WebQTest-1449",
    "RawQuestion": "what was laura ingalls wilder famous for?",
    "ProcessedQuestion": "what was laura ingalls wilder famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-1449.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d30f",
            "EntityName": "Teacher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8qb",
            "EntityName": "Journalist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bt87": "Laura Ingalls Wilder"
    },
    "qid_topic_entity": {
      "Q237514": "Laura Ingalls Wilder"
    },
    "index": 286
  },
  {
    "QuestionId": "WebQTest-269",
    "RawQuestion": "where does delaware river start?",
    "ProcessedQuestion": "where does delaware river start",
    "Parses": [
      {
        "ParseId": "WebQTest-269.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dtzd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dtzd ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "delaware river",
        "TopicEntityName": "Delaware River",
        "TopicEntityMid": "m.0dtzd",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032h51",
            "EntityName": "West Branch Delaware River"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036r_7",
            "EntityName": "Mount Jefferson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dtzd": "Delaware River"
    },
    "qid_topic_entity": {
      "Q143762": "Delaware River"
    },
    "index": 287
  },
  {
    "QuestionId": "WebQTest-488",
    "RawQuestion": "who did sir francis drake marry?",
    "ProcessedQuestion": "who did sir francis drake marry",
    "Parses": [
      {
        "ParseId": "WebQTest-488.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.031t2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.031t2 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "sir francis drake",
        "TopicEntityName": "Francis Drake",
        "TopicEntityMid": "m.031t2",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k1nmz5",
            "EntityName": "Mary Newman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k1nmzm",
            "EntityName": "Elizabeth Sydenham"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.031t2": "Francis Drake"
    },
    "qid_topic_entity": {
      "Q36517": "Francis Drake"
    },
    "index": 288
  },
  {
    "QuestionId": "WebQTest-777",
    "RawQuestion": "where is the main headquarters of google?",
    "ProcessedQuestion": "where is the main headquarters of google",
    "Parses": [
      {
        "ParseId": "WebQTest-777.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r6c4",
            "EntityName": "Mountain View"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 289
  },
  {
    "QuestionId": "WebQTest-1580",
    "RawQuestion": "what type of democracy is the united states?",
    "ProcessedQuestion": "what type of democracy is the united states",
    "Parses": [
      {
        "ParseId": "WebQTest-1580.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 290
  },
  {
    "QuestionId": "WebQTest-626",
    "RawQuestion": "what does the missouri river bisect?",
    "ProcessedQuestion": "what does the missouri river bisect",
    "Parses": [
      {
        "ParseId": "WebQTest-626.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ykz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ykz ns:location.location.partially_contained_by ?y .\n?y ns:location.partial_containment_relationship.partially_contained_by ?x .\n}\n",
        "PotentialTopicEntityMention": "missouri river",
        "TopicEntityName": "Missouri River",
        "TopicEntityMid": "m.04ykz",
        "InferentialChain": [
          "location.location.partially_contained_by",
          "location.partial_containment_relationship.partially_contained_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03s0w",
            "EntityName": "Iowa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0488g",
            "EntityName": "Kansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050l8",
            "EntityName": "Montana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fhy",
            "EntityName": "Nebraska"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fky",
            "EntityName": "North Dakota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mz5",
            "EntityName": "South Dakota"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ykz": "Missouri River"
    },
    "qid_topic_entity": {
      "Q5419": "Missouri River"
    },
    "index": 291
  },
  {
    "QuestionId": "WebQTest-546",
    "RawQuestion": "who is michael j fox's wife?",
    "ProcessedQuestion": "who is michael j fox 's wife",
    "Parses": [
      {
        "ParseId": "WebQTest-546.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "michael j fox",
        "TopicEntityName": "Michael J. Fox",
        "TopicEntityMid": "m.0hz_1",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gpck",
            "EntityName": "Tracy Pollan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hz_1": "Michael J. Fox"
    },
    "qid_topic_entity": {
      "Q395274": "Michael J. Fox"
    },
    "index": 292
  },
  {
    "QuestionId": "WebQTest-287",
    "RawQuestion": "what movies has carmen electra been in?",
    "ProcessedQuestion": "what movies has carmen electra been in",
    "Parses": [
      {
        "ParseId": "WebQTest-287.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lbp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lbp ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "carmen electra",
        "TopicEntityName": "Carmen Electra",
        "TopicEntityMid": "m.01lbp",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0110g35j",
            "EntityName": "Dragula"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01265cw2",
            "EntityName": "Chocolate City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hjwf",
            "EntityName": "Good Burger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pj_5",
            "EntityName": "Scary Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026hxwx",
            "EntityName": "Epic Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ntb8",
            "EntityName": "Starsky & Hutch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pjfgv",
            "EntityName": "Full of It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q5hqz",
            "EntityName": "I Want Candy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q674n",
            "EntityName": "Lil' Pimp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qdrjx",
            "EntityName": "Bedtime Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ck20l",
            "EntityName": "Meet the Spartans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cn85q",
            "EntityName": "Christmas in Wonderland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qhxn_",
            "EntityName": "Perfume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ywfs",
            "EntityName": "Mr. 3000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040_ypz",
            "EntityName": "Sol Goode"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0479qny",
            "EntityName": "Disaster Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gbj8",
            "EntityName": "Baywatch: Hawaiian Wedding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j08hn",
            "EntityName": "Naked Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0wxq",
            "EntityName": "Hot Tamale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1hm9",
            "EntityName": "30 Days Until I'm Famous"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2m_x",
            "EntityName": "Whacked!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rk7s",
            "EntityName": "Uptown Girls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056p3k",
            "EntityName": "Get Over It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nd09x",
            "EntityName": "Searching for Bobby D"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066b_n",
            "EntityName": "Cheaper by the Dozen 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072txz",
            "EntityName": "National Lampoon's Pledge This!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07h9gp",
            "EntityName": "Scary Movie 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zm5t",
            "EntityName": "The Chosen One: Legend of the Raven"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080kmxp",
            "EntityName": "Oy Vey! My Son Is Gay!!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08pqpg",
            "EntityName": "Date Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09t10b",
            "EntityName": "American Dreamz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5mw7",
            "EntityName": "Dirty Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b64qt1",
            "EntityName": "Starstruck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh8xz2",
            "EntityName": "Barry Munday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c02882",
            "EntityName": "American Vampire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cr_bqp",
            "EntityName": "Carmen Electra's Fit to Strip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crrvj7",
            "EntityName": "Rent Control"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crv9zg",
            "EntityName": "BThere Dvd Magazine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crvchf",
            "EntityName": "We Are Family"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw06",
            "EntityName": "Monster Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d042l",
            "EntityName": "Max Havoc: Curse of the Dragon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2l2_",
            "EntityName": "My Boss's Daughter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9z_7",
            "EntityName": "Getting Played"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0sjn",
            "EntityName": "The Mating Habits of the Earthbound Human"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gxsyb5",
            "EntityName": "The Back Nine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3w444",
            "EntityName": "2-Headed Shark Attack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h944f1",
            "EntityName": "Mardi Gras: Spring Break"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8nwg",
            "EntityName": "Lap Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8ql6",
            "EntityName": "Book of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8srv",
            "EntityName": "The Axe Boat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tl8vtw",
            "EntityName": "Lolo's Cafe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01lbp": "Carmen Electra"
    },
    "qid_topic_entity": {
      "Q185122": "Carmen Electra"
    },
    "index": 293
  },
  {
    "QuestionId": "WebQTest-302",
    "RawQuestion": "what are the official colors of the dallas cowboys?",
    "ProcessedQuestion": "what are the official colors of the dallas cowboys",
    "Parses": [
      {
        "ParseId": "WebQTest-302.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02896)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02896 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "dallas cowboys",
        "TopicEntityName": "Dallas Cowboys",
        "TopicEntityMid": "m.02896",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnmb",
            "EntityName": "Navy Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vtbc",
            "EntityName": "Silver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kqt3",
            "EntityName": "Royal blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02896": "Dallas Cowboys"
    },
    "qid_topic_entity": {
      "Q204862": "Dallas Cowboys"
    },
    "index": 294
  },
  {
    "QuestionId": "WebQTest-323",
    "RawQuestion": "what movies did ron howard director?",
    "ProcessedQuestion": "what movies did ron howard director",
    "Parses": [
      {
        "ParseId": "WebQTest-323.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g2lq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g2lq ns:film.director.film ?x .\n}\n",
        "PotentialTopicEntityMention": "ron howard",
        "TopicEntityName": "Ron Howard",
        "TopicEntityMid": "m.0g2lq",
        "InferentialChain": [
          "film.director.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011yd2",
            "EntityName": "Apollo 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0134tnr7",
            "EntityName": "Inferno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hw5kk",
            "EntityName": "Willow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xvjb",
            "EntityName": "Splash"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_1sj",
            "EntityName": "EDtv"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mh4b",
            "EntityName": "Night Shift"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02t9_q",
            "EntityName": "Backdraft"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vqsll",
            "EntityName": "Frost/Nixon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yf34",
            "EntityName": "Grand Theft Auto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034bm_",
            "EntityName": "Far and Away"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r58n",
            "EntityName": "Cocoon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xx0x",
            "EntityName": "Ransom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047nfz",
            "EntityName": "Parenthood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ynx7",
            "EntityName": "The Missing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050gkf",
            "EntityName": "Cinderella Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h3bcc",
            "EntityName": "The Dark Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065dc4",
            "EntityName": "The Da Vinci Code"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06xz7w",
            "EntityName": "The Paper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09_rkp7",
            "EntityName": "Cotton Candy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09hfyy",
            "EntityName": "Gung Ho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m6kg",
            "EntityName": "A Beautiful Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3_662",
            "EntityName": "The Dilemma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc5m07",
            "EntityName": "The Lost Symbol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crrc8",
            "EntityName": "Dr. Seuss' How the Grinch Stole Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f4_2k",
            "EntityName": "Angels & Demons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmdpnm",
            "EntityName": "Presidential Reunion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy75pd",
            "EntityName": "Rush"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngnf3x",
            "EntityName": "Jay-Z: Made in America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xnx1p3",
            "EntityName": "In the Heart of the Sea"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g2lq": "Ron Howard"
    },
    "qid_topic_entity": {
      "Q103646": "Ron Howard"
    },
    "index": 295
  },
  {
    "QuestionId": "WebQTest-164",
    "RawQuestion": "what did stephen hawking become famous for?",
    "ProcessedQuestion": "what did stephen hawking become famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-164.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tdnyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tdnyh ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "stephen hawking",
        "TopicEntityName": "Stephen Hawking",
        "TopicEntityMid": "m.01tdnyh",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fly",
            "EntityName": "Professor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h65p0",
            "EntityName": "Astrophysicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h666v",
            "EntityName": "Science writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qsdk0",
            "EntityName": "Cosmologist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s2z",
            "EntityName": "Mathematician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05snw",
            "EntityName": "Physicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h9c",
            "EntityName": "Astronomer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01tdnyh": "Stephen Hawking"
    },
    "qid_topic_entity": {
      "Q17714": "Stephen Hawking"
    },
    "index": 296
  },
  {
    "QuestionId": "WebQTest-867",
    "RawQuestion": "what else has jennifer lawrence played in?",
    "ProcessedQuestion": "what else has jennifer lawrence played in",
    "Parses": [
      {
        "ParseId": "WebQTest-867.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x0dzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x0dzw ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "jennifer lawrence",
        "TopicEntityName": "Jennifer Lawrence",
        "TopicEntityMid": "m.02x0dzw",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_4654w",
            "EntityName": "X-Men: Apocalypse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sqq_d",
            "EntityName": "Joy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vm7h8",
            "EntityName": "Not Another High School Show"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqk46",
            "EntityName": "The Burning Plain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03grp5m",
            "EntityName": "Garden Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cgsg_",
            "EntityName": "Company Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093dqjy",
            "EntityName": "Winter\u2019s Bone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v71cj",
            "EntityName": "The Beaver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bg9xm6",
            "EntityName": "The Poker House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cd2vh9",
            "EntityName": "X-Men: First Class"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpmrlv",
            "EntityName": "Like Crazy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkz15s",
            "EntityName": "The Hunger Games"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gydg4g",
            "EntityName": "House at the End of the Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyn8bv",
            "EntityName": "Devil You Know"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h95927",
            "EntityName": "Silver Linings Playbook"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n40qmp",
            "EntityName": "The Hunger Games: Catching Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvsvk",
            "EntityName": "The Hunger Games: Mockingjay, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngvtb_",
            "EntityName": "The Hunger Games: Mockingjay, Part 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r3r5jz",
            "EntityName": "X-Men: Days of Future Past"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r8p2ll",
            "EntityName": "Serena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ryt9m1",
            "EntityName": "American Hustle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y4y7jj",
            "EntityName": "East of Eden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yvlk0t",
            "EntityName": "Burial Rites"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yvm5dh",
            "EntityName": "The Glass Castle"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02x0dzw": "Jennifer Lawrence"
    },
    "qid_topic_entity": {
      "Q189490": "Jennifer Lawrence"
    },
    "index": 297
  },
  {
    "QuestionId": "WebQTest-240",
    "RawQuestion": "what colleges did albert einstein teach at?",
    "ProcessedQuestion": "what colleges did albert einstein teach at",
    "Parses": [
      {
        "ParseId": "WebQTest-240.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? employeed by university doe not necessarily mean teaching"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jcx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jcx ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.company ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "albert einstein",
        "TopicEntityName": "Albert Einstein",
        "TopicEntityMid": "m.0jcx",
        "InferentialChain": [
          "people.person.employment_history",
          "business.employment_tenure.company"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0194_r",
            "EntityName": "Institute for Advanced Study"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dyk8",
            "EntityName": "ETH Zurich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tpvt",
            "EntityName": "University of Zurich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09hgk",
            "EntityName": "Charles University in Prague"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lvng",
            "EntityName": "Leiden University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jcx": "Albert Einstein"
    },
    "qid_topic_entity": {
      "Q937": "Albert Einstein"
    },
    "index": 298
  },
  {
    "QuestionId": "WebQTest-134",
    "RawQuestion": "what type of books did agatha christie wrote?",
    "ProcessedQuestion": "what type of books did agatha christie wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-134.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "agatha christie",
        "TopicEntityName": "Agatha Christie",
        "TopicEntityMid": "m.0ldd",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hv44_",
            "EntityName": "Playwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxtg",
            "EntityName": "Screenwriter"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ldd": "Agatha Christie"
    },
    "qid_topic_entity": {
      "Q35064": "Agatha Christie"
    },
    "index": 299
  },
  {
    "QuestionId": "WebQTest-1764",
    "RawQuestion": "where is daud ibrahim?",
    "ProcessedQuestion": "where is daud ibrahim",
    "Parses": [
      {
        "ParseId": "WebQTest-1764.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ry1s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ry1s ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "daud ibrahim",
        "TopicEntityName": "Dawood Ibrahim",
        "TopicEntityMid": "m.02ry1s",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.055vr",
            "EntityName": "Maharashtra"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ry1s": "Dawood Ibrahim"
    },
    "qid_topic_entity": {
      "Q553191": "Dawood Ibrahim"
    },
    "index": 300
  },
  {
    "QuestionId": "WebQTest-1539",
    "RawQuestion": "who is ryan reynolds married to 2012?",
    "ProcessedQuestion": "who is ryan reynolds married to 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1539.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? the query doesn't really check that the marriage wasn't ended."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036hf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036hf4 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "ryan reynolds",
        "TopicEntityName": "Ryan Reynolds",
        "TopicEntityMid": "m.036hf4",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "people.marriage.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_bq1",
            "EntityName": "Blake Lively"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.036hf4": "Ryan Reynolds"
    },
    "qid_topic_entity": {
      "Q192682": "Ryan Reynolds"
    },
    "index": 301
  },
  {
    "QuestionId": "WebQTest-1752",
    "RawQuestion": "what did f. scott fitzgerald do?",
    "ProcessedQuestion": "what did f. scott fitzgerald do",
    "Parses": [
      {
        "ParseId": "WebQTest-1752.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "f . scott fitzgerald",
        "TopicEntityName": "F. Scott Fitzgerald",
        "TopicEntityMid": "m.02zjd",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02zjd": "F. Scott Fitzgerald"
    },
    "qid_topic_entity": {
      "Q93354": "F. Scott Fitzgerald"
    },
    "index": 302
  },
  {
    "QuestionId": "WebQTest-1977",
    "RawQuestion": "where did crabtree go to college?",
    "ProcessedQuestion": "where did crabtree go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1977.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "crabtree",
        "TopicEntityName": "Michael Crabtree",
        "TopicEntityMid": "m.03ccsym",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n_g9",
            "EntityName": "Texas Tech University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ccsym": "Michael Crabtree"
    },
    "qid_topic_entity": {
      "Q2351787": "Michael Crabtree"
    },
    "index": 303
  },
  {
    "QuestionId": "WebQTest-1425",
    "RawQuestion": "what colleges did mitt romney attend?",
    "ProcessedQuestion": "what colleges did mitt romney attend",
    "Parses": [
      {
        "ParseId": "WebQTest-1425.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "mitt romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014zws",
            "EntityName": "Harvard Law School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ksy",
            "EntityName": "Harvard University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pwq",
            "EntityName": "Stanford University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kqj1",
            "EntityName": "Harvard Business School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l2tk",
            "EntityName": "Brigham Young University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 304
  },
  {
    "QuestionId": "WebQTest-1311",
    "RawQuestion": "what was antoni gaudi inspired by?",
    "ProcessedQuestion": "what was antoni gaudi inspired by",
    "Parses": [
      {
        "ParseId": "WebQTest-1311.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yb0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yb0 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "antoni gaudi",
        "TopicEntityName": "Antoni Gaud\u00ed",
        "TopicEntityMid": "m.0yb0",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mpv",
            "EntityName": "Eug\u00e8ne Viollet-le-Duc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08304",
            "EntityName": "William Morris"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0yb0": "Antoni Gaud\u00ed"
    },
    "qid_topic_entity": {
      "Q25328": "Antoni Gaud\u00ed"
    },
    "index": 305
  },
  {
    "QuestionId": "WebQTest-891",
    "RawQuestion": "who was the leader of the first communist party of china?",
    "ProcessedQuestion": "who was the leader of the first communist party of china",
    "Parses": [
      {
        "ParseId": "WebQTest-891.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02189)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02189 ns:organization.organization.founders ?x .\n}\n",
        "PotentialTopicEntityMention": "communist party of china",
        "TopicEntityName": "Communist Party of China",
        "TopicEntityMid": "m.02189",
        "InferentialChain": [
          "organization.organization.founders"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d42c",
            "EntityName": "Li Dazhao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xzm",
            "EntityName": "Mao Zedong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dbk8",
            "EntityName": "Zhou Enlai"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n10q",
            "EntityName": "Chen Duxiu"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02189": "Communist Party of China"
    },
    "qid_topic_entity": {
      "Q17427": "Communist Party of China"
    },
    "index": 306
  },
  {
    "QuestionId": "WebQTest-251",
    "RawQuestion": "what type of currency do they use in england?",
    "ProcessedQuestion": "what type of currency do they use in england",
    "Parses": [
      {
        "ParseId": "WebQTest-251.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jx1 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "england",
        "TopicEntityName": "England",
        "TopicEntityMid": "m.02jx1",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nv4h",
            "EntityName": "Pound sterling"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02jx1": "England"
    },
    "qid_topic_entity": {
      "Q21": "England"
    },
    "index": 307
  },
  {
    "QuestionId": "WebQTest-1975",
    "RawQuestion": "what was the last movie sean connery was in?",
    "ProcessedQuestion": "what was the last movie sean connery was in",
    "Parses": [
      {
        "ParseId": "WebQTest-1975.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mr6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mr6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n?x ns:film.film.initial_release_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "sean connery",
        "TopicEntityName": "Sean Connery",
        "TopicEntityMid": "m.06mr6",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 1,
          "NodePredicate": "film.film.initial_release_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crscdw",
            "EntityName": "Sir Billi"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mr6": "Sean Connery"
    },
    "qid_topic_entity": {
      "Q4573": "Sean Connery"
    },
    "index": 308
  },
  {
    "QuestionId": "WebQTest-1825",
    "RawQuestion": "what did lincoln steffens wrote?",
    "ProcessedQuestion": "what did lincoln steffens wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-1825.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bw1c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bw1c ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "lincoln steffens",
        "TopicEntityName": "Lincoln Steffens",
        "TopicEntityMid": "m.01bw1c",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068tvkv",
            "EntityName": "Die Geschichte meines Lebens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069h7f0",
            "EntityName": "The Shame of the Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bhsc3",
            "EntityName": "The autobiography of Lincoln Steffens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bsl_5",
            "EntityName": "John Reed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f67r1",
            "EntityName": "The struggle for self-government"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gqt1t",
            "EntityName": "Lincoln Steffens speaking"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lr_pz",
            "EntityName": "The world of Lincoln Steffens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mv_gp",
            "EntityName": "Into Mexico and out"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t_tbs",
            "EntityName": "Moses in red"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tdgyp",
            "EntityName": "The Least Of These"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vgjfz",
            "EntityName": "Upbuilders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1xh9z",
            "EntityName": "Boy on horseback"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l6bpv3",
            "EntityName": "The Old Jim Horse"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bw1c": "Lincoln Steffens"
    },
    "qid_topic_entity": {
      "Q1825813": "Lincoln Steffens"
    },
    "index": 309
  },
  {
    "QuestionId": "WebQTest-1114",
    "RawQuestion": "what countries makes up the uk?",
    "ProcessedQuestion": "what countries makes up the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-1114.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzjlmp",
            "EntityName": "UK constituent country",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 310
  },
  {
    "QuestionId": "WebQTest-1629",
    "RawQuestion": "what currency does dominican republic take?",
    "ProcessedQuestion": "what currency does dominican republic take",
    "Parses": [
      {
        "ParseId": "WebQTest-1629.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "dominican republic",
        "TopicEntityName": "Dominican Republic",
        "TopicEntityMid": "m.027rn",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lt7_",
            "EntityName": "Dominican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rn": "Dominican Republic"
    },
    "qid_topic_entity": {
      "Q786": "Dominican Republic"
    },
    "index": 311
  },
  {
    "QuestionId": "WebQTest-624",
    "RawQuestion": "who plays elena gilbert on vampire diaries?",
    "ProcessedQuestion": "who plays elena gilbert on vampire diaries",
    "Parses": [
      {
        "ParseId": "WebQTest-624.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0790rw8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0790rw8 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.05sy2k_ .\n}\n",
        "PotentialTopicEntityMention": "elena gilbert",
        "TopicEntityName": "Elena Gilbert",
        "TopicEntityMid": "m.0790rw8",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05sy2k_",
            "EntityName": "The Vampire Diaries",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nwk2",
            "EntityName": "Nina Dobrev"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0790rw8": "Elena Gilbert"
    },
    "qid_topic_entity": {
      "Q908634": "Elena Gilbert"
    },
    "index": 312
  },
  {
    "QuestionId": "WebQTest-1691",
    "RawQuestion": "what is houston timezone?",
    "ProcessedQuestion": "what is houston timezone",
    "Parses": [
      {
        "ParseId": "WebQTest-1691.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03l2n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03l2n ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "houston",
        "TopicEntityName": "Houston",
        "TopicEntityMid": "m.03l2n",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03l2n": "Houston"
    },
    "qid_topic_entity": {
      "Q16555": "Houston"
    },
    "index": 313
  },
  {
    "QuestionId": "WebQTest-833",
    "RawQuestion": "what is the main language used in china?",
    "ProcessedQuestion": "what is the main language used in china",
    "Parses": [
      {
        "ParseId": "WebQTest-833.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "china",
        "TopicEntityName": "China",
        "TopicEntityMid": "m.0d05w3",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0653m",
            "EntityName": "Standard Chinese"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d05w3": "China"
    },
    "qid_topic_entity": {
      "Q148": "China"
    },
    "index": 314
  },
  {
    "QuestionId": "WebQTest-1507",
    "RawQuestion": "who was kate chopin?",
    "ProcessedQuestion": "who was kate chopin",
    "Parses": [
      {
        "ParseId": "WebQTest-1507.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d8pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d8pw ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "kate chopin",
        "TopicEntityName": "Kate Chopin",
        "TopicEntityMid": "m.0d8pw",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012t_z",
            "EntityName": "Businessperson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xhgwq",
            "EntityName": "Novelist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d8pw": "Kate Chopin"
    },
    "qid_topic_entity": {
      "Q230476": "Kate Chopin"
    },
    "index": 315
  },
  {
    "QuestionId": "WebQTest-691",
    "RawQuestion": "what school did miley cyrus?",
    "ProcessedQuestion": "what school did miley cyrus",
    "Parses": [
      {
        "ParseId": "WebQTest-691.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bdxs5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bdxs5 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "miley cyrus",
        "TopicEntityName": "Miley Cyrus",
        "TopicEntityMid": "m.0bdxs5",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_s7d",
            "EntityName": "Heritage Elementary School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bdxs5": "Miley Cyrus"
    },
    "qid_topic_entity": {
      "Q4235": "Miley Cyrus"
    },
    "index": 316
  },
  {
    "QuestionId": "WebQTest-755",
    "RawQuestion": "what was bonnie prince charlie full name?",
    "ProcessedQuestion": "what was bonnie prince charlie full name",
    "Parses": [
      {
        "ParseId": "WebQTest-755.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fssd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fssd ns:fictional_universe.person_in_fiction.representations_in_fiction ?x .\n}\n",
        "PotentialTopicEntityMention": "bonnie prince",
        "TopicEntityName": "Charles Edward Stuart",
        "TopicEntityMid": "m.0fssd",
        "InferentialChain": [
          "fictional_universe.person_in_fiction.representations_in_fiction"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q2445b",
            "EntityName": "Charles Edward Stuart"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fssd": "Charles Edward Stuart"
    },
    "qid_topic_entity": {
      "Q312581": "Charles Edward Stuart"
    },
    "index": 317
  },
  {
    "QuestionId": "WebQTest-154",
    "RawQuestion": "what instruments did louis armstrong play?",
    "ProcessedQuestion": "what instruments did louis armstrong play",
    "Parses": [
      {
        "ParseId": "WebQTest-154.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "louis armstrong",
        "TopicEntityName": "Louis Armstrong",
        "TopicEntityMid": "m.04n32",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020w2",
            "EntityName": "Cornet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07gql",
            "EntityName": "Trumpet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n32": "Louis Armstrong"
    },
    "qid_topic_entity": {
      "Q1779": "Louis Armstrong"
    },
    "index": 318
  },
  {
    "QuestionId": "WebQTest-1819",
    "RawQuestion": "what religion does canada follow?",
    "ProcessedQuestion": "what religion does canada follow",
    "Parses": [
      {
        "ParseId": "WebQTest-1819.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "canada",
        "TopicEntityName": "Canada",
        "TopicEntityMid": "m.0d060g",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sfs",
            "EntityName": "Protestantism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d060g": "Canada"
    },
    "qid_topic_entity": {
      "Q16": "Canada"
    },
    "index": 319
  },
  {
    "QuestionId": "WebQTest-33",
    "RawQuestion": "what timezone is sweden?",
    "ProcessedQuestion": "what timezone is sweden",
    "Parses": [
      {
        "ParseId": "WebQTest-33.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0vqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0vqn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "sweden",
        "TopicEntityName": "Sweden",
        "TopicEntityMid": "m.0d0vqn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02llzg",
            "EntityName": "Central European Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d0vqn": "Sweden"
    },
    "qid_topic_entity": {
      "Q34": "Sweden"
    },
    "index": 320
  },
  {
    "QuestionId": "WebQTest-581",
    "RawQuestion": "where was anne boleyn executed?",
    "ProcessedQuestion": "where was anne boleyn executed",
    "Parses": [
      {
        "ParseId": "WebQTest-581.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09sxn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09sxn ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "anne boleyn",
        "TopicEntityName": "Anne Boleyn",
        "TopicEntityMid": "m.09sxn",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nqn",
            "EntityName": "Tower of London"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09sxn": "Anne Boleyn"
    },
    "qid_topic_entity": {
      "Q80823": "Anne Boleyn"
    },
    "index": 321
  },
  {
    "QuestionId": "WebQTest-723",
    "RawQuestion": "what is there to see in sydney australia?",
    "ProcessedQuestion": "what is there to see in sydney australia",
    "Parses": [
      {
        "ParseId": "WebQTest-723.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y57 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "sydney australia",
        "TopicEntityName": "Sydney",
        "TopicEntityMid": "m.06y57",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ymvs4",
            "EntityName": "Oatley Park, New South Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rfyc",
            "EntityName": "Port Jackson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xlnqr",
            "EntityName": "Rose Seidler House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020772",
            "EntityName": "Bondi Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0261k3j",
            "EntityName": "Wild Life Sydney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kwln",
            "EntityName": "Sydney Film Festival"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q0lr",
            "EntityName": "The Rocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x0jgm",
            "EntityName": "Sydney Markets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x7mq",
            "EntityName": "Powerhouse Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040sd3",
            "EntityName": "Luna Park Sydney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dxfg",
            "EntityName": "City2Surf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05115h",
            "EntityName": "St Mary's Cathedral, Sydney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_nm",
            "EntityName": "Sydney Opera House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0701q",
            "EntityName": "Sydney Harbour Bridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b8fsx",
            "EntityName": "North Head Quarantine Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cj82q",
            "EntityName": "Hillsong Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hddw",
            "EntityName": "Darling Harbour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j2r2w2",
            "EntityName": "Australian National Maritime Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j65cht",
            "EntityName": "Featherdale Wildlife Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pnrn",
            "EntityName": "Kamay Botany Bay National Park"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06y57": "Sydney"
    },
    "qid_topic_entity": {
      "Q3130": "Sydney"
    },
    "index": 322
  },
  {
    "QuestionId": "WebQTest-1818",
    "RawQuestion": "what state is saint louis university in?",
    "ProcessedQuestion": "what state is saint louis university in",
    "Parses": [
      {
        "ParseId": "WebQTest-1818.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02tz9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02tz9z ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "PotentialTopicEntityMention": "saint louis university",
        "TopicEntityName": "Saint Louis University",
        "TopicEntityMid": "m.02tz9z",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpys4",
            "EntityName": "US State",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1818.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02tz9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02tz9z ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.state_province_region ?x .\n}\n",
        "PotentialTopicEntityMention": "saint louis university",
        "TopicEntityName": "Saint Louis University",
        "TopicEntityMid": "m.02tz9z",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.state_province_region"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02tz9z": "Saint Louis University"
    },
    "qid_topic_entity": {
      "Q734774": "Saint Louis University"
    },
    "index": 323
  },
  {
    "QuestionId": "WebQTest-953",
    "RawQuestion": "where is kansas city?",
    "ProcessedQuestion": "where is kansas city",
    "Parses": [
      {
        "ParseId": "WebQTest-953.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_d ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.04f_d",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ndpz",
            "EntityName": "Platte County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f_d": "Kansas City"
    },
    "qid_topic_entity": {
      "Q41819": "Kansas City"
    },
    "index": 324
  },
  {
    "QuestionId": "WebQTest-335",
    "RawQuestion": "what type of money to take to cuba?",
    "ProcessedQuestion": "what type of money to take to cuba",
    "Parses": [
      {
        "ParseId": "WebQTest-335.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "cuba",
        "TopicEntityName": "Cuba",
        "TopicEntityMid": "m.0d04z6",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049p2z",
            "EntityName": "Cuban peso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049p6c",
            "EntityName": "Cuban convertible peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d04z6": "Cuba"
    },
    "qid_topic_entity": {
      "Q241": "Cuba"
    },
    "index": 325
  },
  {
    "QuestionId": "WebQTest-1152",
    "RawQuestion": "who is the voice of kitt?",
    "ProcessedQuestion": "who is the voice of kitt",
    "Parses": [
      {
        "ParseId": "WebQTest-1152.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05_bhx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05_bhx ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "kitt",
        "TopicEntityName": "KITT",
        "TopicEntityMid": "m.05_bhx",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0309r1",
            "EntityName": "William Daniels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05_bhx": "KITT"
    },
    "qid_topic_entity": {
      "Q1088996": "KITT"
    },
    "index": 326
  },
  {
    "QuestionId": "WebQTest-1209",
    "RawQuestion": "when does ziva start on ncis?",
    "ProcessedQuestion": "when does ziva start on ncis",
    "Parses": [
      {
        "ParseId": "WebQTest-1209.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m8sg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m8sg ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.seasons ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.093xn8 .\n?x ns:tv.tv_series_season.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "ncis",
        "TopicEntityName": "NCIS",
        "TopicEntityMid": "m.03m8sg",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.seasons"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.093xn8",
            "EntityName": "Mossad Agent Ziva David",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 1,
          "NodePredicate": "tv.tv_series_season.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05df6zw",
            "EntityName": "NCIS - Season 3"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03m8sg": "NCIS"
    },
    "qid_topic_entity": {
      "Q4525": "NCIS"
    },
    "index": 327
  },
  {
    "QuestionId": "WebQTest-1739",
    "RawQuestion": "who is the voice of eric cartman on south park?",
    "ProcessedQuestion": "who is the voice of eric cartman on south park",
    "Parses": [
      {
        "ParseId": "WebQTest-1739.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06y_n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06y_n ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0myj0 .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "south park",
        "TopicEntityName": "South Park",
        "TopicEntityMid": "m.06y_n",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0myj0",
            "EntityName": "Eric Cartman",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_x6v",
            "EntityName": "Trey Parker"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06y_n": "South Park"
    },
    "qid_topic_entity": {
      "Q16538": "South Park"
    },
    "index": 328
  },
  {
    "QuestionId": "WebQTest-538",
    "RawQuestion": "what are all the movies taylor swift has been in?",
    "ProcessedQuestion": "what are all the movies taylor swift has been in",
    "Parses": [
      {
        "ParseId": "WebQTest-538.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dl567)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dl567 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "taylor swift",
        "TopicEntityName": "Taylor Swift",
        "TopicEntityMid": "m.0dl567",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x3lt7",
            "EntityName": "Hannah Montana: The Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_wqk4",
            "EntityName": "Valentine's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087wc7n",
            "EntityName": "The Lorax"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djb8hx",
            "EntityName": "Jonas Brothers: The Concert Experience"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dx5q8",
            "EntityName": "The Giver"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dl567": "Taylor Swift"
    },
    "qid_topic_entity": {
      "Q112865783": "Taylor Swift"
    },
    "index": 329
  },
  {
    "QuestionId": "WebQTest-1110",
    "RawQuestion": "where was john jay born?",
    "ProcessedQuestion": "where was john jay born",
    "Parses": [
      {
        "ParseId": "WebQTest-1110.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.046cp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.046cp ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "john jay",
        "TopicEntityName": "John Jay",
        "TopicEntityMid": "m.046cp",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.046cp": "John Jay"
    },
    "qid_topic_entity": {
      "Q310847": "John Jay"
    },
    "index": 330
  },
  {
    "QuestionId": "WebQTest-39",
    "RawQuestion": "who is niall ferguson's wife?",
    "ProcessedQuestion": "who is niall ferguson 's wife",
    "Parses": [
      {
        "ParseId": "WebQTest-39.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033mkn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033mkn ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "niall ferguson",
        "TopicEntityName": "Niall Ferguson",
        "TopicEntityMid": "m.033mkn",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k5sq",
            "EntityName": "Ayaan Hirsi Ali"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033mkn": "Niall Ferguson"
    },
    "qid_topic_entity": {
      "Q377638": "Niall Ferguson"
    },
    "index": 331
  },
  {
    "QuestionId": "WebQTest-1285",
    "RawQuestion": "what city is mt lassen in?",
    "ProcessedQuestion": "what city is mt lassen in",
    "Parses": [
      {
        "ParseId": "WebQTest-1285.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? There is no city that this mountain is contained by. Only county."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ymq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ymq1 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mt lassen",
        "TopicEntityName": "Lassen Peak",
        "TopicEntityMid": "m.01ymq1",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n7q",
            "EntityName": "California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ymnm",
            "EntityName": "Lassen Volcanic National Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3nk",
            "EntityName": "Cascade Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l30v",
            "EntityName": "Shasta County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ymq1": "Lassen Peak"
    },
    "qid_topic_entity": {
      "Q859354": "Lassen Peak"
    },
    "index": 332
  },
  {
    "QuestionId": "WebQTest-28",
    "RawQuestion": "what electorate does anna bligh represent?",
    "ProcessedQuestion": "what electorate does anna bligh represent",
    "Parses": [
      {
        "ParseId": "WebQTest-28.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.072_m3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.072_m3 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n",
        "PotentialTopicEntityMention": "anna bligh",
        "TopicEntityName": "Anna Bligh",
        "TopicEntityMid": "m.072_m3",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.district_represented"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026q11g",
            "EntityName": "Electoral district of South Brisbane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.072_m3": "Anna Bligh"
    },
    "qid_topic_entity": {
      "Q466482": "Anna Bligh"
    },
    "index": 333
  },
  {
    "QuestionId": "WebQTest-2028",
    "RawQuestion": "who is the current leader of france 2010?",
    "ProcessedQuestion": "who is the current leader of france 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-2028.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "current"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.060c4",
            "EntityName": "President",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ps9k",
            "EntityName": "Nicolas Sarkozy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 334
  },
  {
    "QuestionId": "WebQTest-1485",
    "RawQuestion": "what is the currency in turkey called?",
    "ProcessedQuestion": "what is the currency in turkey called",
    "Parses": [
      {
        "ParseId": "WebQTest-1485.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dq0w",
            "EntityName": "Turkish lira"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 335
  },
  {
    "QuestionId": "WebQTest-1060",
    "RawQuestion": "what is the currency in italy?",
    "ProcessedQuestion": "what is the currency in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-1060.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 336
  },
  {
    "QuestionId": "WebQTest-749",
    "RawQuestion": "who was president in 1988 in the united states?",
    "ProcessedQuestion": "who was president in 1988 in the united states",
    "Parses": [
      {
        "ParseId": "WebQTest-749.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060d2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060d2 ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"1988-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"1988-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "president",
        "TopicEntityName": "President of the United States",
        "TopicEntityMid": "m.060d2",
        "InferentialChain": [
          "government.government_office_or_title.office_holders",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "1988-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "1988-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "1988-01-01",
          "End": "1988-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "1988"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c0j",
            "EntityName": "Ronald Reagan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060d2": "President of the United States"
    },
    "qid_topic_entity": {
      "Q11696": "President of the United States"
    },
    "index": 337
  },
  {
    "QuestionId": "WebQTest-1256",
    "RawQuestion": "who did terrell owens play for in 2010?",
    "ProcessedQuestion": "who did terrell owens play for in 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1256.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027ddp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027ddp ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "terrell owens",
        "TopicEntityName": "Terrell Owens",
        "TopicEntityMid": "m.027ddp",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c_d",
            "EntityName": "Buffalo Bills"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y49",
            "EntityName": "Cincinnati Bengals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068tx8",
            "EntityName": "Texas Revolution"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027ddp": "Terrell Owens"
    },
    "qid_topic_entity": {
      "Q1395269": "Terrell Owens"
    },
    "index": 338
  },
  {
    "QuestionId": "WebQTest-1724",
    "RawQuestion": "when did arsenal won the league?",
    "ProcessedQuestion": "when did arsenal won the league",
    "Parses": [
      {
        "ParseId": "WebQTest-1724.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xbm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xbm ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02_p0 .\n}\n",
        "PotentialTopicEntityMention": "arsenal",
        "TopicEntityName": "Arsenal F.C.",
        "TopicEntityMid": "m.0xbm",
        "InferentialChain": [
          "sports.sports_award_winner.awards",
          "sports.sports_award.season"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_p0",
            "EntityName": "FA Cup",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.award",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ntmq0",
            "EntityName": "2004\u201305 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qp0n6",
            "EntityName": "1992\u201393 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wbzvj",
            "EntityName": "2002\u201303 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wcjy2",
            "EntityName": "2001\u201302 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wcr3x",
            "EntityName": "1997\u201398 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gjljy",
            "EntityName": "1978\u201379 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jjvq6",
            "EntityName": "1970\u201371 FA Cup"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vptrcs",
            "EntityName": "2013\u201314 FA Cup"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0xbm": "Arsenal F.C."
    },
    "qid_topic_entity": {
      "Q9617": "Arsenal F.C."
    },
    "index": 339
  },
  {
    "QuestionId": "WebQTest-241",
    "RawQuestion": "who plays the voice of brian on family guy?",
    "ProcessedQuestion": "who plays the voice of brian on family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-241.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.03pcvr .\n}\n",
        "PotentialTopicEntityMention": "family guy",
        "TopicEntityName": "Family Guy",
        "TopicEntityMid": "m.019nnl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03pcvr",
            "EntityName": "Brian Griffin",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021yw7",
            "EntityName": "Seth MacFarlane"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019nnl": "Family Guy"
    },
    "qid_topic_entity": {
      "Q5930": "Family Guy"
    },
    "index": 340
  },
  {
    "QuestionId": "WebQTest-1838",
    "RawQuestion": "what sports are popular in germany?",
    "ProcessedQuestion": "what sports are popular in germany",
    "Parses": [
      {
        "ParseId": "WebQTest-1838.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01l3wr",
            "EntityName": "Germany national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025t26l",
            "EntityName": "Germany national cricket team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025wfyk",
            "EntityName": "Germany national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0260p73",
            "EntityName": "Germany women's national field hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026f3ys",
            "EntityName": "Germany women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026pb10",
            "EntityName": "Germany national beach handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026pr2_",
            "EntityName": "Germany women's national beach handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026t7lw",
            "EntityName": "Germany women's national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pnhdq",
            "EntityName": "Germany Davis Cup team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r4j0b",
            "EntityName": "Germany Fed Cup team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z6g34",
            "EntityName": "Germany women's national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030rdb",
            "EntityName": "Germany women's national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c38d5",
            "EntityName": "Germany men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d1r7t",
            "EntityName": "Germany national korfball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m3xhy",
            "EntityName": "Germany national rugby league team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sx6f",
            "EntityName": "German National Ice Hockey Team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0414tdm",
            "EntityName": "Germany national baseball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043rstb",
            "EntityName": "Germany national badminton team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047nfps",
            "EntityName": "Germany national American football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cxm_7",
            "EntityName": "Germany men's national inline hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gk22b",
            "EntityName": "Germany national beach soccer team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jd6b6",
            "EntityName": "Germany men's national water polo team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jgf73",
            "EntityName": "Germany women's national basketball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mx1yr",
            "EntityName": "Germany national speedway team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8nzj",
            "EntityName": "Germany men's national pitch and putt team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053gfcl",
            "EntityName": "Germany women's national under-18 ice hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c03j9",
            "EntityName": "Germany national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05prqw",
            "EntityName": "Germany women's national ice hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y3b4",
            "EntityName": "Germany national basketball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ldyjt",
            "EntityName": "Germany U20 women's volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bs6dhl",
            "EntityName": "FC Bayern Munich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0by0kb9",
            "EntityName": "BG G\u00f6ttingen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cksc_",
            "EntityName": "Alba Berlin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cvc05",
            "EntityName": "Germany national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dt889",
            "EntityName": "Brose Baskets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h167w",
            "EntityName": "Germany men's national field hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h407v",
            "EntityName": "Telekom Baskets Bonn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h408w",
            "EntityName": "Skyliners Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40db",
            "EntityName": "K\u00f6ln 99ers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40f0",
            "EntityName": "Bayer Giants Leverkusen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40k4",
            "EntityName": "EWE Baskets Oldenburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h40lj",
            "EntityName": "QTSV Quackenbr\u00fcck"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 341
  },
  {
    "QuestionId": "WebQTest-210",
    "RawQuestion": "where is tyrese gibson from?",
    "ProcessedQuestion": "where is tyrese gibson from",
    "Parses": [
      {
        "ParseId": "WebQTest-210.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l1b90)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l1b90 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "tyrese gibson",
        "TopicEntityName": "Tyrese Gibson",
        "TopicEntityMid": "m.01l1b90",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027sp2",
            "EntityName": "Watts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01l1b90": "Tyrese Gibson"
    },
    "qid_topic_entity": {
      "Q311232": "Tyrese Gibson"
    },
    "index": 342
  },
  {
    "QuestionId": "WebQTest-991",
    "RawQuestion": "who played donna on west wing?",
    "ProcessedQuestion": "who played donna on west wing",
    "Parses": [
      {
        "ParseId": "WebQTest-991.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kvknw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kvknw ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.0g60z .\n}\n",
        "PotentialTopicEntityMention": "donna",
        "TopicEntityName": "Donnatella Moss",
        "TopicEntityMid": "m.02kvknw",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g60z",
            "EntityName": "The West Wing",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040t74",
            "EntityName": "Janel Moloney"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02kvknw": "Donnatella Moss"
    },
    "qid_topic_entity": {
      "Q3036775": "Donnatella Moss"
    },
    "index": 343
  },
  {
    "QuestionId": "WebQTest-1291",
    "RawQuestion": "how many kids were there in the kennedy family?",
    "ProcessedQuestion": "how many kids were there in the kennedy family",
    "Parses": [
      {
        "ParseId": "WebQTest-1291.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01qlg1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01qlg1 ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "kennedy family",
        "TopicEntityName": "Joseph P. Kennedy, Sr.",
        "TopicEntityMid": "m.01qlg1",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0194xc",
            "EntityName": "Ted Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kyns",
            "EntityName": "Rosemary Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020t1x",
            "EntityName": "Joseph P. Kennedy, Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028qh_",
            "EntityName": "Jean Kennedy Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f1nm",
            "EntityName": "Kathleen Cavendish"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f1qs",
            "EntityName": "Patricia Kennedy Lawford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hx2",
            "EntityName": "Robert F. Kennedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt9c",
            "EntityName": "Eunice Kennedy Shriver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3k14",
            "EntityName": "John F. Kennedy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01qlg1": "Joseph P. Kennedy, Sr."
    },
    "qid_topic_entity": {
      "Q313696": "Joseph P. Kennedy, Sr."
    },
    "index": 344
  },
  {
    "QuestionId": "WebQTest-1324",
    "RawQuestion": "what college did john nash go to?",
    "ProcessedQuestion": "what college did john nash go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1324.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pyqh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pyqh ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "john nash",
        "TopicEntityName": "John Forbes Nash, Jr.",
        "TopicEntityMid": "m.0pyqh",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q2sk",
            "EntityName": "Carnegie Mellon College of Engineering"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zl0",
            "EntityName": "Princeton University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pyqh": "John Forbes Nash, Jr."
    },
    "qid_topic_entity": {
      "Q128736": "John Forbes Nash, Jr."
    },
    "index": 345
  },
  {
    "QuestionId": "WebQTest-390",
    "RawQuestion": "when was the last time the toronto maple leafs were in the stanley cup finals?",
    "ProcessedQuestion": "when was the last time the toronto maple leafs were in the stanley cup finals",
    "Parses": [
      {
        "ParseId": "WebQTest-390.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done.  The original SPARQL is correct, but results in no answer due to incomplete data in Freebase.  Here is another path.. Original comment: !Manual AnswerAndPartialSparql. Comment: F Union. Partial comment: I cannot get the SPARQL query to work correctly with the DB. The below query should get the date? perhaps DB is not correct for old stanley cups?. Original comment: F union"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ?x ns:sports.sports_championship_event.championship ns:m.0hn79\n  {\n    ?x ns:sports.sports_championship_event.champion ns:m.0j6tr . # Toronto Maple Leafs\n  }\n  UNION\n  {\n    ?x ns:sports.sports_championship_event.runner_up ns:m.0j6tr . # Toronto Maple Leafs\n  }\n  ?x ns:time.event.start_date ?st .\n}\nORDER BY DESC(xsd:datetime(?st))\nLIMIT 1",
        "PotentialTopicEntityMention": "stanley cup finals",
        "TopicEntityName": "Stanley Cup Finals",
        "TopicEntityMid": "m.0cc8tt9",
        "InferentialChain": [
          "time.recurring_event.instances"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by199",
            "EntityName": "1967 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cc8tt9": "Stanley Cup Finals"
    },
    "qid_topic_entity": {
      "Q7599548": "Stanley Cup Finals"
    },
    "index": 346
  },
  {
    "QuestionId": "WebQTest-1398",
    "RawQuestion": "what movies did joan crawford play in?",
    "ProcessedQuestion": "what movies did joan crawford play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1398.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgbf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgbf ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "joan crawford",
        "TopicEntityName": "Joan Crawford",
        "TopicEntityMid": "m.0cgbf",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01937g",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019l8m",
            "EntityName": "Sudden Fear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026v_q1",
            "EntityName": "Humoresque"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027_q_t",
            "EntityName": "Possessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270fg0",
            "EntityName": "Harriet Craig"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0270xln",
            "EntityName": "Susan and God"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02710m8",
            "EntityName": "The Women"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027qqvj",
            "EntityName": "The Stolen Jools"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pwvzg",
            "EntityName": "Spring Fever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qvt4z",
            "EntityName": "Sally, Irene and Mary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qvv1h",
            "EntityName": "Across to Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r92ps",
            "EntityName": "This Woman Is Dangerous"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9t_k",
            "EntityName": "Pretty Ladies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r9tvd",
            "EntityName": "Old Clothes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rbh2y",
            "EntityName": "Tramp, Tramp, Tramp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rc9rv",
            "EntityName": "The Boob"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfb5l",
            "EntityName": "The Taxi Dancer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfb8b",
            "EntityName": "Winners of the Wilderness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfbbd",
            "EntityName": "The Understanding Heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfbd3",
            "EntityName": "Twelve Miles Out"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rgkfq",
            "EntityName": "The Law of the Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rgkjt",
            "EntityName": "West Point"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rhtrl",
            "EntityName": "Four Walls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj1n2",
            "EntityName": "Dream of Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj2mq",
            "EntityName": "The Duke Steps Out"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj2z0",
            "EntityName": "Our Modern Maidens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjdrw",
            "EntityName": "Montana Moon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjffj",
            "EntityName": "Our Blushing Brides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjfz0",
            "EntityName": "Paid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjtbf",
            "EntityName": "Dance, Fools, Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rjv0t",
            "EntityName": "This Modern Age"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkx49",
            "EntityName": "Laughing Sinners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkxqw",
            "EntityName": "Letty Lynton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkz1j",
            "EntityName": "Today We Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl6rf",
            "EntityName": "Chained"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl6vw",
            "EntityName": "Forsaking All Others"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl6ym",
            "EntityName": "No More Ladies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl75j",
            "EntityName": "I Live My Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rlnc6",
            "EntityName": "The Bride Wore Red"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rlw5h",
            "EntityName": "The Shining Hour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rlw9m",
            "EntityName": "Mannequin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm8lx",
            "EntityName": "The Ice Follies of 1939"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm8yk",
            "EntityName": "Strange Cargo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm98x",
            "EntityName": "A Woman's Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rmlkd",
            "EntityName": "When Ladies Meet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rmlwq",
            "EntityName": "They All Kissed the Bride"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rnd1v",
            "EntityName": "Reunion in France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rndbf",
            "EntityName": "Above Suspicion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rndrh",
            "EntityName": "Female on the Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rp425",
            "EntityName": "Goodbye, My Fancy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rp5tx",
            "EntityName": "The Story of Esther Costello"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzp63",
            "EntityName": "A Slave of Fashion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzqnj",
            "EntityName": "Tide of Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzt27",
            "EntityName": "The Merry Widow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x7d7",
            "EntityName": "Trog"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gq7tf",
            "EntityName": "Great Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wfchq",
            "EntityName": "The Last of Mrs. Cheyney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wg0lz",
            "EntityName": "The Best of Everything"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wgxy1",
            "EntityName": "Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hl97",
            "EntityName": "Queen Bee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w25m",
            "EntityName": "Johnny Guitar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054_0p",
            "EntityName": "The Gorgeous Hussy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05d_tr",
            "EntityName": "Torch Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f04x",
            "EntityName": "Hush\u2026 Hush, Sweet Charlotte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m82n",
            "EntityName": "Autumn Leaves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064nm14",
            "EntityName": "The Karate Killers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065_f8",
            "EntityName": "What Ever Happened to Baby Jane?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y7_x",
            "EntityName": "Our Dancing Daughters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076162",
            "EntityName": "It's a Great Feeling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bc2w",
            "EntityName": "The Damned Don't Cry!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07n06p",
            "EntityName": "Rain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ncxk",
            "EntityName": "Flamingo Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zbj7",
            "EntityName": "Dancing Lady"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080m7fp",
            "EntityName": "Rose-Marie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080pgyc",
            "EntityName": "The Circle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_6k",
            "EntityName": "The Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09x69j",
            "EntityName": "Sadie McKee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b8ghw",
            "EntityName": "Strait-Jacket"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh8z_",
            "EntityName": "The Caretakers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjr3",
            "EntityName": "Untamed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0brjnd",
            "EntityName": "I Saw What You Did"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0brk3r",
            "EntityName": "Berserk!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5wn",
            "EntityName": "Grand Hotel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c61b",
            "EntityName": "The Hollywood Revue of 1929"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8q9k",
            "EntityName": "Love on the Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs4d2d",
            "EntityName": "Harry Langdon: The Forgotten Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cy__l",
            "EntityName": "Mildred Pierce"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dkslz",
            "EntityName": "Daisy Kenyon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngnd6x",
            "EntityName": "Della"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cgbf": "Joan Crawford"
    },
    "qid_topic_entity": {
      "Q40475": "Joan Crawford"
    },
    "index": 347
  },
  {
    "QuestionId": "WebQTest-1850",
    "RawQuestion": "what religion does madonna practice?",
    "ProcessedQuestion": "what religion does madonna practice",
    "Parses": [
      {
        "ParseId": "WebQTest-1850.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vs_v8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vs_v8 ns:people.person.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "madonna",
        "TopicEntityName": "Madonna",
        "TopicEntityMid": "m.01vs_v8",
        "InferentialChain": [
          "people.person.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n15n",
            "EntityName": "Jewish Renewal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vs_v8": "Madonna"
    },
    "qid_topic_entity": {
      "Q1744": "Madonna"
    },
    "index": 348
  },
  {
    "QuestionId": "WebQTest-1094",
    "RawQuestion": "who was isaac newton and what did he do?",
    "ProcessedQuestion": "who was isaac newton and what did he do",
    "Parses": [
      {
        "ParseId": "WebQTest-1094.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "isaac newton",
        "TopicEntityName": "Isaac Newton",
        "TopicEntityMid": "m.03s9v",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pxg",
            "EntityName": "Chemist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s2z",
            "EntityName": "Mathematician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05snw",
            "EntityName": "Physicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h9c",
            "EntityName": "Astronomer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03s9v": "Isaac Newton"
    },
    "qid_topic_entity": {
      "Q935": "Isaac Newton"
    },
    "index": 349
  },
  {
    "QuestionId": "WebQTest-966",
    "RawQuestion": "what basketball player is married to monica?",
    "ProcessedQuestion": "what basketball player is married to monica",
    "Parses": [
      {
        "ParseId": "WebQTest-966.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fs85)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fs85 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?x ns:people.person.profession ns:m.02h664x .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "monica",
        "TopicEntityName": "Monica",
        "TopicEntityMid": "m.01fs85",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h664x",
            "EntityName": "Basketball player",
            "SourceNodeIndex": 1,
            "NodePredicate": "people.person.profession",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            2,
            3
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2zfl",
            "EntityName": "Shannon Brown"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01fs85": "Monica"
    },
    "qid_topic_entity": {
      "Q231487": "Monica"
    },
    "index": 350
  },
  {
    "QuestionId": "WebQTest-297",
    "RawQuestion": "what time zone is anaheim california?",
    "ProcessedQuestion": "what time zone is anaheim california",
    "Parses": [
      {
        "ParseId": "WebQTest-297.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k9p4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k9p4 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "anaheim california",
        "TopicEntityName": "Anaheim",
        "TopicEntityMid": "m.0k9p4",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcqs",
            "EntityName": "Pacific Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0k9p4": "Anaheim"
    },
    "qid_topic_entity": {
      "Q49247": "Anaheim"
    },
    "index": 351
  },
  {
    "QuestionId": "WebQTest-866",
    "RawQuestion": "where did otto frank go to college?",
    "ProcessedQuestion": "where did otto frank go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-866.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01c9j8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01c9j8 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "otto frank",
        "TopicEntityName": "Otto Frank",
        "TopicEntityMid": "m.01c9j8",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bfyjl",
            "EntityName": "Heidelberg University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01c9j8": "Otto Frank"
    },
    "qid_topic_entity": {
      "Q7336": "Otto Frank"
    },
    "index": 352
  },
  {
    "QuestionId": "WebQTest-1547",
    "RawQuestion": "what is the title of george bush's new book?",
    "ProcessedQuestion": "what is the title of george bush 's new book",
    "Parses": [
      {
        "ParseId": "WebQTest-1547.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b6zr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b6zr ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n?x ns:book.written_work.date_of_first_publication ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "george bush",
        "TopicEntityName": "George W. Bush",
        "TopicEntityMid": "m.09b6zr",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xryvm",
            "EntityName": "Book",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "book.written_work.date_of_first_publication",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3wdwz",
            "EntityName": "In My Time: A Personal and Political Memoir"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09b6zr": "George W. Bush"
    },
    "qid_topic_entity": {
      "Q207": "George W. Bush"
    },
    "index": 353
  },
  {
    "QuestionId": "WebQTest-2015",
    "RawQuestion": "what type of government does argentina have today?",
    "ProcessedQuestion": "what type of government does argentina have today",
    "Parses": [
      {
        "ParseId": "WebQTest-2015.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drnm",
            "EntityName": "Representative democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 354
  },
  {
    "QuestionId": "WebQTest-1789",
    "RawQuestion": "what is john edwards indicted for?",
    "ProcessedQuestion": "what is john edwards indicted for",
    "Parses": [
      {
        "ParseId": "WebQTest-1789.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01651q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01651q ns:base.crime.acquitted_person.acquittal ?y .\n?y ns:base.crime.acquittal.crime_type ?x .\n}\n",
        "PotentialTopicEntityMention": "john edwards",
        "TopicEntityName": "John Edwards",
        "TopicEntityMid": "m.01651q",
        "InferentialChain": [
          "base.crime.acquitted_person.acquittal",
          "base.crime.acquittal.crime_type"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hj49",
            "EntityName": "Political corruption"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01651q": "John Edwards"
    },
    "qid_topic_entity": {
      "Q217314": "John Edwards"
    },
    "index": 355
  },
  {
    "QuestionId": "WebQTest-1306",
    "RawQuestion": "what kind of government does iran have after 1979?",
    "ProcessedQuestion": "what kind of government does iran have after 1979",
    "Parses": [
      {
        "ParseId": "WebQTest-1306.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? relation assumes \"present\" and question implies \"present\"."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03shp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03shp ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "iran",
        "TopicEntityName": "Iran",
        "TopicEntityMid": "m.03shp",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fgl7",
            "EntityName": "Islamic republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07lg6",
            "EntityName": "Theocracy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03shp": "Iran"
    },
    "qid_topic_entity": {
      "Q794": "Iran"
    },
    "index": 356
  },
  {
    "QuestionId": "WebQTest-1206",
    "RawQuestion": "what was francis bacon contributions?",
    "ProcessedQuestion": "what was francis bacon contributions",
    "Parses": [
      {
        "ParseId": "WebQTest-1206.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030dr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030dr ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "francis bacon",
        "TopicEntityName": "Francis Bacon",
        "TopicEntityMid": "m.030dr",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.125_hzb47",
            "EntityName": "Spy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fc2",
            "EntityName": "Statesman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030dr": "Francis Bacon"
    },
    "qid_topic_entity": {
      "Q37388": "Francis Bacon"
    },
    "index": 357
  },
  {
    "QuestionId": "WebQTest-1613",
    "RawQuestion": "what language do they speak in malta?",
    "ProcessedQuestion": "what language do they speak in malta",
    "Parses": [
      {
        "ParseId": "WebQTest-1613.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "malta",
        "TopicEntityName": "Malta",
        "TopicEntityMid": "m.04v3q",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1613.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "malta",
        "TopicEntityName": "Malta",
        "TopicEntityMid": "m.04v3q",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3_",
            "EntityName": "Maltese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04v3q": "Malta"
    },
    "qid_topic_entity": {
      "Q233": "Malta"
    },
    "index": 358
  },
  {
    "QuestionId": "WebQTest-1417",
    "RawQuestion": "when was the last time the boston bruins went to the stanley cup?",
    "ProcessedQuestion": "when was the last time the boston bruins went to the stanley cup",
    "Parses": [
      {
        "ParseId": "WebQTest-1417.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F union"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.0cc8tt9 ns:time.recurring_event.instances ?x . # Stanly Cup finals instances\n\n  {\n    ?x ns:sports.sports_championship_event.champion ns:m.0j2zj . #(Boston Bruins)\n  }\n  UNION\n  {\n    ?x ns:sports.sports_championship_event.runner_up ns:m.0j2zj . #(Boston Bruins)\n  }\n\n  ?x ns:time.event.start_date ?st .\n}\nORDER BY DESC(xsd:datetime(?st))\nLIMIT 1",
        "PotentialTopicEntityMention": "boston bruins",
        "TopicEntityName": "Boston Bruins",
        "TopicEntityMid": "m.0j2zj",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrcjzl",
            "EntityName": "2013 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0j2zj": "Boston Bruins"
    },
    "qid_topic_entity": {
      "Q194121": "Boston Bruins"
    },
    "index": 359
  },
  {
    "QuestionId": "WebQTest-69",
    "RawQuestion": "what county is brentwood tennessee in?",
    "ProcessedQuestion": "what county is brentwood tennessee in",
    "Parses": [
      {
        "ParseId": "WebQTest-69.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_xcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_xcq ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "brentwood tennessee",
        "TopicEntityName": "Brentwood",
        "TopicEntityMid": "m.0_xcq",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0msrq",
            "EntityName": "Williamson County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-69.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_xcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_xcq ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "brentwood tennessee",
        "TopicEntityName": "Brentwood",
        "TopicEntityMid": "m.0_xcq",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0msrq",
            "EntityName": "Williamson County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0_xcq": "Brentwood"
    },
    "qid_topic_entity": {
      "Q3096621": "Brentwood"
    },
    "index": 360
  },
  {
    "QuestionId": "WebQTest-1830",
    "RawQuestion": "what language do they speak in colombia south america?",
    "ProcessedQuestion": "what language do they speak in colombia south america",
    "Parses": [
      {
        "ParseId": "WebQTest-1830.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "colombia",
        "TopicEntityName": "Colombia",
        "TopicEntityMid": "m.01ls2",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1q6h_1_4j",
            "EntityName": "Piratapuyo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yppj",
            "EntityName": "Cocama language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025syhx",
            "EntityName": "Bora Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wqvr",
            "EntityName": "Wayuu Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hw_7r",
            "EntityName": "Malayo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwglw",
            "EntityName": "Quechua, Napo Lowland Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgnw",
            "EntityName": "Curripaco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgxh",
            "EntityName": "Hupd\u00eb Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwh2x",
            "EntityName": "Baudo language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl4_",
            "EntityName": "Siona Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl46",
            "EntityName": "Cabiyar\u00ed Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwmth",
            "EntityName": "Nukak language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwnpn",
            "EntityName": "Bar\u00ed Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwnwm",
            "EntityName": "Tama Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwpxb",
            "EntityName": "Awa-Cuaiquer Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqkg",
            "EntityName": "Guanano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqrn",
            "EntityName": "Tanimuca-Retuar\u00e3 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqww",
            "EntityName": "Cagua Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwr84",
            "EntityName": "Runa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwrvb",
            "EntityName": "Coyaima Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwt3q",
            "EntityName": "Ponares Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwv5q",
            "EntityName": "Macaguaje Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwv8r",
            "EntityName": "Inga, Jungle Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwvm1",
            "EntityName": "Coxima Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hww1x",
            "EntityName": "Tomedes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwwlp",
            "EntityName": "Natagaimas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwwxk",
            "EntityName": "Cumeral Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwxg4",
            "EntityName": "Carijona Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwxgh",
            "EntityName": "Tunebo, Barro Negro Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyr3",
            "EntityName": "Siriano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzdd",
            "EntityName": "Muinane Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzgg",
            "EntityName": "Macagu\u00e1n Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzld",
            "EntityName": "Pijao Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx_dp",
            "EntityName": "Puinave Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx0bf",
            "EntityName": "Cubeo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2q2",
            "EntityName": "Desano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2tn",
            "EntityName": "Tunebo, Central Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx5w4",
            "EntityName": "Guayabero Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx8nb",
            "EntityName": "Arhuaco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb1x",
            "EntityName": "Tunebo, Western Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb4m",
            "EntityName": "Totoro Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb6s",
            "EntityName": "Palenquero Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxdd2",
            "EntityName": "Kogi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxdfd",
            "EntityName": "Barasana Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxds7",
            "EntityName": "Yukpa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxf1r",
            "EntityName": "Waimaj\u00e3 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxfkq",
            "EntityName": "Colombian Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxh5f",
            "EntityName": "Guambiano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxhrz",
            "EntityName": "Minica Huitoto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxj6x",
            "EntityName": "Piaroa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxksk",
            "EntityName": "Ember\u00e1, Northern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxl2t",
            "EntityName": "Ocaina Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxlpz",
            "EntityName": "Anserma Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxnf6",
            "EntityName": "Carabayo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxp1v",
            "EntityName": "Macuna Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxs7q",
            "EntityName": "Omejes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxs9_",
            "EntityName": "Andoque Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxssc",
            "EntityName": "Chipiajes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxswb",
            "EntityName": "Inga Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxsy4",
            "EntityName": "Piapoco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxsz8",
            "EntityName": "Tunebo, Angosturas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxtwj",
            "EntityName": "Catio language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxv46",
            "EntityName": "Koreguaje Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxvjw",
            "EntityName": "Kuna, Border Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxxcv",
            "EntityName": "Andaqui Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxy04",
            "EntityName": "S\u00e1liba Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxy6v",
            "EntityName": "Cams\u00e1 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxz2z",
            "EntityName": "Murui Huitoto language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxzv2",
            "EntityName": "Yucuna Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbb5",
            "EntityName": "Guahibo language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbg9",
            "EntityName": "Cuiba language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbnh",
            "EntityName": "Playero language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pq8qn",
            "EntityName": "Uwa language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h0wpt",
            "EntityName": "Achawa language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w6b4",
            "EntityName": "Ticuna language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tnswp",
            "EntityName": "Islander Creole English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gdhz",
            "EntityName": "Nheengatu language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k4r10",
            "EntityName": "Tinigua language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085vdy",
            "EntityName": "Providencia Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08w0ky",
            "EntityName": "Romani, Vlax Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gpqdh",
            "EntityName": "Tuyuca language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4cp",
            "EntityName": "Tucano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7mcv",
            "EntityName": "P\u00e1ez language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm08x",
            "EntityName": "Cof\u00e1n Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0km3ztb",
            "EntityName": "Nonuya language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1830.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "colombia",
        "TopicEntityName": "Colombia",
        "TopicEntityMid": "m.01ls2",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ls2": "Colombia"
    },
    "qid_topic_entity": {
      "Q739": "Colombia"
    },
    "index": 361
  },
  {
    "QuestionId": "WebQTest-1568",
    "RawQuestion": "what university did obama graduated from?",
    "ProcessedQuestion": "what university did obama graduated from",
    "Parses": [
      {
        "ParseId": "WebQTest-1568.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "PotentialTopicEntityMention": "obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.014mlp",
            "EntityName": "Bachelor of Arts",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w5m",
            "EntityName": "Columbia University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 362
  },
  {
    "QuestionId": "WebQTest-828",
    "RawQuestion": "what is the head judge of the supreme court called?",
    "ProcessedQuestion": "what is the head judge of the supreme court called",
    "Parses": [
      {
        "ParseId": "WebQTest-828.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sz1 ns:government.governmental_body.offices_positions ?x .\n}\n",
        "PotentialTopicEntityMention": "supreme court",
        "TopicEntityName": "Supreme Court of the United States",
        "TopicEntityMid": "m.07sz1",
        "InferentialChain": [
          "government.governmental_body.offices_positions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07szk",
            "EntityName": "Chief Justice of the United States"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07sz1": "Supreme Court of the United States"
    },
    "qid_topic_entity": {
      "Q11201": "Supreme Court of the United States"
    },
    "index": 363
  },
  {
    "QuestionId": "WebQTest-425",
    "RawQuestion": "where english is spoken?",
    "ProcessedQuestion": "where english is spoken",
    "Parses": [
      {
        "ParseId": "WebQTest-425.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162b",
            "EntityName": "Bangladesh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0167v",
            "EntityName": "Brunei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016p5p",
            "EntityName": "Transkei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019pcs",
            "EntityName": "Ethiopia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01k0p4",
            "EntityName": "State of Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lx0",
            "EntityName": "Timor-Leste"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ryn",
            "EntityName": "Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065skb",
            "EntityName": "Gazankulu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m_5",
            "EntityName": "Sri Lanka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f9q",
            "EntityName": "Tokelau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pmkv",
            "EntityName": "Malaysia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hbgh",
            "EntityName": "Cura\u00e7ao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rdr4",
            "EntityName": "Bonaire"
          }
        ]
      },
      {
        "ParseId": "WebQTest-425.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014tss",
            "EntityName": "Kingdom of Great Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 364
  },
  {
    "QuestionId": "WebQTest-1802",
    "RawQuestion": "where are the timezones in the usa?",
    "ProcessedQuestion": "where are the timezones in the usa",
    "Parses": [
      {
        "ParseId": "WebQTest-1802.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "usa",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027wj2_",
            "EntityName": "Samoa Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027wjl3",
            "EntityName": "Chamorro Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hczc",
            "EntityName": "Mountain Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcqs",
            "EntityName": "Pacific Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcrv",
            "EntityName": "Alaska Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042g7t",
            "EntityName": "Atlantic Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 365
  },
  {
    "QuestionId": "WebQTest-1242",
    "RawQuestion": "what are all the names of the harry potter books?",
    "ProcessedQuestion": "what are all the names of the harry potter books",
    "Parses": [
      {
        "ParseId": "WebQTest-1242.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03647x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03647x ns:book.book_character.appears_in_book ?x .\n}\n",
        "PotentialTopicEntityMention": "harry",
        "TopicEntityName": "Harry Potter",
        "TopicEntityMid": "m.03647x",
        "InferentialChain": [
          "book.book_character.appears_in_book"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014jst",
            "EntityName": "Harry Potter and the Order of the Phoenix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015pln",
            "EntityName": "Harry Potter and the Chamber of Secrets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lr1g",
            "EntityName": "Harry Potter and the Prisoner of Azkaban"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m5g_",
            "EntityName": "Harry Potter and the Goblet of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bkkv",
            "EntityName": "Harry Potter and the Deathly Hallows"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_rf9",
            "EntityName": "Harry Potter and the Half-Blood Prince"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_vk",
            "EntityName": "Harry Potter and the Philosopher's Stone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03647x": "Harry Potter"
    },
    "qid_topic_entity": {
      "Q3244512": "Harry Potter"
    },
    "index": 366
  },
  {
    "QuestionId": "WebQTest-612",
    "RawQuestion": "who does jeremy shockey play for in 2012?",
    "ProcessedQuestion": "who does jeremy shockey play for in 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-612.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? in 2012 filter not added."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076ltd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076ltd ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n",
        "PotentialTopicEntityMention": "jeremy shockey",
        "TopicEntityName": "Jeremy Shockey",
        "TopicEntityMid": "m.076ltd",
        "InferentialChain": [
          "base.schemastaging.athlete_extra.salary",
          "base.schemastaging.athlete_salary.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y3c",
            "EntityName": "Carolina Panthers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.076ltd": "Jeremy Shockey"
    },
    "qid_topic_entity": {
      "Q1687632": "Jeremy Shockey"
    },
    "index": 367
  },
  {
    "QuestionId": "WebQTest-1124",
    "RawQuestion": "who played samantha stephens in bewitched?",
    "ProcessedQuestion": "who played samantha stephens in bewitched",
    "Parses": [
      {
        "ParseId": "WebQTest-1124.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023ny6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023ny6 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.02nrqnw .\n}\n",
        "PotentialTopicEntityMention": "bewitched",
        "TopicEntityName": "Bewitched",
        "TopicEntityMid": "m.023ny6",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nrqnw",
            "EntityName": "Samantha",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x3b8",
            "EntityName": "Elizabeth Montgomery"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.023ny6": "Bewitched"
    },
    "qid_topic_entity": {
      "Q1044635": "Bewitched"
    },
    "index": 368
  },
  {
    "QuestionId": "WebQTest-1487",
    "RawQuestion": "where does kate middleton live 2012?",
    "ProcessedQuestion": "where does kate middleton live 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1487.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mnc3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mnc3 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2012-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2012-12-31\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "kate middleton",
        "TopicEntityName": "Catherine, Duchess of Cambridge",
        "TopicEntityMid": "m.05mnc3",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kqsd",
            "EntityName": "Bucklebury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_yz",
            "EntityName": "Reading"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mnc3": "Catherine, Duchess of Cambridge"
    },
    "qid_topic_entity": {
      "Q10479": "Catherine, Duchess of Cambridge"
    },
    "index": 369
  },
  {
    "QuestionId": "WebQTest-468",
    "RawQuestion": "where did venus williams come from?",
    "ProcessedQuestion": "where did venus williams come from",
    "Parses": [
      {
        "ParseId": "WebQTest-468.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016cff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016cff ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "venus williams",
        "TopicEntityName": "Venus Williams",
        "TopicEntityMid": "m.016cff",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r0ls",
            "EntityName": "Lynwood"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016cff": "Venus Williams"
    },
    "qid_topic_entity": {
      "Q11578": "Venus Williams"
    },
    "index": 370
  },
  {
    "QuestionId": "WebQTest-518",
    "RawQuestion": "what type of money do they use in costa rica?",
    "ProcessedQuestion": "what type of money do they use in costa rica",
    "Parses": [
      {
        "ParseId": "WebQTest-518.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "costa rica",
        "TopicEntityName": "Costa Rica",
        "TopicEntityMid": "m.01p8s",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wccn",
            "EntityName": "Costa Rican col\u00f3n"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01p8s": "Costa Rica"
    },
    "qid_topic_entity": {
      "Q800": "Costa Rica"
    },
    "index": 371
  },
  {
    "QuestionId": "WebQTest-79",
    "RawQuestion": "what country did buddha come from?",
    "ProcessedQuestion": "what country did buddha come from",
    "Parses": [
      {
        "ParseId": "WebQTest-79.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015k7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015k7 ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "buddha",
        "TopicEntityName": "Gautama Buddha",
        "TopicEntityMid": "m.015k7",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zwt",
            "EntityName": "Nepal"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015k7": "Gautama Buddha"
    },
    "qid_topic_entity": {
      "Q9441": "Gautama Buddha"
    },
    "index": 372
  },
  {
    "QuestionId": "WebQTest-1233",
    "RawQuestion": "what are the colors of the ny giants?",
    "ProcessedQuestion": "what are the colors of the ny giants",
    "Parses": [
      {
        "ParseId": "WebQTest-1233.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05gg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05gg4 ns:sports.sports_team.colors ?x .\n}\n",
        "PotentialTopicEntityMention": "ny giants",
        "TopicEntityName": "New York Giants",
        "TopicEntityMid": "m.05gg4",
        "InferentialChain": [
          "sports.sports_team.colors"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g5v",
            "EntityName": "Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036k5h",
            "EntityName": "Grey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fvc",
            "EntityName": "Red"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083jv",
            "EntityName": "White"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05gg4": "New York Giants"
    },
    "qid_topic_entity": {
      "Q190618": "New York Giants"
    },
    "index": 373
  },
  {
    "QuestionId": "WebQTest-1090",
    "RawQuestion": "where are boeing headquarters?",
    "ProcessedQuestion": "where are boeing headquarters",
    "Parses": [
      {
        "ParseId": "WebQTest-1090.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0178g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0178g ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "boeing",
        "TopicEntityName": "Boeing",
        "TopicEntityMid": "m.0178g",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_d4",
            "EntityName": "Chicago"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0178g": "Boeing"
    },
    "qid_topic_entity": {
      "Q66": "Boeing"
    },
    "index": 374
  },
  {
    "QuestionId": "WebQTest-1822",
    "RawQuestion": "who is in paul ryan's family?",
    "ProcessedQuestion": "who is in paul ryan 's family",
    "Parses": [
      {
        "ParseId": "WebQTest-1822.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F Union - children + spouse and potentially parents"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tFILTER (?x != ns:m.024v2j)\n\t{ \n\t  # Parents\n\t  ns:m.024v2j ns:people.person.parents ?x .\n\t}\n\tUNION\n\t{\n\t  # Children\n\t  ns:m.024v2j ns:people.person.children ?x .\n\t}\n\tUNION\n\t{\n\t  # Siblings\n\t  ns:m.024v2j ns:people.person.sibling_s ?y .\n\t  ?y ns:people.sibling_relationship.sibling ?x .\n\t}\n\tUNION\n\t{\n\t  # Spouse\n\t  ns:m.024v2j ns:people.person.spouse_s ?y .\n\t  ?y ns:people.marriage.spouse ?x .\n\t  ?y ns:people.marriage.type_of_union ns:m.04ztj .\n\t  FILTER (NOT EXISTS {?y ns:people.marriage.to []})\n\t}\n}",
        "PotentialTopicEntityMention": "paul ryan",
        "TopicEntityName": "Paul Ryan",
        "TopicEntityMid": "m.024v2j",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j6fhh8",
            "EntityName": "Janna Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr8sx8",
            "EntityName": "Elizabeth Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr8t50",
            "EntityName": "Charles Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kr8tj2",
            "EntityName": "Samuel Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qf0gtr",
            "EntityName": "Paul Murray Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qf0hct",
            "EntityName": "Elizabeth A. Ryan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.024v2j": "Paul Ryan"
    },
    "qid_topic_entity": {
      "Q203966": "Paul Ryan"
    },
    "index": 375
  },
  {
    "QuestionId": "WebQTest-1933",
    "RawQuestion": "what year did adam morrison get drafted?",
    "ProcessedQuestion": "what year did adam morrison get drafted",
    "Parses": [
      {
        "ParseId": "WebQTest-1933.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08_g4q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08_g4q ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.draft ?x .\n}\n",
        "PotentialTopicEntityMention": "adam morrison",
        "TopicEntityName": "Adam Morrison",
        "TopicEntityMid": "m.08_g4q",
        "InferentialChain": [
          "sports.drafted_athlete.drafted",
          "sports.sports_league_draft_pick.draft"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09th87",
            "EntityName": "2006 NBA draft"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08_g4q": "Adam Morrison"
    },
    "qid_topic_entity": {
      "Q350464": "Adam Morrison"
    },
    "index": 376
  },
  {
    "QuestionId": "WebQTest-173",
    "RawQuestion": "what countries are part of the baltic?",
    "ProcessedQuestion": "what countries are part of the baltic",
    "Parses": [
      {
        "ParseId": "WebQTest-173.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019tjm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019tjm ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "baltic",
        "TopicEntityName": "Baltic states",
        "TopicEntityMid": "m.019tjm",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kmm",
            "EntityName": "Estonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g5k",
            "EntityName": "Latvia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gzd",
            "EntityName": "Lithuania"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019tjm": "Baltic states"
    },
    "qid_topic_entity": {
      "Q39731": "Baltic states"
    },
    "index": 377
  },
  {
    "QuestionId": "WebQTest-1204",
    "RawQuestion": "where did the anasazi indians live?",
    "ProcessedQuestion": "where did the anasazi indians live",
    "Parses": [
      {
        "ParseId": "WebQTest-1204.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lyq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lyq ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "anasazi indians",
        "TopicEntityName": "Ancestral Puebloans",
        "TopicEntityMid": "m.0lyq",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027v6g",
            "EntityName": "Four Corners"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lyq": "Ancestral Puebloans"
    },
    "qid_topic_entity": {
      "Q478805": "Ancestral Puebloans"
    },
    "index": 378
  },
  {
    "QuestionId": "WebQTest-227",
    "RawQuestion": "where were the seneca indians located?",
    "ProcessedQuestion": "where were the seneca indians located",
    "Parses": [
      {
        "ParseId": "WebQTest-227.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? were"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028yj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028yj0 ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "seneca indians",
        "TopicEntityName": "Seneca people",
        "TopicEntityMid": "m.028yj0",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rby",
            "EntityName": "New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.028yj0": "Seneca people"
    },
    "qid_topic_entity": {
      "Q213422": "Seneca people"
    },
    "index": 379
  },
  {
    "QuestionId": "WebQTest-170",
    "RawQuestion": "who played bilbo in lord of the rings?",
    "ProcessedQuestion": "who played bilbo in lord of the rings",
    "Parses": [
      {
        "ParseId": "WebQTest-170.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6z1 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.023cjg .\n}\n",
        "PotentialTopicEntityMention": "bilbo",
        "TopicEntityName": "Old Bilbo",
        "TopicEntityMid": "m.0g6z1",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.023cjg",
            "EntityName": "The Lord of the Rings",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_wwf",
            "EntityName": "Norman Bird"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g6z1": "Old Bilbo"
    },
    "qid_topic_entity": {
      "Q185737": "Old Bilbo"
    },
    "index": 380
  },
  {
    "QuestionId": "WebQTest-739",
    "RawQuestion": "what pieces of music did claude debussy compose?",
    "ProcessedQuestion": "what pieces of music did claude debussy compose",
    "Parses": [
      {
        "ParseId": "WebQTest-739.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvy ns:music.composer.compositions ?x .\n}\n",
        "PotentialTopicEntityMention": "claude debussy",
        "TopicEntityName": "Claude Debussy",
        "TopicEntityMid": "m.01vvy",
        "InferentialChain": [
          "music.composer.compositions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b821q1dm",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.120ldwp4",
            "EntityName": "Lindaraja"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1234bndn",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1234nfvz",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1ym_l6xb0",
            "EntityName": "Le promenoir des deux amants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5_6yg",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: I. La cour des lys: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5yrhj",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: II. La chambre magique: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zc3z",
            "EntityName": "\u00c9tudes, L. 136: XI. Pour les arp\u00e8ges compos\u00e9s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zhxw",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene II. \\\"Je suis ... je suis malade ici\\\" (M\u00e9lisande, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zm61",
            "EntityName": "Chansons de Bilitis, L. 90: La Fl\u00fbte de Pan \u00abPour le jour des Hyacinthies\u00bb"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zvq3",
            "EntityName": "Chansons de Bilitis, L. 90: \u00abLa Chevelure \u00abIl m'a dit \u00abCette nuit d'ai r\u00eav\u00e9\u00bb\u00bb"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6_zhg",
            "EntityName": "Dans le jardin, L. 78, CD 107, m\u00e9lodie pour voix et piano \\\"Je regardais dans le jardin\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_605jr",
            "EntityName": "Preludes, Book I: 6. Des pas sur la neige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60cr2",
            "EntityName": "Estampes II: La soir e dans Grenade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60czy",
            "EntityName": "Chansons de Bilitis, L. 90: Le Tombeau des na\u00efades: \u00abLe long du bois couvert de givre\u00bb"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60q1h",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : I. En bateau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_61wmp",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano : I. \\\"Aupr\u00e8s de cette grotte sombre\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_626vh",
            "EntityName": "My Reverie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_62vb5",
            "EntityName": "Proses lyriques, L. 84, CD 90 : IV. De Soirs, m\u00e9lodie \\\"Dimanche sur les villes\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_63vyz",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: II. Scherzo - Intermezzo. Moderato con allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6478t",
            "EntityName": "La Damoiselle \u00e9lue, L. 62, CD 69, po\u00e8me lyrique pour voix de femmes, solo, ch\u0153ur et orchestre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_647ch",
            "EntityName": "\u00c9tudes, L. 136: V. Pour les octaves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_64jsh",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: III. Pour que la nuit soit propice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_64mfg",
            "EntityName": "Preludes, Book II: 7. La Terrasse des audiences du clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_65d7k",
            "EntityName": "En blanc et noir: II. Lent, sombre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_667ql",
            "EntityName": "Quatuor \u00e0 cordes en sol mineur, op. 10, L. 85, CD 91 : IV. Tr\u00e8s mod\u00e9r\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66lnh",
            "EntityName": "Suite bergamasque, L. 75, CD 82a, pour orchestre : III. Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66pb7",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 3. Les Contes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6721p",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: I. La cour des lys: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67q33",
            "EntityName": "Quatuor \u00e0 cordes en sol mineur, op. 10, L. 85, CD 91 : II. Assez vif et bien rythm\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67qq5",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b04"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67yr1",
            "EntityName": "Deux arabesques, L. 66, CD 74, pour piano : No. 2 en sol majeur, Allegretto scherzando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6857g",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 6. Bilitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_68qzd",
            "EntityName": "Pantomime, L. 31, CD 47, m\u00e9lodie pour voix et piano \\\"Pierrot, qui n\u2019a rien d\u2019un Clitandre\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_69yfv",
            "EntityName": "Sonata for flute, viola and harp, L. 137: II. Interlude"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6b4px",
            "EntityName": "Preludes, Book II: 3. La Puerta del Vino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6bjlf",
            "EntityName": "Estampes, L. 100: III. Jardins sous la pluie. Net et vif"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6c184",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene II. \\\"Grand-p\u00e8re, j'ai re\u00e7u en m\u00eame temps que la lettre de mon fr\u00e8re...\\\" (Pell\u00e9as, Arkel, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6c7fn",
            "EntityName": "Three Preludes: Feuilles mortes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6cz57",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"Oh! Cette pierre est lourde ...\\\" (Yniold, Le Berger)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6d6lm",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene II. \\\"Prenez garde; par ici, par ici\\\" (Golaud, Pell\u00e9as)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dtbk",
            "EntityName": "Syrinx huilulle, L 129"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dyl4",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte V. Une chambre dans le ch\u00e2teau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6f191",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. \\\"Oh! Oh! Mes cheveux descendent de la tour!\\\" (M\u00e9lisande, Pell\u00e9as)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6g83_",
            "EntityName": "Suite bergamasque, L. 75, CD 82b, pour orchestre : III. Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6glx1",
            "EntityName": "Preludes, Book II: 1. Brouillards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6gs5y",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene II. \\\"Voici ce qu'il \u00e9crit \u00e0 son fr\u00e8re Pell\u00e9as: 'Un soir, je l'ai trouv\u00e9e'\\\" (Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6hj8p",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: I. Andantino con moto allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6jtms",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"Apporte-la\\\" (Golaud, Arkel, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6k3cr",
            "EntityName": "Children's Corner, L. 113: V. The Little Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6lxl_",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 8. Les Courtisanes \u00e9gyptiennes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6m_m5",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene III. \\\"Ho\u00e9! Hisse ho\u00e9! Ho\u00e9! Ho\u00e9!\\\" (Ch\u0153r, M\u00e9lisande, Pell\u00e9as, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6mn47",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : IV. Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6n8l_",
            "EntityName": "\u00c9tudes, L. 136: II. Pour les tierces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6q7bm",
            "EntityName": "Images pour orchestre, L 122: II. Iberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6q7bt",
            "EntityName": "Iberia No. 2 from \\\"Images\\\" for Orchestra: II. The Perfumes of the Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6qhbw",
            "EntityName": "Three Preludes: Ce qu'a vu le vent de l'ouest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6ttlh",
            "EntityName": "3 Preludes from Book II: V. Bruyer\u00e8s. Calme"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6vjgd",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Qu'avez-vous fait? Vous allez la tuer\\\" (Arkel, Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6vxqc",
            "EntityName": "Children's Corner, L. 113: III. Serenade for the Doll"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6x4r0",
            "EntityName": "Proses lyriques, L. 84, CD 90 : I. De R\u00eave, m\u00e9lodie \\\"La nuit a des douceurs de femme\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6yrsf",
            "EntityName": "Clair de lune Samba"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_704z6",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene II. \\\"Ah! Ah! Tout va bien, ce la ne sera rien\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_70swk",
            "EntityName": "Children's Corner - I. Doctor Gradus ad Parnassum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7203v",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: II. Harmonie du soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7363q",
            "EntityName": "Pierrot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_74qc9",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : IV. Paysages belges. Chevaux de bois, m\u00e9lodie pour voix et piano \\\"Tournez, tournez, bons chevaux de bois\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_74qkz",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: II. La chambre magique: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_75kkp",
            "EntityName": "\u00c9tudes, L. 136: I. Pour les \u00ab cinq doigts \u00bb d'apr\u00e8s monsieur Czerny"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_785n5",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene IV. \\\"Viens, nous allons nous asseoir ici, Yniold\\\" (Golaud, Yniold)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_79_89",
            "EntityName": "Cello sonata in D minor: I. Prologue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7dpnl",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon, L. 119: I. Ballade de Villon \u00e0 s'Amye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7gzrq",
            "EntityName": "F\u00eates galantes (Premier recueil), L. 80, CD 86 : III. Clair de lune, m\u00e9lodie pour voix et piano \\\"Votre \u00e2me est un paysage choisi\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7jv18",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon, L. 119: II. Ballade que Villon feit \u00e0 la requeste de sa m\u00e8re pour prier Nostre-Dame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7k80b",
            "EntityName": "En blanc et noir: I. Avec emportement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7l3nl",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene I. \\\"Vous ne savez pas o\u00f9 je vous ai men\u00e9e?\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7l7b6",
            "EntityName": "Nuit d\u2019\u00e9toiles, L. 4, CD 2, m\u00e9lodie pour voix et piano \\\"Nuit d\u2019\u00e9toiles, sous tes voiles\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7l7wd",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Non, non, nous n'avons pas \u00e9t\u00e9 coupables\\\" (M\u00e9lisande, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7mtb0",
            "EntityName": "Nocturnes, L. 91, CD 98: III. Sir\u00e8nes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7nk_p",
            "EntityName": "Petite Suite: Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7pj_2",
            "EntityName": "La Romance d\u2019Ariel, L. 54, CD 58, m\u00e9lodie pour voix et piano \\\"Au long de ces montagnes douces\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7pmfh",
            "EntityName": "Proses lyriques, L. 84, CD 90 : III. De Fleurs, m\u00e9lodie \\\"Dans l\u2019ennui si d\u00e9sol\u00e9ment vert\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7qyt2",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: VI. Pour remercier la pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7t946",
            "EntityName": "Preludes, Book II: 8. Ondine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7t9jk",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene I. \\\"Je ne pourrai plus sortir de cette for\u00eat\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7tsmn",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: IV. Le laurier bless\u00e9: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7tsqc",
            "EntityName": "Sonata for flute, viola and harp, L. 137: III. Finale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7w7pf",
            "EntityName": "Preludes, Book I: 1. Danseuses de Delphes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7x7ck",
            "EntityName": "Children's Corner, L. 113: IV. The Snow is Dancing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7yxtv",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Ouvrez la fen\u00eatre, ouvrez la fen\u00eatre ...\\\" (M\u00e9lisande, Arkel, Le m\u00e9decin)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_813fq",
            "EntityName": "Regret, L. 55, CD 59, m\u00e9lodie pour voix et piano \\\"Devant le ciel d\u2019\u00e9t\u00e9, ti\u00e8de et calme\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_fk14v",
            "EntityName": "Star Gazers Theme Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hph7q",
            "EntityName": "Suite bergamasque, L. 75, CD 82 : III. Clair de lune, pour violon et piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hq905",
            "EntityName": "\u00c9tudes, L. 136: VII. Pour les degr\u00e9s chromatiques"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hqkc2",
            "EntityName": "Les cloches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hr0pw",
            "EntityName": "Pour le piano: Sarabande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hrj54",
            "EntityName": "L\u2019Enfant prodigue : 2b. Pourquoi m'as-tu quitt\u00e9e (Lia)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hrz7g",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte III, sc\u00e8ne 2. Les souterrains du ch\u00e2teau / Acte IV, sc\u00e8ne 2. Un appartement dans le ch\u00e2teau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hsrdk",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"O\u00f9 vas-tu? Il faut que je te parle ce soir\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hstxy",
            "EntityName": "Romance (Deux Romances, No. 2, 1891)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hsxp8",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : V. Aquarelles, 1. Green, m\u00e9lodie pour voix et piano \\\"Voici des fruits, des fleurs, des feuilles\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ht0n6",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : III. Le rossignol qui, du haut d\u2019une branche, m\u00e9lodie pour voix et piano \\\"L\u2019ombre des arbres dans la rivi\u00e8re embrum\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hthyg",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene III. \\\"Il fait sombre dans les jardins\\\" (M\u00e9lisande, Genevi\u00e8ve, Pell\u00e9as)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_htp_j",
            "EntityName": "Pr\u00e9ludes, Livre II, L. 123: IX. Hommage \u00e0 S. Pickwick Esq. P.P.M.P.C.. Grave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv4js",
            "EntityName": "Trois Chansons de France, L. 102, CD 115: I. Rondel: Le temps a laiss\u00e9 son manteau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv57k",
            "EntityName": "Iberia No. 2 from \\\"Images\\\" for Orchestra: I. Through the Streets and Roads"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvvsj",
            "EntityName": "Three Preludes: Feux d'artifice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvx8w",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 1. Chant pastoral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hwd77",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 7. Le Tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hwmys",
            "EntityName": "En blanc et noir, L. 134, CD 142"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hxw83",
            "EntityName": "Sonata for flute, viola and harp, L. 137: I. Pastorale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyr_4",
            "EntityName": "\u00c9tudes, L. 136: VIII. Pour les agr\u00e9ments"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyxyy",
            "EntityName": "Prelude (From Suite Bergamasque)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyzjt",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: I. La Cour de lys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzbwx",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: V. Le paradis: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzhpj",
            "EntityName": "Suite bergamasque, L. 75, CD 82, pour orchestre : III. Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzt3d",
            "EntityName": "III. Le Vent dans la plaine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_367",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: IV. Le Bon Pasteur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_9fv",
            "EntityName": "Trois M\u00e9lodies, L. 81, CD 85, pour une voix avec accompagnement de piano : I. La mer est plus belle que les cath\u00e9drales."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_dcn",
            "EntityName": "Sonate pour violoncelle et piano: III. Finale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_xxl",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene I. \\\"Qu'est-ce qui brille ainsi, au fond de l'eau?\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j10m0",
            "EntityName": "\u00c9tudes, L. 136: IX. Pour les notes r\u00e9p\u00e9t\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j125r",
            "EntityName": "Nocturnes, L 91: II. F\u00eates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j18my",
            "EntityName": "Petite Suite, L. 65, CD 71, pour violon et piano : III. Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j1vqk",
            "EntityName": "Trois Chansons de France, L. 102: II. La Grotte: Aupr\u00e8s de cette grotte sombre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j1ysx",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2cwc",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Ce n'est pas de cette petite blessure qu'elle peut mourir ...\\\" (Le m\u00e9decin, Arkel, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j3kw_",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : IV. Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j42wt",
            "EntityName": "Pr\u00e9ludes, Livre II, L. 123: XI. Les tierces altern\u00e9es. Mod\u00e9r\u00e9ment anim\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j49vq",
            "EntityName": "Pour le piano, L. 95: I. Pr\u00e9lude. \u00c0 Mademoiselle M.W. de Romilly. Assez anim\u00e9 et tr\u00e8s rythm\u00e9 - Tempo di cadenza - Tempo I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j4b19",
            "EntityName": "Nocturnes, L 91: III. Sir\u00e8nes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j52k3",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: V. La Mort des amants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j5stf",
            "EntityName": "Sonate pour violon et piano en sol mineur, L. 140"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j6h8x",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b05"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j6n7b",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: IV. Recueillement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j7zrp",
            "EntityName": "F\u00eates galantes II, L. 104: I. Les Ing\u00e9nus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8c26",
            "EntityName": "\u00c9tudes, L. 136: XII. Pour les accords"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8hpw",
            "EntityName": "F\u00eates galantes II, L. 104: III. Colloque sentimental"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8k40",
            "EntityName": "Preludes, Book I: 2. Voiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j93t2",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. \\\"Je les noue, je les noue aux branches du saule\\\" (Pell\u00e9as, M\u00e9lisande, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j986w",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : II. Cort\u00e8ge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j98ks",
            "EntityName": "\u00c9tudes, L. 136: IV. Pour les sixtes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j99gk",
            "EntityName": "Sonate pour violoncelle et piano: II. S\u00e9r\u00e9nade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j9qcf",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: II. La chambre magique: N\u00b03"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jb7d3",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: IV. Le laurier bless\u00e9: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jbfl3",
            "EntityName": "Streichquartett in g-Moll, Op. 10: Andantino, doucement expressif (Endress-Quartett)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jclnm",
            "EntityName": "Pr\u00e9ludes, Livre 1, L. 117 No. 9: La s\u00e9r\u00e9nade interrompue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jcpgz",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: II. Danse extatique et final du premier acte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jcyrt",
            "EntityName": "Engulfed Cathedral (Debussy)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jdffp",
            "EntityName": "Sonata for Violin and Piano in G Minor, L 140: II. Interm\u00e8de: fantasque et l\u00e9ger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jdgg0",
            "EntityName": "Preludes, Book II: 2. Feuilles mortes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jf98_",
            "EntityName": "Musique pour \u201cLe Roi Lear\u201d, L. 107: Fanfare d\u2019ouverture"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jfm84",
            "EntityName": "Prelude No. 8: The Girl with the Flaxen Hair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jg6m7",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 2. Les Comparaisons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jhxly",
            "EntityName": "En blanc et noir: III. Scherzando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jkghl",
            "EntityName": "Preludes, Book II: 6. General Lavine - Eccentric"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jlbpm",
            "EntityName": "Premi\u00e8re Rapsodie pour clarinette en si b\u00e9mol, avec accompagnement d'orchestre, L. 116, CD 124b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jm5dj",
            "EntityName": "Rondel chinois, L. 17, CD 11, m\u00e9lodie pour voix et piano \\\"Sur le lac bord\u00e9 d\u2019azal\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jnmw5",
            "EntityName": "Suite Bergamasque: Passepied: Allegretto ma non troppo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jp2jg",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. \\\"Mes longs cheveux descendent\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqdbr",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 9. L'Eau pure du bassin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqhyb",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene II. \\\"Tiens, o\u00f9 est l'anneau que je t'avais donn\u00e9?\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqjsm",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Attention... attention\\\" (Arkel, Le m\u00e9decin)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqsxk",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b07"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jr4pp",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : I. En bateau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_js17c",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b03"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_js5jc",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b06"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jt121",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"Maintenant que le p\u00e8re de Pell\u00e9as est sauv\u00e9 ...\\\" (Arkel, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtc90",
            "EntityName": "Suite: Pour le Piano, L.95: III. Toccata (vif)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jv13d",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene III. \\\"Ah! Je respire enfin!\\\" (Pell\u00e9as, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jvgb9",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : I. Le vent dans la plaine suspend son haleine, m\u00e9lodie pour voix et piano \\\"C'est l'extase langoureuse\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jvmy7",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano : II. \\\"Crois mon conseil, ch\u00e8re Clim\u00e8ne\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jws40",
            "EntityName": "Preludes, Book I: 7. Ce qu'a vu le vent d'ouest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jxdsw",
            "EntityName": "La Mer: II. Jeux de vagues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jxk74",
            "EntityName": "Iberia No. 2 from \\\"Images\\\" for Orchestra: III. The Morning of a Holiday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy0gc",
            "EntityName": "Carry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy4lv",
            "EntityName": "Nocturnes, L. 91, CD 98: I. Nuages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy8nh",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : II. Cort\u00e8ge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jyd58",
            "EntityName": "Pr\u00e9ludes, Livre I, L. 117: VIII. La fille aux cheveux de lin. Tr\u00e8s calme et doucement expressif"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jykjp",
            "EntityName": "Dialogue of the Wind and the Sea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzrlf",
            "EntityName": "Spleen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k01yx",
            "EntityName": "En sourdine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0d1c",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 11. Le Souvenir de Mnasidika"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0srm",
            "EntityName": "From Dawn Till Noon on the Sea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0t4j",
            "EntityName": "Pagodes from Estampes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0vb_",
            "EntityName": "La Belle au bois dormant, L. 74, CD 81, m\u00e9lodie \\\"Des trous \u00e0 son pourpoint vermeil\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k29xg",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 10. La Danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k2hh2",
            "EntityName": "Preludes, Book II: 12. Feux d'artifice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k34tp",
            "EntityName": "F\u00eates galantes (Premier recueil), L. 80, CD 86 : II. Fantoches, m\u00e9lodie pour voix et piano \\\"Scaramouche et Pulcinella\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3h6d",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 4. Chanson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3vd9",
            "EntityName": "Le promenoir des deux amants, L. 118, CD 129, m\u00e9lodies pour voix et piano : III. \\\"Je tremble en voyant ton visage\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3x0t",
            "EntityName": "Nocturnes, L. 91, CD 98: II. F\u00eates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3zl4",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b01"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k42mz",
            "EntityName": "Pr\u00e9ludes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4g8h",
            "EntityName": "\u00c9tudes, L. 136: III. Pour les quartes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4h6f",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte I. Une for\u00eat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4lrp",
            "EntityName": "Coquetterie posthume, L. 39, CD 50, m\u00e9lodie pour voix et piano \\\"Quand je mourrai, que l\u2019on me mette\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4v8w",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : VI. Aquarelles, 2. Spleen, m\u00e9lodie pour voix et piano \\\"Les roses \u00e9taient toutes rouges\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4z7f",
            "EntityName": "Children's Corner, L. 113: V. The Little Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5d2x",
            "EntityName": "Images pour orchestre, L 122: III. Rondes de printemps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k630v",
            "EntityName": "Apparition, L. 53, CD 57, m\u00e9lodie pour voix et piano \\\"La lune s\u2019attristait. Des s\u00e9raphins en pleurs\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k63t3",
            "EntityName": "Arabesque 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k673s",
            "EntityName": "Ariettes oubli\u00e9es, L. 60, CD 63a : II. Il pleut doucement sur la ville, m\u00e9lodie pour voix et piano \\\"Il pleure dans mon c\u0153ur comme il pleure sur la ville\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k737_",
            "EntityName": "Petite Suite, L. 65, CD 71b, pour orchestre : III. Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k73zm",
            "EntityName": "Children's Corner, L. 113: II. Jimbo's Lullaby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7d0l",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7r_r",
            "EntityName": "Nocturnes, L 91: I. Nuages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kbxxp",
            "EntityName": "Cinq po\u00e8mes de Baudelaire, L. 64, CD 70: I. Le Balcon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kc5_1",
            "EntityName": "Pr\u00e9ludes, Livre II, L. 123: IV. \u00abLes f\u00e9es sont d'exquises danseuses\u00bb. Rapide et l\u00e9ger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kc9vf",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"Qu'y-a-t-il? Qu'est-ce que toutes ces femmes viennent faire ici?\\\" (Golaud, Le m\u00e9decin, Arkel)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kcx_z",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene IV. \\\"Ah! Ah! Petite m\u00e8re a allum\u00e9 sa lampe\\\" (Yniold, Golaud)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kdtrr",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, fragments symphoniques: III. La Passion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kf9wt",
            "EntityName": "N\u00b0 5: The Film: Clair de Lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kfrmb",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Prologue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kfwhr",
            "EntityName": "Preludes, Book II: 10. Canope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kfzpt",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act III, Scene I. Une des tours du ch\u00e2teau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kg5pr",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: III. Le concile des faux dieux: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kggph",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"Quel est ce bruit? On ferme les portes\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kgvk3",
            "EntityName": "Proses lyriques, L. 84, CD 90 : II. De Gr\u00e8ve, m\u00e9lodie \\\"Sur la mer les cr\u00e9puscules tombent\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh_kk",
            "EntityName": "Sonata for Violin and Piano in G Minor, L 140: I. Allegro vivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh4ct",
            "EntityName": "Pell\u00e9as et M\u00e9lisande, L. 88, CD 93: Acte IV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh4ps",
            "EntityName": "Trois Chansons de France, L. 102: III. Rondel: Pour ce que Plaisance est morte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kjyvx",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"On dirait que ta voix a pass\u00e9 sur la mer au printemps!\\\" (Choeur, M\u00e9lisande, Pell\u00e9as, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kjz6p",
            "EntityName": "Children's Corner, L. 113: VI. Golliwogg's Cake-Walk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kks2z",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: V. Le paradis: N\u00b02"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kkvmy",
            "EntityName": "\u00c9tudes, L. 136: X. Pour les sonorit\u00e9s oppos\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kljjn",
            "EntityName": "\u00c9tudes, L. 136: VI. Pour les huits doigts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_km12c",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene I. \\\"C'est au bord d'une fontaine aussi qu'il vous a trouv\u00e9e?\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_km14z",
            "EntityName": "F\u00eates galantes II, L. 104: II. Le Faune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kmffq",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene II. \\\"C'est le dernier soir ...\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rk7bq",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : II. Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rkpdn",
            "EntityName": "R\u00eaverie, L. 8, CD 3, m\u00e9lodie pour voix et piano \\\"Le Z\u00e9phir \u00e0 la douce haleine\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rkyxc",
            "EntityName": "Romance, L. 43, CD 53, m\u00e9lodie pour voix et piano \\\"Silence ineffable de l\u2019heure\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rn5wm",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Acte III \\\"Le Concile des faux dieux\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rth63",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : III. R\u00eave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rv468",
            "EntityName": "La Fille aux cheveux de lin, L. 33, CD 15, m\u00e9lodie pour voix et piano \\\"Sur la luzerne en fleur\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rvrgg",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : I. F\u00eate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_rwh7q",
            "EntityName": "Premi\u00e8re Suite d\u2019orchestre, L. 50, CD 46 : IV. Bacchanale (Cort\u00e8ge et Bacchanale)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010_dtxz",
            "EntityName": "Trois chansons de Charles d'Orl\u00e9ans, pour ch\u0153ur \u00e0 quatre voix mixtes, L. 92, CD 99: III. \\\"Yver, vous n'estes qu'un vilain \\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s18wn",
            "EntityName": "Bilitis: II. Pour un tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s8lf0",
            "EntityName": "Trois po\u00e8mes de St\u00e9phane Mallarm\u00e9, L. 127, CD 135: III. \u00c9ventail \\\"\u00d4 r\u00eaveuse pour que je plonge\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sytyv",
            "EntityName": "Bilitis: IV. Pour la danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sz7qv",
            "EntityName": "Trois po\u00e8mes de St\u00e9phane Mallarm\u00e9, L. 127, CD 135: I. Soupir \\\"Mon \u00e2me vers ton front o\u00f9 r\u00eave, \u00f4 calme s\u0153ur\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010tnyxh",
            "EntityName": "Bilitis: VI. Pour remercier la pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010tpkzw",
            "EntityName": "Trois po\u00e8mes de St\u00e9phane Mallarm\u00e9, L. 127, CD 135: II. Placet futile \\\"Princesse! \u00c0 jalouser le destin d'une H\u00e9b\u00e9\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010vft_p",
            "EntityName": "Bilitis: III. Pour que la nuit soit propice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010xv_jw",
            "EntityName": "Khamma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010y5t8h",
            "EntityName": "Clair de lune, L. 32, CD 45, m\u00e9lodie pour voix et piano \\\"Votre \u00e2me est un paysage choisi\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010y6d7d",
            "EntityName": "My Reverie (Debussy's \\\"Reverie\\\")"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010yk19g",
            "EntityName": "Bilitis: V. Pour l'\u00e9gyptienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010ylz79",
            "EntityName": "Trois chansons de Charles d'Orl\u00e9ans, pour ch\u0153ur \u00e0 quatre voix mixtes, L. 92, CD 99: II. \\\"Quand j'ay ouy le tabourin\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010z9pqn",
            "EntityName": "Rapsodie pour orchestre et saxophone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010zfkcw",
            "EntityName": "Bilitis: I. Pour invoquer Pan, dieu du vent d'\u00e9t\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010zyg_m",
            "EntityName": "Petite Pi\u00e8ce"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01248h9t",
            "EntityName": "UTSUKUSHII YUUGURE"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0133nsl0",
            "EntityName": "Romance, L. 52, CD 56, m\u00e9lodie pour voix et piano \\\"Voici que le printemps, ce fil l\u00e9ger d\u2019avril\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135ftry",
            "EntityName": "Paysage sentimental, L 45, CD 55, m\u00e9lodie pour voix et piano \\\"Le ciel d\u2019hiver si doux, si triste, si dormant\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135s85z",
            "EntityName": "Chanson espagnole, L. 42, CD 49, duo pour 2 voix \u00e9gales \\\"Nous venions de voir le taureau\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135ycg0",
            "EntityName": "Triolet \u00e0 Philis \\\"Z\u00e9phir\\\", L. 12, CD 19, m\u00e9lodie pour voix et piano \\\"Si j\u2019\u00e9tais le z\u00e9phir ail\u00e9\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0136b801",
            "EntityName": "Musique, L. 44, CD 54, m\u00e9lodie pour voix et piano \\\"La lune se levait, pure, mais plus glac\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01381b1q",
            "EntityName": "Printemps, L. 61, CD 68a, suite symphonique en mi majeur pour 2 pianos et ch\u0153ur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zprb",
            "EntityName": "Pell\u00e9as et M\u00e9lisande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027kxq4",
            "EntityName": "Cello Sonata"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rtdzh",
            "EntityName": "String Quartet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033nf5",
            "EntityName": "Children's Corner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c7ct9",
            "EntityName": "Pagodes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c7cvp",
            "EntityName": "Jardins sous la pluie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy7m0",
            "EntityName": "Voiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy7ps",
            "EntityName": "Ce qu'a vu le vent d'ouest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy8t5",
            "EntityName": "Des pas sur la neige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cy92g",
            "EntityName": "Hommage \u00e0 S. Pickwick Esq. P.P.M.P.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d7mtj",
            "EntityName": "Violin Sonata"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2pvy",
            "EntityName": "Brouillards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r98g",
            "EntityName": "L'isle joyeuse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0409840",
            "EntityName": "Le Martyre de saint S\u00e9bastien"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042cky",
            "EntityName": "Suite bergamasque"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047rcxb",
            "EntityName": "\u00c9tudes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053wty",
            "EntityName": "Syrinx"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b042d",
            "EntityName": "La chute de la maison Usher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b2wv5",
            "EntityName": "Le diable dans le beffroi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b4_47",
            "EntityName": "La plus que lente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b508d",
            "EntityName": "Rodrigue et Chim\u00e8ne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05q7yst",
            "EntityName": "Premi\u00e8re rhapsodie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pzhs",
            "EntityName": "La mer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w5rgn",
            "EntityName": "Pour le piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y_gm",
            "EntityName": "Prelude to the Afternoon of a Faun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071vr8",
            "EntityName": "Nocturnes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k8v62",
            "EntityName": "Deux arabesques"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb3zh0",
            "EntityName": "Children's Corner, L. 113 No. 5: The Little Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb5lbr",
            "EntityName": "Children's Corner, L. 113 No. 6: Golliwog's Cake-walk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb5zrh",
            "EntityName": "Ballade (slave), L. 70, CD 78, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqw5w",
            "EntityName": "L'enfant prodigue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crjbd",
            "EntityName": "Jeux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cxqwc",
            "EntityName": "Beau soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq9b_",
            "EntityName": "Images pour orchestre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f44r_",
            "EntityName": "Reflets dans l'eau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g2x01",
            "EntityName": "Estampes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3x2_",
            "EntityName": "Valse romantique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_7",
            "EntityName": "Les Ang\u00e9lus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_g",
            "EntityName": "Proses Lyriques"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_q",
            "EntityName": "Trois Chansons de France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8_y",
            "EntityName": "Apparition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8x_",
            "EntityName": "Chanson triste"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8x3",
            "EntityName": "Calme dans le demi-jour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8xk",
            "EntityName": "L'\u00e9chelonnement des haies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8xs",
            "EntityName": "La mer est plus belle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8y6",
            "EntityName": "Le son du cor s'afflige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8yf",
            "EntityName": "Chanson espagnole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8yn",
            "EntityName": "Coquetterie posthume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8yw",
            "EntityName": "F\u00eate galante"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8z2",
            "EntityName": "Il dort encore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8zb",
            "EntityName": "Le lilas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8zk",
            "EntityName": "Fleur des Bl\u00e9s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm8zs",
            "EntityName": "La damoiselle \u00e9lue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm92k",
            "EntityName": "Dans le Jardin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm93g",
            "EntityName": "La Belle au Bois dormant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm94c",
            "EntityName": "Ariettes Oubli\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm94l",
            "EntityName": "F\u00eates Galantes I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm94t",
            "EntityName": "F\u00eates Galantes II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm965",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm96g",
            "EntityName": "Trois Chansons de Charles d'Orl\u00e9ans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm972",
            "EntityName": "Cinq Po\u00e8mes de Baudelaire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm97c",
            "EntityName": "La Romance d'Ariel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm97y",
            "EntityName": "Chansons de Bilitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm98w",
            "EntityName": "De r\u00eave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm993",
            "EntityName": "De gr\u00e8ve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm99c",
            "EntityName": "De fleurs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm99m",
            "EntityName": "De soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9bl",
            "EntityName": "La grotte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9bv",
            "EntityName": "Pour ce que Plaisance est morte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9cf",
            "EntityName": "Le temps a laiss\u00e9 son manteau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9dc",
            "EntityName": "Trois Po\u00e8mes de St\u00e9phane Mallarm\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9dz",
            "EntityName": "Chevaux de bois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9f6",
            "EntityName": "Green"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9fg",
            "EntityName": "C'est l'extase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9fq",
            "EntityName": "L'ombre des arbres"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9gg",
            "EntityName": "En sourdine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9gq",
            "EntityName": "Clair de lune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9gz",
            "EntityName": "Fantoches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9hg",
            "EntityName": "Colloque sentimental"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9hq",
            "EntityName": "Le faune"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9hz",
            "EntityName": "Les ing\u00e9nus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9j6",
            "EntityName": "Aupr\u00e8s de cette grotte sombre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9jg",
            "EntityName": "Crois mon conseil, ch\u00e8re Clim\u00e8ne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9kd",
            "EntityName": "Je tremble en voyant ton visage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9nf",
            "EntityName": "Ballade que Villon feit \u00e0 la requeste de sa m\u00e8re pour prier Nostre-Dame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9ns",
            "EntityName": "Ballade de Villon a s'amye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9p0",
            "EntityName": "Ballade des femmes de Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9p8",
            "EntityName": "Dieu! qu'il la fait bon regarder!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9pj",
            "EntityName": "Yver, vous n'estes qu'un vilain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9pt",
            "EntityName": "Quant j'ai ouy le tabourin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9q1",
            "EntityName": "Le balcon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9q9",
            "EntityName": "La mort des amants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9qk",
            "EntityName": "Harmonie du soir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9qt",
            "EntityName": "Le jet d'eau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9r1",
            "EntityName": "Recueillement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9r9",
            "EntityName": "L'eau pure du bassin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9rk",
            "EntityName": "La Fl\u00fbte de Pan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9rt",
            "EntityName": "Bilitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9s1",
            "EntityName": "Le Tombeau des Na\u00efades"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9s9",
            "EntityName": "La chevelure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9sk",
            "EntityName": "La pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9st",
            "EntityName": "Les Comparaisons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9t1",
            "EntityName": "Les contes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9t9",
            "EntityName": "La Danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9tk",
            "EntityName": "Chant pastoral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9tt",
            "EntityName": "Les Courtisanes \u00e9gyptiennes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9v1",
            "EntityName": "Chanson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9v9",
            "EntityName": "La Partie d'osselets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9vk",
            "EntityName": "Le Souvenir de Mnasidika"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9vt",
            "EntityName": "Le Tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9xw",
            "EntityName": "\u00c9ventail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9y3",
            "EntityName": "Placet futile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbm9z7",
            "EntityName": "Soupir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbg7",
            "EntityName": "Il pleure dans mon c\u0153ur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmblg",
            "EntityName": "No\u00ebl des enfants qui n'ont plus de maisons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmblp",
            "EntityName": "Rondel chinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmblw",
            "EntityName": "Nuits blanches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbm2",
            "EntityName": "Les papillons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbm9",
            "EntityName": "Nuit d'\u00c9toiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbmj",
            "EntityName": "R\u00eaverie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbmr",
            "EntityName": "Les roses"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbmz",
            "EntityName": "Souhait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbn5",
            "EntityName": "Mandoline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbnm",
            "EntityName": "S\u00e9r\u00e9nade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbnv",
            "EntityName": "Pantomime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbpd",
            "EntityName": "Rondeau: 'Fut-il jamais'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbpm",
            "EntityName": "Trag\u00e9die"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbqw",
            "EntityName": "Lia's Recitative and Aria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbr3",
            "EntityName": "Sim\u00e9on's Recitative and Aria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbrc",
            "EntityName": "Nuit sans fin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbrm",
            "EntityName": "Lorsqu'elle est entr\u00e9e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbvm",
            "EntityName": "Paysage sentimental"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbvv",
            "EntityName": "Musique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbw1",
            "EntityName": "Regret"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbw8",
            "EntityName": "Deux Romances"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmbx2",
            "EntityName": "Voici que le printemps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbmc06",
            "EntityName": "Romance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrc0vc",
            "EntityName": "Sonata for flute, viola and harp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n5vf6t",
            "EntityName": "Petite Suite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sggpxq",
            "EntityName": "En blanc et noir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wf_vpd",
            "EntityName": "Fantaisie for piano and orchestra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wfy5sl",
            "EntityName": "Piano Trio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh1xxd",
            "EntityName": "Khamma: Sc\u00e8ne 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh5fb7",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh6nqy",
            "EntityName": "Cort\u00e8ge et Air de danse de \\\"L\u2019Enfant prodigue\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8cfz",
            "EntityName": "Khamma: Sc\u00e8ne 1. Le Temple int\u00e9rieur du Grand-Dieu Amun-Ra \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8g5x",
            "EntityName": "Mazurka, L. 67, CD 75, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8j_z",
            "EntityName": "Les Elfes, CD 25, m\u00e9lodie pour voix et piano \\\"Du sentier des bois aux daims familiers\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhfddr",
            "EntityName": "Trois M\u00e9lodies, L. 81, CD 85, pour une voix avec accompagnement de piano : II. Le son du cor s\u2019afflige vers les bois."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhhl6q",
            "EntityName": "Deux danses pour Harpe, L. 103"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhk1t8",
            "EntityName": "Two movements from \\\"L\u2019Enfant prodigue\\\": Pr\u00e9lude"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhk1wf",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: V. Pour l'\u00c9gyptienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhpnhw",
            "EntityName": "Ministrels for Cello and Piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhsb53",
            "EntityName": "\u00c9tude retrouv\u00e9e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhv3tc",
            "EntityName": "Printemps, L. 61, CD 68b : II. Mod\u00e9r\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhvgd9",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: II. Pour un tombeau sans nom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhzxkd",
            "EntityName": "Images, Livre 2, L. 111: No. 2. Et la lune descend sur le temple qui fut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj0y0p",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : III. 2e tableau. Le Champ de bataille"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj155p",
            "EntityName": "Khamma: Au Mouvement \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj20cd",
            "EntityName": "Pi\u00e8ce pour le V\u00eatement du bless\u00e9 (Page d'album), L. 133"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj777b",
            "EntityName": "Images oubli\u00e9es, L. 87: Quelques aspects de 'Nous n'irons plus au bois' parce qu'il fait un temps insupportable. Tr\u00e8s vite - Mod\u00e9r\u00e9 - Premier Mouvement (vit et joyeax)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj788m",
            "EntityName": "Images I: II. Hommages Rameau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj8v8r",
            "EntityName": "Rhapsodie pour saxophone et orchestre, L. 98"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjbv6y",
            "EntityName": "Khamma, L 125"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjf6zn",
            "EntityName": "Marche \u00e9cossaise sur un th\u00e8me populaire, L. 77, CD 83b (Marche des anciens comtes de Ross, d\u00e9di\u00e9e \u00e0 leur descendant le G\u00e9n\u00e9ral Meredith Reid, grand-croix de l'ordre royal du R\u00e9dempteur)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjgk9n",
            "EntityName": "Le Matelot qui tombe \u00e0 l\u2019eau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjk61w",
            "EntityName": "\u00c9l\u00e9gie, L. 138"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjmrly",
            "EntityName": "Images, Livre 1, L. 110: No. 3. Mouvement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjnxb5",
            "EntityName": "Rapsodie pour saxophone et piano, L. 98"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjqlpp",
            "EntityName": "The Tears of Billie Blue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjr1yc",
            "EntityName": "Danse profane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjsdbt",
            "EntityName": "D'un cahier d'esquisses, L. 99"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjt4l9",
            "EntityName": "Images, Livre 2, L. 111: No. 3. Poissons d'or"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjtsvm",
            "EntityName": "Khamma: Sc\u00e8ne 2 \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjtymf",
            "EntityName": "Khamma: Deuxi\u00e8me Danse. Assez anim\u00e9 \u2013 Plus anim\u00e9 peu \u00e0 peu \u2013 Tr\u00e8s anim\u00e9 \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjvx06",
            "EntityName": "L\u2019Enfant prodigue, L. 57, CD 61, sc\u00e8ne lyrique \\\"L\u2019ann\u00e9e, en vain chasse l\u2019ann\u00e9e\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk1hhj",
            "EntityName": "No\u00ebl des enfants qui n'ont plus de maison, L. 139, CD 147, m\u00e9lodie pour voix et piano \\\"Nous n\u2019avons plus de maison\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk27d5",
            "EntityName": "Tarantelle styrienne, L. 69, CD 77a, (Danse) pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk2k0c",
            "EntityName": "Printemps, L. 61, CD 68b : I. Tr\u00e8s mod\u00e9r\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk40mx",
            "EntityName": "Deux danses pour Harpe, L. 103: Danse sacr\u00e9e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk44cj",
            "EntityName": "Masques, L. 105"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk8sj4",
            "EntityName": "Cort\u00e8ge et Air de danse de \\\"L\u2019Enfant prodigue\\\": Cort\u00e8ge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkc50w",
            "EntityName": "Petite Suite, L. 65: I. En bateau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkdj_g",
            "EntityName": "Khamma: Premi\u00e8re Danse. Grave et lent \u2013 Animez \u2013 Revenez au Mouvement \u2013 Plus lent \u2013 Animez peu \u00e0 peu \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkg3v2",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : IV. 3e tableau. La Bergerie \u00e0 vendre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkmw83",
            "EntityName": "Nocturne, L. 82, CD 89, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zknbxp",
            "EntityName": "Cort\u00e8ge et Air de danse de \\\"L\u2019Enfant prodigue\\\": Air de danse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkp3h9",
            "EntityName": "Printemps, L. 61, CD 68b, suite symphonique en mi majeur pour 2 pianos et orchestre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkpjrv",
            "EntityName": "Marche \u00e9cossaise sur un th\u00e8me populaire, L. 77, CD 83a (Marche des anciens comtes de Ross, d\u00e9di\u00e9e \u00e0 leur descendant le G\u00e9n\u00e9ral Meredith Reid, grand-croix de l'ordre royal du R\u00e9dempteur)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkqvlx",
            "EntityName": "Les soirs illumin\u00e9s par l'ardeur du charbon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkwf3m",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72 : II. Lento e molto espressivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkwkn9",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl_133",
            "EntityName": "Berceuse h\u00e9ro\u00efque pour piano, L. 132"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl_41l",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72 : III. Allegro molto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl_97h",
            "EntityName": "Fantaisie pour piano et orchestre, L. 73, CD 72 : I. Andante - Allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl1f05",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : II. 1er tableau. Le Magasin de jouets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl3q5p",
            "EntityName": "Images oubli\u00e9es, L. 87: Lent (m\u00e9lancolique et doux)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl5lbp",
            "EntityName": "Mes longs cheveux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl6c71",
            "EntityName": "Khamma: Pr\u00e9lude. Mod\u00e9r\u00e9ment anim\u00e9 (comme un lointain tumulte) \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl8kw5",
            "EntityName": "Images II: I. Cloches trevers les feuilles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl8vp5",
            "EntityName": "Hommage \u00e0 Joseph Haydn, L. 115"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlb3c4",
            "EntityName": "Flots, palmes, sables, L. 25, CD 38, m\u00e9lodie pour voix et piano (ou harpe) \\\"Loin des yeux du monde\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlcfft",
            "EntityName": "Danse boh\u00e9mienne, L. 9, CD 4, pour piano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlcrsg",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : VI. \u00c9pilogue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgp7k",
            "EntityName": "Khamma: Troisi\u00e8me Danse. Tr\u00e8s lent \u2013 Plus p\u00e9n\u00e9trant \u2013 Doucement contenu \u2013"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgwg7",
            "EntityName": "La Bo\u00eete \u00e0 Joujoux : I. Pr\u00e9lude. Le Sommeil de la bo\u00eete"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlhjbs",
            "EntityName": "Images oubli\u00e9es, L. 87: Dans le mouvement d'une 'Sarabande', c'est-\u00e0-dire avec une \u00e9l\u00e9gance gr\u00e2ve et lente, m\u00eame un peu vieux portrait, souvenir du Louvre, etc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlkyst",
            "EntityName": "Le petit N\u00e8gre, L. 114"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlmtxl",
            "EntityName": "La Bo\u00eete \u00e0 joujoux : V. 4e tableau. Apr\u00e8s fortune faite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlrdgg",
            "EntityName": "Morceau de concours, L. 108"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zls891",
            "EntityName": "Trois M\u00e9lodies, L. 81, CD 85, pour une voix avec accompagnement de piano : III. L\u2019\u00e9chelonnement des haies moutonne \u00e0 l\u2019infini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlswy6",
            "EntityName": "\u590f\u306e\u98a8\u306e\u795e\uff08\u300c\uff16\u3064\u306e\u53e4\u4ee3\u5893\u7891\u540d\u300d\u3088\u308a\uff09"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlz0_y",
            "EntityName": "L\u2019Archet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlzpy2",
            "EntityName": "Fleurs des bl\u00e9s, L. 7, CD 16, m\u00e9lodie pour voix et piano \\\"Le long des bl\u00e9s que la brise fait onduler\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm4n6l",
            "EntityName": "Berceuse h\u00e9ro\u00efque pour orchestre, L. 132"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm6_br",
            "EntityName": "Danse: Tarantelle styrienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm683f",
            "EntityName": "Aimons-nous et dormons, L. 16, CD 7, m\u00e9lodie pour voix et piano \\\"Aimons-nous et dormons, sans songer au reste du monde\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zmww8h",
            "EntityName": "Duo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx19pm",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien: IV. Le laurier bless\u00e9: N\u00b03"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx26r5",
            "EntityName": "Premi\u00e8re Rapsodie pour clarinette en si b\u00e9mol, avec accompagnement de piano, L. 116, CD 124a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx2wb7",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: IV. Finale. Appassionato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx5s79",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act V. \\\"M\u00e9lisande...M\u00e9lisande ...\\\" - \\\"Est-ce vous, Golaud?\\\" (Golaud, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx5zs1",
            "EntityName": "Pr\u00e9lude \u00e0 l'apr\u00e8s-midi d'un faune, L. 86, CD 87"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx66ys",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Acte III \\\"Le Concile des faux dieux\\\". Fanfare no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx7352",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 12. La Pluie au matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx7xv5",
            "EntityName": "Les Chansons de Bilitis, L. 96: No. 5. La Partie d'osselets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9d8y",
            "EntityName": "Suite Bergamasque - Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9qvj",
            "EntityName": "Mandoline, L. 29, CD 43, m\u00e9lodie pour voix et piano \\\"Les donneurs de s\u00e9r\u00e9nades\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxbzr5",
            "EntityName": "Sonate f\u00fcr Violine und Klavier in g-Moll: Finale: Tr\u00e8s anim\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxfdj8",
            "EntityName": "Quatuor \u00e0 cordes en sol mineur, op. 10, L. 85, CD 91 : I. Anim\u00e9 et tr\u00e8s d\u00e9cid\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxfkgp",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act II, Scene III. \\\"Oui, c'est ici, nous y sommes\\\" (Pell\u00e9as, M\u00e9lisande)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxhrfq",
            "EntityName": "Six \u00e9pigraphes antiques, L. 131: IV. Pour la danseuse aux crotales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxlf2h",
            "EntityName": "Preludes, Book I: 11. La Danse de Puck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxnb2h",
            "EntityName": "Le Martyre de Saint-S\u00e9bastien, L. 124: Acte III \\\"Le Concile des faux dieux\\\". Fanfare no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxnwpv",
            "EntityName": "Minstrels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxpq7z",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act I, Scene II. \\\"Je n'en dis rien\\\" (Arkel, Genevi\u00e8ve)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxrl2g",
            "EntityName": "Estampes - I. Pagodes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxrr8c",
            "EntityName": "Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxt6kz",
            "EntityName": "Musique pour \u201cLe Roi Lear\u201d, L. 107: Le Sommeil de Lear"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxv16w",
            "EntityName": "Pour le piano: II. Sarabande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxvq0n",
            "EntityName": "Trio in G Major for Violin, Cello and Piano: III. Andante espressivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxvyvq",
            "EntityName": "Pell\u00e9as et M\u00e9lisande - Concert Suite: Acte II, sc\u00e8ne 1. Une fontaine dans le parc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxwtzf",
            "EntityName": "Petite Suite, L. 65, CD 71a, pour piano \u00e0 4 mains : III. Menuet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxwzf0",
            "EntityName": "Trois Ballades de Fran\u00e7ois Villon, L. 119: III. Ballade des femmes de Paris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxxg9g",
            "EntityName": "Images pour orchestre, L 122: I. Gigues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxxtm4",
            "EntityName": "F\u00eate galante, L. 23, CD 31, m\u00e9lodie pour voix et piano \\\"Voil\u00e0 Sylandre et Lycas et Myrtil\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxy7vf",
            "EntityName": "Pell\u00e9as et M\u00e9lisande: Act IV, Scene I. \\\"Pell\u00e9as part ce soir\\\" (Golaud, Arkel, M\u00e9lisande)"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vvy": "Claude Debussy"
    },
    "qid_topic_entity": {
      "Q4700": "Claude Debussy"
    },
    "index": 381
  },
  {
    "QuestionId": "WebQTest-1766",
    "RawQuestion": "what language do russians speak?",
    "ProcessedQuestion": "what language do russians speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1766.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "russians",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017dsl",
            "EntityName": "Osetin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0198z0",
            "EntityName": "Chechen Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019yz7",
            "EntityName": "Tatar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bcw_",
            "EntityName": "Azerbaijani language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyqy",
            "EntityName": "Abaza Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y_vl",
            "EntityName": "Mari language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020g7w",
            "EntityName": "Bashkir Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0234zj",
            "EntityName": "Avar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264gxt",
            "EntityName": "Aghul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bj_4",
            "EntityName": "Tsakhur Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gj5b",
            "EntityName": "Tuvin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwm9x",
            "EntityName": "Moksha Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lpht",
            "EntityName": "Erzya Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mj1c",
            "EntityName": "Kalmyk-Oirat Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mxzf",
            "EntityName": "Kabardian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nbbh",
            "EntityName": "Adyghe Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q4t0g",
            "EntityName": "Rutul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x9lm",
            "EntityName": "Lezgi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037lmh",
            "EntityName": "Ingush Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037nfm",
            "EntityName": "Altai language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f3f1",
            "EntityName": "Crimean Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gn_0",
            "EntityName": "Nogai Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03klw8",
            "EntityName": "Dargwa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wt_j",
            "EntityName": "Komi language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049jrm",
            "EntityName": "Udmurt Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rxz0",
            "EntityName": "Kumyk Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xqkr",
            "EntityName": "Karachay-Balkar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054zyh",
            "EntityName": "Buryat language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l6md",
            "EntityName": "Yakut Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bw_x",
            "EntityName": "Tabassaran Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0880p",
            "EntityName": "Yiddish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.091dr6",
            "EntityName": "Lak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093gjw",
            "EntityName": "Khakas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjk9",
            "EntityName": "Ukrainian Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1766.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "russians",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1766.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6ff)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6ff ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "russians",
        "TopicEntityName": "Russian",
        "TopicEntityMid": "m.0g6ff",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia",
      "m.0g6ff": "Russian"
    },
    "qid_topic_entity": {
      "Q159": "Russia",
      "Q49542": "Russian"
    },
    "index": 382
  },
  {
    "QuestionId": "WebQTest-1726",
    "RawQuestion": "where is south portland?",
    "ProcessedQuestion": "where is south portland",
    "Parses": [
      {
        "ParseId": "WebQTest-1726.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "south portland",
        "TopicEntityName": "South Portland",
        "TopicEntityMid": "m.0tpk4",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nm9h",
            "EntityName": "Cumberland County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1726.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "south portland",
        "TopicEntityName": "South Portland",
        "TopicEntityMid": "m.0tpk4",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050ks",
            "EntityName": "Maine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nm9h",
            "EntityName": "Cumberland County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0tpk4": "South Portland"
    },
    "qid_topic_entity": {
      "Q1000166": "South Portland"
    },
    "index": 383
  },
  {
    "QuestionId": "WebQTest-1506",
    "RawQuestion": "where is the home stadium of the new england patriots?",
    "ProcessedQuestion": "where is the home stadium of the new england patriots",
    "Parses": [
      {
        "ParseId": "WebQTest-1506.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g3b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g3b ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "new england patriots",
        "TopicEntityName": "New England Patriots",
        "TopicEntityMid": "m.05g3b",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0299m7",
            "EntityName": "Gillette Stadium"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05g3b": "New England Patriots"
    },
    "qid_topic_entity": {
      "Q193390": "New England Patriots"
    },
    "index": 384
  },
  {
    "QuestionId": "WebQTest-78",
    "RawQuestion": "what type of cancer did eva peron have?",
    "ProcessedQuestion": "what type of cancer did eva peron have",
    "Parses": [
      {
        "ParseId": "WebQTest-78.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dltj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dltj ns:people.deceased_person.cause_of_death ?x .\n?x ns:people.cause_of_death.parent_cause_of_death ns:m.0qcr0 .\n}\n",
        "PotentialTopicEntityMention": "eva peron",
        "TopicEntityName": "Eva Per\u00f3n",
        "TopicEntityMid": "m.0dltj",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0qcr0",
            "EntityName": "Cancer",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.cause_of_death.parent_cause_of_death",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_bk",
            "EntityName": "Cervical cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dltj": "Eva Per\u00f3n"
    },
    "qid_topic_entity": {
      "Q40933": "Eva Per\u00f3n"
    },
    "index": 385
  },
  {
    "QuestionId": "WebQTest-613",
    "RawQuestion": "what college did deion sanders jr go to?",
    "ProcessedQuestion": "what college did deion sanders jr go to",
    "Parses": [
      {
        "ParseId": "WebQTest-613.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n69x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n69x ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "deion sanders",
        "TopicEntityName": "Deion Sanders",
        "TopicEntityMid": "m.03n69x",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jq0j",
            "EntityName": "Florida State University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03n69x": "Deion Sanders"
    },
    "qid_topic_entity": {
      "Q954184": "Deion Sanders"
    },
    "index": 386
  },
  {
    "QuestionId": "WebQTest-98",
    "RawQuestion": "who was vice president when jfk was president?",
    "ProcessedQuestion": "who was vice president when jfk was president",
    "Parses": [
      {
        "ParseId": "WebQTest-98.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d3k14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d3k14 ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "jfk",
        "TopicEntityName": "John F. Kennedy",
        "TopicEntityMid": "m.0d3k14",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f7fy",
            "EntityName": "Lyndon B. Johnson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d3k14": "John F. Kennedy"
    },
    "qid_topic_entity": {
      "Q9696": "John F. Kennedy"
    },
    "index": 387
  },
  {
    "QuestionId": "WebQTest-1772",
    "RawQuestion": "who is the prime minister of spain 2011?",
    "ProcessedQuestion": "who is the prime minister of spain 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1772.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "2011"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060bp .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.060bp",
            "EntityName": "Prime minister",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p2pb",
            "EntityName": "Jos\u00e9 Luis Rodr\u00edguez Zapatero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k6pd",
            "EntityName": "Mariano Rajoy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 388
  },
  {
    "QuestionId": "WebQTest-493",
    "RawQuestion": "what type of government does australia have?",
    "ProcessedQuestion": "what type of government does australia have",
    "Parses": [
      {
        "ParseId": "WebQTest-493.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3y9q",
            "EntityName": "Federal monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 389
  },
  {
    "QuestionId": "WebQTest-1564",
    "RawQuestion": "what did bobby darin die of?",
    "ProcessedQuestion": "what did bobby darin die of",
    "Parses": [
      {
        "ParseId": "WebQTest-1564.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pj9t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pj9t ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bobby darin",
        "TopicEntityName": "Bobby Darin",
        "TopicEntityMid": "m.0pj9t",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wgfrh",
            "EntityName": "Surgical complications"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pj9t": "Bobby Darin"
    },
    "qid_topic_entity": {
      "Q311267": "Bobby Darin"
    },
    "index": 390
  },
  {
    "QuestionId": "WebQTest-836",
    "RawQuestion": "who did vladimir lenin marry?",
    "ProcessedQuestion": "who did vladimir lenin marry",
    "Parses": [
      {
        "ParseId": "WebQTest-836.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05wh0sh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05wh0sh ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "vladimir lenin",
        "TopicEntityName": "Vladimir Lenin",
        "TopicEntityMid": "m.05wh0sh",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02c8zp",
            "EntityName": "Nadezhda Krupskaya"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05wh0sh": "Vladimir Lenin"
    },
    "qid_topic_entity": {
      "Q1394": "Vladimir Lenin"
    },
    "index": 391
  },
  {
    "QuestionId": "WebQTest-430",
    "RawQuestion": "what instruments does justin bieber use?",
    "ProcessedQuestion": "what instruments does justin bieber use",
    "Parses": [
      {
        "ParseId": "WebQTest-430.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? music.group_member.instruments_played is better"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n}\n",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": [
          "music.group_member.membership",
          "music.group_membership.role"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0290ngj",
            "EntityName": "Vocals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 392
  },
  {
    "QuestionId": "WebQTest-1033",
    "RawQuestion": "who played dana scully in x files?",
    "ProcessedQuestion": "who played dana scully in x files",
    "Parses": [
      {
        "ParseId": "WebQTest-1033.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022jb6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022jb6 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0443v1 .\n}\n",
        "PotentialTopicEntityMention": "dana scully",
        "TopicEntityName": "Dana Scully",
        "TopicEntityMid": "m.022jb6",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0443v1",
            "EntityName": "The X-Files",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d_w3h",
            "EntityName": "Gillian Anderson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.022jb6": "Dana Scully"
    },
    "qid_topic_entity": {
      "Q2741": "Dana Scully"
    },
    "index": 393
  },
  {
    "QuestionId": "WebQTest-315",
    "RawQuestion": "where was country singer george jones born?",
    "ProcessedQuestion": "where was country singer george jones born",
    "Parses": [
      {
        "ParseId": "WebQTest-315.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hb9p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hb9p ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "george jones",
        "TopicEntityName": "George Jones",
        "TopicEntityMid": "m.01hb9p",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9hl3",
            "EntityName": "Saratoga"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hb9p": "George Jones"
    },
    "qid_topic_entity": {
      "Q508202": "George Jones"
    },
    "index": 394
  },
  {
    "QuestionId": "WebQTest-1733",
    "RawQuestion": "who or what influenced frank lloyd wright?",
    "ProcessedQuestion": "who or what influenced frank lloyd wright",
    "Parses": [
      {
        "ParseId": "WebQTest-1733.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wlk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wlk ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "frank lloyd wright",
        "TopicEntityName": "Frank Lloyd Wright",
        "TopicEntityMid": "m.02wlk",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cqpy",
            "EntityName": "Ebenezer Howard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01whq3q",
            "EntityName": "Georges I. Gurdjieff and Thomas De Hartmann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jmjj",
            "EntityName": "Bruce Price"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08304",
            "EntityName": "William Morris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwx3",
            "EntityName": "Henry David Thoreau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bybqwn",
            "EntityName": "Elizabeth Gordon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvns",
            "EntityName": "Louis Sullivan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02wlk": "Frank Lloyd Wright"
    },
    "qid_topic_entity": {
      "Q5604": "Frank Lloyd Wright"
    },
    "index": 395
  },
  {
    "QuestionId": "WebQTest-253",
    "RawQuestion": "what countries included in the uk?",
    "ProcessedQuestion": "what countries included in the uk",
    "Parses": [
      {
        "ParseId": "WebQTest-253.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "PotentialTopicEntityMention": "uk",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzjlmp",
            "EntityName": "UK constituent country",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.aareas.schema.administrative_area.administrative_area_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 396
  },
  {
    "QuestionId": "WebQTest-102",
    "RawQuestion": "who played barbara gordon batgirl?",
    "ProcessedQuestion": "who played barbara gordon batgirl",
    "Parses": [
      {
        "ParseId": "WebQTest-102.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hvfx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hvfx ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "barbara gordon",
        "TopicEntityName": "Barbara Gordon",
        "TopicEntityMid": "m.03hvfx",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041w0w1",
            "EntityName": "Ilyssa Fradin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0443_w",
            "EntityName": "Melinda McGraw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y54_x6",
            "EntityName": "Hannah Gunn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03hvfx": "Barbara Gordon"
    },
    "qid_topic_entity": {
      "Q194705": "Barbara Gordon"
    },
    "index": 397
  },
  {
    "QuestionId": "WebQTest-1596",
    "RawQuestion": "what language do they use in pakistan?",
    "ProcessedQuestion": "what language do they use in pakistan",
    "Parses": [
      {
        "ParseId": "WebQTest-1596.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sb1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sb1 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "pakistan",
        "TopicEntityName": "Pakistan",
        "TopicEntityMid": "m.05sb1",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxcvy",
            "EntityName": "Urdu Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05sb1": "Pakistan"
    },
    "qid_topic_entity": {
      "Q843": "Pakistan"
    },
    "index": 398
  },
  {
    "QuestionId": "WebQTest-1524",
    "RawQuestion": "who invented islamic religion?",
    "ProcessedQuestion": "who invented islamic religion",
    "Parses": [
      {
        "ParseId": "WebQTest-1524.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.founding_figures ?x .\n}\n",
        "PotentialTopicEntityMention": "islamic",
        "TopicEntityName": "Islam",
        "TopicEntityMid": "m.0flw86",
        "InferentialChain": [
          "religion.religion.founding_figures"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s9n",
            "EntityName": "Muhammad in Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0flw86": "Islam"
    },
    "qid_topic_entity": {
      "Q432": "Islam"
    },
    "index": 399
  },
  {
    "QuestionId": "WebQTest-1442",
    "RawQuestion": "what currency shall i take to croatia?",
    "ProcessedQuestion": "what currency shall i take to croatia",
    "Parses": [
      {
        "ParseId": "WebQTest-1442.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pj7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pj7 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "croatia",
        "TopicEntityName": "Croatia",
        "TopicEntityMid": "m.01pj7",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z8jt",
            "EntityName": "Croatian kuna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01pj7": "Croatia"
    },
    "qid_topic_entity": {
      "Q224": "Croatia"
    },
    "index": 400
  },
  {
    "QuestionId": "WebQTest-199",
    "RawQuestion": "what type of government does iraq have now?",
    "ProcessedQuestion": "what type of government does iraq have now",
    "Parses": [
      {
        "ParseId": "WebQTest-199.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05q4 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "iraq",
        "TopicEntityName": "Iraq",
        "TopicEntityMid": "m.0d05q4",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cx9",
            "EntityName": "Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d05q4": "Iraq"
    },
    "qid_topic_entity": {
      "Q796": "Iraq"
    },
    "index": 401
  },
  {
    "QuestionId": "WebQTest-1084",
    "RawQuestion": "what sports do people play in poland?",
    "ProcessedQuestion": "what sports do people play in poland",
    "Parses": [
      {
        "ParseId": "WebQTest-1084.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qhw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qhw ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "poland",
        "TopicEntityName": "Poland",
        "TopicEntityMid": "m.05qhw",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025wfz7",
            "EntityName": "Poland national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026prdm",
            "EntityName": "Poland women's national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xnhs",
            "EntityName": "Poland men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r6q5w",
            "EntityName": "Poland women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037p7l",
            "EntityName": "Asseco Gdynia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037p8c",
            "EntityName": "KK W\u0142oc\u0142awek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037ph0",
            "EntityName": "Tur\u00f3w Zgorzelec"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03b6j8",
            "EntityName": "Poland national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gv21b",
            "EntityName": "Stal Gorz\u00f3w Wielkopolski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047d9d5",
            "EntityName": "\u015al\u0105sk Wroc\u0142aw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051zxkk",
            "EntityName": "GT\u017b Grudzi\u0105dz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dd9mps",
            "EntityName": "Basket Zielona G\u00f3ra"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qhw": "Poland"
    },
    "qid_topic_entity": {
      "Q36": "Poland"
    },
    "index": 402
  },
  {
    "QuestionId": "WebQTest-404",
    "RawQuestion": "what was lebron james first team?",
    "ProcessedQuestion": "what was lebron james first team",
    "Parses": [
      {
        "ParseId": "WebQTest-404.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.player_statistics ?y .\n?y ns:basketball.basketball_player_stats.team ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "basketball.basketball_player.player_statistics",
          "basketball.basketball_player_stats.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jm7n",
            "EntityName": "Cleveland Cavaliers"
          }
        ]
      },
      {
        "ParseId": "WebQTest-404.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.team ?x .\n}\n",
        "PotentialTopicEntityMention": "lebron james",
        "TopicEntityName": "LeBron James",
        "TopicEntityMid": "m.01jz6d",
        "InferentialChain": [
          "sports.drafted_athlete.drafted",
          "sports.sports_league_draft_pick.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jm7n",
            "EntityName": "Cleveland Cavaliers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01jz6d": "LeBron James"
    },
    "qid_topic_entity": {
      "Q36159": "LeBron James"
    },
    "index": 403
  },
  {
    "QuestionId": "WebQTest-2010",
    "RawQuestion": "what degrees does romney have?",
    "ProcessedQuestion": "what degrees does romney have",
    "Parses": [
      {
        "ParseId": "WebQTest-2010.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.degree ?x .\n}\n",
        "PotentialTopicEntityMention": "romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.education",
          "education.education.degree"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013zdg",
            "EntityName": "Juris Doctor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014mlp",
            "EntityName": "Bachelor of Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07s6fsf",
            "EntityName": "MBA"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 404
  },
  {
    "QuestionId": "WebQTest-1608",
    "RawQuestion": "what language is mainly spoken in egypt?",
    "ProcessedQuestion": "what language is mainly spoken in egypt",
    "Parses": [
      {
        "ParseId": "WebQTest-1608.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.languages_spoken ?x .\n?x ns:language.human_language.main_country ns:m.02k54 .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02k54",
            "EntityName": "Egypt",
            "SourceNodeIndex": 0,
            "NodePredicate": "language.human_language.main_country",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012zfy",
            "EntityName": "Siwi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2cr",
            "EntityName": "Egyptian Arabic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxbhg",
            "EntityName": "Sa'idi Arabic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wc2kf",
            "EntityName": "Bedawi Arabic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 405
  },
  {
    "QuestionId": "WebQTest-44",
    "RawQuestion": "what is the state flower of arizona?",
    "ProcessedQuestion": "what is the state flower of arizona",
    "Parses": [
      {
        "ParseId": "WebQTest-44.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627gn .\n}\n",
        "PotentialTopicEntityMention": "arizona",
        "TopicEntityName": "Arizona",
        "TopicEntityMid": "m.0vmt",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04627gn",
            "EntityName": "State flower",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m5w_",
            "EntityName": "Saguaro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0vmt": "Arizona"
    },
    "qid_topic_entity": {
      "Q816": "Arizona"
    },
    "index": 406
  },
  {
    "QuestionId": "WebQTest-1005",
    "RawQuestion": "what is capital city of morocco?",
    "ProcessedQuestion": "what is capital city of morocco",
    "Parses": [
      {
        "ParseId": "WebQTest-1005.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wgh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wgh ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "morocco",
        "TopicEntityName": "Morocco",
        "TopicEntityMid": "m.04wgh",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fs44",
            "EntityName": "Rabat"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04wgh": "Morocco"
    },
    "qid_topic_entity": {
      "Q1028": "Morocco"
    },
    "index": 407
  },
  {
    "QuestionId": "WebQTest-2025",
    "RawQuestion": "which ocean does the zambezi river flow into?",
    "ProcessedQuestion": "which ocean does the zambezi river flow into",
    "Parses": [
      {
        "ParseId": "WebQTest-2025.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0p_70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0p_70 ns:geography.river.mouth ?x .\n}\n",
        "PotentialTopicEntityMention": "zambezi river",
        "TopicEntityName": "Zambezi",
        "TopicEntityMid": "m.0p_70",
        "InferentialChain": [
          "geography.river.mouth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rz4",
            "EntityName": "Indian Ocean"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0p_70": "Zambezi"
    },
    "qid_topic_entity": {
      "Q43106": "Zambezi"
    },
    "index": 408
  },
  {
    "QuestionId": "WebQTest-837",
    "RawQuestion": "what year did the baltimore ravens win superbowl?",
    "ProcessedQuestion": "what year did the baltimore ravens win superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-837.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ct6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ct6 ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.06x5s .\n}\n",
        "PotentialTopicEntityMention": "baltimore ravens",
        "TopicEntityName": "Baltimore Ravens",
        "TopicEntityMid": "m.01ct6",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0642vqv",
            "EntityName": "Super Bowl XLVII"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076yq",
            "EntityName": "Super Bowl XXXV"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ct6": "Baltimore Ravens"
    },
    "qid_topic_entity": {
      "Q276539": "Baltimore Ravens"
    },
    "index": 409
  },
  {
    "QuestionId": "WebQTest-1976",
    "RawQuestion": "what team did drogba play for?",
    "ProcessedQuestion": "what team did drogba play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1976.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? assuming \"teams\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_y2f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_y2f ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "drogba",
        "TopicEntityName": "Didier Drogba",
        "TopicEntityMid": "m.03_y2f",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023fb",
            "EntityName": "Chelsea F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gys2",
            "EntityName": "Olympique de Marseille"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040pyq",
            "EntityName": "Ivory Coast national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04kd5d",
            "EntityName": "Shanghai Greenland Shenhua F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nwfr",
            "EntityName": "En Avant de Guingamp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0690ct",
            "EntityName": "Le Mans FC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zpgb2",
            "EntityName": "Galatasaray S.K."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_y2f": "Didier Drogba"
    },
    "qid_topic_entity": {
      "Q48892": "Didier Drogba"
    },
    "index": 410
  },
  {
    "QuestionId": "WebQTest-770",
    "RawQuestion": "what did steve mcnair died from?",
    "ProcessedQuestion": "what did steve mcnair died from",
    "Parses": [
      {
        "ParseId": "WebQTest-770.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zmx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zmx0 ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "steve mcnair",
        "TopicEntityName": "Steve McNair",
        "TopicEntityMid": "m.02zmx0",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qnd1b",
            "EntityName": "Ballistic trauma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02zmx0": "Steve McNair"
    },
    "qid_topic_entity": {
      "Q167818": "Steve McNair"
    },
    "index": 411
  },
  {
    "QuestionId": "WebQTest-195",
    "RawQuestion": "what kind of guitar did george harrison use?",
    "ProcessedQuestion": "what kind of guitar did george harrison use",
    "Parses": [
      {
        "ParseId": "WebQTest-195.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bnv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bnv ns:music.guitarist.guitars_played ?x .\n}\n",
        "PotentialTopicEntityMention": "george harrison",
        "TopicEntityName": "George Harrison",
        "TopicEntityMid": "m.03bnv",
        "InferentialChain": [
          "music.guitarist.guitars_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02m873",
            "EntityName": "Fender Stratocaster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pqjvz",
            "EntityName": "Rickenbacker 360/12"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03bnv": "George Harrison"
    },
    "qid_topic_entity": {
      "Q2643": "George Harrison"
    },
    "index": 412
  },
  {
    "QuestionId": "WebQTest-710",
    "RawQuestion": "what style of art did henri matisse do?",
    "ProcessedQuestion": "what style of art did henri matisse do",
    "Parses": [
      {
        "ParseId": "WebQTest-710.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gct_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gct_ ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "henri matisse",
        "TopicEntityName": "Henri Matisse",
        "TopicEntityMid": "m.0gct_",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xj1",
            "EntityName": "Impressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049xrv",
            "EntityName": "Neo-impressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1",
            "EntityName": "Fauvism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y41",
            "EntityName": "Modernism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gct_": "Henri Matisse"
    },
    "qid_topic_entity": {
      "Q5589": "Henri Matisse"
    },
    "index": 413
  },
  {
    "QuestionId": "WebQTest-937",
    "RawQuestion": "where are people who speak arabic from?",
    "ProcessedQuestion": "where are people who speak arabic from",
    "Parses": [
      {
        "ParseId": "WebQTest-937.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "arabic",
        "TopicEntityName": "Arabic Language",
        "TopicEntityMid": "m.0jzc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0161c",
            "EntityName": "Bahrain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z215",
            "EntityName": "Saudi Arabia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z88t",
            "EntityName": "Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01znc_",
            "EntityName": "Turkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027jk",
            "EntityName": "Djibouti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k54",
            "EntityName": "Egypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z62v1",
            "EntityName": "Seljuk Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03shp",
            "EntityName": "Iran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047yc",
            "EntityName": "Kuwait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gqr",
            "EntityName": "Libya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqz",
            "EntityName": "Lebanon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjh",
            "EntityName": "Mauritania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wgh",
            "EntityName": "Morocco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l8y",
            "EntityName": "Oman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vbd",
            "EntityName": "Syria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1z8",
            "EntityName": "United Arab Emirates"
          }
        ]
      },
      {
        "ParseId": "WebQTest-937.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzc ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "arabic",
        "TopicEntityName": "Arabic Language",
        "TopicEntityMid": "m.0jzc",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n6c",
            "EntityName": "Comoros"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z215",
            "EntityName": "Saudi Arabia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02khs",
            "EntityName": "Eritrea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jzc": "Arabic Language"
    },
    "qid_topic_entity": {
      "Q13955": "Arabic Language"
    },
    "index": 414
  },
  {
    "QuestionId": "WebQTest-1212",
    "RawQuestion": "what did mark zuckerberg study?",
    "ProcessedQuestion": "what did mark zuckerberg study",
    "Parses": [
      {
        "ParseId": "WebQTest-1212.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.086dny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.086dny ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
        "PotentialTopicEntityMention": "mark zuckerberg",
        "TopicEntityName": "Mark Zuckerberg",
        "TopicEntityMid": "m.086dny",
        "InferentialChain": [
          "people.person.education",
          "education.education.major_field_of_study"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mf_",
            "EntityName": "Computer programming"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mkq",
            "EntityName": "Computer Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qfh",
            "EntityName": "Psychology"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.086dny": "Mark Zuckerberg"
    },
    "qid_topic_entity": {
      "Q36215": "Mark Zuckerberg"
    },
    "index": 415
  },
  {
    "QuestionId": "WebQTest-1883",
    "RawQuestion": "where did robert downey jr go to jail?",
    "ProcessedQuestion": "where did robert downey jr go to jail",
    "Parses": [
      {
        "ParseId": "WebQTest-1883.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016z2j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016z2j ns:base.prison.prisoner.imprisoned ?y .\n?y ns:base.prison.imprisonment.prison ?x .\n}\n",
        "PotentialTopicEntityMention": "robert downey jr",
        "TopicEntityName": "Robert Downey Jr.",
        "TopicEntityMid": "m.016z2j",
        "InferentialChain": [
          "base.prison.prisoner.imprisoned",
          "base.prison.imprisonment.prison"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02621l5",
            "EntityName": "California Substance Abuse Treatment Facility and State Prison, Corcoran"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016z2j": "Robert Downey Jr."
    },
    "qid_topic_entity": {
      "Q165219": "Robert Downey Jr."
    },
    "index": 416
  },
  {
    "QuestionId": "WebQTest-1840",
    "RawQuestion": "what do they speak in norway?",
    "ProcessedQuestion": "what do they speak in norway",
    "Parses": [
      {
        "ParseId": "WebQTest-1840.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b4w ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "norway",
        "TopicEntityName": "Norway",
        "TopicEntityMid": "m.05b4w",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02glq_",
            "EntityName": "Saami, South Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d36l",
            "EntityName": "Saami, North Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f_3",
            "EntityName": "Norwegian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f7kz",
            "EntityName": "Saami, Lule Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09xy1k",
            "EntityName": "Finnish, Kven Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1840.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b4w ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "norway",
        "TopicEntityName": "Norway",
        "TopicEntityMid": "m.05b4w",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01648r",
            "EntityName": "Bokm\u00e5l"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016rsc",
            "EntityName": "Nynorsk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f_3",
            "EntityName": "Norwegian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05b4w": "Norway"
    },
    "qid_topic_entity": {
      "Q20": "Norway"
    },
    "index": 417
  },
  {
    "QuestionId": "WebQTest-1063",
    "RawQuestion": "where is audrey hepburn from?",
    "ProcessedQuestion": "where is audrey hepburn from",
    "Parses": [
      {
        "ParseId": "WebQTest-1063.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dqcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dqcm ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "audrey hepburn",
        "TopicEntityName": "Audrey Hepburn",
        "TopicEntityMid": "m.0dqcm",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nz8h",
            "EntityName": "Ixelles"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dqcm": "Audrey Hepburn"
    },
    "qid_topic_entity": {
      "Q42786": "Audrey Hepburn"
    },
    "index": 418
  },
  {
    "QuestionId": "WebQTest-1455",
    "RawQuestion": "what capital city of brazil?",
    "ProcessedQuestion": "what capital city of brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1455.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hy_",
            "EntityName": "Bras\u00edlia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 419
  },
  {
    "QuestionId": "WebQTest-1355",
    "RawQuestion": "what school did robert f kennedy go to?",
    "ProcessedQuestion": "what school did robert f kennedy go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1355.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hx2 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "robert f kennedy",
        "TopicEntityName": "Robert F. Kennedy",
        "TopicEntityMid": "m.06hx2",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mpwj",
            "EntityName": "Harvard College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vc5m",
            "EntityName": "Bates College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h45k",
            "EntityName": "Milton Academy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ksy",
            "EntityName": "Harvard University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qgd9",
            "EntityName": "University of Virginia School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8rj",
            "EntityName": "University of Virginia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06hx2": "Robert F. Kennedy"
    },
    "qid_topic_entity": {
      "Q25310": "Robert F. Kennedy"
    },
    "index": 420
  },
  {
    "QuestionId": "WebQTest-1104",
    "RawQuestion": "what do we call the currency of france?",
    "ProcessedQuestion": "what do we call the currency of france",
    "Parses": [
      {
        "ParseId": "WebQTest-1104.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "needs \"now\" constraint"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyjx",
            "EntityName": "CFP franc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 421
  },
  {
    "QuestionId": "WebQTest-1810",
    "RawQuestion": "what type of art leonardo da vinci do?",
    "ProcessedQuestion": "what type of art leonardo da vinci do",
    "Parses": [
      {
        "ParseId": "WebQTest-1810.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:visual_art.visual_artist.art_forms ?x .\n}\n",
        "PotentialTopicEntityMention": "leonardo da vinci",
        "TopicEntityName": "Leonardo da Vinci",
        "TopicEntityMid": "m.04lg6",
        "InferentialChain": [
          "visual_art.visual_artist.art_forms"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02csf",
            "EntityName": "Drawing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qdh",
            "EntityName": "Painting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06msq",
            "EntityName": "Sculpture"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lg6": "Leonardo da Vinci"
    },
    "qid_topic_entity": {
      "Q762": "Leonardo da Vinci"
    },
    "index": 422
  },
  {
    "QuestionId": "WebQTest-77",
    "RawQuestion": "what capital of austria?",
    "ProcessedQuestion": "what capital of austria",
    "Parses": [
      {
        "ParseId": "WebQTest-77.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7x ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "austria",
        "TopicEntityName": "Austria",
        "TopicEntityMid": "m.0h7x",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhp9",
            "EntityName": "Vienna"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7x": "Austria"
    },
    "qid_topic_entity": {
      "Q40": "Austria"
    },
    "index": 423
  },
  {
    "QuestionId": "WebQTest-1482",
    "RawQuestion": "who played carmen cortez in spy kids?",
    "ProcessedQuestion": "who played carmen cortez in spy kids",
    "Parses": [
      {
        "ParseId": "WebQTest-1482.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rrfzf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rrfzf ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.02ql50 .\n}\n",
        "PotentialTopicEntityMention": "spy kids",
        "TopicEntityName": "Spy Kids",
        "TopicEntityMid": "m.02rrfzf",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02ql50",
            "EntityName": "Baby Carmen",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z7h0",
            "EntityName": "Alexa Vega"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zfn9cs",
            "EntityName": "Addisyn Fair"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02rrfzf": "Spy Kids"
    },
    "qid_topic_entity": {
      "Q550581": "Spy Kids"
    },
    "index": 424
  },
  {
    "QuestionId": "WebQTest-1847",
    "RawQuestion": "where does kurdish people live?",
    "ProcessedQuestion": "where does kurdish people live",
    "Parses": [
      {
        "ParseId": "WebQTest-1847.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04c28)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04c28 ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "kurdish people",
        "TopicEntityName": "Kurds",
        "TopicEntityMid": "m.04c28",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j0k",
            "EntityName": "Asia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04c28": "Kurds"
    },
    "qid_topic_entity": {
      "Q12223": "Kurds"
    },
    "index": 425
  },
  {
    "QuestionId": "WebQTest-1146",
    "RawQuestion": "who did johnny depp play in corpse bride?",
    "ProcessedQuestion": "who did johnny depp play in corpse bride",
    "Parses": [
      {
        "ParseId": "WebQTest-1146.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.050xxm .\n}\n",
        "PotentialTopicEntityMention": "johnny depp",
        "TopicEntityName": "Johnny Depp",
        "TopicEntityMid": "m.0jfx1",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.050xxm",
            "EntityName": "Corpse Bride",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fllb9",
            "EntityName": "Victor Van Dort"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1146.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050xxm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050xxm ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.0jfx1 .\n}\n",
        "PotentialTopicEntityMention": "corpse bride",
        "TopicEntityName": "Corpse Bride",
        "TopicEntityMid": "m.050xxm",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0jfx1",
            "EntityName": "Johnny Depp",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fllb9",
            "EntityName": "Victor Van Dort"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jfx1": "Johnny Depp",
      "m.050xxm": "Corpse Bride"
    },
    "qid_topic_entity": {
      "Q37175": "Johnny Depp",
      "Q164417": "Corpse Bride"
    },
    "index": 426
  },
  {
    "QuestionId": "WebQTest-1770",
    "RawQuestion": "what country does rafael nadal play for?",
    "ProcessedQuestion": "what country does rafael nadal play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1770.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051q39)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051q39 ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "rafael nadal",
        "TopicEntityName": "Rafael Nadal",
        "TopicEntityMid": "m.051q39",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051q39": "Rafael Nadal"
    },
    "qid_topic_entity": {
      "Q10132": "Rafael Nadal"
    },
    "index": 427
  },
  {
    "QuestionId": "WebQTest-1078",
    "RawQuestion": "what language do australia people speak?",
    "ProcessedQuestion": "what language do australia people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1078.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gd7",
            "EntityName": "Lojban"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 428
  },
  {
    "QuestionId": "WebQTest-356",
    "RawQuestion": "what airport is near arlington tx?",
    "ProcessedQuestion": "what airport is near arlington tx",
    "Parses": [
      {
        "ParseId": "WebQTest-356.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nqph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nqph ns:location.location.nearby_airports ?x .\n}\n",
        "PotentialTopicEntityMention": "arlington tx",
        "TopicEntityName": "Arlington",
        "TopicEntityMid": "m.0nqph",
        "InferentialChain": [
          "location.location.nearby_airports"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pq2d8",
            "EntityName": "Arlington Municipal Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0nqph": "Arlington"
    },
    "qid_topic_entity": {
      "Q17943": "Arlington"
    },
    "index": 429
  },
  {
    "QuestionId": "WebQTest-1928",
    "RawQuestion": "what wnba team is diana taurasi on?",
    "ProcessedQuestion": "what wnba team is diana taurasi on",
    "Parses": [
      {
        "ParseId": "WebQTest-1928.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "should add filter for WNBA. Otherwise is pretty good."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.037bzt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.037bzt ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "diana taurasi",
        "TopicEntityName": "Diana Taurasi",
        "TopicEntityMid": "m.037bzt",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmbqg2",
            "EntityName": "UMMC Ekaterinburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lr76",
            "EntityName": "Phoenix Mercury"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.037bzt": "Diana Taurasi"
    },
    "qid_topic_entity": {
      "Q240726": "Diana Taurasi"
    },
    "index": 430
  },
  {
    "QuestionId": "WebQTest-635",
    "RawQuestion": "what characters does matt stone do?",
    "ProcessedQuestion": "what characters does matt stone do",
    "Parses": [
      {
        "ParseId": "WebQTest-635.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_x6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_x6d ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n}\n",
        "PotentialTopicEntityMention": "matt stone",
        "TopicEntityName": "Matt Stone",
        "TopicEntityMid": "m.01_x6d",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013z1n",
            "EntityName": "Kenny McCormick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lgj0",
            "EntityName": "Kyle Broflovski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021r0s",
            "EntityName": "Wizard of Oz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bthgtk",
            "EntityName": "Terrance Henry Stoot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bthgtn",
            "EntityName": "Gerald Broflovski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bthgtr",
            "EntityName": "Bill Gates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1qh",
            "EntityName": "Ethan Hawke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1r1",
            "EntityName": "Chris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1rh",
            "EntityName": "George Clooney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzk1s0",
            "EntityName": "Danny Glover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnc0h",
            "EntityName": "Jimbo Kearn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1jfp",
            "EntityName": "Saddam Hussein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z47h",
            "EntityName": "James Humphries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z47s",
            "EntityName": "Former Columbine Student"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z48_",
            "EntityName": "Doug Remer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z481",
            "EntityName": "Hermaphrodite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z488",
            "EntityName": "Taper Guy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z48k",
            "EntityName": "Kyle / Kenny / Jesus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z48s",
            "EntityName": "Dave the Lighting Guy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0z4dl",
            "EntityName": "Man toasting drinks at MCA outdoor bar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vnkcxn",
            "EntityName": "Ticket Taker"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01_x6d": "Matt Stone"
    },
    "qid_topic_entity": {
      "Q44410": "Matt Stone"
    },
    "index": 431
  },
  {
    "QuestionId": "WebQTest-573",
    "RawQuestion": "where did melba beals live?",
    "ProcessedQuestion": "where did melba beals live",
    "Parses": [
      {
        "ParseId": "WebQTest-573.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08s1bb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08s1bb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "melba beals",
        "TopicEntityName": "Melba Pattillo Beals",
        "TopicEntityMid": "m.08s1bb",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vbk",
            "EntityName": "Arkansas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08s1bb": "Melba Pattillo Beals"
    },
    "qid_topic_entity": {
      "Q6811671": "Melba Pattillo Beals"
    },
    "index": 432
  },
  {
    "QuestionId": "WebQTest-392",
    "RawQuestion": "what team is hank baskett on 2010?",
    "ProcessedQuestion": "what team is hank baskett on 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-392.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d81yf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d81yf ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "hank baskett",
        "TopicEntityName": "Hank Baskett",
        "TopicEntityMid": "m.0d81yf",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wnh",
            "EntityName": "Indianapolis Colts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051q5",
            "EntityName": "Minnesota Vikings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tg3",
            "EntityName": "Philadelphia Eagles"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d81yf": "Hank Baskett"
    },
    "qid_topic_entity": {
      "Q1433425": "Hank Baskett"
    },
    "index": 433
  },
  {
    "QuestionId": "WebQTest-1612",
    "RawQuestion": "what type of art did raphael sanzio create?",
    "ProcessedQuestion": "what type of art did raphael sanzio create",
    "Parses": [
      {
        "ParseId": "WebQTest-1612.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c43g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c43g ns:visual_art.visual_artist.art_forms ?x .\n}\n",
        "PotentialTopicEntityMention": "raphael sanzio",
        "TopicEntityName": "Raphael",
        "TopicEntityMid": "m.0c43g",
        "InferentialChain": [
          "visual_art.visual_artist.art_forms"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02csf",
            "EntityName": "Drawing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qdh",
            "EntityName": "Painting"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c43g": "Raphael"
    },
    "qid_topic_entity": {
      "Q5597": "Raphael"
    },
    "index": 434
  },
  {
    "QuestionId": "WebQTest-1947",
    "RawQuestion": "what currency do they use in switzerland?",
    "ProcessedQuestion": "what currency do they use in switzerland",
    "Parses": [
      {
        "ParseId": "WebQTest-1947.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "switzerland",
        "TopicEntityName": "Switzerland",
        "TopicEntityMid": "m.06mzp",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_h4b",
            "EntityName": "Swiss franc"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mzp": "Switzerland"
    },
    "qid_topic_entity": {
      "Q39": "Switzerland"
    },
    "index": 435
  },
  {
    "QuestionId": "WebQTest-1427",
    "RawQuestion": "who was the secretary of state when andrew jackson was president?",
    "ProcessedQuestion": "who was the secretary of state when andrew jackson was president",
    "Parses": [
      {
        "ParseId": "WebQTest-1427.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rlz ns:government.political_appointer.appointees ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0789n .\n}\n",
        "PotentialTopicEntityMention": "andrew jackson",
        "TopicEntityName": "Andrew Jackson",
        "TopicEntityMid": "m.0rlz",
        "InferentialChain": [
          "government.political_appointer.appointees",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0789n",
            "EntityName": "Secretary of State",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bxb3",
            "EntityName": "Edward Livingston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ggrk",
            "EntityName": "Louis McLane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_0m",
            "EntityName": "Martin Van Buren"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lhfcl",
            "EntityName": "James Alexander Hamilton"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0rlz": "Andrew Jackson"
    },
    "qid_topic_entity": {
      "Q11817": "Andrew Jackson"
    },
    "index": 436
  },
  {
    "QuestionId": "WebQTest-1183",
    "RawQuestion": "where was farrah fawcett buried?",
    "ProcessedQuestion": "where was farrah fawcett buried",
    "Parses": [
      {
        "ParseId": "WebQTest-1183.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j851)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j851 ns:people.deceased_person.place_of_burial ?x .\n}\n",
        "PotentialTopicEntityMention": "farrah fawcett",
        "TopicEntityName": "Farrah Fawcett",
        "TopicEntityMid": "m.01j851",
        "InferentialChain": [
          "people.deceased_person.place_of_burial"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018mm4",
            "EntityName": "Westwood Village Memorial Park Cemetery"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01j851": "Farrah Fawcett"
    },
    "qid_topic_entity": {
      "Q102341": "Farrah Fawcett"
    },
    "index": 437
  },
  {
    "QuestionId": "WebQTest-1327",
    "RawQuestion": "where is shakira from?",
    "ProcessedQuestion": "where is shakira from",
    "Parses": [
      {
        "ParseId": "WebQTest-1327.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wj18h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wj18h ns:music.artist.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "shakira",
        "TopicEntityName": "Shakira",
        "TopicEntityMid": "m.01wj18h",
        "InferentialChain": [
          "music.artist.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ls2",
            "EntityName": "Colombia"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1327.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wj18h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wj18h ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "shakira",
        "TopicEntityName": "Shakira",
        "TopicEntityMid": "m.01wj18h",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ls2",
            "EntityName": "Colombia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01wj18h": "Shakira"
    },
    "qid_topic_entity": {
      "Q34424": "Shakira"
    },
    "index": 438
  },
  {
    "QuestionId": "WebQTest-1705",
    "RawQuestion": "where was franz ferdinand from?",
    "ProcessedQuestion": "where was franz ferdinand from",
    "Parses": [
      {
        "ParseId": "WebQTest-1705.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02ft60)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02ft60 ns:music.artist.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "franz ferdinand",
        "TopicEntityName": "Franz Ferdinand",
        "TopicEntityMid": "m.02ft60",
        "InferentialChain": [
          "music.artist.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hyxv",
            "EntityName": "Glasgow"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02ft60": "Franz Ferdinand"
    },
    "qid_topic_entity": {
      "Q173180": "Franz Ferdinand"
    },
    "index": 439
  },
  {
    "QuestionId": "WebQTest-627",
    "RawQuestion": "what nationality is taylor lautner jacob black?",
    "ProcessedQuestion": "what nationality is taylor lautner jacob black",
    "Parses": [
      {
        "ParseId": "WebQTest-627.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ldhs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ldhs ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "taylor lautner",
        "TopicEntityName": "Taylor Lautner",
        "TopicEntityMid": "m.07ldhs",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ldhs": "Taylor Lautner"
    },
    "qid_topic_entity": {
      "Q23359": "Taylor Lautner"
    },
    "index": 440
  },
  {
    "QuestionId": "WebQTest-58",
    "RawQuestion": "who did jackie robinson first play for?",
    "ProcessedQuestion": "who did jackie robinson first play for",
    "Parses": [
      {
        "ParseId": "WebQTest-58.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0443c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0443c ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "jackie robinson",
        "TopicEntityName": "Jackie Robinson",
        "TopicEntityMid": "m.0443c",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "sports.sports_team_roster.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbtm7",
            "EntityName": "UCLA Bruins football"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0443c": "Jackie Robinson"
    },
    "qid_topic_entity": {
      "Q221048": "Jackie Robinson"
    },
    "index": 441
  },
  {
    "QuestionId": "WebQTest-1592",
    "RawQuestion": "what are all the songs justin bieber wrote?",
    "ProcessedQuestion": "what are all the songs justin bieber wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-1592.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F UNION compositions and Lyrics written"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\t  # Lyrics\n\t  ns:m.06w2sn5 ns:music.lyricist.lyrics_written ?x .\n\t}\n\tUNION\n\t{\n\t  # Compositions\n\t  ns:m.06w2sn5 ns:music.composer.compositions ?x .\n\t}\n}",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0116pj4q",
            "EntityName": "Lolly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012k_48s",
            "EntityName": "Home to Mama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v3gb4",
            "EntityName": "Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbvzq2",
            "EntityName": "Never Let You Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbz4p9",
            "EntityName": "Eenie Meenie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmc2ql",
            "EntityName": "Somebody to Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3vvnk",
            "EntityName": "Never Say Never"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqlv5l",
            "EntityName": "Bigger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5b0p2",
            "EntityName": "Pray"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5q9ky",
            "EntityName": "First Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j4453t",
            "EntityName": "Live My Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j64n8c",
            "EntityName": "Boyfriend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwqwyx",
            "EntityName": "Turn to You (Mother's Day Dedication)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwx2_w",
            "EntityName": "Die in Your Arms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxk_hq",
            "EntityName": "Thought Of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxk_kq",
            "EntityName": "Beauty And A Beat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxkzb9",
            "EntityName": "All Around The World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0l2vf",
            "EntityName": "As Long as You Love Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ljtwfj",
            "EntityName": "Beautiful"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qfpkqq",
            "EntityName": "Right Here"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rytzvz",
            "EntityName": "#thatPower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y6b7k5",
            "EntityName": "Heartbreaker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ynrkyl",
            "EntityName": "All That Matters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt1lb9",
            "EntityName": "Hold Tight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt3yyw",
            "EntityName": "Wait for a Minute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt3zg2",
            "EntityName": "Recovery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z6sgcx",
            "EntityName": "Bad Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zbv_v0",
            "EntityName": "All Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zdkrym",
            "EntityName": "PYD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zg6nnd",
            "EntityName": "Change Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zgb5ny",
            "EntityName": "Roller Coaster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zmzvrc",
            "EntityName": "Confident"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 442
  },
  {
    "QuestionId": "WebQTest-1313",
    "RawQuestion": "who were demeter's siblings?",
    "ProcessedQuestion": "who were demeter 's siblings",
    "Parses": [
      {
        "ParseId": "WebQTest-1313.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0296l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0296l ns:fictional_universe.fictional_character.siblings ?y .\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings ?x .\n}\n",
        "PotentialTopicEntityMention": "demeter",
        "TopicEntityName": "Demeter",
        "TopicEntityMid": "m.0296l",
        "InferentialChain": [
          "fictional_universe.fictional_character.siblings",
          "fictional_universe.sibling_relationship_of_fictional_characters.siblings"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbvfjz",
            "EntityName": "Zeus"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0296l": "Demeter"
    },
    "qid_topic_entity": {
      "Q40730": "Demeter"
    },
    "index": 443
  },
  {
    "QuestionId": "WebQTest-1963",
    "RawQuestion": "what position did vince lombardi play?",
    "ProcessedQuestion": "what position did vince lombardi play",
    "Parses": [
      {
        "ParseId": "WebQTest-1963.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_xf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_xf ns:american_football.football_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "vince lombardi",
        "TopicEntityName": "Vince Lombardi",
        "TopicEntityMid": "m.07_xf",
        "InferentialChain": [
          "american_football.football_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v_1nj",
            "EntityName": "Right guard"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07_xf": "Vince Lombardi"
    },
    "qid_topic_entity": {
      "Q553321": "Vince Lombardi"
    },
    "index": 444
  },
  {
    "QuestionId": "WebQTest-1065",
    "RawQuestion": "who does darth vaders voice?",
    "ProcessedQuestion": "who does darth vaders voice",
    "Parses": [
      {
        "ParseId": "WebQTest-1065.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "darth vaders",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0113l6zy",
            "EntityName": "Dr. Smoov"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wm0z",
            "EntityName": "Zac Efron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0945y8",
            "EntityName": "Abraham Benrubi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b2l8f",
            "EntityName": "Matt Lanter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 445
  },
  {
    "QuestionId": "WebQTest-317",
    "RawQuestion": "where does russia import from?",
    "ProcessedQuestion": "where does russia import from",
    "Parses": [
      {
        "ParseId": "WebQTest-317.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.statistical_region.places_imported_from",
          "location.imports_and_exports.imported_from"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t_x",
            "EntityName": "Uzbekistan"
          }
        ]
      },
      {
        "ParseId": "WebQTest-317.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07t21)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07t21 ns:location.statistical_region.places_imported_from ?y .\n?y ns:location.imports_and_exports.imported_from ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Ukraine",
        "TopicEntityMid": "m.07t21",
        "InferentialChain": [
          "location.statistical_region.places_imported_from",
          "location.imports_and_exports.imported_from"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t_x",
            "EntityName": "Uzbekistan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia",
      "m.07t21": "Ukraine"
    },
    "qid_topic_entity": {
      "Q159": "Russia",
      "Q212": "Ukraine"
    },
    "index": 446
  },
  {
    "QuestionId": "WebQTest-1396",
    "RawQuestion": "who played darth vader at the end of return of the jedi?",
    "ProcessedQuestion": "who played darth vader at the end of return of the jedi",
    "Parses": [
      {
        "ParseId": "WebQTest-1396.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0ddjy .\n}\n",
        "PotentialTopicEntityMention": "darth vader",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0ddjy",
            "EntityName": "Return of the Jedi",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023jmy",
            "EntityName": "Sebastian Shaw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xblf",
            "EntityName": "David Prowse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 447
  },
  {
    "QuestionId": "WebQTest-841",
    "RawQuestion": "what is money called in italy?",
    "ProcessedQuestion": "what is money called in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-841.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 448
  },
  {
    "QuestionId": "WebQTest-1889",
    "RawQuestion": "who was vice president with bill clinton?",
    "ProcessedQuestion": "who was vice president with bill clinton",
    "Parses": [
      {
        "ParseId": "WebQTest-1889.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "bill clinton",
        "TopicEntityName": "Bill Clinton",
        "TopicEntityMid": "m.0157m",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05fv",
            "EntityName": "Al Gore"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0157m": "Bill Clinton"
    },
    "qid_topic_entity": {
      "Q1124": "Bill Clinton"
    },
    "index": 449
  },
  {
    "QuestionId": "WebQTest-629",
    "RawQuestion": "what company does nike own?",
    "ProcessedQuestion": "what company does nike own",
    "Parses": [
      {
        "ParseId": "WebQTest-629.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lwkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lwkh ns:organization.organization.child ?y .\n?y ns:organization.organization_relationship.child ?x .\n}\n",
        "PotentialTopicEntityMention": "nike",
        "TopicEntityName": "Nike, Inc.",
        "TopicEntityMid": "m.0lwkh",
        "InferentialChain": [
          "organization.organization.child",
          "organization.organization_relationship.child"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_yyy0j",
            "EntityName": "Nike Brand Kitchen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0140d2",
            "EntityName": "Converse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05j1g6",
            "EntityName": "Umbro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08qt1l",
            "EntityName": "Hurley International"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_qsh",
            "EntityName": "NIKE Deutschland GmbH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_qsq",
            "EntityName": "NIKE Mexico Holdings LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_qsy",
            "EntityName": "NIKE Vietnam Co"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_6y0",
            "EntityName": "Cole Haan Co Store"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_82n",
            "EntityName": "NIKE Flight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_8xp",
            "EntityName": "Umbro Sportwear Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_933",
            "EntityName": "Yugen Kaisha Hurley Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_ptr",
            "EntityName": "Converse Footwear Technical Service (Zhongshan) Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m_qf6",
            "EntityName": "Hurley999 UK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m04cp",
            "EntityName": "BRS NIKE Taiwan Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m0mrr",
            "EntityName": "Converse Trading Co B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m12g4",
            "EntityName": "Bragano Trading S.r.l."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m12pm",
            "EntityName": "Converse Canada Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m1knm",
            "EntityName": "Converse Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m1m2f",
            "EntityName": "PT Hurley Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m2_gr",
            "EntityName": "NIKE 360 Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m2_gz",
            "EntityName": "NIKE SALES (MALAYSIA) SDN. BHD."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3gg9",
            "EntityName": "NIKE Chile B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3ggj",
            "EntityName": "NIKE Tailwind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3gw1",
            "EntityName": "Savier Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3ydc",
            "EntityName": "NIKE GmbH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m3ydl",
            "EntityName": "NIKE Poland Sp.zo.o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m4dd7",
            "EntityName": "NIKE Huarache"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m5tqw",
            "EntityName": "NIKE Finland OY"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m5vf0",
            "EntityName": "Umbro Schweiz Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m67_9",
            "EntityName": "Converse Sporting Goods (China) Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m7733",
            "EntityName": "NIKE India Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m773b",
            "EntityName": "NIKE Servicios de Mexico S. de R.L. de C.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m77sg",
            "EntityName": "Twin Dragons Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m7p_d",
            "EntityName": "NIKE Licenciamentos do Brasil Ltda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m7p_w",
            "EntityName": "NIKE UK Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m84_6",
            "EntityName": "NIKE BH B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m84_f",
            "EntityName": "NIKE International Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m84_n",
            "EntityName": "NIKE Sports (China) Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m8lqy",
            "EntityName": "Converse Netherlands B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m8m24",
            "EntityName": "Exeter Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m8n9d",
            "EntityName": "PT NIKE Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m9l86",
            "EntityName": "NIKE Argentina Srl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m9lj7",
            "EntityName": "PMG International Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mb0fr",
            "EntityName": "Cole Haan Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mb2c9",
            "EntityName": "Umbro Worldwide Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mbk23",
            "EntityName": "NIKE de Chile Ltda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mc11v",
            "EntityName": "Umbro HK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mchdq",
            "EntityName": "NIKE European Operations Netherlands B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mcj4c",
            "EntityName": "Umbro Licensing Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mcybt",
            "EntityName": "Converse Canada Corp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdfnq",
            "EntityName": "NIKE (Suzhou) Sports Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdfny",
            "EntityName": "NIKE Hellas EPE"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdfp4",
            "EntityName": "NIKE Retail LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdxf_",
            "EntityName": "Manchester United Merchandising Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdxp6",
            "EntityName": "NIKE Cortez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mdygz",
            "EntityName": "Umbro Asia Sourcing Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mg9yx",
            "EntityName": "NIKE Africa Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mgs5z",
            "EntityName": "Exeter Brands Group LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mgsym",
            "EntityName": "NIKE Asia Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mh80r",
            "EntityName": "NIKE Group Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mh80z",
            "EntityName": "NIKE Retail B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mj4t7",
            "EntityName": "American NIKE SL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mj55s",
            "EntityName": "Cole Haan Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mj74b",
            "EntityName": "Umbro.com"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mk4jh",
            "EntityName": "NIKE (UK) Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mk4jq",
            "EntityName": "NIKE Russia LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ml2ln",
            "EntityName": "NIKE Laser Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ml2lw",
            "EntityName": "NIKE TN Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mm1kl",
            "EntityName": "Umbro Finance Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmhhw",
            "EntityName": "NIKE Denmark ApS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmhj2",
            "EntityName": "NIKE Max LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmhj9",
            "EntityName": "NIKE Vapor Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mmzcd",
            "EntityName": "NIKE Japan Corp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnf8p",
            "EntityName": "NIKE Canada Corp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnf8x",
            "EntityName": "NIKE Italy S.R.L."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnf93",
            "EntityName": "NIKE Suzhou Holding HK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnx33",
            "EntityName": "NIKE Europe Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnx3b",
            "EntityName": "NIKE Zoom LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mnxz3",
            "EntityName": "Umbro JV Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpfwh",
            "EntityName": "NIKE Global Trading PTE. LTD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpfwq",
            "EntityName": "NIKE Philippines Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpxh9",
            "EntityName": "Futbol Club Barcelona SL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mpy3t",
            "EntityName": "NIKE France SAS."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mqvs1",
            "EntityName": "NIKE (Switzerland) GmbH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mqvs8",
            "EntityName": "NIKE Holding LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mqvsh",
            "EntityName": "NIKE Retail Poland sp. z o. o."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ms8bg",
            "EntityName": "Hurley 999 SL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mt6xj",
            "EntityName": "NIKE Canada Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mt6xr",
            "EntityName": "NIKE Sweden AB"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mtq62",
            "EntityName": "NIKE (Thailand) Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mtq69",
            "EntityName": "NIKE Hong Kong Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mtq6j",
            "EntityName": "NIKE Retail Services Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mv4rv",
            "EntityName": "NIKE Finance Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mv5h1",
            "EntityName": "Umbro Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mx070",
            "EntityName": "NIKE China Holding HK Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxgzn",
            "EntityName": "NIKE International Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxgzw",
            "EntityName": "NIKE Sourcing India Private Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxykn",
            "EntityName": "NIKE do Brasil Comercio e Participacoes Ltda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxykw",
            "EntityName": "NIKE New Zealand Co"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxyl2",
            "EntityName": "NIKE Vision Timing & Techlab LP"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxzbb",
            "EntityName": "Triax Insurance Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09mxzcf",
            "EntityName": "Umbro International JV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09myf89",
            "EntityName": "Umbro International Holdings Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n05q3",
            "EntityName": "NIKE Australia Pty. Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n05qb",
            "EntityName": "NIKE International LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n05qk",
            "EntityName": "NIKE South Africa Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n0nbn",
            "EntityName": "NIKE Galaxy Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n12q_",
            "EntityName": "Hurley Australia Pty Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n1kjv",
            "EntityName": "Juventus Merchandising S.r.l."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n20nr",
            "EntityName": "NIKE Jump Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2h_r",
            "EntityName": "Umbro International Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2hc5",
            "EntityName": "NIKE Dunk Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2hcl",
            "EntityName": "NIKE NZ Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2hct",
            "EntityName": "NIKE Waffle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2z87",
            "EntityName": "NIKE Lavadome"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n2z8g",
            "EntityName": "NIKE Trading Co B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n3f3q",
            "EntityName": "NIKE IHM Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n3fsz",
            "EntityName": "Twin Dragons Global Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n3w10",
            "EntityName": "Converse Hong Kong Holding Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4brj",
            "EntityName": "NIKE de Mexico S de R.L. de C.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4brr",
            "EntityName": "NIKE Logistics Yugen Kaisha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4brz",
            "EntityName": "NIKE USA Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n4sfr",
            "EntityName": "Converse (Asia Pacific) Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n5867",
            "EntityName": "NIKE Australia Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n586g",
            "EntityName": "NIKE International Holding Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n586p",
            "EntityName": "NIKE South Africa Holdings LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n65_6",
            "EntityName": "NIKE Sports Korea Co Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n65z_",
            "EntityName": "NIKE Israel Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n65zs",
            "EntityName": "NIKE CA LLC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n6p3w",
            "EntityName": "NIKE Global Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n6p42",
            "EntityName": "NIKE Offshore Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n6pt6",
            "EntityName": "USISL Inc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n73w1",
            "EntityName": "NIKE Global Services PTE. LTD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n73w8",
            "EntityName": "NIKE Pegasus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n80p_",
            "EntityName": "Hurley International Holding B.V."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n9ftf",
            "EntityName": "NIKE India Private Ltd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n9ftn",
            "EntityName": "NIKE SINGAPORE PTE LTD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b4zbb",
            "EntityName": "Nike Vision"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bq0k3",
            "EntityName": "Cole Haan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnsqj1",
            "EntityName": "Nike Golf"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lwkh": "Nike, Inc."
    },
    "qid_topic_entity": {
      "Q483915": "Nike, Inc."
    },
    "index": 450
  },
  {
    "QuestionId": "WebQTest-751",
    "RawQuestion": "who owns google 2012?",
    "ProcessedQuestion": "who owns google 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-751.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? somewhat ambiguous how to define own."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:organization.organization.leadership ?y .\n?y ns:organization.leadership.person ?x .\nFILTER(NOT EXISTS {?y ns:organization.leadership.from ?sk0} || \nEXISTS {?y ns:organization.leadership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.leadership.to ?sk2} || \nEXISTS {?y ns:organization.leadership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "google",
        "TopicEntityName": "Google",
        "TopicEntityMid": "m.045c7b",
        "InferentialChain": [
          "organization.organization.leadership",
          "organization.leadership.person"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "organization.leadership.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "organization.leadership.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025v9nm",
            "EntityName": "Vic Gundotra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q1q10",
            "EntityName": "Patrick Pichette"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05687l1",
            "EntityName": "Nikesh Arora"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v3lbs",
            "EntityName": "David Drummond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gjpq",
            "EntityName": "Larry Page"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.045c7b": "Google"
    },
    "qid_topic_entity": {
      "Q95": "Google"
    },
    "index": 451
  },
  {
    "QuestionId": "WebQTest-1387",
    "RawQuestion": "what time zone is toronto gmt?",
    "ProcessedQuestion": "what time zone is toronto gmt",
    "Parses": [
      {
        "ParseId": "WebQTest-1387.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 452
  },
  {
    "QuestionId": "WebQTest-1174",
    "RawQuestion": "what cancer did jackie kennedy die of?",
    "ProcessedQuestion": "what cancer did jackie kennedy die of",
    "Parses": [
      {
        "ParseId": "WebQTest-1174.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h6mq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h6mq ns:people.deceased_person.cause_of_death ?x .\n?x ns:medicine.disease.parent_disease ns:m.0qcr0 .\n}\n",
        "PotentialTopicEntityMention": "jackie kennedy",
        "TopicEntityName": "Jacqueline Kennedy Onassis",
        "TopicEntityMid": "m.0h6mq",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0qcr0",
            "EntityName": "Cancer",
            "SourceNodeIndex": 0,
            "NodePredicate": "medicine.disease.parent_disease",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jdk0",
            "EntityName": "Lymphoma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h6mq": "Jacqueline Kennedy Onassis"
    },
    "qid_topic_entity": {
      "Q165421": "Jacqueline Kennedy Onassis"
    },
    "index": 453
  },
  {
    "QuestionId": "WebQTest-1861",
    "RawQuestion": "what is the government system of saudi arabia?",
    "ProcessedQuestion": "what is the government system of saudi arabia",
    "Parses": [
      {
        "ParseId": "WebQTest-1861.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z215)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z215 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "saudi arabia",
        "TopicEntityName": "Saudi Arabia",
        "TopicEntityMid": "m.01z215",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v2k4",
            "EntityName": "Islamic state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hqc2",
            "EntityName": "Absolute monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01z215": "Saudi Arabia"
    },
    "qid_topic_entity": {
      "Q851": "Saudi Arabia"
    },
    "index": 454
  },
  {
    "QuestionId": "WebQTest-1591",
    "RawQuestion": "what was obama's former occupation?",
    "ProcessedQuestion": "what was obama 's former occupation",
    "Parses": [
      {
        "ParseId": "WebQTest-1591.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gc2",
            "EntityName": "Lawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fj9f",
            "EntityName": "Politician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz465",
            "EntityName": "Law professor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 455
  },
  {
    "QuestionId": "WebQTest-787",
    "RawQuestion": "where is the riviera casino?",
    "ProcessedQuestion": "where is the riviera casino",
    "Parses": [
      {
        "ParseId": "WebQTest-787.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vv6l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vv6l ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "riviera casino",
        "TopicEntityName": "Riviera",
        "TopicEntityMid": "m.05vv6l",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cv3w",
            "EntityName": "Las Vegas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vv6l": "Riviera"
    },
    "qid_topic_entity": {
      "Q1535845": "Riviera"
    },
    "index": 456
  },
  {
    "QuestionId": "WebQTest-1249",
    "RawQuestion": "what is the state flower of new mexico?",
    "ProcessedQuestion": "what is the state flower of new mexico",
    "Parses": [
      {
        "ParseId": "WebQTest-1249.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fjy ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627gn .\n}\n",
        "PotentialTopicEntityMention": "new mexico",
        "TopicEntityName": "New Mexico",
        "TopicEntityMid": "m.05fjy",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04627gn",
            "EntityName": "State flower",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzbf1c",
            "EntityName": "Yucca flower"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05fjy": "New Mexico"
    },
    "qid_topic_entity": {
      "Q1522": "New Mexico"
    },
    "index": 457
  },
  {
    "QuestionId": "WebQTest-1765",
    "RawQuestion": "what region is turkey considered?",
    "ProcessedQuestion": "what region is turkey considered",
    "Parses": [
      {
        "ParseId": "WebQTest-1765.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qkt",
            "EntityName": "Eurasia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 458
  },
  {
    "QuestionId": "WebQTest-814",
    "RawQuestion": "where is harley davidson corporate headquarters?",
    "ProcessedQuestion": "where is harley davidson corporate headquarters",
    "Parses": [
      {
        "ParseId": "WebQTest-814.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ny2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ny2 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "harley davidson",
        "TopicEntityName": "Harley-Davidson Motor Company",
        "TopicEntityMid": "m.03ny2",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyl9",
            "EntityName": "Milwaukee"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ny2": "Harley-Davidson Motor Company"
    },
    "qid_topic_entity": {
      "Q192814": "Harley-Davidson Motor Company"
    },
    "index": 459
  },
  {
    "QuestionId": "WebQTest-362",
    "RawQuestion": "when did conflict start in ireland?",
    "ProcessedQuestion": "when did conflict start in ireland",
    "Parses": [
      {
        "ParseId": "WebQTest-362.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012wgb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012wgb ns:location.location.events ?x .\n?x ns:common.topic.notable_types ns:m.02h76fz .\n}\n",
        "PotentialTopicEntityMention": "ireland",
        "TopicEntityName": "Ireland",
        "TopicEntityMid": "m.012wgb",
        "InferentialChain": [
          "location.location.events"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02h76fz",
            "EntityName": "Military Conflict",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016j83",
            "EntityName": "Irish War of Independence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gqg3",
            "EntityName": "Nine Years' War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037pbp",
            "EntityName": "Irish Confederate Wars"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03kz35",
            "EntityName": "Irish Rebellion of 1798"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r8xj",
            "EntityName": "Wars of the Three Kingdoms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xvj",
            "EntityName": "Irish Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ymyvf",
            "EntityName": "Siege of Smerwick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0455n7",
            "EntityName": "Anglo-Spanish War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0467ph",
            "EntityName": "Williamite War in Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046d2r",
            "EntityName": "Jacobite risings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qbccl",
            "EntityName": "Exp\u00e9dition d'Irlande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053997",
            "EntityName": "Irish Rebellion of 1641"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0554yw",
            "EntityName": "Cromwellian conquest of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cfx7",
            "EntityName": "Desmond Rebellions"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ch2v",
            "EntityName": "Nine Years' War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mwtnl",
            "EntityName": "Planned French invasion of Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zy1f",
            "EntityName": "Sack of Dun Gallimhe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zyvy",
            "EntityName": "Battle of Tochar Cruachain-Bri-Ele"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zz2w",
            "EntityName": "Battle of Ros-Mhic-Thri\u00fain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gdz49",
            "EntityName": "Guerrilla phase of the Irish Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09qgbg",
            "EntityName": "Battle of Affane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh75th",
            "EntityName": "Siege of Drogheda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmf9lh",
            "EntityName": "Battle of the Curragh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c414c",
            "EntityName": "Battle of Knockdoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c43s6",
            "EntityName": "Irish Free State offensive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9_fj",
            "EntityName": "Siege of Waterford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cffgq",
            "EntityName": "Norman invasion of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnvmv",
            "EntityName": "Bruce campaign in Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ddfcvb",
            "EntityName": "Battle of Belahoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fmqqy",
            "EntityName": "Second Desmond Rebellion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzqxy",
            "EntityName": "Battle of Glentaisie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmdvwg",
            "EntityName": "Siege of Wexford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012wgb": "Ireland"
    },
    "qid_topic_entity": {
      "Q22890": "Ireland"
    },
    "index": 460
  },
  {
    "QuestionId": "WebQTest-1922",
    "RawQuestion": "what offices did theodore roosevelt hold?",
    "ProcessedQuestion": "what offices did theodore roosevelt hold",
    "Parses": [
      {
        "ParseId": "WebQTest-1922.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hyk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hyk ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.basic_title ?x .\n}\n",
        "PotentialTopicEntityMention": "theodore roosevelt",
        "TopicEntityName": "Theodore Roosevelt",
        "TopicEntityMid": "m.07hyk",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.basic_title"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060c4",
            "EntityName": "President"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0621v9",
            "EntityName": "Member of the Legislative Assembly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09tm8y",
            "EntityName": "Assistant Secretary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq3c",
            "EntityName": "Vice President"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fkvn",
            "EntityName": "Governor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07hyk": "Theodore Roosevelt"
    },
    "qid_topic_entity": {
      "Q33866": "Theodore Roosevelt"
    },
    "index": 461
  },
  {
    "QuestionId": "WebQTest-1460",
    "RawQuestion": "what was gregor mendel contribution?",
    "ProcessedQuestion": "what was gregor mendel contribution",
    "Parses": [
      {
        "ParseId": "WebQTest-1460.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039c5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039c5 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "gregor mendel",
        "TopicEntityName": "Gregor Mendel",
        "TopicEntityMid": "m.039c5",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0266rh",
            "EntityName": "Monk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6p1f",
            "EntityName": "Botanist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.039c5": "Gregor Mendel"
    },
    "qid_topic_entity": {
      "Q37970": "Gregor Mendel"
    },
    "index": 462
  },
  {
    "QuestionId": "WebQTest-1057",
    "RawQuestion": "what concentration camp did anne frank died in?",
    "ProcessedQuestion": "what concentration camp did anne frank died in",
    "Parses": [
      {
        "ParseId": "WebQTest-1057.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d9rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d9rk ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "anne frank",
        "TopicEntityName": "Anne Frank",
        "TopicEntityMid": "m.03d9rk",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0139dh",
            "EntityName": "Bergen-Belsen concentration camp"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03d9rk": "Anne Frank"
    },
    "qid_topic_entity": {
      "Q4583": "Anne Frank"
    },
    "index": 463
  },
  {
    "QuestionId": "WebQTest-1368",
    "RawQuestion": "who formed the american federation of labor?",
    "ProcessedQuestion": "who formed the american federation of labor",
    "Parses": [
      {
        "ParseId": "WebQTest-1368.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z4fn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z4fn ns:organization.organization.founders ?x .\n}\n",
        "PotentialTopicEntityMention": "american federation of labor",
        "TopicEntityName": "American Federation of Labor",
        "TopicEntityMid": "m.01z4fn",
        "InferentialChain": [
          "organization.organization.founders"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w91b",
            "EntityName": "Samuel Gompers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01z4fn": "American Federation of Labor"
    },
    "qid_topic_entity": {
      "Q464242": "American Federation of Labor"
    },
    "index": 464
  },
  {
    "QuestionId": "WebQTest-1584",
    "RawQuestion": "what disease did bernie mac die of?",
    "ProcessedQuestion": "what disease did bernie mac die of",
    "Parses": [
      {
        "ParseId": "WebQTest-1584.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lj6p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lj6p ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bernie mac",
        "TopicEntityName": "Bernie Mac",
        "TopicEntityMid": "m.02lj6p",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q5y6",
            "EntityName": "Sarcoidosis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0p367zp",
            "EntityName": "Complications from pneumonia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02lj6p": "Bernie Mac"
    },
    "qid_topic_entity": {
      "Q176323": "Bernie Mac"
    },
    "index": 465
  },
  {
    "QuestionId": "WebQTest-1855",
    "RawQuestion": "what airport do you fly into in paris?",
    "ProcessedQuestion": "what airport do you fly into in paris",
    "Parses": [
      {
        "ParseId": "WebQTest-1855.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
        "PotentialTopicEntityMention": "paris",
        "TopicEntityName": "Paris",
        "TopicEntityMid": "m.05qtj",
        "InferentialChain": [
          "travel.travel_destination.how_to_get_here",
          "travel.transportation.transport_terminus"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xpjyz",
            "EntityName": "Airport",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01l525",
            "EntityName": "Paris Orly Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qk79",
            "EntityName": "Charles de Gaulle Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qtj": "Paris"
    },
    "qid_topic_entity": {
      "Q90": "Paris"
    },
    "index": 466
  },
  {
    "QuestionId": "WebQTest-1551",
    "RawQuestion": "what year did seattle seahawks go to the super bowl?",
    "ProcessedQuestion": "what year did seattle seahawks go to the super bowl",
    "Parses": [
      {
        "ParseId": "WebQTest-1551.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F UNION win or lose"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n  ns:m.06x5s ns:sports.sports_championship.events ?x . # Super Bowl\n  {\n    { ?x ns:sports.sports_championship_event.runner_up ns:m.070xg . } # Seattle Seahawks\n    UNION\n    { ?x ns:sports.sports_championship_event.champion ns:m.070xg . } # Seattle Seahawks\n  }\n  ?x ns:time.event.start_date ?d .\n}",
        "PotentialTopicEntityMention": "seattle seahawks",
        "TopicEntityName": "Seattle Seahawks",
        "TopicEntityMid": "m.070xg",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032tn6",
            "EntityName": "Super Bowl XL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4qg3",
            "EntityName": "Super Bowl XLVIII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.070xg": "Seattle Seahawks"
    },
    "qid_topic_entity": {
      "Q221878": "Seattle Seahawks"
    },
    "index": 467
  },
  {
    "QuestionId": "WebQTest-97",
    "RawQuestion": "what songs does smokey robinson sing?",
    "ProcessedQuestion": "what songs does smokey robinson sing",
    "Parses": [
      {
        "ParseId": "WebQTest-97.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012_6c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012_6c ns:music.artist.track ?x .\n}\n",
        "PotentialTopicEntityMention": "smokey robinson",
        "TopicEntityName": "Smokey Robinson",
        "TopicEntityMid": "m.012_6c",
        "InferentialChain": [
          "music.artist.track"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b67gkcy5",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b80bs1tn",
            "EntityName": "Shop Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b80ddnd_",
            "EntityName": "You've Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_fp",
            "EntityName": "Blame It on Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_fx",
            "EntityName": "Just Like You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_g_",
            "EntityName": "If You Wanna Make Love (Come 'round Here)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_g3",
            "EntityName": "Don't Play Another Love Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_gb",
            "EntityName": "Tell Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_gk",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_h6",
            "EntityName": "Just a Touch Away"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_hf",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_0_hn",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_cwwy",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_pcwk",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_y8l2",
            "EntityName": "Crusin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_zmw3",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010_7k2c",
            "EntityName": "Jingle Bells"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010084gr",
            "EntityName": "Pops, We Love You (disco)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0108_6m",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01088__4",
            "EntityName": "The Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01099c7",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010k49_",
            "EntityName": "The Track of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010mw35t",
            "EntityName": "Whole Lot of Shakin\u2019 in My Heart (Since I Met You)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s_5t8",
            "EntityName": "Bad Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010smc87",
            "EntityName": "I\u2019ve Got You Under My Skin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010ykpkc",
            "EntityName": "God Rest Ye Merry Gentlemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010yqn_",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hdnkf",
            "EntityName": "You've Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011kmr8y",
            "EntityName": "Come by Here (Kum Ba Ya)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myxj",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myxr",
            "EntityName": "It's Time to Stop Shoppin' Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myxz",
            "EntityName": "Why Do Happy Memories Hurt So Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myy5",
            "EntityName": "You Don't Know What It's Like"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myyd",
            "EntityName": "What's Too Much"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myym",
            "EntityName": "Love Brought Us Here"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myyv",
            "EntityName": "Love Don't Give No Reason"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011myz1",
            "EntityName": "Keep Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011p54r5",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011p67qp",
            "EntityName": "The Way You Do (The Things You Do)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011p9b18",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pbky3",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pdb9p",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pfg6v",
            "EntityName": "You Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pgv42",
            "EntityName": "Ooh Baby Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pjtn6",
            "EntityName": "Ain't That Peculiar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pkgnv",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011plnkt",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011pnbdj",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ppwbj",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_9f12",
            "EntityName": "Melody Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_k0r7",
            "EntityName": "We\u2019ve Come Too Far to End It Now"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_q4bx",
            "EntityName": "Save Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_skx_",
            "EntityName": "With Your Love Came"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_svv2",
            "EntityName": "I Can\u2019t Stand to See You Cry (Commercial version)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_xzxw",
            "EntityName": "Melody Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fds",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fgj",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fgz",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fjq",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fjy",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125fkc",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012bp7r",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjh7",
            "EntityName": "My World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjhg",
            "EntityName": "Fallin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjhx",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjj_",
            "EntityName": "Shop Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjjb",
            "EntityName": "You've Really Go a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjjk",
            "EntityName": "Going to a Go Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjjs",
            "EntityName": "Mickey's Monkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjk6",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjkn",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjkw",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjl2",
            "EntityName": "More Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjl9",
            "EntityName": "Yester Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjlj",
            "EntityName": "Ooo Baby Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjlr",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjlz",
            "EntityName": "I've Made Love to You a Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjm5",
            "EntityName": "Quiet Storm (single version)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjmd",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012cjmm",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012jdfhw",
            "EntityName": "Christmas Every Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012jf744",
            "EntityName": "So Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012k66rv",
            "EntityName": "No\u00ebl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012phz_2",
            "EntityName": "Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012tqfc9",
            "EntityName": "It's Christmas Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012xhrxz",
            "EntityName": "When Smokey Sings Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012xsn1",
            "EntityName": "Quiet Storm (Groove Boutique remix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012y12b0",
            "EntityName": "Shop Around"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0130550r",
            "EntityName": "I Can\u2019t Stand to See You Cry (Stereo Promo version)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013m5h_",
            "EntityName": "Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013m5h3",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013r0nb",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0152zwl",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015dwjc",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015nbfn",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015w1lh",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162zr4",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01637sk",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0168mw1",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016btlz",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016dgnp",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016q8s2",
            "EntityName": "Nearness of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zk_k",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0175ch2",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0175qlb",
            "EntityName": "Everything for Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b29q",
            "EntityName": "Jingle Bells"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b2bl",
            "EntityName": "Deck the Halls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b2c0",
            "EntityName": "Christmas Greeting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017b2c7",
            "EntityName": "Away in the Manger / Coventry Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017h_5s",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018cjqb",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r09_",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0b6",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0bf",
            "EntityName": "Wedding Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0bw",
            "EntityName": "Love Letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018r0c2",
            "EntityName": "Coincidentally"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018yjsw",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fp5",
            "EntityName": "It's A Good Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fpd",
            "EntityName": "I Love The Nearness Of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fpm",
            "EntityName": "The Hurt's On You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fq1",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0196fq8",
            "EntityName": "Share It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019dtbb",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b2g_b",
            "EntityName": "Theme From the Big Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b2h4l",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b6lrw",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bw4s2",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bxmxs",
            "EntityName": "Did You Know (Berry's Theme)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c8nnz",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cvyp_",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznk9",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznw4",
            "EntityName": "You Go to My Head"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznwc",
            "EntityName": "I'm in the Mood for Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznwl",
            "EntityName": "Our Love Is Here to Stay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznwt",
            "EntityName": "Fly Me to the Moon (In Other Words)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznx0",
            "EntityName": "Night and Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznx7",
            "EntityName": "I'm Glad There Is You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznxg",
            "EntityName": "More Than You Know"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznxp",
            "EntityName": "Speak Low"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznxx",
            "EntityName": "Time After Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01czny3",
            "EntityName": "I Can't Give You Anything but Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznyb",
            "EntityName": "I Like Your Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznyk",
            "EntityName": "I've Got You Under My Skin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cznys",
            "EntityName": "Tea for Two"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d8txf",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvp2",
            "EntityName": "Why"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvp9",
            "EntityName": "Double Good Everything"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvpj",
            "EntityName": "Rewind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvpr",
            "EntityName": "Be Who You Are"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvpz",
            "EntityName": "I Love Your Face"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvq5",
            "EntityName": "I Can't Get Enough"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvqd",
            "EntityName": "Rack Me Back"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvqm",
            "EntityName": "When A Woman Cries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvqv",
            "EntityName": "You Take Me Away"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvr1",
            "EntityName": "Skid Row"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvtx",
            "EntityName": "Love Is The Light"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvv_",
            "EntityName": "Everything You Touch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvv3",
            "EntityName": "Love' n Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvvb",
            "EntityName": "Same Old Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvvk",
            "EntityName": "I Can't Find"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvvs",
            "EntityName": "Take Me Through The Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvw6",
            "EntityName": "Don't Wanna Be Just Physical"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvwf",
            "EntityName": "Come to Me Soon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvwn",
            "EntityName": "You Made Me Feel Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvww",
            "EntityName": "Jasmin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvx2",
            "EntityName": "Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvx9",
            "EntityName": "Just Another Kiss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dkvxj",
            "EntityName": "Unless You Do It Again"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dr42x",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dsvm6",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dsvvw",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_ks0h",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_s2tn",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dmw_br",
            "EntityName": "Love So Fine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dn3npv",
            "EntityName": "Can't Fight Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dp72f8",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dpts1p",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dpv96f",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq88ng",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqb4nd",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqbw6_",
            "EntityName": "The Tracks of My Tears (live)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqdkk8",
            "EntityName": "And I Don't Love You (Larry Levan instrumental dub)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqk3sz",
            "EntityName": "Walk on By"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqlff0",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqv41v",
            "EntityName": "As You Do"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dr7lg7",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drh8lb",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drkp6z",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dt_ptv",
            "EntityName": "Never My Love / Never Can Say Goodbye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtb8qg",
            "EntityName": "Tell Me Tomorrow, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtljvv",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtrp8c",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg6t",
            "EntityName": "If You Want My Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg77",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg7g",
            "EntityName": "Food For Thought"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg7m",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg7y",
            "EntityName": "Will You Still Love Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg83",
            "EntityName": "You Cannot Laugh Alone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg89",
            "EntityName": "Vitamin U"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg8l",
            "EntityName": "In My Corner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtvg8s",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvtn_c",
            "EntityName": "If You Wanna Make Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvxm0d",
            "EntityName": "I Hear The Children Singing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dw5_xq",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dw61kc",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dwr468",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxk222",
            "EntityName": "Tell Me Tomorrow, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxnyq5",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfktm",
            "EntityName": "A Silent Partner in a Three-Way Love Affair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfktv",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkv0",
            "EntityName": "Holly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkvc",
            "EntityName": "Will You Love Me Tomorrow?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkvm",
            "EntityName": "The Family Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dyfkvx",
            "EntityName": "Wanna Know My Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dz3nl6",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzhwd7",
            "EntityName": "I Care About Detroit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzm8p0",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzpmp2",
            "EntityName": "And I Don't Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzx9c9",
            "EntityName": "It's a Good Feeling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_0lph",
            "EntityName": "Everything You Touch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_83bq",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_mq0m",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_q7d7",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f13pk_",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f142kc",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f1jd9_",
            "EntityName": "I Second That Emotions"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2cfdp",
            "EntityName": "Crusin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2n56y",
            "EntityName": "You Are Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2rq2t",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f36_30",
            "EntityName": "Going to a Go-Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3j2c2",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3nxhj",
            "EntityName": "I've Made Love to You a Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3pjf6",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f43fkv",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f4bv1j",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5v2g1",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6014r",
            "EntityName": "And I Don't Love You (Larry Levan instrumental dub)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f66p_p",
            "EntityName": "Cruisin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6m0jv",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6qz3d",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6z2t0",
            "EntityName": "Ooo Baby Baby (live)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f79mpy",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8g82q",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8z3nm",
            "EntityName": "Aqui Con Tigo (Being With You)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9c4tl",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9v2x6",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbh7b2",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbmzfs",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc_1mk",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fc7f26",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fd1zg2",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fffj25",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fg1wf6",
            "EntityName": "Who's Sad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fkwjrq",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fm00h3",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fmj7mj",
            "EntityName": "I've Made Love To You A Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqk53w",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqp888",
            "EntityName": "Aqui Contigo (Being With You) (Eric Bodi Rivera Mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqv6z1",
            "EntityName": "Going to a Go Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqvm4j",
            "EntityName": "You Really Got a Hold on Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr_v80",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr0js8",
            "EntityName": "I'll Keep My Light In My Window"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr0l0c",
            "EntityName": "It's Fantastic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr17cw",
            "EntityName": "We've Saved The Best For Last (Kenny G with Smokey Robinson)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr21tl",
            "EntityName": "Don't Play Another Love Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr25mq",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr2f7n",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0frh_11",
            "EntityName": "Christmas Everyday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0frj7rg",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fry_50",
            "EntityName": "Shoe Soul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsfc64",
            "EntityName": "Whatcha Gonna Do"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsl88r",
            "EntityName": "One Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsrks1",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9x_",
            "EntityName": "Girlfriend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9x7",
            "EntityName": "You're the One for Me (feat. Joss Stone)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xc",
            "EntityName": "Love Bath"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xg",
            "EntityName": "You're Just My Life (feat. India.Arie)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xq",
            "EntityName": "That Place"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9xt",
            "EntityName": "I Want You Back"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9y2",
            "EntityName": "Please Don't Take Your Love (feat. Carlos Santana)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9y5",
            "EntityName": "Satisfy You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9y8",
            "EntityName": "Time Flies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fst9yc",
            "EntityName": "Don't Know Why"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fstrnj",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ft2lht",
            "EntityName": "Ooo Baby Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ft2qph",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ft2vlr",
            "EntityName": "You Are So Beautiful (feat. Dave Koz)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftf3g6",
            "EntityName": "Sweet Harmony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftm3d7",
            "EntityName": "I Am, I Am"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftrm64",
            "EntityName": "Heavy On Pride (Light On Love)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fv7h0z",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fvxy86",
            "EntityName": "Jingle Bells"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fvygv8",
            "EntityName": "The Agony And The Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw_wmc",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw08bn",
            "EntityName": "Be Kind To The Growing Mind (with The Temptations)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw0vkw",
            "EntityName": "Let Me Be The Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31fh",
            "EntityName": "Season's Greetings from Smokey Robinson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31g7",
            "EntityName": "Noel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31gt",
            "EntityName": "A Child Is Waiting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31h_",
            "EntityName": "The Christmas Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw31jw",
            "EntityName": "It's Christmas Time"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw5wyq",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fw999p",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwr9p9",
            "EntityName": "If You Can Want"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwrblf",
            "EntityName": "Yes It's You Lady"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwz2tv",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fx3k4h",
            "EntityName": "Quiet Storm (Groove Boutique Chill Jazz mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxcgvy",
            "EntityName": "Can't Fight Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxkdhk",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxkw0z",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxqfb5",
            "EntityName": "Tell Me Tomorrow (12\\\" extended mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fy6905",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fy8n3m",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fy8n46",
            "EntityName": "What's Too Much"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fydglj",
            "EntityName": "Just To See Her Again"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fym10n",
            "EntityName": "Ebony Eyes (Duet with Rick James)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fyrz0m",
            "EntityName": "Shoe Soul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz0w5v",
            "EntityName": "Blame It On Love (Duet with Barbara Mitchell)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz7511",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fz751m",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzqxxf",
            "EntityName": "I Have Prayed On It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzs3j4",
            "EntityName": "Love Don' Give No Reason (12 Inch Club Mix)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzt1kc",
            "EntityName": "Quiet Storm (Groove Boutique Chill Jazz mix feat. Ray Ayers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzthgc",
            "EntityName": "Mother's Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0scqg",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0w8br",
            "EntityName": "There Will Come A Day ( I'm Gonna Happen To You )"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g13kj3",
            "EntityName": "You Are Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g144h_",
            "EntityName": "Tracks Of My Tears (Live)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g14njr",
            "EntityName": "Little Girl, Little Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1gzly",
            "EntityName": "You Are Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1gzm5",
            "EntityName": "Tell Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5zyhz",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g73wtl",
            "EntityName": "God Rest Ye Merry Gentlemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g7z2x_",
            "EntityName": "Going to a Gogo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw0_",
            "EntityName": "Happy (Love Theme From Lady Sings the Blues)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw0x",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw18",
            "EntityName": "Sweet Harmony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw1d",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw1k",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw1r",
            "EntityName": "Medley: Never My Love / Never Can Say Goodbye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw29",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw2f",
            "EntityName": "Will You Love Me Tomorrow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtw2j",
            "EntityName": "Baby Come Close"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ljv15",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lljdp",
            "EntityName": "My Guy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lp413",
            "EntityName": "Pops, We Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lqxkn",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ltmxy",
            "EntityName": "Tracks of my Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60bl",
            "EntityName": "I Am I Am"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60c7",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60cp",
            "EntityName": "Open"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60cx",
            "EntityName": "Daylight & Darkness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60d3",
            "EntityName": "There Will Come a Day (I'm Gonna Happen to You)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60db",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60ds",
            "EntityName": "Tell Me Tomorrow, Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60f6",
            "EntityName": "Ebony Eyes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60ff",
            "EntityName": "I've Made Love to You a Thousand Times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m60g2",
            "EntityName": "Everything You Touch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m9xs8",
            "EntityName": "Cruisin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n2_44",
            "EntityName": "We've Saved the Best for Last"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nk__k5",
            "EntityName": "A Tattoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nl37kz",
            "EntityName": "My Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nl9qxd",
            "EntityName": "I Praise & Worship You Father"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nlm_x0",
            "EntityName": "The Tracks of My Heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nlmrvm",
            "EntityName": "Jesus Told Me To Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nmk9gx",
            "EntityName": "The Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nmz8sn",
            "EntityName": "She's Only a Baby Herself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nmzntz",
            "EntityName": "Let Your Light Shine On Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nn463g",
            "EntityName": "It's Her Turn to Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnjjzn",
            "EntityName": "Just Passing Through"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np0f3h",
            "EntityName": "Asleep on My Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np0py4",
            "EntityName": "I Know You by Heart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nsfzn",
            "EntityName": "Tears of a Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nsg0d",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nylqs",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qc0hc",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qc9hmx",
            "EntityName": "Tears of a Sweet Free Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qhqdx",
            "EntityName": "Santa Claus is Coming to Town"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qj3c6",
            "EntityName": "Cruisin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qvtc8",
            "EntityName": "Ever Had A Dream"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r3gf_",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0r6k3s",
            "EntityName": "I Second That Emotion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rfp86w",
            "EntityName": "Gang Bangin'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rgwcn5",
            "EntityName": "Fulfill Your Need"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rhhgpp",
            "EntityName": "Standing On Jesus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rj455v",
            "EntityName": "The Love Between Me and My Kids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rjqd_v",
            "EntityName": "The Road to Damascus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rjqdgz",
            "EntityName": "He Can Fix Anything"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rjqk7x",
            "EntityName": "We Are The Warriors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzf2",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzf9",
            "EntityName": "Baby That's Backatcha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzfj",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzfr",
            "EntityName": "(It's The) Same Old Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzfz",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzgd",
            "EntityName": "Don't Play Another Love Song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzgm",
            "EntityName": "Get Ready"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzgv",
            "EntityName": "Let Me Be the Clock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzh1",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rvzh8",
            "EntityName": "Quiet Storm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shh9bn",
            "EntityName": "Little Girl Little Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shjmm7",
            "EntityName": "Te Quiero Como Si No Hubiera Un Manana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shqv6r",
            "EntityName": "Because of You It's the Best It's Ever Been"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shv48x",
            "EntityName": "Sleepless Nights"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0shvq8s",
            "EntityName": "Hold on to Your Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sj2crn",
            "EntityName": "Photograph in My Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sjczzn",
            "EntityName": "Be Kind to the Growing Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sjwhfz",
            "EntityName": "Driving Thru Life in the Fast Lane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sjxs37",
            "EntityName": "Gone Forever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0skth34",
            "EntityName": "Girl I'm Standing There"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sllgc1",
            "EntityName": "No Time to Stop Believing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sm8fxv",
            "EntityName": "Train of Thought"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0smdbk7",
            "EntityName": "Close Encounters of the First Kind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sn2h12",
            "EntityName": "Hanging on by a Thread"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sngt3w",
            "EntityName": "Why Are You Running From My Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0snrjwr",
            "EntityName": "Wishful Thinking"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sp3sk1",
            "EntityName": "Some People Will Do Anything for Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t6xs8",
            "EntityName": "Ebony Eyes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vhw1s",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vlj8h",
            "EntityName": "And I Love Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vy2vlk",
            "EntityName": "The Tears Of A Clown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wznrc",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x1pvv",
            "EntityName": "First Time on a Ferris Wheel (Love Theme From \\\"Berry Gordy's The Last Dragon\\\")"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x7x8jf",
            "EntityName": "The Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x9mvw7",
            "EntityName": "Winter Wonderland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xlrlq9",
            "EntityName": "The Tracks Of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xy0b_",
            "EntityName": "The Christmas Song (Chestnuts Roasting on an Open Fire) (feat. The Temptations)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xy2lj",
            "EntityName": "Being With You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y4bhd",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydd80",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydxzn",
            "EntityName": "Be Careful What You Wish For"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydy1y",
            "EntityName": "Really Gonna Miss You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ydy24",
            "EntityName": "Be Careful What You Wish For (instrumental)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yjgdk",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ykc0x",
            "EntityName": "Just My Soul Responding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yljw0",
            "EntityName": "Just to See Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yljyn",
            "EntityName": "One Heartbeat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yn3m0",
            "EntityName": "Going to a Go-Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z2vns",
            "EntityName": "The Agony and the Ecstasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh9t_",
            "EntityName": "Virgin Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjfjj",
            "EntityName": "Tracks of My Tears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zptsbd",
            "EntityName": "Please Come Home for Christmas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012_6c": "Smokey Robinson"
    },
    "qid_topic_entity": {
      "Q310332": "Smokey Robinson"
    },
    "index": 468
  },
  {
    "QuestionId": "WebQTest-126",
    "RawQuestion": "who wrote the jana gana mana?",
    "ProcessedQuestion": "who wrote the jana gana mana",
    "Parses": [
      {
        "ParseId": "WebQTest-126.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fl44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fl44 ns:music.composition.composer ?x .\n}\n",
        "PotentialTopicEntityMention": "jana gana mana",
        "TopicEntityName": "Jana Gana Mana",
        "TopicEntityMid": "m.0fl44",
        "InferentialChain": [
          "music.composition.composer"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vx721",
            "EntityName": "Ram Singh Thakur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0mbj",
            "EntityName": "Rabindranath Tagore"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fl44": "Jana Gana Mana"
    },
    "qid_topic_entity": {
      "Q83099": "Jana Gana Mana"
    },
    "index": 469
  },
  {
    "QuestionId": "WebQTest-56",
    "RawQuestion": "what county is kansas city kansas?",
    "ProcessedQuestion": "what county is kansas city kansas",
    "Parses": [
      {
        "ParseId": "WebQTest-56.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "kansas city kansas",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.0tcj6",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnyr",
            "EntityName": "Wyandotte County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-56.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "kansas city kansas",
        "TopicEntityName": "Kansas City",
        "TopicEntityMid": "m.0tcj6",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnyr",
            "EntityName": "Wyandotte County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-56.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fdkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fdkj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "kansas city kansas",
        "TopicEntityName": "Kansas Speedway",
        "TopicEntityMid": "m.04fdkj",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nnyr",
            "EntityName": "Wyandotte County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0tcj6": "Kansas City",
      "m.04fdkj": "Kansas Speedway"
    },
    "qid_topic_entity": {
      "Q486472": "Kansas City",
      "Q1723946": "Kansas Speedway"
    },
    "index": 470
  },
  {
    "QuestionId": "WebQTest-619",
    "RawQuestion": "who played victoria barkley?",
    "ProcessedQuestion": "who played victoria barkley",
    "Parses": [
      {
        "ParseId": "WebQTest-619.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030k44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030k44 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.09cyx23 .\n}\n",
        "PotentialTopicEntityMention": "victoria barkley",
        "TopicEntityName": "The Big Valley",
        "TopicEntityMid": "m.030k44",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.09cyx23",
            "EntityName": "Victoria Barkley",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bw6y",
            "EntityName": "Barbara Stanwyck"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030k44": "The Big Valley"
    },
    "qid_topic_entity": {
      "Q582053": "The Big Valley"
    },
    "index": 471
  },
  {
    "QuestionId": "WebQTest-701",
    "RawQuestion": "what team is reggie bush on 2011?",
    "ProcessedQuestion": "what team is reggie bush on 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-701.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cb70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cb70 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "reggie bush",
        "TopicEntityName": "Reggie Bush",
        "TopicEntityMid": "m.05cb70",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vn5",
            "EntityName": "Miami Dolphins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g3v",
            "EntityName": "New Orleans Saints"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05cb70": "Reggie Bush"
    },
    "qid_topic_entity": {
      "Q555271": "Reggie Bush"
    },
    "index": 472
  },
  {
    "QuestionId": "WebQTest-1420",
    "RawQuestion": "what does monsanto own?",
    "ProcessedQuestion": "what does monsanto own",
    "Parses": [
      {
        "ParseId": "WebQTest-1420.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0n8m6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0n8m6 ns:business.business_operation.industry ?x .\n}\n",
        "PotentialTopicEntityMention": "monsanto",
        "TopicEntityName": "Monsanto",
        "TopicEntityMid": "m.0n8m6",
        "InferentialChain": [
          "business.business_operation.industry"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ntf00",
            "EntityName": "Agrochemical"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09dh0",
            "EntityName": "Seed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g10z",
            "EntityName": "Chemical industry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hkf",
            "EntityName": "Agriculture"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0n8m6": "Monsanto"
    },
    "qid_topic_entity": {
      "Q207983": "Monsanto"
    },
    "index": 473
  },
  {
    "QuestionId": "WebQTest-1001",
    "RawQuestion": "what country is nicki minaj from?",
    "ProcessedQuestion": "what country is nicki minaj from",
    "Parses": [
      {
        "ParseId": "WebQTest-1001.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047sxrj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047sxrj ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "nicki minaj",
        "TopicEntityName": "Nicki Minaj",
        "TopicEntityMid": "m.047sxrj",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.047sxrj": "Nicki Minaj"
    },
    "qid_topic_entity": {
      "Q162202": "Nicki Minaj"
    },
    "index": 474
  },
  {
    "QuestionId": "WebQTest-1833",
    "RawQuestion": "what kind of government does brazil has?",
    "ProcessedQuestion": "what kind of government does brazil has",
    "Parses": [
      {
        "ParseId": "WebQTest-1833.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 475
  },
  {
    "QuestionId": "WebQTest-923",
    "RawQuestion": "what countries does england border?",
    "ProcessedQuestion": "what countries does england border",
    "Parses": [
      {
        "ParseId": "WebQTest-923.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jx1 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"Country\")\n}\n",
        "PotentialTopicEntityMention": "england",
        "TopicEntityName": "England",
        "TopicEntityMid": "m.02jx1",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "Country",
            "EntityName": null,
            "SourceNodeIndex": 1,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02jx1": "England"
    },
    "qid_topic_entity": {
      "Q21": "England"
    },
    "index": 476
  },
  {
    "QuestionId": "WebQTest-88",
    "RawQuestion": "who is willow smith mom name?",
    "ProcessedQuestion": "who is willow smith mom name",
    "Parses": [
      {
        "ParseId": "WebQTest-88.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gq433)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gq433 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "willow smith",
        "TopicEntityName": "Willow Smith",
        "TopicEntityMid": "m.03gq433",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j7z7",
            "EntityName": "Jada Pinkett Smith"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gq433": "Willow Smith"
    },
    "qid_topic_entity": {
      "Q298209": "Willow Smith"
    },
    "index": 477
  },
  {
    "QuestionId": "WebQTest-1905",
    "RawQuestion": "where was auschwitz concentration camp located?",
    "ProcessedQuestion": "where was auschwitz concentration camp located",
    "Parses": [
      {
        "ParseId": "WebQTest-1905.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v_x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v_x ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "auschwitz concentration camp",
        "TopicEntityName": "Auschwitz concentration camp",
        "TopicEntityMid": "m.0v_x",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021p2p",
            "EntityName": "O\u015bwi\u0119cim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mtdhz",
            "EntityName": "Auschwitz-Birkenau State Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qhw",
            "EntityName": "Poland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0v_x": "Auschwitz concentration camp"
    },
    "qid_topic_entity": {
      "Q7341": "Auschwitz concentration camp"
    },
    "index": 478
  },
  {
    "QuestionId": "WebQTest-1559",
    "RawQuestion": "what to do san jose ca?",
    "ProcessedQuestion": "what to do san jose ca",
    "Parses": [
      {
        "ParseId": "WebQTest-1559.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f04v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f04v ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "san jose ca",
        "TopicEntityName": "San Jose",
        "TopicEntityMid": "m.0f04v",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nmrx",
            "EntityName": "Winchester Mystery House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0255__",
            "EntityName": "Rosicrucian Egyptian Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ryz1",
            "EntityName": "The Tech Museum of Innovation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bwp6",
            "EntityName": "Alum Rock Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gyhcp",
            "EntityName": "San Jose Museum of Quilts & Textiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rvy1",
            "EntityName": "Japantown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_y_d",
            "EntityName": "San Jose Museum of Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zrqk",
            "EntityName": "Kelley Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053j1_",
            "EntityName": "Happy Hollow Park & Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b8gm",
            "EntityName": "Cinequest Film Festival"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cm97",
            "EntityName": "Downtown San Jose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072p67",
            "EntityName": "Santana Row"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.099ltq",
            "EntityName": "San Jose Municipal Rose Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm9hhr",
            "EntityName": "Rock \u2018n\u2019 Roll San Jose Half Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fcd8p",
            "EntityName": "Children's Discovery Museum of San Jose"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f04v": "San Jose"
    },
    "qid_topic_entity": {
      "Q16553": "San Jose"
    },
    "index": 479
  },
  {
    "QuestionId": "WebQTest-68",
    "RawQuestion": "who plays the voice of kitt in knight rider?",
    "ProcessedQuestion": "who plays the voice of kitt in knight rider",
    "Parses": [
      {
        "ParseId": "WebQTest-68.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bvxv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bvxv ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n?y ns:tv.regular_tv_appearance.character ns:m.05_bhx .\n}\n",
        "PotentialTopicEntityMention": "knight rider",
        "TopicEntityName": "Knight Rider",
        "TopicEntityMid": "m.0bvxv",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.special_performance_type",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05_bhx",
            "EntityName": "KITT",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0309r1",
            "EntityName": "William Daniels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bvxv": "Knight Rider"
    },
    "qid_topic_entity": {
      "Q464009": "Knight Rider"
    },
    "index": 480
  },
  {
    "QuestionId": "WebQTest-1039",
    "RawQuestion": "where does sherrod brown live?",
    "ProcessedQuestion": "where does sherrod brown live",
    "Parses": [
      {
        "ParseId": "WebQTest-1039.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034s80)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034s80 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "sherrod brown",
        "TopicEntityName": "Sherrod Brown",
        "TopicEntityMid": "m.034s80",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yzw7",
            "EntityName": "Avon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z18v",
            "EntityName": "Mansfield"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034s80": "Sherrod Brown"
    },
    "qid_topic_entity": {
      "Q381880": "Sherrod Brown"
    },
    "index": 481
  },
  {
    "QuestionId": "WebQTest-206",
    "RawQuestion": "what position does brandon roy play?",
    "ProcessedQuestion": "what position does brandon roy play",
    "Parses": [
      {
        "ParseId": "WebQTest-206.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cf_p_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cf_p_ ns:basketball.basketball_player.position_s ?x .\n}\n",
        "PotentialTopicEntityMention": "brandon roy",
        "TopicEntityName": "Brandon Roy",
        "TopicEntityMid": "m.0cf_p_",
        "InferentialChain": [
          "basketball.basketball_player.position_s"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02sf_r",
            "EntityName": "Point guard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03558l",
            "EntityName": "Shooting guard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0355dz",
            "EntityName": "Small forward"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cf_p_": "Brandon Roy"
    },
    "qid_topic_entity": {
      "Q313485": "Brandon Roy"
    },
    "index": 482
  },
  {
    "QuestionId": "WebQTest-278",
    "RawQuestion": "who's dating claire danes?",
    "ProcessedQuestion": "who 's dating claire danes",
    "Parses": [
      {
        "ParseId": "WebQTest-278.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gq0b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gq0b ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.start_date ?sk0} || \nEXISTS {?y ns:celebrities.romantic_relationship.start_date ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:celebrities.romantic_relationship.end_date ?sk2} || \nEXISTS {?y ns:celebrities.romantic_relationship.end_date ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "claire danes",
        "TopicEntityName": "Claire Danes",
        "TopicEntityMid": "m.01gq0b",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7k44",
            "EntityName": "Dated",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.relationship_type",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.start_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "celebrities.romantic_relationship.end_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tc5y",
            "EntityName": "Hugh Dancy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01gq0b": "Claire Danes"
    },
    "qid_topic_entity": {
      "Q867813": "Claire Danes"
    },
    "index": 483
  },
  {
    "QuestionId": "WebQTest-1631",
    "RawQuestion": "who is the texas state senator?",
    "ProcessedQuestion": "who is the texas state senator",
    "Parses": [
      {
        "ParseId": "WebQTest-1631.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07b_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07b_l ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "PotentialTopicEntityMention": "texas",
        "TopicEntityName": "Texas",
        "TopicEntityMid": "m.07b_l",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02_7l8y",
            "EntityName": "United States Senator",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016l53",
            "EntityName": "Phil Gramm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rpmr",
            "EntityName": "Lloyd Bentsen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xcqs",
            "EntityName": "John Cornyn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02050j",
            "EntityName": "Kay Bailey Hutchison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021nlp",
            "EntityName": "Ralph Yarborough"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028356y",
            "EntityName": "John Hemphill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dcc4",
            "EntityName": "John Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pv3w",
            "EntityName": "James Pinckney Henderson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wv_6",
            "EntityName": "W. Lee O'Daniel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037_c0",
            "EntityName": "Thomas Jefferson Rusk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037f5r",
            "EntityName": "Charles Allen Culberson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r6tl",
            "EntityName": "John Henninger Reagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w4ln",
            "EntityName": "Roger Q. Mills"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03x_db",
            "EntityName": "Richard Coke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yvp9",
            "EntityName": "Price Daniel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0452c9",
            "EntityName": "Bob Krueger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04l_mk",
            "EntityName": "Louis Wigfall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053fln",
            "EntityName": "William A. Blakley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053zcg",
            "EntityName": "Joseph Weldon Bailey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j9dp",
            "EntityName": "Andrew Jackson Houston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yjdd",
            "EntityName": "Horace Chilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yjq_",
            "EntityName": "Morris Sheppard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ym7b",
            "EntityName": "Matthias Ward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07j6ty",
            "EntityName": "Ted Cruz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07jjx6",
            "EntityName": "James W. Flanagan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k6x2",
            "EntityName": "Samuel B. Maxey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07p913",
            "EntityName": "Morgan C. Hamilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084vl0",
            "EntityName": "Earle Bradford Mayfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.089hd7",
            "EntityName": "Tom Connally"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fbq9",
            "EntityName": "Rienzi Melville Johnston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f7fy",
            "EntityName": "Lyndon B. Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbjz",
            "EntityName": "Sam Houston"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07b_l": "Texas"
    },
    "qid_topic_entity": {
      "Q1439": "Texas"
    },
    "index": 484
  },
  {
    "QuestionId": "WebQTest-1885",
    "RawQuestion": "what does god shiva represent?",
    "ProcessedQuestion": "what does god shiva represent",
    "Parses": [
      {
        "ParseId": "WebQTest-1885.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.074l5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.074l5 ns:religion.deity.deity_of ?x .\n}\n",
        "PotentialTopicEntityMention": "shiva",
        "TopicEntityName": "Shiva",
        "TopicEntityMid": "m.074l5",
        "InferentialChain": [
          "religion.deity.deity_of"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03j6c",
            "EntityName": "Hinduism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.074l5": "Shiva"
    },
    "qid_topic_entity": {
      "Q11378": "Shiva"
    },
    "index": 485
  },
  {
    "QuestionId": "WebQTest-910",
    "RawQuestion": "where did alexander graham bell die?",
    "ProcessedQuestion": "where did alexander graham bell die",
    "Parses": [
      {
        "ParseId": "WebQTest-910.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k70 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "alexander graham bell",
        "TopicEntityName": "Alexander Graham Bell",
        "TopicEntityMid": "m.0k70",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08npx8",
            "EntityName": "Beinn Bhreagh, Nova Scotia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0k70": "Alexander Graham Bell"
    },
    "qid_topic_entity": {
      "Q34286": "Alexander Graham Bell"
    },
    "index": 486
  },
  {
    "QuestionId": "WebQTest-406",
    "RawQuestion": "who is the coach of the sf giants?",
    "ProcessedQuestion": "who is the coach of the sf giants",
    "Parses": [
      {
        "ParseId": "WebQTest-406.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:baseball.baseball_team.current_coaches ?y .\n?y ns:baseball.current_coaching_tenure.baseball_coach ?x .\n}\n",
        "PotentialTopicEntityMention": "sf giants",
        "TopicEntityName": "San Francisco Giants",
        "TopicEntityMid": "m.0713r",
        "InferentialChain": [
          "baseball.baseball_team.current_coaches",
          "baseball.current_coaching_tenure.baseball_coach"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02680w9",
            "EntityName": "Bill Hayes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02plhsr",
            "EntityName": "Tim Flannery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yf3x",
            "EntityName": "Dave Righetti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.057jcc",
            "EntityName": "Carney Lansford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079w94",
            "EntityName": "Roberto Kelly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w9kn",
            "EntityName": "Ron Wotus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085wxv",
            "EntityName": "Mark Gardner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0713r": "San Francisco Giants"
    },
    "qid_topic_entity": {
      "Q308966": "San Francisco Giants"
    },
    "index": 487
  },
  {
    "QuestionId": "WebQTest-1364",
    "RawQuestion": "what do they speak in scotland?",
    "ProcessedQuestion": "what do they speak in scotland",
    "Parses": [
      {
        "ParseId": "WebQTest-1364.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06q1r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06q1r ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "scotland",
        "TopicEntityName": "Scotland",
        "TopicEntityMid": "m.06q1r",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06q1r": "Scotland"
    },
    "qid_topic_entity": {
      "Q22": "Scotland"
    },
    "index": 488
  },
  {
    "QuestionId": "WebQTest-1844",
    "RawQuestion": "who plays robin hood in prince of thieves?",
    "ProcessedQuestion": "who plays robin hood in prince of thieves",
    "Parses": [
      {
        "ParseId": "WebQTest-1844.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01msrb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01msrb ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.06j7x .\n}\n",
        "PotentialTopicEntityMention": "prince of thieves",
        "TopicEntityName": "Robin Hood: Prince of Thieves",
        "TopicEntityMid": "m.01msrb",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06j7x",
            "EntityName": "Robin Hood",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0127m7",
            "EntityName": "Kevin Costner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01msrb": "Robin Hood: Prince of Thieves"
    },
    "qid_topic_entity": {
      "Q486822": "Robin Hood: Prince of Thieves"
    },
    "index": 489
  },
  {
    "QuestionId": "WebQTest-1664",
    "RawQuestion": "what form of currency does germany use?",
    "ProcessedQuestion": "what form of currency does germany use",
    "Parses": [
      {
        "ParseId": "WebQTest-1664.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 490
  },
  {
    "QuestionId": "WebQTest-1593",
    "RawQuestion": "where is the thames river source?",
    "ProcessedQuestion": "where is the thames river source",
    "Parses": [
      {
        "ParseId": "WebQTest-1593.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d2kt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d2kt ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "thames river",
        "TopicEntityName": "River Thames",
        "TopicEntityMid": "m.0d2kt",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pj_tp",
            "EntityName": "Thames Head"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d2kt": "River Thames"
    },
    "qid_topic_entity": {
      "Q19686": "River Thames"
    },
    "index": 491
  },
  {
    "QuestionId": "WebQTest-340",
    "RawQuestion": "who is richard pryor son?",
    "ProcessedQuestion": "who is richard pryor son",
    "Parses": [
      {
        "ParseId": "WebQTest-340.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hmk9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hmk9 ns:people.person.children ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "richard pryor",
        "TopicEntityName": "Richard Pryor",
        "TopicEntityMid": "m.01hmk9",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z2sc1",
            "EntityName": "Franklin Pryor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z2scn",
            "EntityName": "Richard Pryor Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z2scv",
            "EntityName": "Steven Pryor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01hmk9": "Richard Pryor"
    },
    "qid_topic_entity": {
      "Q294912": "Richard Pryor"
    },
    "index": 492
  },
  {
    "QuestionId": "WebQTest-543",
    "RawQuestion": "what college did martin luther king jr go to?",
    "ProcessedQuestion": "what college did martin luther king jr go to",
    "Parses": [
      {
        "ParseId": "WebQTest-543.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "martin luther king jr",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_r9k",
            "EntityName": "Morehouse College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yr21",
            "EntityName": "Crozer Theological Seminary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gl5_",
            "EntityName": "Boston University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 493
  },
  {
    "QuestionId": "WebQTest-831",
    "RawQuestion": "what type of religion does argentina have?",
    "ProcessedQuestion": "what type of religion does argentina have",
    "Parses": [
      {
        "ParseId": "WebQTest-831.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_gx",
            "EntityName": "Judaism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sfs",
            "EntityName": "Protestantism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 494
  },
  {
    "QuestionId": "WebQTest-281",
    "RawQuestion": "what type of sports do japanese play?",
    "ProcessedQuestion": "what type of sports do japanese play",
    "Parses": [
      {
        "ParseId": "WebQTest-281.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "japanese",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppd68",
            "EntityName": "Japan women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkd3c",
            "EntityName": "Japan men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xh50",
            "EntityName": "Japan national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p71j1",
            "EntityName": "Japan women's national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gqcv",
            "EntityName": "Japan national baseball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f9d97",
            "EntityName": "Japan national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qfps15",
            "EntityName": "Bridgestone-Anchor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t_dl1j",
            "EntityName": "Burning"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 495
  },
  {
    "QuestionId": "WebQTest-1225",
    "RawQuestion": "what kourtney kardashian boyfriends name?",
    "ProcessedQuestion": "what kourtney kardashian boyfriends name",
    "Parses": [
      {
        "ParseId": "WebQTest-1225.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043ttm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043ttm7 ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "kourtney kardashian",
        "TopicEntityName": "Kourtney Kardashian",
        "TopicEntityMid": "m.043ttm7",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crfmmg",
            "EntityName": "Scott Disick"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.043ttm7": "Kourtney Kardashian"
    },
    "qid_topic_entity": {
      "Q575689": "Kourtney Kardashian"
    },
    "index": 496
  },
  {
    "QuestionId": "WebQTest-1836",
    "RawQuestion": "where laura ingalls wilder lived?",
    "ProcessedQuestion": "where laura ingalls wilder lived",
    "Parses": [
      {
        "ParseId": "WebQTest-1836.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bt87)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bt87 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "laura ingalls wilder",
        "TopicEntityName": "Laura Ingalls Wilder",
        "TopicEntityMid": "m.01bt87",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_r0n",
            "EntityName": "De Smet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mmj7",
            "EntityName": "Pepin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0488g",
            "EntityName": "Kansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dz6k_",
            "EntityName": "Burr Oak"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wg6f",
            "EntityName": "Walnut Grove"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0x14p",
            "EntityName": "Mansfield"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bt87": "Laura Ingalls Wilder"
    },
    "qid_topic_entity": {
      "Q237514": "Laura Ingalls Wilder"
    },
    "index": 497
  },
  {
    "QuestionId": "WebQTest-834",
    "RawQuestion": "where did the battle of waterloo occur?",
    "ProcessedQuestion": "where did the battle of waterloo occur",
    "Parses": [
      {
        "ParseId": "WebQTest-834.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01dcm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01dcm ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "waterloo",
        "TopicEntityName": "Battle of Waterloo",
        "TopicEntityMid": "m.01dcm",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017qwy",
            "EntityName": "Waterloo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01dcm": "Battle of Waterloo"
    },
    "qid_topic_entity": {
      "Q48314": "Battle of Waterloo"
    },
    "index": 498
  },
  {
    "QuestionId": "WebQTest-1741",
    "RawQuestion": "where is the headquarters of bank of america?",
    "ProcessedQuestion": "where is the headquarters of bank of america",
    "Parses": [
      {
        "ParseId": "WebQTest-1741.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yx7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yx7f ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "bank of america",
        "TopicEntityName": "Bank of America Corporation",
        "TopicEntityMid": "m.01yx7f",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsb8",
            "EntityName": "Charlotte"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01yx7f": "Bank of America Corporation"
    },
    "qid_topic_entity": {
      "Q487907": "Bank of America Corporation"
    },
    "index": 499
  },
  {
    "QuestionId": "WebQTest-1628",
    "RawQuestion": "what type government does mexico have?",
    "ProcessedQuestion": "what type government does mexico have",
    "Parses": [
      {
        "ParseId": "WebQTest-1628.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "mexico",
        "TopicEntityName": "Mexico",
        "TopicEntityMid": "m.0b90_r",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0b90_r": "Mexico"
    },
    "qid_topic_entity": {
      "Q96": "Mexico"
    },
    "index": 500
  },
  {
    "QuestionId": "WebQTest-1358",
    "RawQuestion": "what is los angeles california time zone?",
    "ProcessedQuestion": "what is los angeles california time zone",
    "Parses": [
      {
        "ParseId": "WebQTest-1358.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030qb3t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030qb3t ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "los angeles california",
        "TopicEntityName": "Los Angeles",
        "TopicEntityMid": "m.030qb3t",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcqs",
            "EntityName": "Pacific Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030qb3t": "Los Angeles"
    },
    "qid_topic_entity": {
      "Q65": "Los Angeles"
    },
    "index": 501
  },
  {
    "QuestionId": "WebQTest-1565",
    "RawQuestion": "where does houston dynamo play?",
    "ProcessedQuestion": "where does houston dynamo play",
    "Parses": [
      {
        "ParseId": "WebQTest-1565.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09cl0w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09cl0w ns:sports.sports_team.location ?x .\n}\n",
        "PotentialTopicEntityMention": "houston dynamo",
        "TopicEntityName": "Houston Dynamo",
        "TopicEntityMid": "m.09cl0w",
        "InferentialChain": [
          "sports.sports_team.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03l2n",
            "EntityName": "Houston"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09cl0w": "Houston Dynamo"
    },
    "qid_topic_entity": {
      "Q328313": "Houston Dynamo"
    },
    "index": 502
  },
  {
    "QuestionId": "WebQTest-664",
    "RawQuestion": "what was firefox programmed in?",
    "ProcessedQuestion": "what was firefox programmed in",
    "Parses": [
      {
        "ParseId": "WebQTest-664.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01dyhm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01dyhm ns:computer.software.languages_used ?x .\n}\n",
        "PotentialTopicEntityMention": "firefox",
        "TopicEntityName": "Firefox",
        "TopicEntityMid": "m.01dyhm",
        "InferentialChain": [
          "computer.software.languages_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011y70",
            "EntityName": "XUL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015tjh",
            "EntityName": "Cascading Style Sheets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p97",
            "EntityName": "JavaScript"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cjm6",
            "EntityName": "XBL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jgqg",
            "EntityName": "C++"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01dyhm": "Firefox"
    },
    "qid_topic_entity": {
      "Q698": "Firefox"
    },
    "index": 503
  },
  {
    "QuestionId": "WebQTest-1343",
    "RawQuestion": "what degree did martin luther king earn?",
    "ProcessedQuestion": "what degree did martin luther king earn",
    "Parses": [
      {
        "ParseId": "WebQTest-1343.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.education ?y .\n?y ns:education.education.degree ?x .\n}\n",
        "PotentialTopicEntityMention": "martin luther king",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.education",
          "education.education.degree"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014mlp",
            "EntityName": "Bachelor of Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zx3q1",
            "EntityName": "PhD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vjnk",
            "EntityName": "Bachelor of Divinity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079h0",
            "EntityName": "Secondary education"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 504
  },
  {
    "QuestionId": "WebQTest-187",
    "RawQuestion": "what did stephen hawking study?",
    "ProcessedQuestion": "what did stephen hawking study",
    "Parses": [
      {
        "ParseId": "WebQTest-187.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tdnyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tdnyh ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
        "PotentialTopicEntityMention": "stephen hawking",
        "TopicEntityName": "Stephen Hawking",
        "TopicEntityMid": "m.01tdnyh",
        "InferentialChain": [
          "people.person.education",
          "education.education.major_field_of_study"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qjt",
            "EntityName": "Physics"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01tdnyh": "Stephen Hawking"
    },
    "qid_topic_entity": {
      "Q17714": "Stephen Hawking"
    },
    "index": 505
  },
  {
    "QuestionId": "WebQTest-1529",
    "RawQuestion": "where did emperor constantine die?",
    "ProcessedQuestion": "where did emperor constantine die",
    "Parses": [
      {
        "ParseId": "WebQTest-1529.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021tl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021tl ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "constantine",
        "TopicEntityName": "Constantine the Great",
        "TopicEntityMid": "m.021tl",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01678j",
            "EntityName": "Nicomedia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.021tl": "Constantine the Great"
    },
    "qid_topic_entity": {
      "Q8413": "Constantine the Great"
    },
    "index": 506
  },
  {
    "QuestionId": "WebQTest-159",
    "RawQuestion": "what time in hilo hawaii?",
    "ProcessedQuestion": "what time in hilo hawaii",
    "Parses": [
      {
        "ParseId": "WebQTest-159.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r_ch)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r_ch ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "hilo hawaii",
        "TopicEntityName": "Hilo",
        "TopicEntityMid": "m.0r_ch",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lctm",
            "EntityName": "Hawaii-Aleutian Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0r_ch": "Hilo"
    },
    "qid_topic_entity": {
      "Q216258": "Hilo"
    },
    "index": 507
  },
  {
    "QuestionId": "WebQTest-38",
    "RawQuestion": "who did george w. bush run against for the second term?",
    "ProcessedQuestion": "who did george w. bush run against for the second term",
    "Parses": [
      {
        "ParseId": "WebQTest-38.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Entity Linking plus longer chain. Original comment: F need election data"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.04qwhs ns:government.election.campaigns ?y .\n\t?y ns:government.election_campaign.candidate ?x .\nFILTER (?x != ns:m.09b6zr)\n}",
        "PotentialTopicEntityMention": "george w . bush",
        "TopicEntityName": "George W. Bush",
        "TopicEntityMid": "m.09b6zr",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033tf9",
            "EntityName": "Michael Peroutka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vyyd",
            "EntityName": "Gene Amondson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dnh",
            "EntityName": "Ralph Nader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3qd0",
            "EntityName": "John Kerry"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09b6zr": "George W. Bush"
    },
    "qid_topic_entity": {
      "Q207": "George W. Bush"
    },
    "index": 508
  },
  {
    "QuestionId": "WebQTest-1215",
    "RawQuestion": "who was stephen r covey?",
    "ProcessedQuestion": "who was stephen r covey",
    "Parses": [
      {
        "ParseId": "WebQTest-1215.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jtkg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jtkg ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "stephen r covey",
        "TopicEntityName": "Stephen Covey",
        "TopicEntityMid": "m.01jtkg",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fly",
            "EntityName": "Professor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02n9jv",
            "EntityName": "Consultant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047vnfs",
            "EntityName": "Manager"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kb8h",
            "EntityName": "Motivational speaker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01jtkg": "Stephen Covey"
    },
    "qid_topic_entity": {
      "Q313482": "Stephen Covey"
    },
    "index": 509
  },
  {
    "QuestionId": "WebQTest-312",
    "RawQuestion": "who plays captain kirk in star trek?",
    "ProcessedQuestion": "who plays captain kirk in star trek",
    "Parses": [
      {
        "ParseId": "WebQTest-312.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_6j3",
            "EntityName": "Vic Mignogna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lx2l",
            "EntityName": "Jim Carrey"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0crtw": "James T. Kirk"
    },
    "qid_topic_entity": {
      "Q16311": "James T. Kirk"
    },
    "index": 510
  },
  {
    "QuestionId": "WebQTest-1919",
    "RawQuestion": "who plays king julian madagascar?",
    "ProcessedQuestion": "who plays king julian madagascar",
    "Parses": [
      {
        "ParseId": "WebQTest-1919.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sbv9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sbv9 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0cj5p22 .\n}\n",
        "PotentialTopicEntityMention": "madagascar",
        "TopicEntityName": "Madagascar",
        "TopicEntityMid": "m.01sbv9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0cj5p22",
            "EntityName": "Julien",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9c0",
            "EntityName": "Sacha Baron Cohen"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01sbv9": "Madagascar"
    },
    "qid_topic_entity": {
      "Q174555": "Madagascar"
    },
    "index": 511
  },
  {
    "QuestionId": "WebQTest-1171",
    "RawQuestion": "who did darth vaders voice?",
    "ProcessedQuestion": "who did darth vaders voice",
    "Parses": [
      {
        "ParseId": "WebQTest-1171.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "darth vaders",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0113l6zy",
            "EntityName": "Dr. Smoov"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wm0z",
            "EntityName": "Zac Efron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0945y8",
            "EntityName": "Abraham Benrubi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b2l8f",
            "EntityName": "Matt Lanter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 512
  },
  {
    "QuestionId": "WebQTest-1888",
    "RawQuestion": "what year did the milwaukee brewers go to the world series?",
    "ProcessedQuestion": "what year did the milwaukee brewers go to the world series",
    "Parses": [
      {
        "ParseId": "WebQTest-1888.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F union"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ?x ns:sports.sports_championship_event.championship ns:m.0fjp3 . # World Series\n  {\n    ?x ns:sports.sports_championship_event.runner_up ns:m.051vz . # Milwaukee Brewers\n  }\n  UNION\n  {\n    ?x ns:sports.sports_championship_event.runner_up ns:m.051vz . # Milwaukee Brewers\n  }\n}",
        "PotentialTopicEntityMention": "world series",
        "TopicEntityName": "World Series",
        "TopicEntityMid": "m.0fjp3",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j78h",
            "EntityName": "1982 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fjp3": "World Series"
    },
    "qid_topic_entity": {
      "Q265538": "World Series"
    },
    "index": 513
  },
  {
    "QuestionId": "WebQTest-1228",
    "RawQuestion": "where did the greek alphabet come from?",
    "ProcessedQuestion": "where did the greek alphabet come from",
    "Parses": [
      {
        "ParseId": "WebQTest-1228.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0358gm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0358gm ns:language.language_writing_system.parent_writing_systems ?x .\n}\n",
        "PotentialTopicEntityMention": "the greek alphabet",
        "TopicEntityName": "Greek alphabet",
        "TopicEntityMid": "m.0358gm",
        "InferentialChain": [
          "language.language_writing_system.parent_writing_systems"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j59b",
            "EntityName": "Phoenician alphabet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0358gm": "Greek alphabet"
    },
    "qid_topic_entity": {
      "Q8216": "Greek alphabet"
    },
    "index": 514
  },
  {
    "QuestionId": "WebQTest-1456",
    "RawQuestion": "what college did john stockton go to?",
    "ProcessedQuestion": "what college did john stockton go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1456.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r6lw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r6lw ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "john stockton",
        "TopicEntityName": "John Stockton",
        "TopicEntityMid": "m.01r6lw",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b1mj",
            "EntityName": "Gonzaga University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r6lw": "John Stockton"
    },
    "qid_topic_entity": {
      "Q213346": "John Stockton"
    },
    "index": 515
  },
  {
    "QuestionId": "WebQTest-1794",
    "RawQuestion": "where is mitt romney's family from?",
    "ProcessedQuestion": "where is mitt romney 's family from",
    "Parses": [
      {
        "ParseId": "WebQTest-1794.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "mitt romney",
        "TopicEntityName": "Mitt Romney",
        "TopicEntityMid": "m.0271_s",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dtg",
            "EntityName": "Detroit"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0271_s": "Mitt Romney"
    },
    "qid_topic_entity": {
      "Q4496": "Mitt Romney"
    },
    "index": 516
  },
  {
    "QuestionId": "WebQTest-1120",
    "RawQuestion": "what was the currency used in france before the euro?",
    "ProcessedQuestion": "what was the currency used in france before the euro",
    "Parses": [
      {
        "ParseId": "WebQTest-1120.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_formerly_used ?x .\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "location.country.currency_formerly_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m4tk",
            "EntityName": "Assignat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0298sr",
            "EntityName": "French franc"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 517
  },
  {
    "QuestionId": "WebQTest-1574",
    "RawQuestion": "what is my timezone in pennsylvania?",
    "ProcessedQuestion": "what is my timezone in pennsylvania",
    "Parses": [
      {
        "ParseId": "WebQTest-1574.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "pennsylvania",
        "TopicEntityName": "Pennsylvania",
        "TopicEntityMid": "m.05tbn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_37z",
            "EntityName": "UTC\u221205:00"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05tbn": "Pennsylvania"
    },
    "qid_topic_entity": {
      "Q1400": "Pennsylvania"
    },
    "index": 518
  },
  {
    "QuestionId": "WebQTest-1106",
    "RawQuestion": "what team does david beckham play for in 2012?",
    "ProcessedQuestion": "what team does david beckham play for in 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1106.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02d9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02d9k ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "david beckham",
        "TopicEntityName": "David Beckham",
        "TopicEntityMid": "m.02d9k",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01k2yr",
            "EntityName": "LA Galaxy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02d9k": "David Beckham"
    },
    "qid_topic_entity": {
      "Q10520": "David Beckham"
    },
    "index": 519
  },
  {
    "QuestionId": "WebQTest-1031",
    "RawQuestion": "what has angelina jolie accomplished?",
    "ProcessedQuestion": "what has angelina jolie accomplished",
    "Parses": [
      {
        "ParseId": "WebQTest-1031.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "angelina jolie",
        "TopicEntityName": "Angelina Jolie",
        "TopicEntityMid": "m.0f4vbz",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d_h8",
            "EntityName": "Film Producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jknp",
            "EntityName": "Film director"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d1pc",
            "EntityName": "Model"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxtg",
            "EntityName": "Screenwriter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f4vbz": "Angelina Jolie"
    },
    "qid_topic_entity": {
      "Q13909": "Angelina Jolie"
    },
    "index": 520
  },
  {
    "QuestionId": "WebQTest-545",
    "RawQuestion": "what kind of cancer did farrah fawcett die of?",
    "ProcessedQuestion": "what kind of cancer did farrah fawcett die of",
    "Parses": [
      {
        "ParseId": "WebQTest-545.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j851)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j851 ns:people.deceased_person.cause_of_death ?x .\n?x ns:medicine.disease.parent_disease ns:m.0qcr0 .\n}\n",
        "PotentialTopicEntityMention": "farrah fawcett",
        "TopicEntityName": "Farrah Fawcett",
        "TopicEntityMid": "m.01j851",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0qcr0",
            "EntityName": "Cancer",
            "SourceNodeIndex": 0,
            "NodePredicate": "medicine.disease.parent_disease",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vxm4",
            "EntityName": "Anal cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01j851": "Farrah Fawcett"
    },
    "qid_topic_entity": {
      "Q102341": "Farrah Fawcett"
    },
    "index": 521
  },
  {
    "QuestionId": "WebQTest-201",
    "RawQuestion": "who did gerald ford select as his vice president when he became president?",
    "ProcessedQuestion": "who did gerald ford select as his vice president when he became president",
    "Parses": [
      {
        "ParseId": "WebQTest-201.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_md_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_md_ ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "gerald ford",
        "TopicEntityName": "Gerald Ford",
        "TopicEntityMid": "m.0c_md_",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jd_",
            "EntityName": "Nelson Rockefeller"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c_md_": "Gerald Ford"
    },
    "qid_topic_entity": {
      "Q9582": "Gerald Ford"
    },
    "index": 522
  },
  {
    "QuestionId": "WebQTest-1587",
    "RawQuestion": "who does chris hemsworth have a baby with?",
    "ProcessedQuestion": "who does chris hemsworth have a baby with",
    "Parses": [
      {
        "ParseId": "WebQTest-1587.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F Spouse whose children count > 0"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.04jnqj ns:people.person.children ?y .\n\t?y ns:people.person.parents ?x .\n  FILTER (?x != ns:m.04jnqj) .\n}",
        "PotentialTopicEntityMention": "chris hemsworth",
        "TopicEntityName": "Chris Hemsworth",
        "TopicEntityMid": "m.04jnqj",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fccsp",
            "EntityName": "Elsa Pataky"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04jnqj": "Chris Hemsworth"
    },
    "qid_topic_entity": {
      "Q54314": "Chris Hemsworth"
    },
    "index": 523
  },
  {
    "QuestionId": "WebQTest-381",
    "RawQuestion": "what shows are shot in new york?",
    "ProcessedQuestion": "what shows are shot in new york",
    "Parses": [
      {
        "ParseId": "WebQTest-381.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:tv.tv_location.tv_shows_filmed_here ?x .\n}\n",
        "PotentialTopicEntityMention": "new york",
        "TopicEntityName": "New York City",
        "TopicEntityMid": "m.02_286",
        "InferentialChain": [
          "tv.tv_location.tv_shows_filmed_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rkkn1",
            "EntityName": "Flight of the Conchords"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07chq93",
            "EntityName": "Both Sides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09fc83",
            "EntityName": "The Stand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n3k5nh",
            "EntityName": "Trial Heat"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_286": "New York City"
    },
    "qid_topic_entity": {
      "Q60": "New York City"
    },
    "index": 524
  },
  {
    "QuestionId": "WebQTest-670",
    "RawQuestion": "what kind of language does egypt speak?",
    "ProcessedQuestion": "what kind of language does egypt speak",
    "Parses": [
      {
        "ParseId": "WebQTest-670.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025rvv7",
            "EntityName": "Modern Standard Arabic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 525
  },
  {
    "QuestionId": "WebQTest-1351",
    "RawQuestion": "what is the name of the currency used in peru?",
    "ProcessedQuestion": "what is the name of the currency used in peru",
    "Parses": [
      {
        "ParseId": "WebQTest-1351.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016wzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016wzw ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "peru",
        "TopicEntityName": "Peru",
        "TopicEntityMid": "m.016wzw",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b423v",
            "EntityName": "Peruvian nuevo sol"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016wzw": "Peru"
    },
    "qid_topic_entity": {
      "Q419": "Peru"
    },
    "index": 526
  },
  {
    "QuestionId": "WebQTest-2030",
    "RawQuestion": "where is roswell area 51?",
    "ProcessedQuestion": "where is roswell area 51",
    "Parses": [
      {
        "ParseId": "WebQTest-2030.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yjq ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "area 51",
        "TopicEntityName": "Area 51",
        "TopicEntityMid": "m.0yjq",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059_c",
            "EntityName": "Nevada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n6ps",
            "EntityName": "Lincoln County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0yjq": "Area 51"
    },
    "qid_topic_entity": {
      "Q177397": "Area 51"
    },
    "index": 527
  },
  {
    "QuestionId": "WebQTest-1892",
    "RawQuestion": "what year did the la kings win the cup?",
    "ProcessedQuestion": "what year did the la kings win the cup",
    "Parses": [
      {
        "ParseId": "WebQTest-1892.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jnq8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jnq8 ns:sports.sports_team.championships ?x .\n}\n",
        "PotentialTopicEntityMention": "la kings",
        "TopicEntityName": "Los Angeles Kings",
        "TopicEntityMid": "m.0jnq8",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010fdzhp",
            "EntityName": "2014 Stanley Cup Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt52pz",
            "EntityName": "2012 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jnq8": "Los Angeles Kings"
    },
    "qid_topic_entity": {
      "Q203008": "Los Angeles Kings"
    },
    "index": 528
  },
  {
    "QuestionId": "WebQTest-602",
    "RawQuestion": "what part of the country is new england?",
    "ProcessedQuestion": "what part of the country is new england",
    "Parses": [
      {
        "ParseId": "WebQTest-602.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029jpy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029jpy ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n",
        "PotentialTopicEntityMention": "new england",
        "TopicEntityName": "New England",
        "TopicEntityMid": "m.029jpy",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nt",
            "EntityName": "Region",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027rjr",
            "EntityName": "Northeastern United States"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.029jpy": "New England"
    },
    "qid_topic_entity": {
      "Q18389": "New England"
    },
    "index": 529
  },
  {
    "QuestionId": "WebQTest-802",
    "RawQuestion": "what musical instruments does justin bieber play?",
    "ProcessedQuestion": "what musical instruments does justin bieber play",
    "Parses": [
      {
        "ParseId": "WebQTest-802.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? music.group_member.instruments_played is better"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:music.artist.track_contributions ?y .\n?y ns:music.track_contribution.role ?x .\n}\n",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": [
          "music.artist.track_contributions",
          "music.track_contribution.role"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0290ngj",
            "EntityName": "Vocals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 530
  },
  {
    "QuestionId": "WebQTest-49",
    "RawQuestion": "what did the islamic people believe in?",
    "ProcessedQuestion": "what did the islamic people believe in",
    "Parses": [
      {
        "ParseId": "WebQTest-49.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.beliefs ?x .\n}\n",
        "PotentialTopicEntityMention": "islamic",
        "TopicEntityName": "Islam",
        "TopicEntityMid": "m.0flw86",
        "InferentialChain": [
          "religion.religion.beliefs"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019vqj",
            "EntityName": "Mahdi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bbmp",
            "EntityName": "Tawhid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024b22",
            "EntityName": "Prophets in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025w817",
            "EntityName": "Predestination in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wvcg4",
            "EntityName": "Entering Heaven alive"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xy3",
            "EntityName": "Monotheism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0698fs",
            "EntityName": "Islamic view of angels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rvp0",
            "EntityName": "Qiyamah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074hw",
            "EntityName": "Sharia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bfrc",
            "EntityName": "Masih ad-Dajjal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07r6vw",
            "EntityName": "Islamic holy books"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09kb_2",
            "EntityName": "God in Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hr6vbp",
            "EntityName": "\u1e6c\u016bb\u0101"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0flw86": "Islam"
    },
    "qid_topic_entity": {
      "Q432": "Islam"
    },
    "index": 531
  },
  {
    "QuestionId": "WebQTest-872",
    "RawQuestion": "where bin laden got killed?",
    "ProcessedQuestion": "where bin laden got killed",
    "Parses": [
      {
        "ParseId": "WebQTest-872.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bin laden",
        "TopicEntityName": "Osama bin Laden",
        "TopicEntityMid": "m.05mg9",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hs1",
            "EntityName": "Abbottabad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mg9": "Osama bin Laden"
    },
    "qid_topic_entity": {
      "Q1317": "Osama bin Laden"
    },
    "index": 532
  },
  {
    "QuestionId": "WebQTest-1624",
    "RawQuestion": "what language tunisia?",
    "ProcessedQuestion": "what language tunisia",
    "Parses": [
      {
        "ParseId": "WebQTest-1624.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fj_ ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "tunisia",
        "TopicEntityName": "Tunisia",
        "TopicEntityMid": "m.07fj_",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzc",
            "EntityName": "Arabic Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1624.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fj_ ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "tunisia",
        "TopicEntityName": "Tunisia",
        "TopicEntityMid": "m.07fj_",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzc",
            "EntityName": "Arabic Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07fj_": "Tunisia"
    },
    "qid_topic_entity": {
      "Q948": "Tunisia"
    },
    "index": 533
  },
  {
    "QuestionId": "WebQTest-1409",
    "RawQuestion": "what are the major languages spoken in the united kingdom?",
    "ProcessedQuestion": "what are the major languages spoken in the united kingdom",
    "Parses": [
      {
        "ParseId": "WebQTest-1409.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "united kingdom",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 534
  },
  {
    "QuestionId": "WebQTest-1729",
    "RawQuestion": "what was the name of henry viii first wife?",
    "ProcessedQuestion": "what was the name of henry viii first wife",
    "Parses": [
      {
        "ParseId": "WebQTest-1729.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p77 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "henry viii",
        "TopicEntityName": "Henry VIII of England",
        "TopicEntityMid": "m.03p77",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "people.marriage.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_tz",
            "EntityName": "Catherine of Aragon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03p77": "Henry VIII of England"
    },
    "qid_topic_entity": {
      "Q38370": "Henry VIII of England"
    },
    "index": 535
  },
  {
    "QuestionId": "WebQTest-1775",
    "RawQuestion": "how many languages do they speak in spain?",
    "ProcessedQuestion": "how many languages do they speak in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-1775.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017k6",
            "EntityName": "Basque Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m69",
            "EntityName": "Catalan language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q5d9",
            "EntityName": "Galician Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l0r",
            "EntityName": "Occitan language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 536
  },
  {
    "QuestionId": "WebQTest-985",
    "RawQuestion": "who was queen victoria's husband?",
    "ProcessedQuestion": "who was queen victoria 's husband",
    "Parses": [
      {
        "ParseId": "WebQTest-985.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cw10)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cw10 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "queen victoria",
        "TopicEntityName": "Queen Victoria",
        "TopicEntityMid": "m.0cw10",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k5z2",
            "EntityName": "Albert, Prince Consort"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cw10": "Queen Victoria"
    },
    "qid_topic_entity": {
      "Q15675512": "Queen Victoria"
    },
    "index": 537
  },
  {
    "QuestionId": "WebQTest-1329",
    "RawQuestion": "who played bilbo in the fellowship of the ring?",
    "ProcessedQuestion": "who played bilbo in the fellowship of the ring",
    "Parses": [
      {
        "ParseId": "WebQTest-1329.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017gl1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017gl1 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0g6z1 .\n}\n",
        "PotentialTopicEntityMention": "the fellowship of the ring",
        "TopicEntityName": "The Lord of the Rings: The Fellowship of the Ring",
        "TopicEntityMid": "m.017gl1",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g6z1",
            "EntityName": "Old Bilbo",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zp5",
            "EntityName": "Ian Holm"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1329.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6z1 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
        "PotentialTopicEntityMention": "bilbo",
        "TopicEntityName": "Old Bilbo",
        "TopicEntityMid": "m.0g6z1",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.017gl1",
            "EntityName": "The Lord of the Rings: The Fellowship of the Ring",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zp5",
            "EntityName": "Ian Holm"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.017gl1": "The Lord of the Rings: The Fellowship of the Ring",
      "m.0g6z1": "Old Bilbo"
    },
    "qid_topic_entity": {
      "Q127367": "The Lord of the Rings: The Fellowship of the Ring",
      "Q185737": "Old Bilbo"
    },
    "index": 538
  },
  {
    "QuestionId": "WebQTest-862",
    "RawQuestion": "where did louis sachar grow up?",
    "ProcessedQuestion": "where did louis sachar grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-862.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq8d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq8d ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "louis sachar",
        "TopicEntityName": "Louis Sachar",
        "TopicEntityMid": "m.01bq8d",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y277",
            "EntityName": "East Meadow"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bq8d": "Louis Sachar"
    },
    "qid_topic_entity": {
      "Q553137": "Louis Sachar"
    },
    "index": 539
  },
  {
    "QuestionId": "WebQTest-1191",
    "RawQuestion": "what language do people speak in the bahamas?",
    "ProcessedQuestion": "what language do people speak in the bahamas",
    "Parses": [
      {
        "ParseId": "WebQTest-1191.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "bahamas",
        "TopicEntityName": "Bahamas",
        "TopicEntityMid": "m.0160w",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026qjbs",
            "EntityName": "Bahamas Creole English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1191.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "bahamas",
        "TopicEntityName": "Bahamas",
        "TopicEntityMid": "m.0160w",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0160w": "Bahamas"
    },
    "qid_topic_entity": {
      "Q778": "Bahamas"
    },
    "index": 540
  },
  {
    "QuestionId": "WebQTest-26",
    "RawQuestion": "what to do today in atlanta with kids?",
    "ProcessedQuestion": "what to do today in atlanta with kids",
    "Parses": [
      {
        "ParseId": "WebQTest-26.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013yq ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "atlanta",
        "TopicEntityName": "Atlanta",
        "TopicEntityMid": "m.013yq",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0130ft",
            "EntityName": "Atlanta Symphony Orchestra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020fp1",
            "EntityName": "Turner Field"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r6hr",
            "EntityName": "Cobb Energy Performing Arts Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027t71h",
            "EntityName": "Four Seasons Hotel Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029fnx",
            "EntityName": "Underground Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jnft",
            "EntityName": "Atlanta Marriott Marquis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wl1b",
            "EntityName": "Georgia World Congress Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xmrp",
            "EntityName": "The Tabernacle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030pkm",
            "EntityName": "Peachtree Road Race"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033h7k",
            "EntityName": "Georgia Aquarium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038bv6",
            "EntityName": "Georgia Dome"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038gvs",
            "EntityName": "Philips Arena"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039xmp",
            "EntityName": "Omni Coliseum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cspcp",
            "EntityName": "Hyatt Regency Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03l1zc",
            "EntityName": "Centennial Olympic Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03q1hw",
            "EntityName": "Zoo Atlanta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sm22",
            "EntityName": "Six Flags Over Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spbl",
            "EntityName": "Six Flags White Water"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wm34",
            "EntityName": "Atlanta Cyclorama & Civil War Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xrf5",
            "EntityName": "Georgia State Capitol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_mbv",
            "EntityName": "World of Coca-Cola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d135",
            "EntityName": "CNN Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04htb5",
            "EntityName": "Fernbank Science Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jny9",
            "EntityName": "Fernbank Museum of Natural History"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qrhq",
            "EntityName": "Fox Theatre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050m_5",
            "EntityName": "Woodruff Arts Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050mtz",
            "EntityName": "Margaret Mitchell House & Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050my1",
            "EntityName": "Martin Luther King, Jr. National Historic Site"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050n0y",
            "EntityName": "Atlanta History Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c25f2",
            "EntityName": "Variety Playhouse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bxs4",
            "EntityName": "Jimmy Carter Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5g4p",
            "EntityName": "Masquerade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3cp2",
            "EntityName": "Arbor Place Mall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpmfg",
            "EntityName": "Atlanta Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gln9p",
            "EntityName": "Center for Puppetry Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j28sdt",
            "EntityName": "Atlanta Jewish Film Festival"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013yq": "Atlanta"
    },
    "qid_topic_entity": {
      "Q23556": "Atlanta"
    },
    "index": 541
  },
  {
    "QuestionId": "WebQTest-470",
    "RawQuestion": "where does the zambezi river originate?",
    "ProcessedQuestion": "where does the zambezi river originate",
    "Parses": [
      {
        "ParseId": "WebQTest-470.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0p_70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0p_70 ns:geography.river.origin ?x .\n}\n",
        "PotentialTopicEntityMention": "zambezi river",
        "TopicEntityName": "Zambezi",
        "TopicEntityMid": "m.0p_70",
        "InferentialChain": [
          "geography.river.origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cdmr",
            "EntityName": "Mwinilunga"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0p_70": "Zambezi"
    },
    "qid_topic_entity": {
      "Q43106": "Zambezi"
    },
    "index": 542
  },
  {
    "QuestionId": "WebQTest-437",
    "RawQuestion": "where did they find jenni rivera's body?",
    "ProcessedQuestion": "where did they find jenni rivera 's body",
    "Parses": [
      {
        "ParseId": "WebQTest-437.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? place where jenni rivera 's body found"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01v5vfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01v5vfj ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "jenni rivera",
        "TopicEntityName": "Jenni Rivera",
        "TopicEntityMid": "m.01v5vfj",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nycl8h",
            "EntityName": "Iturbide"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01v5vfj": "Jenni Rivera"
    },
    "qid_topic_entity": {
      "Q714185": "Jenni Rivera"
    },
    "index": 543
  },
  {
    "QuestionId": "WebQTest-264",
    "RawQuestion": "what does australia use for currency?",
    "ProcessedQuestion": "what does australia use for currency",
    "Parses": [
      {
        "ParseId": "WebQTest-264.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kz1h",
            "EntityName": "Australian dollar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 544
  },
  {
    "QuestionId": "WebQTest-42",
    "RawQuestion": "what are the songs that justin bieber wrote?",
    "ProcessedQuestion": "what are the songs that justin bieber wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-42.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:music.composer.compositions ?x .\n}\n",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": [
          "music.composer.compositions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0116pj4q",
            "EntityName": "Lolly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012k_48s",
            "EntityName": "Home to Mama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v3gb4",
            "EntityName": "Baby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbvzq2",
            "EntityName": "Never Let You Go"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbz4p9",
            "EntityName": "Eenie Meenie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bmc2ql",
            "EntityName": "Somebody to Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3vvnk",
            "EntityName": "Never Say Never"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fqlv5l",
            "EntityName": "Bigger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5b0p2",
            "EntityName": "Pray"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5q9ky",
            "EntityName": "First Dance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j4453t",
            "EntityName": "Live My Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j64n8c",
            "EntityName": "Boyfriend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwqwyx",
            "EntityName": "Turn to You (Mother's Day Dedication)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwx2_w",
            "EntityName": "Die in Your Arms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxk_hq",
            "EntityName": "Thought Of You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxk_kq",
            "EntityName": "Beauty And A Beat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jxkzb9",
            "EntityName": "All Around The World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0l2vf",
            "EntityName": "As Long as You Love Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qfpkqq",
            "EntityName": "Right Here"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rytzvz",
            "EntityName": "#thatPower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y6b7k5",
            "EntityName": "Heartbreaker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ynrkyl",
            "EntityName": "All That Matters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt1lb9",
            "EntityName": "Hold Tight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt3yyw",
            "EntityName": "Wait for a Minute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yt3zg2",
            "EntityName": "Recovery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0z6sgcx",
            "EntityName": "Bad Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zbv_v0",
            "EntityName": "All Bad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zdkrym",
            "EntityName": "PYD"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zg6nnd",
            "EntityName": "Change Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zgb5ny",
            "EntityName": "Roller Coaster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zmzvrc",
            "EntityName": "Confident"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 545
  },
  {
    "QuestionId": "WebQTest-1958",
    "RawQuestion": "where is chris rock from?",
    "ProcessedQuestion": "where is chris rock from",
    "Parses": [
      {
        "ParseId": "WebQTest-1958.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016_mj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016_mj ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "chris rock",
        "TopicEntityName": "Chris Rock",
        "TopicEntityMid": "m.016_mj",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013l1h",
            "EntityName": "Andrews"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016_mj": "Chris Rock"
    },
    "qid_topic_entity": {
      "Q4109": "Chris Rock"
    },
    "index": 546
  },
  {
    "QuestionId": "WebQTest-1464",
    "RawQuestion": "what to do with my kids in toronto?",
    "ProcessedQuestion": "what to do with my kids in toronto",
    "Parses": [
      {
        "ParseId": "WebQTest-1464.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7h6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7h6 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "toronto",
        "TopicEntityName": "Toronto",
        "TopicEntityMid": "m.0h7h6",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_zt4",
            "EntityName": "Casa Loma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0170x4",
            "EntityName": "Rogers Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018dtx",
            "EntityName": "Toronto Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tws",
            "EntityName": "CN Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xs9p",
            "EntityName": "Royal Ontario Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yk7l",
            "EntityName": "Cabbagetown, Toronto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zqjc",
            "EntityName": "The Beaches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zrh2",
            "EntityName": "Toronto Eaton Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024wty",
            "EntityName": "High Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024yvy",
            "EntityName": "Chinatown, Toronto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026gt46",
            "EntityName": "Toronto Waterfront Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026lgdg",
            "EntityName": "Textile Museum of Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027_p6",
            "EntityName": "Kensington Market"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028b_w",
            "EntityName": "Air Canada Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cfl0",
            "EntityName": "Spadina House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dktk",
            "EntityName": "Queen Street West"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h456",
            "EntityName": "Canada's Wonderland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jlfc",
            "EntityName": "Toronto Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02js07",
            "EntityName": "Ontario Science Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jzwv",
            "EntityName": "Ontario Place"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kppx",
            "EntityName": "Black Creek Pioneer Village"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qnrn_",
            "EntityName": "Museum of Contemporary Canadian Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vpvh6",
            "EntityName": "Gardiner Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vpw01",
            "EntityName": "Luminato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vylr",
            "EntityName": "Art Gallery of Ontario"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03q_c9",
            "EntityName": "Yorkville, Toronto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0496dg",
            "EntityName": "Bata Shoe Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049963",
            "EntityName": "Nathan Phillips Square"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049gjy",
            "EntityName": "Roy Thomson Hall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049gql",
            "EntityName": "Sony Centre for the Performing Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04h_rf",
            "EntityName": "Royal Alexandra Theatre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zvykh",
            "EntityName": "Bayview Village Shopping Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05398k",
            "EntityName": "Toronto Centre for the Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056fr8",
            "EntityName": "Princess of Wales Theatre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05dv6f",
            "EntityName": "Planet in Focus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kywl",
            "EntityName": "Danforth Avenue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05s4g6",
            "EntityName": "McMichael Canadian Art Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06d1jn",
            "EntityName": "Queens Quay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j93_",
            "EntityName": "St. Lawrence Market"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07040p",
            "EntityName": "Distillery District"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08jh92",
            "EntityName": "Edwards Gardens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08pt1m",
            "EntityName": "First Toronto Post Office"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08wgfx",
            "EntityName": "BMO Field"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bk7sc",
            "EntityName": "Hanlan's Point Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cp0hfg",
            "EntityName": "Sugar Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5824n",
            "EntityName": "Bare Oaks Family Naturist Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt2h",
            "EntityName": "Hockey Hall of Fame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0swmcnz",
            "EntityName": "Heartland Town Centre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wbh5pc",
            "EntityName": "Corktown Common"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h7h6": "Toronto"
    },
    "qid_topic_entity": {
      "Q172": "Toronto"
    },
    "index": 547
  },
  {
    "QuestionId": "WebQTest-532",
    "RawQuestion": "what does david beckham play?",
    "ProcessedQuestion": "what does david beckham play",
    "Parses": [
      {
        "ParseId": "WebQTest-532.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02d9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02d9k ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.sport ?x .\n}\n",
        "PotentialTopicEntityMention": "david beckham",
        "TopicEntityName": "David Beckham",
        "TopicEntityMid": "m.02d9k",
        "InferentialChain": [
          "sports.pro_athlete.sports_played_professionally",
          "sports.pro_sports_played.sport"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vx4",
            "EntityName": "Football"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02d9k": "David Beckham"
    },
    "qid_topic_entity": {
      "Q10520": "David Beckham"
    },
    "index": 548
  },
  {
    "QuestionId": "WebQTest-1133",
    "RawQuestion": "what does wh smith stand for?",
    "ProcessedQuestion": "what does wh smith stand for",
    "Parses": [
      {
        "ParseId": "WebQTest-1133.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F cannot do abbreviations"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ?x ns:common.topic.alias \"W H Smith\"@en .\n}",
        "PotentialTopicEntityMention": "wh smith",
        "TopicEntityName": "William Henry Smith",
        "TopicEntityMid": "m.04sxlr",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013_kt",
            "EntityName": "WHSmith"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04sxlr": "William Henry Smith"
    },
    "qid_topic_entity": {
      "Q176472": "William Henry Smith"
    },
    "index": 549
  },
  {
    "QuestionId": "WebQTest-1164",
    "RawQuestion": "what type of art does claude monet do?",
    "ProcessedQuestion": "what type of art does claude monet do",
    "Parses": [
      {
        "ParseId": "WebQTest-1164.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xnj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xnj ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "claude monet",
        "TopicEntityName": "Claude Monet",
        "TopicEntityMid": "m.01xnj",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xj1",
            "EntityName": "Impressionism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01xnj": "Claude Monet"
    },
    "qid_topic_entity": {
      "Q296": "Claude Monet"
    },
    "index": 550
  },
  {
    "QuestionId": "WebQTest-1475",
    "RawQuestion": "what type of guitar does johnny depp play?",
    "ProcessedQuestion": "what type of guitar does johnny depp play",
    "Parses": [
      {
        "ParseId": "WebQTest-1475.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? type of guitar?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:music.group_member.instruments_played ?x .\n}\n",
        "PotentialTopicEntityMention": "johnny depp",
        "TopicEntityName": "Johnny Depp",
        "TopicEntityMid": "m.0jfx1",
        "InferentialChain": [
          "music.group_member.instruments_played"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0342h",
            "EntityName": "Guitar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w7v",
            "EntityName": "Slide guitar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jfx1": "Johnny Depp"
    },
    "qid_topic_entity": {
      "Q37175": "Johnny Depp"
    },
    "index": 551
  },
  {
    "QuestionId": "WebQTest-1333",
    "RawQuestion": "where does the tennessee river go?",
    "ProcessedQuestion": "where does the tennessee river go",
    "Parses": [
      {
        "ParseId": "WebQTest-1333.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? could also mean where it flows"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spb0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spb0 ns:geography.river.mouth ?x .\n}\n",
        "PotentialTopicEntityMention": "tennessee river",
        "TopicEntityName": "Tennessee River",
        "TopicEntityMid": "m.01spb0",
        "InferentialChain": [
          "geography.river.mouth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lx3",
            "EntityName": "Ohio River"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01spb0": "Tennessee River"
    },
    "qid_topic_entity": {
      "Q193737": "Tennessee River"
    },
    "index": 552
  },
  {
    "QuestionId": "WebQTest-526",
    "RawQuestion": "what band was george clinton in?",
    "ProcessedQuestion": "what band was george clinton in",
    "Parses": [
      {
        "ParseId": "WebQTest-526.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ql36)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ql36 ns:music.group_member.membership ?y .\n?y ns:music.group_membership.group ?x .\n}\n",
        "PotentialTopicEntityMention": "george clinton",
        "TopicEntityName": "George Clinton",
        "TopicEntityMid": "m.0ql36",
        "InferentialChain": [
          "music.group_member.membership",
          "music.group_membership.group"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01180cs1",
            "EntityName": "Parliament"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rjw6v",
            "EntityName": "Dolby's Cube"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tzqkk",
            "EntityName": "The Parliaments"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xp1t4",
            "EntityName": "George Clinton & Bootsy Collins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qlhx",
            "EntityName": "Parliament-Funkadelic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qmny",
            "EntityName": "Funkadellic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ql36": "George Clinton"
    },
    "qid_topic_entity": {
      "Q336272": "George Clinton"
    },
    "index": 553
  },
  {
    "QuestionId": "WebQTest-1102",
    "RawQuestion": "where is victoria british columbia?",
    "ProcessedQuestion": "where is victoria british columbia",
    "Parses": [
      {
        "ParseId": "WebQTest-1102.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ypt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ypt ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "victoria british columbia",
        "TopicEntityName": "Victoria",
        "TopicEntityMid": "m.07ypt",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015jr",
            "EntityName": "British Columbia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ypt": "Victoria"
    },
    "qid_topic_entity": {
      "Q2132": "Victoria"
    },
    "index": 554
  },
  {
    "QuestionId": "WebQTest-954",
    "RawQuestion": "what was pink floyd's first album?",
    "ProcessedQuestion": "what was pink floyd 's first album",
    "Parses": [
      {
        "ParseId": "WebQTest-954.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wv9xn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wv9xn ns:music.artist.album ?x .\n?x ns:music.album.release_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "floyd",
        "TopicEntityName": "Pink Floyd",
        "TopicEntityMid": "m.01wv9xn",
        "InferentialChain": [
          "music.artist.album"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "music.album.release_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3bhb1",
            "EntityName": "Psychedelic Session-compilation album"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01wv9xn": "Pink Floyd"
    },
    "qid_topic_entity": {
      "Q2306": "Pink Floyd"
    },
    "index": 555
  },
  {
    "QuestionId": "WebQTest-711",
    "RawQuestion": "who plays chuck bass in gossip girl?",
    "ProcessedQuestion": "who plays chuck bass in gossip girl",
    "Parses": [
      {
        "ParseId": "WebQTest-711.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g0jx7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g0jx7 ns:base.gossipgirl.character.played_by ?x .\n}\n",
        "PotentialTopicEntityMention": "chuck bass",
        "TopicEntityName": "Chuck Bass",
        "TopicEntityMid": "m.0g0jx7",
        "InferentialChain": [
          "base.gossipgirl.character.played_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w4x29",
            "EntityName": "Ed Westwick"
          }
        ]
      },
      {
        "ParseId": "WebQTest-711.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gfzgl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gfzgl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0g0jx7 .\n}\n",
        "PotentialTopicEntityMention": "gossip girl",
        "TopicEntityName": "Gossip Girl",
        "TopicEntityMid": "m.0gfzgl",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0g0jx7",
            "EntityName": "Chuck Bass",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w4x29",
            "EntityName": "Ed Westwick"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g0jx7": "Chuck Bass",
      "m.0gfzgl": "Gossip Girl"
    },
    "qid_topic_entity": {
      "Q2336506": "Chuck Bass",
      "Q199853": "Gossip Girl"
    },
    "index": 556
  },
  {
    "QuestionId": "WebQTest-194",
    "RawQuestion": "where did the iroquois indians come from?",
    "ProcessedQuestion": "where did the iroquois indians come from",
    "Parses": [
      {
        "ParseId": "WebQTest-194.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03x1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03x1x ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "PotentialTopicEntityMention": "iroquois",
        "TopicEntityName": "Iroquois",
        "TopicEntityMid": "m.03x1x",
        "InferentialChain": [
          "people.ethnicity.geographic_distribution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0694j",
            "EntityName": "Qu\u00e9bec"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03x1x": "Iroquois"
    },
    "qid_topic_entity": {
      "Q68518": "Iroquois"
    },
    "index": 557
  },
  {
    "QuestionId": "WebQTest-174",
    "RawQuestion": "what team does colin kaepernick play for?",
    "ProcessedQuestion": "what team does colin kaepernick play for",
    "Parses": [
      {
        "ParseId": "WebQTest-174.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cm6b3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cm6b3 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "colin kaepernick",
        "TopicEntityName": "Colin Kaepernick",
        "TopicEntityMid": "m.03cm6b3",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rny",
            "EntityName": "San Francisco 49ers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03cm6b3": "Colin Kaepernick"
    },
    "qid_topic_entity": {
      "Q82496": "Colin Kaepernick"
    },
    "index": 558
  },
  {
    "QuestionId": "WebQTest-881",
    "RawQuestion": "what movies does nick cannon play in?",
    "ProcessedQuestion": "what movies does nick cannon play in",
    "Parses": [
      {
        "ParseId": "WebQTest-881.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d1st)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d1st ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "nick cannon",
        "TopicEntityName": "Nick Cannon",
        "TopicEntityMid": "m.01d1st",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0134yc8y",
            "EntityName": "Chiraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yzvd",
            "EntityName": "Garfield: The Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qzrt_",
            "EntityName": "Even Money"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rhxt_",
            "EntityName": "American Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031t2d",
            "EntityName": "Men in Black II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043dz8",
            "EntityName": "Shall We Dance?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0464t_m",
            "EntityName": "Ball Don't Lie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ybhxs",
            "EntityName": "The Killing Room"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kjm8q",
            "EntityName": "Weapons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07mj_0",
            "EntityName": "Underclassman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07pnlt",
            "EntityName": "Roll Bounce"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07y9w5",
            "EntityName": "Monster House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08_wh0",
            "EntityName": "Goal II: Living the Dream"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08jml6",
            "EntityName": "Drumline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08r4x3",
            "EntityName": "Bobby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09flkf",
            "EntityName": "Love Don't Cost a Thing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09zg5d",
            "EntityName": "Day of the Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c34n5",
            "EntityName": "Whatever It Takes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftc14",
            "EntityName": "The Adventures of Brer Rabbit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gj9fmj",
            "EntityName": "A Very School Gyrls Holla-Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mzmnx4",
            "EntityName": "Drumline: A New Beat"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01d1st": "Nick Cannon"
    },
    "qid_topic_entity": {
      "Q348533": "Nick Cannon"
    },
    "index": 559
  },
  {
    "QuestionId": "WebQTest-801",
    "RawQuestion": "what kind of government is egypt?",
    "ProcessedQuestion": "what kind of government is egypt",
    "Parses": [
      {
        "ParseId": "WebQTest-801.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dw03",
            "EntityName": "Semi-presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tz3y",
            "EntityName": "Provisional government"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 560
  },
  {
    "QuestionId": "WebQTest-466",
    "RawQuestion": "what language brazil speak?",
    "ProcessedQuestion": "what language brazil speak",
    "Parses": [
      {
        "ParseId": "WebQTest-466.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zj58",
            "EntityName": "Brazilian Portuguese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-466.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 561
  },
  {
    "QuestionId": "WebQTest-1893",
    "RawQuestion": "what kind of money does egypt have?",
    "ProcessedQuestion": "what kind of money does egypt have",
    "Parses": [
      {
        "ParseId": "WebQTest-1893.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04phzg",
            "EntityName": "Egyptian pound"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 562
  },
  {
    "QuestionId": "WebQTest-1170",
    "RawQuestion": "who is the governor of virginia 2011?",
    "ProcessedQuestion": "who is the governor of virginia 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1170.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "2011"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07z1m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07z1m ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "virginia",
        "TopicEntityName": "Virginia",
        "TopicEntityMid": "m.07z1m",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fkvn",
            "EntityName": "Governor",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09dvvy",
            "EntityName": "Bob McDonnell"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07z1m": "Virginia"
    },
    "qid_topic_entity": {
      "Q1370": "Virginia"
    },
    "index": 563
  },
  {
    "QuestionId": "WebQTest-1330",
    "RawQuestion": "what is the most populated state in united states?",
    "ProcessedQuestion": "what is the most populated state in united states",
    "Parses": [
      {
        "ParseId": "WebQTest-1330.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:topic_server.population_number ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "topic_server.population_number",
          "ValueType": "Number"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rby",
            "EntityName": "New York"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 564
  },
  {
    "QuestionId": "WebQTest-1899",
    "RawQuestion": "who was william mckinley married to?",
    "ProcessedQuestion": "who was william mckinley married to",
    "Parses": [
      {
        "ParseId": "WebQTest-1899.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083p7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083p7 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "william mckinley",
        "TopicEntityName": "William McKinley",
        "TopicEntityMid": "m.083p7",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025pyr",
            "EntityName": "Ida Saxton McKinley"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.083p7": "William McKinley"
    },
    "qid_topic_entity": {
      "Q35041": "William McKinley"
    },
    "index": 565
  },
  {
    "QuestionId": "WebQTest-1245",
    "RawQuestion": "what countries are in the euro dollar?",
    "ProcessedQuestion": "what countries are in the euro dollar",
    "Parses": [
      {
        "ParseId": "WebQTest-1245.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l6h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l6h ns:finance.currency.countries_used ?x .\n}\n",
        "PotentialTopicEntityMention": "euro",
        "TopicEntityName": "Euro",
        "TopicEntityMid": "m.02l6h",
        "InferentialChain": [
          "finance.currency.countries_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014mxp",
            "EntityName": "\u00c5land Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kmm",
            "EntityName": "Estonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02phy_9",
            "EntityName": "Collectivity of Saint Martin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vzc",
            "EntityName": "Finland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035qy",
            "EntityName": "Greece"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037nm",
            "EntityName": "Guadeloupe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rjj",
            "EntityName": "Italy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049nq",
            "EntityName": "Kingdom of the Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dfw1",
            "EntityName": "Province of Varese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fh3",
            "EntityName": "Republic of Kosovo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g5k",
            "EntityName": "Latvia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gzd",
            "EntityName": "Lithuania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg8",
            "EntityName": "Martinique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vws",
            "EntityName": "Mayotte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w58",
            "EntityName": "Monaco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056vv",
            "EntityName": "Montenegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059j2",
            "EntityName": "Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r4w",
            "EntityName": "Portugal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06npd",
            "EntityName": "Slovakia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s4c",
            "EntityName": "Saint Pierre and Miquelon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sff",
            "EntityName": "San Marino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t8v",
            "EntityName": "Slovenia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwhs8r",
            "EntityName": "Caribbean special municipalities of the Netherlands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggt2",
            "EntityName": "Varese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7f9",
            "EntityName": "Saint Barth\u00e9lemy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hg5",
            "EntityName": "Andorra"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02l6h": "Euro"
    },
    "qid_topic_entity": {
      "Q4916": "Euro"
    },
    "index": 566
  },
  {
    "QuestionId": "WebQTest-1942",
    "RawQuestion": "who was in the israeli palestinian conflict?",
    "ProcessedQuestion": "who was in the israeli palestinian conflict",
    "Parses": [
      {
        "ParseId": "WebQTest-1942.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cj5y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cj5y ns:time.event.people_involved ?x .\n}\n",
        "PotentialTopicEntityMention": "israeli palestinian conflict",
        "TopicEntityName": "Israeli\u2013Palestinian conflict",
        "TopicEntityMid": "m.0cj5y",
        "InferentialChain": [
          "time.event.people_involved"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012bk",
            "EntityName": "Ariel Sharon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019x_p",
            "EntityName": "Chaim Weizmann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cw71",
            "EntityName": "Ahmad Shukeiri"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01czvz",
            "EntityName": "Haj Amin al-Husseini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01html",
            "EntityName": "Mahmoud Abbas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tp58",
            "EntityName": "Ahmed Qurei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0203v",
            "EntityName": "Colin Powell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036df9",
            "EntityName": "Hanan Ashrawi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039b_q",
            "EntityName": "Dalal Mughrabi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056xs",
            "EntityName": "Menachem Begin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08849",
            "EntityName": "Yasser Arafat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_zw",
            "EntityName": "Yitzhak Rabin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_8s",
            "EntityName": "Shimon Peres"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cj84",
            "EntityName": "Anthony Zinni"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d58h",
            "EntityName": "Anwar Sadat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hspy",
            "EntityName": "David Ben-Gurion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jfzc",
            "EntityName": "Marwan Barghouti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kvhz",
            "EntityName": "Hussein of Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kwtd",
            "EntityName": "Nabil Shaath"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kww1",
            "EntityName": "Ahmed Yassin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lf35",
            "EntityName": "Abdullah of Saudi Arabia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cj5y": "Israeli\u2013Palestinian conflict"
    },
    "qid_topic_entity": {
      "Q151622": "Israeli\u2013Palestinian conflict"
    },
    "index": 567
  },
  {
    "QuestionId": "WebQTest-955",
    "RawQuestion": "who did granville t. woods married?",
    "ProcessedQuestion": "who did granville t. woods married",
    "Parses": [
      {
        "ParseId": "WebQTest-955.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0236mx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0236mx ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "granville t . woods",
        "TopicEntityName": "Granville Woods",
        "TopicEntityMid": "m.0236mx",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j6f6kt",
            "EntityName": "Loretta Woods"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0236mx": "Granville Woods"
    },
    "qid_topic_entity": {
      "Q3115447": "Granville Woods"
    },
    "index": 568
  },
  {
    "QuestionId": "WebQTest-322",
    "RawQuestion": "what has ian somerhalder acted in?",
    "ProcessedQuestion": "what has ian somerhalder acted in",
    "Parses": [
      {
        "ParseId": "WebQTest-322.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.044mvs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.044mvs ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "ian somerhalder",
        "TopicEntityName": "Ian Somerhalder",
        "TopicEntityMid": "m.044mvs",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_ghc",
            "EntityName": "National Lampoon's TV: The Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vn93f",
            "EntityName": "The Tournament"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m8y5",
            "EntityName": "Celebrity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f20d",
            "EntityName": "Life as a House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j16_m",
            "EntityName": "Anatomy of a Hate Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2fyc",
            "EntityName": "Changing Hearts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zyhx",
            "EntityName": "The Rules of Attraction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05q8gln",
            "EntityName": "Marco Polo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zpsmp",
            "EntityName": "How to Make Love to a Woman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0892jh",
            "EntityName": "In Enemy Hands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08bgt3",
            "EntityName": "Pulse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bd5mrx",
            "EntityName": "Lost City Raiders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnbrgy",
            "EntityName": "Wake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crts8b",
            "EntityName": "The Lost Samaritan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs0g8b",
            "EntityName": "Fireball"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqpx9",
            "EntityName": "Fearless"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glymk",
            "EntityName": "The Sensation of Sight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vsjfsp",
            "EntityName": "The Anomaly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w2rqf7",
            "EntityName": "Time Framed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w2rr0c",
            "EntityName": "Caught on Tape"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w2rr84",
            "EntityName": "Recess"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w2rrp1",
            "EntityName": "The Old Man and the Studio"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.044mvs": "Ian Somerhalder"
    },
    "qid_topic_entity": {
      "Q130447": "Ian Somerhalder"
    },
    "index": 569
  },
  {
    "QuestionId": "WebQTest-784",
    "RawQuestion": "where do the seattle seahawks play?",
    "ProcessedQuestion": "where do the seattle seahawks play",
    "Parses": [
      {
        "ParseId": "WebQTest-784.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.070xg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.070xg ns:sports.sports_team.arena_stadium ?x .\n?x ns:architecture.structure.opened ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "seattle seahawks",
        "TopicEntityName": "Seattle Seahawks",
        "TopicEntityMid": "m.070xg",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "architecture.structure.opened",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01db_j",
            "EntityName": "CenturyLink Field"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.070xg": "Seattle Seahawks"
    },
    "qid_topic_entity": {
      "Q221878": "Seattle Seahawks"
    },
    "index": 570
  },
  {
    "QuestionId": "WebQTest-1113",
    "RawQuestion": "where was toussaint l'ouverture born?",
    "ProcessedQuestion": "where was toussaint l'ouverture born",
    "Parses": [
      {
        "ParseId": "WebQTest-1113.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011wgw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011wgw ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "toussaint l ' ouverture",
        "TopicEntityName": "Toussaint Louverture",
        "TopicEntityMid": "m.011wgw",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01f5d8",
            "EntityName": "Saint-Domingue"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.011wgw": "Toussaint Louverture"
    },
    "qid_topic_entity": {
      "Q205783": "Toussaint Louverture"
    },
    "index": 571
  },
  {
    "QuestionId": "WebQTest-537",
    "RawQuestion": "what has charlie hunnam been in?",
    "ProcessedQuestion": "what has charlie hunnam been in",
    "Parses": [
      {
        "ParseId": "WebQTest-537.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.057yk8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.057yk8 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "charlie hunnam",
        "TopicEntityName": "Charlie Hunnam",
        "TopicEntityMid": "m.057yk8",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b6gq6dl2",
            "EntityName": "Knights of the Roundtable: King Arthur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02cbhg",
            "EntityName": "Cold Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z0nhq",
            "EntityName": "Nicholas Nickleby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y5gz",
            "EntityName": "Whatever Happened to Harold Smith?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079s_7",
            "EntityName": "Green Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bk88p",
            "EntityName": "Abandon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fh2v5",
            "EntityName": "Children of Men"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g55y4p",
            "EntityName": "The Ledge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx0plf",
            "EntityName": "Deadfall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyffmd",
            "EntityName": "Frankie Go Boom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0yd81",
            "EntityName": "Pacific Rim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zn1hg0",
            "EntityName": "Crimson Peak"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.057yk8": "Charlie Hunnam"
    },
    "qid_topic_entity": {
      "Q356294": "Charlie Hunnam"
    },
    "index": 572
  },
  {
    "QuestionId": "WebQTest-465",
    "RawQuestion": "what is new york city airport?",
    "ProcessedQuestion": "what is new york city airport",
    "Parses": [
      {
        "ParseId": "WebQTest-465.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?y ns:travel.transportation.mode_of_transportation ns:m.025t3bg .\n}\n",
        "PotentialTopicEntityMention": "new york city",
        "TopicEntityName": "New York City",
        "TopicEntityMid": "m.02_286",
        "InferentialChain": [
          "travel.travel_destination.how_to_get_here",
          "travel.transportation.transport_terminus"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.025t3bg",
            "EntityName": "Air travel",
            "SourceNodeIndex": 0,
            "NodePredicate": "travel.transportation.mode_of_transportation",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kyln",
            "EntityName": "LaGuardia Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01l5hm",
            "EntityName": "Newark Liberty International Airport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0p1l2",
            "EntityName": "John F. Kennedy International Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_286": "New York City"
    },
    "qid_topic_entity": {
      "Q60": "New York City"
    },
    "index": 573
  },
  {
    "QuestionId": "WebQTest-405",
    "RawQuestion": "who fought the battle of gettysburg?",
    "ProcessedQuestion": "who fought the battle of gettysburg",
    "Parses": [
      {
        "ParseId": "WebQTest-405.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jnm ns:base.culturalevent.event.entity_involved ?x .\n}\n",
        "PotentialTopicEntityMention": "battle of gettysburg",
        "TopicEntityName": "Battle of Gettysburg",
        "TopicEntityMid": "m.01jnm",
        "InferentialChain": [
          "base.culturalevent.event.entity_involved"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012pml",
            "EntityName": "George Meade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020d5",
            "EntityName": "Confederate States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fp48",
            "EntityName": "Union"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f5j",
            "EntityName": "Robert E. Lee"
          }
        ]
      },
      {
        "ParseId": "WebQTest-405.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jnm ns:military.military_conflict.combatants ?y .\n?y ns:military.military_combatant_group.combatants ?x .\n}\n",
        "PotentialTopicEntityMention": "battle of gettysburg",
        "TopicEntityName": "Battle of Gettysburg",
        "TopicEntityMid": "m.01jnm",
        "InferentialChain": [
          "military.military_conflict.combatants",
          "military.military_combatant_group.combatants"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020d5",
            "EntityName": "Confederate States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fp48",
            "EntityName": "Union"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      },
      {
        "ParseId": "WebQTest-405.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jnm ns:military.military_conflict.commanders ?y .\n?y ns:military.military_command.military_combatant ?x .\n}\n",
        "PotentialTopicEntityMention": "battle of gettysburg",
        "TopicEntityName": "Battle of Gettysburg",
        "TopicEntityMid": "m.01jnm",
        "InferentialChain": [
          "military.military_conflict.commanders",
          "military.military_command.military_combatant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020d5",
            "EntityName": "Confederate States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01jnm": "Battle of Gettysburg"
    },
    "qid_topic_entity": {
      "Q33132": "Battle of Gettysburg"
    },
    "index": 574
  },
  {
    "QuestionId": "WebQTest-654",
    "RawQuestion": "what are egyptian money called?",
    "ProcessedQuestion": "what are egyptian money called",
    "Parses": [
      {
        "ParseId": "WebQTest-654.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "egyptian",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04phzg",
            "EntityName": "Egyptian pound"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 575
  },
  {
    "QuestionId": "WebQTest-764",
    "RawQuestion": "where did john mayer go to college?",
    "ProcessedQuestion": "where did john mayer go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-764.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s21dg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s21dg ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "john mayer",
        "TopicEntityName": "John Mayer",
        "TopicEntityMid": "m.01s21dg",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g839",
            "EntityName": "Berklee College of Music"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01s21dg": "John Mayer"
    },
    "qid_topic_entity": {
      "Q215215": "John Mayer"
    },
    "index": 576
  },
  {
    "QuestionId": "WebQTest-1422",
    "RawQuestion": "what language do they speak in sweden yahoo?",
    "ProcessedQuestion": "what language do they speak in sweden yahoo",
    "Parses": [
      {
        "ParseId": "WebQTest-1422.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0vqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0vqn ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "sweden",
        "TopicEntityName": "Sweden",
        "TopicEntityMid": "m.0d0vqn",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012psb",
            "EntityName": "Romani language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gp_d",
            "EntityName": "Finnish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z5h0",
            "EntityName": "Me\u00e4nkieli"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zb99n",
            "EntityName": "Swedish Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lmb2",
            "EntityName": "Turoyo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mp7",
            "EntityName": "Swedish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0880p",
            "EntityName": "Yiddish Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1422.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0vqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0vqn ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "sweden",
        "TopicEntityName": "Sweden",
        "TopicEntityMid": "m.0d0vqn",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mp7",
            "EntityName": "Swedish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d0vqn": "Sweden"
    },
    "qid_topic_entity": {
      "Q34": "Sweden"
    },
    "index": 577
  },
  {
    "QuestionId": "WebQTest-1379",
    "RawQuestion": "what did franz liszt do to earn a living?",
    "ProcessedQuestion": "what did franz liszt do to earn a living",
    "Parses": [
      {
        "ParseId": "WebQTest-1379.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqgp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqgp ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "franz liszt",
        "TopicEntityName": "Life of Franz Liszt",
        "TopicEntityMid": "m.0hqgp",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01c72t",
            "EntityName": "Composer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cmdm",
            "EntityName": "Virtuoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04l1gwb",
            "EntityName": "Film Score Composer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vyk",
            "EntityName": "Pianist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xjb",
            "EntityName": "Priest"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hqgp": "Life of Franz Liszt"
    },
    "qid_topic_entity": {
      "Q41309": "Life of Franz Liszt"
    },
    "index": 578
  },
  {
    "QuestionId": "WebQTest-138",
    "RawQuestion": "what are the four main languages spoken in spain?",
    "ProcessedQuestion": "what are the four main languages spoken in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-138.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017k6",
            "EntityName": "Basque Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m69",
            "EntityName": "Catalan language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q5d9",
            "EntityName": "Galician Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l0r",
            "EntityName": "Occitan language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 579
  },
  {
    "QuestionId": "WebQTest-509",
    "RawQuestion": "what system of government is practiced in nigeria?",
    "ProcessedQuestion": "what system of government is practiced in nigeria",
    "Parses": [
      {
        "ParseId": "WebQTest-509.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cgv ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "nigeria",
        "TopicEntityName": "Nigeria",
        "TopicEntityMid": "m.05cgv",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05cgv": "Nigeria"
    },
    "qid_topic_entity": {
      "Q1033": "Nigeria"
    },
    "index": 580
  },
  {
    "QuestionId": "WebQTest-1682",
    "RawQuestion": "who did ben stiller date?",
    "ProcessedQuestion": "who did ben stiller date",
    "Parses": [
      {
        "ParseId": "WebQTest-1682.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mdqp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mdqp ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "ben stiller",
        "TopicEntityName": "Ben Stiller",
        "TopicEntityMid": "m.0mdqp",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015p37",
            "EntityName": "Janeane Garofalo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x72k",
            "EntityName": "Claire Forlani"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023s8",
            "EntityName": "Calista Flockhart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_jy4",
            "EntityName": "Jeanne Tripplehorn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m8lq",
            "EntityName": "Amanda Peet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0j02",
            "EntityName": "Rhea Durham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qdgc",
            "EntityName": "Christine Taylor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0mdqp": "Ben Stiller"
    },
    "qid_topic_entity": {
      "Q47100": "Ben Stiller"
    },
    "index": 581
  },
  {
    "QuestionId": "WebQTest-480",
    "RawQuestion": "where does name pennsylvania come from?",
    "ProcessedQuestion": "where does name pennsylvania come from",
    "Parses": [
      {
        "ParseId": "WebQTest-480.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:symbols.namesake.named_after ?x .\n}\n",
        "PotentialTopicEntityMention": "pennsylvania",
        "TopicEntityName": "Pennsylvania",
        "TopicEntityMid": "m.05tbn",
        "InferentialChain": [
          "symbols.namesake.named_after"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03br25",
            "EntityName": "William Penn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05tbn": "Pennsylvania"
    },
    "qid_topic_entity": {
      "Q1400": "Pennsylvania"
    },
    "index": 582
  },
  {
    "QuestionId": "WebQTest-1322",
    "RawQuestion": "what other movies has tom hardy played in?",
    "ProcessedQuestion": "what other movies has tom hardy played in",
    "Parses": [
      {
        "ParseId": "WebQTest-1322.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05xf75)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05xf75 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "tom hardy",
        "TopicEntityName": "Tom Hardy",
        "TopicEntityMid": "m.05xf75",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010b8p1w",
            "EntityName": "The Revenant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010s_rgr",
            "EntityName": "Legend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012vy2c1",
            "EntityName": "London Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014lc_",
            "EntityName": "Star Trek Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02852xd",
            "EntityName": "Scenes of a Sexual Nature"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d3wv",
            "EntityName": "Mad Max: Fury Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vvwqg",
            "EntityName": "RocknRolla"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w90vl",
            "EntityName": "Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03g_b58",
            "EntityName": "Thick as Thieves"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m6sts",
            "EntityName": "W\u0394Z"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03tyb3",
            "EntityName": "The Virgin Queen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0413tm",
            "EntityName": "Layer Cake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cwpt9",
            "EntityName": "Colditz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f2_t4",
            "EntityName": "The Inheritance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0l1s",
            "EntityName": "Sweeney Todd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1_st",
            "EntityName": "Lethal Dose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04z_tyl",
            "EntityName": "Bronson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05szl93",
            "EntityName": "Warrior"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t1gh",
            "EntityName": "Minotaur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0661ql3",
            "EntityName": "Inception"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0681f6",
            "EntityName": "Gideon's Daughter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07yvsn",
            "EntityName": "Marie Antoinette"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b62y7",
            "EntityName": "Dot the I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bpm4yw",
            "EntityName": "The Dark Knight Rises"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ck3fq1",
            "EntityName": "Deserter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d6_8r",
            "EntityName": "The Reckoning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dll_t2",
            "EntityName": "This Means War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f_j1n",
            "EntityName": "Splinter Cell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gfh84d",
            "EntityName": "Lawless"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggbhy7",
            "EntityName": "Tinker Tailor Soldier Spy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gp4pz",
            "EntityName": "EMR"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx8_b7",
            "EntityName": "Perfect"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gxmc0c",
            "EntityName": "Sergeant Slaughter, My Big Brother"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h4ymqz",
            "EntityName": "Sucker Punch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nh514x",
            "EntityName": "Everest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qm8b",
            "EntityName": "Black Hawk Down"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0tkj5w3",
            "EntityName": "The Drop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v3gp6q",
            "EntityName": "Locke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vv7fv2",
            "EntityName": "The Outsider"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w7ptqf",
            "EntityName": "Child 44"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05xf75": "Tom Hardy"
    },
    "qid_topic_entity": {
      "Q208026": "Tom Hardy"
    },
    "index": 583
  },
  {
    "QuestionId": "WebQTest-1305",
    "RawQuestion": "what awards did marilyn monroe won?",
    "ProcessedQuestion": "what awards did marilyn monroe won",
    "Parses": [
      {
        "ParseId": "WebQTest-1305.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wqr ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "PotentialTopicEntityMention": "marilyn monroe",
        "TopicEntityName": "Marilyn Monroe",
        "TopicEntityMid": "m.04wqr",
        "InferentialChain": [
          "award.award_winner.awards_won",
          "award.award_honor.award"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019f6s",
            "EntityName": "Golden Globe Award for Best Actress \u2013 Motion Picture \u2013 Musical or Comedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kgb7",
            "EntityName": "Playboy Playmate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1fs8r",
            "EntityName": "David di Donatello Golden Plate Award"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l_d69j",
            "EntityName": "Golden Globe Henrietta Award for World Film Favorites"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04wqr": "Marilyn Monroe"
    },
    "qid_topic_entity": {
      "Q4616": "Marilyn Monroe"
    },
    "index": 584
  },
  {
    "QuestionId": "WebQTest-105",
    "RawQuestion": "what language do people from thailand speak?",
    "ProcessedQuestion": "what language do people from thailand speak",
    "Parses": [
      {
        "ParseId": "WebQTest-105.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07f1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07f1x ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "thailand",
        "TopicEntityName": "Thailand",
        "TopicEntityMid": "m.07f1x",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ln5",
            "EntityName": "Lao Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lqm",
            "EntityName": "Khmer language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgbx",
            "EntityName": "Akha Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx03r",
            "EntityName": "Mlabri Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1w",
            "EntityName": "Hmong language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.052px1",
            "EntityName": "Saek language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072f4m",
            "EntityName": "Malay, Pattani Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zrf",
            "EntityName": "Vietnamese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08h4f2",
            "EntityName": "Nyaw Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08h4l8",
            "EntityName": "Phu Thai language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bskhb",
            "EntityName": "Cham language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bxn4",
            "EntityName": "Mon Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_v2",
            "EntityName": "Thai Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-105.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07f1x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07f1x ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "thailand",
        "TopicEntityName": "Thailand",
        "TopicEntityMid": "m.07f1x",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_v2",
            "EntityName": "Thai Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07f1x": "Thailand"
    },
    "qid_topic_entity": {
      "Q869": "Thailand"
    },
    "index": 585
  },
  {
    "QuestionId": "WebQTest-1988",
    "RawQuestion": "what did joe biden study in college?",
    "ProcessedQuestion": "what did joe biden study in college",
    "Parses": [
      {
        "ParseId": "WebQTest-1988.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012gx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012gx2 ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
        "PotentialTopicEntityMention": "joe biden",
        "TopicEntityName": "Joe Biden",
        "TopicEntityMid": "m.012gx2",
        "InferentialChain": [
          "people.person.education",
          "education.education.major_field_of_study"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03g3w",
            "EntityName": "History"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.062z7",
            "EntityName": "Political Science"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012gx2": "Joe Biden"
    },
    "qid_topic_entity": {
      "Q6279": "Joe Biden"
    },
    "index": 586
  },
  {
    "QuestionId": "WebQTest-1900",
    "RawQuestion": "who played darth vader in the first movie?",
    "ProcessedQuestion": "who played darth vader in the first movie",
    "Parses": [
      {
        "ParseId": "WebQTest-1900.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F can be done in SPARQL - order by performance.film -> release date"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n{\n  SELECT DISTINCT ?f1\n  WHERE {\n    ns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .  # Darth Vader\n    ?y ns:film.performance.film ?f1 .\n    ?f1 ns:film.film.initial_release_date ?d .\n  }\n  ORDER BY ?d\n  LIMIT 1\n}\n  ns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .  # Darth Vader\n  ?y ns:film.performance.actor ?x ; \n     ns:film.performance.film ?f .\n  FILTER (?f1 = ?f)\n}",
        "PotentialTopicEntityMention": "darth vader",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xblf",
            "EntityName": "David Prowse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 587
  },
  {
    "QuestionId": "WebQTest-782",
    "RawQuestion": "what countries does nafta include?",
    "ProcessedQuestion": "what countries does nafta include",
    "Parses": [
      {
        "ParseId": "WebQTest-782.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jj_ ns:organization.membership_organization.members ?y .\n?y ns:organization.organization_membership.member ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "nafta",
        "TopicEntityName": "North American Free Trade Agreement",
        "TopicEntityMid": "m.05jj_",
        "InferentialChain": [
          "organization.membership_organization.members",
          "organization.organization_membership.member"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b90_r",
            "EntityName": "Mexico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05jj_": "North American Free Trade Agreement"
    },
    "qid_topic_entity": {
      "Q181574": "North American Free Trade Agreement"
    },
    "index": 588
  },
  {
    "QuestionId": "WebQTest-636",
    "RawQuestion": "what timezone is the state of michigan and?",
    "ProcessedQuestion": "what timezone is the state of michigan and",
    "Parses": [
      {
        "ParseId": "WebQTest-636.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04rrx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04rrx ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "michigan",
        "TopicEntityName": "Michigan",
        "TopicEntityMid": "m.04rrx",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_37z",
            "EntityName": "UTC\u221205:00"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04rrx": "Michigan"
    },
    "qid_topic_entity": {
      "Q1166": "Michigan"
    },
    "index": 589
  },
  {
    "QuestionId": "WebQTest-521",
    "RawQuestion": "who was anakin skywalker?",
    "ProcessedQuestion": "who was anakin skywalker",
    "Parses": [
      {
        "ParseId": "WebQTest-521.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:g.125_cxx77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:g.125_cxx77 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "anakin skywalker",
        "TopicEntityName": "Anakin Skywalker",
        "TopicEntityMid": "g.125_cxx77",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzmgh",
            "EntityName": "Ted Bracewell"
          }
        ]
      }
    ],
    "topic_entity": {
      "g.125_cxx77": "Anakin Skywalker"
    },
    "qid_topic_entity": {
      "UnknownQID": "Anakin Skywalker"
    },
    "index": 590
  },
  {
    "QuestionId": "WebQTest-800",
    "RawQuestion": "what war did the us lose the most soldiers?",
    "ProcessedQuestion": "what war did the us lose the most soldiers",
    "Parses": [
      {
        "ParseId": "WebQTest-800.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:military.military_combatant.casualties ?y .\n?y ns:military.casualties.military_conflict ?x .\n?y ns:military.casualties.lower_estimate ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "us",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "military.military_combatant.casualties",
          "military.casualties.military_conflict"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "military.casualties.lower_estimate",
          "ValueType": "Number"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081pw",
            "EntityName": "World War II"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 591
  },
  {
    "QuestionId": "WebQTest-409",
    "RawQuestion": "where did giuliana rancic grow up?",
    "ProcessedQuestion": "where did giuliana rancic grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-409.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b0tw3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b0tw3 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "giuliana rancic",
        "TopicEntityName": "Giuliana Rancic",
        "TopicEntityMid": "m.0b0tw3",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhsz",
            "EntityName": "Naples"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0b0tw3": "Giuliana Rancic"
    },
    "qid_topic_entity": {
      "Q1281335": "Giuliana Rancic"
    },
    "index": 592
  },
  {
    "QuestionId": "WebQTest-845",
    "RawQuestion": "who are the virginia senators 2013?",
    "ProcessedQuestion": "who are the virginia senators 2013",
    "Parses": [
      {
        "ParseId": "WebQTest-845.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "Filter year = 2013"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07z1m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07z1m ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.governmental_body ns:m.07t58 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "virginia",
        "TopicEntityName": "Virginia",
        "TopicEntityMid": "m.07z1m",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07t58",
            "EntityName": "United States Senate",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.governmental_body",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2013-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2013-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2013-01-01",
          "End": "2013-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2013"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024mm1",
            "EntityName": "Mark Warner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053f8h",
            "EntityName": "Tim Kaine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0574xy",
            "EntityName": "Jim Webb"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07z1m": "Virginia"
    },
    "qid_topic_entity": {
      "Q1370": "Virginia"
    },
    "index": 593
  },
  {
    "QuestionId": "WebQTest-1257",
    "RawQuestion": "where is denmark south carolina?",
    "ProcessedQuestion": "where is denmark south carolina",
    "Parses": [
      {
        "ParseId": "WebQTest-1257.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "denmark south carolina",
        "TopicEntityName": "Denmark",
        "TopicEntityMid": "m.0_kl9",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mw39",
            "EntityName": "Bamberg County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1257.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "denmark south carolina",
        "TopicEntityName": "Denmark",
        "TopicEntityMid": "m.0_kl9",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06yxd",
            "EntityName": "South Carolina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mw39",
            "EntityName": "Bamberg County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0_kl9": "Denmark"
    },
    "qid_topic_entity": {
      "Q936697": "Denmark"
    },
    "index": 594
  },
  {
    "QuestionId": "WebQTest-360",
    "RawQuestion": "where did emperor hirohito live?",
    "ProcessedQuestion": "where did emperor hirohito live",
    "Parses": [
      {
        "ParseId": "WebQTest-360.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? birthplace doesn't seem appropriate for an emperor"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sm8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sm8 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "emperor hirohito",
        "TopicEntityName": "Hirohito",
        "TopicEntityMid": "m.02sm8",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xm9l",
            "EntityName": "Aoyama, Minato, Tokyo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02sm8": "Hirohito"
    },
    "qid_topic_entity": {
      "Q34479": "Hirohito"
    },
    "index": 595
  },
  {
    "QuestionId": "WebQTest-1075",
    "RawQuestion": "where were the great pyramids of giza built?",
    "ProcessedQuestion": "where were the great pyramids of giza built",
    "Parses": [
      {
        "ParseId": "WebQTest-1075.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036mk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036mk ns:architecture.building.building_complex ?x .\n}\n",
        "PotentialTopicEntityMention": "great pyramids of giza",
        "TopicEntityName": "Great Pyramid of Giza",
        "TopicEntityMid": "m.036mk",
        "InferentialChain": [
          "architecture.building.building_complex"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bkmh",
            "EntityName": "Giza Plateau"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1075.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036mk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036mk ns:base.ancientegypt.pyramid.site ?x .\n}\n",
        "PotentialTopicEntityMention": "great pyramids of giza",
        "TopicEntityName": "Great Pyramid of Giza",
        "TopicEntityMid": "m.036mk",
        "InferentialChain": [
          "base.ancientegypt.pyramid.site"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bkmh",
            "EntityName": "Giza Plateau"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.036mk": "Great Pyramid of Giza"
    },
    "qid_topic_entity": {
      "Q37200": "Great Pyramid of Giza"
    },
    "index": 596
  },
  {
    "QuestionId": "WebQTest-451",
    "RawQuestion": "what did alice paul accomplish?",
    "ProcessedQuestion": "what did alice paul accomplish",
    "Parses": [
      {
        "ParseId": "WebQTest-451.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lp71)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lp71 ns:common.topic.notable_types ?x .\n}\n",
        "PotentialTopicEntityMention": "alice paul",
        "TopicEntityName": "Alice Stokes Paul",
        "TopicEntityMid": "m.02lp71",
        "InferentialChain": [
          "common.topic.notable_types"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_77lg",
            "EntityName": "Organization founder"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02lp71": "Alice Stokes Paul"
    },
    "qid_topic_entity": {
      "Q127328": "Alice Stokes Paul"
    },
    "index": 597
  },
  {
    "QuestionId": "WebQTest-1535",
    "RawQuestion": "where was the first microsoft headquarters located?",
    "ProcessedQuestion": "where was the first microsoft headquarters located",
    "Parses": [
      {
        "ParseId": "WebQTest-1535.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04sv4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04sv4 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "microsoft",
        "TopicEntityName": "Microsoft Corporation",
        "TopicEntityMid": "m.04sv4",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m7v",
            "EntityName": "Redmond"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04sv4": "Microsoft Corporation"
    },
    "qid_topic_entity": {
      "Q2283": "Microsoft Corporation"
    },
    "index": 598
  },
  {
    "QuestionId": "WebQTest-735",
    "RawQuestion": "what kind of money do i need in costa rica?",
    "ProcessedQuestion": "what kind of money do i need in costa rica",
    "Parses": [
      {
        "ParseId": "WebQTest-735.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "costa rica",
        "TopicEntityName": "Costa Rica",
        "TopicEntityMid": "m.01p8s",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wccn",
            "EntityName": "Costa Rican col\u00f3n"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01p8s": "Costa Rica"
    },
    "qid_topic_entity": {
      "Q800": "Costa Rica"
    },
    "index": 599
  },
  {
    "QuestionId": "WebQTest-1644",
    "RawQuestion": "what did mary wollstonecraft fight for?",
    "ProcessedQuestion": "what did mary wollstonecraft fight for",
    "Parses": [
      {
        "ParseId": "WebQTest-1644.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_cw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_cw ns:base.activism.activist.area_of_activism ?x .\n}\n",
        "PotentialTopicEntityMention": "mary wollstonecraft",
        "TopicEntityName": "Mary Wollstonecraft",
        "TopicEntityMid": "m.04_cw",
        "InferentialChain": [
          "base.activism.activist.area_of_activism"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012h0y",
            "EntityName": "Women's rights"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04_cw": "Mary Wollstonecraft"
    },
    "qid_topic_entity": {
      "Q101638": "Mary Wollstonecraft"
    },
    "index": 600
  },
  {
    "QuestionId": "WebQTest-716",
    "RawQuestion": "what language group does germany belong to?",
    "ProcessedQuestion": "what language group does germany belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-716.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.language_family ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.language_family"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0140qt",
            "EntityName": "West Germanic languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03489",
            "EntityName": "Germanic languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v09",
            "EntityName": "Indo-European languages"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 601
  },
  {
    "QuestionId": "WebQTest-1626",
    "RawQuestion": "who wrote st trinians?",
    "ProcessedQuestion": "who wrote st trinians",
    "Parses": [
      {
        "ParseId": "WebQTest-1626.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01nxmb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01nxmb ns:fictional_universe.fictional_universe.created_by ?x .\n}\n",
        "PotentialTopicEntityMention": "st trinians",
        "TopicEntityName": "St Trinian's School",
        "TopicEntityMid": "m.01nxmb",
        "InferentialChain": [
          "fictional_universe.fictional_universe.created_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v2jh",
            "EntityName": "Ronald Searle"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01nxmb": "St Trinian's School"
    },
    "qid_topic_entity": {
      "Q3495306": "St Trinian's School"
    },
    "index": 602
  },
  {
    "QuestionId": "WebQTest-948",
    "RawQuestion": "what are the supreme court cases?",
    "ProcessedQuestion": "what are the supreme court cases",
    "Parses": [
      {
        "ParseId": "WebQTest-948.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07sz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07sz1 ns:law.court.legal_cases ?x .\n}\n",
        "PotentialTopicEntityMention": "supreme court",
        "TopicEntityName": "Supreme Court of the United States",
        "TopicEntityMid": "m.07sz1",
        "InferentialChain": [
          "law.court.legal_cases"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_xc06k",
            "EntityName": "Law v. Siegel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_0hd",
            "EntityName": "Myers v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_34p",
            "EntityName": "Dastar Corp. v. Twentieth Century Fox Film Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_gcl",
            "EntityName": "Lochner v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0102pqly",
            "EntityName": "Burwell v. Hobby Lobby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010f95gt",
            "EntityName": "Motor Vehicles Manufacturers Ass'n v. State Farm Mutual Automobile Insurance Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010f9y51",
            "EntityName": "Schuette v. Coalition to Defend Affirmative Action"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010hmy_z",
            "EntityName": "Riley v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010hqgjj",
            "EntityName": "Octane Fitness, LLC v. ICON Health & Fitness, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01111jln",
            "EntityName": "McCullen v. Coakley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01115s_f",
            "EntityName": "American Broadcasting Cos. v. Aereo, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0113hp9g",
            "EntityName": "Harris v. Quinn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011x02",
            "EntityName": "Plessy v. Ferguson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012m_b",
            "EntityName": "McCulloch v. Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012m_p",
            "EntityName": "Dartmouth College v. Woodward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012mtx",
            "EntityName": "Chisholm v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012mxt",
            "EntityName": "Martin v. Hunter's Lessee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012my4",
            "EntityName": "Milliken v. Bradley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012myv",
            "EntityName": "Civil Rights Cases"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012mz5",
            "EntityName": "Munn v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012mzj",
            "EntityName": "Fletcher v. Peck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012n00",
            "EntityName": "Cohens v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012n0c",
            "EntityName": "Gibbons v. Ogden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012n11",
            "EntityName": "Ex parte Milligan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012pg6",
            "EntityName": "Gideon v. Wainwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012pm7",
            "EntityName": "Romer v. Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013pzk",
            "EntityName": "United States v. The Amistad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01447l",
            "EntityName": "United States v. Klein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01477y",
            "EntityName": "Boy Scouts of America v. Dale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014nvd",
            "EntityName": "Adair v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014p3v",
            "EntityName": "Heart of Atlanta Motel, Inc. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014pv2",
            "EntityName": "United States v. E. C. Knight Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014tbj",
            "EntityName": "West Virginia State Board of Education v. Barnette"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014tbw",
            "EntityName": "Minersville School District v. Gobitis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014v5p",
            "EntityName": "Wesberry v. Sanders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014ydb",
            "EntityName": "Garcia v. San Antonio Metropolitan Transit Authority"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014z9l",
            "EntityName": "Lemon v. Kurtzman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016_ft",
            "EntityName": "Pollock v. Farmers' Loan & Trust Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016b7f",
            "EntityName": "Swann v. Charlotte-Mecklenburg Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m_0",
            "EntityName": "Northwestern National Life Insurance Co. v. Riggs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m_c",
            "EntityName": "Slaughter-House Cases"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m6_",
            "EntityName": "Buchanan v. Warley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m6n",
            "EntityName": "Guinn v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m7r",
            "EntityName": "Miranda v. Arizona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m83",
            "EntityName": "Schenck v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m8g",
            "EntityName": "Chambers v. Florida"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016m94",
            "EntityName": "Dennis v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016mxn",
            "EntityName": "NAACP v. Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016mz5",
            "EntityName": "Santa Clara County v. Southern Pacific Railroad Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016n01",
            "EntityName": "Connecticut General Life Insurance Co. v. Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016n0d",
            "EntityName": "Wheeling Steel Corp. v. Glander"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016pz5",
            "EntityName": "Regents of the University of California v. Bakke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016r12",
            "EntityName": "West Coast Hotel Co. v. Parrish"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016r1v",
            "EntityName": "Muller v. Oregon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0172kv",
            "EntityName": "Planned Parenthood v. Casey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0172l5",
            "EntityName": "Griswold v. Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017l0y",
            "EntityName": "Brushaber v. Union Pacific Railroad Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017n0_",
            "EntityName": "R.A.V. v. City of St. Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017n09",
            "EntityName": "Miller v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018_c5",
            "EntityName": "Hunt v. Cromartie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018_f5",
            "EntityName": "Easley v. Cromartie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0191lm",
            "EntityName": "Wallace v. Jaffree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d1ws",
            "EntityName": "Grutter v. Bollinger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01f4vw",
            "EntityName": "New York Times Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01f4w6",
            "EntityName": "Miami Herald Publishing Co. v. Tornillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01f4wk",
            "EntityName": "Hustler Magazine v. Falwell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fjwt",
            "EntityName": "United States v. Shabani"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g1k_",
            "EntityName": "Brandenburg v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j9pl",
            "EntityName": "Lawrence v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kdjw",
            "EntityName": "Korematsu v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kpzr",
            "EntityName": "Baker v. Carr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lklf",
            "EntityName": "Gratz v. Bollinger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nd5t",
            "EntityName": "Oncale v. Sundowner Offshore Services, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p56y",
            "EntityName": "Abington School District v. Schempp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ph_4",
            "EntityName": "United States v. Butler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01phxw",
            "EntityName": "Schechter Poultry Corp. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pj8w",
            "EntityName": "Adkins v. Children's Hospital"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q228",
            "EntityName": "Bowers v. Hardwick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyhs",
            "EntityName": "Panama Refining Co. v. Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01sq41",
            "EntityName": "Consolidated Edison Co. v. Public Service Commission"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01swyn",
            "EntityName": "Engel v. Vitale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01sx06",
            "EntityName": "Reno v. American Civil Liberties Union"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01sx7v",
            "EntityName": "FCC v. Pacifica Foundation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01t0zd",
            "EntityName": "Sony Corp. of America v. Universal City Studios, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01t5xb",
            "EntityName": "Ex parte Garland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tqqg",
            "EntityName": "United States v. Nixon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tsdc",
            "EntityName": "Ex parte McCardle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vdp7",
            "EntityName": "Barron v. Baltimore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w0bz",
            "EntityName": "United States v. Morrison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wqh0",
            "EntityName": "Epperson v. Arkansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xjkv",
            "EntityName": "Dent v. West Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xsmr",
            "EntityName": "Shelley v. Kraemer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yvz4",
            "EntityName": "Loving v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zcnx",
            "EntityName": "Furman v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zglh",
            "EntityName": "Mapp v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_6y5",
            "EntityName": "United States v. Dominguez Benitez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_vwk",
            "EntityName": "Hamdi v. Rumsfeld"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_y_w",
            "EntityName": "Department of Transportation v. Public Citizen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020jnj",
            "EntityName": "Bobbs-Merrill Co. v. Straus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020jrn",
            "EntityName": "Bauer & Cie. v. O'Donnell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021wlq",
            "EntityName": "Sweatt v. Painter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02266f",
            "EntityName": "General Motors streetcar conspiracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.022ct3",
            "EntityName": "New York Times Co. v. Sullivan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.022gtt",
            "EntityName": "Worcester v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.022v7g",
            "EntityName": "Whitney v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.022wzf",
            "EntityName": "United States v. Eichman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023nxw",
            "EntityName": "Bolling v. Sharpe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024qns",
            "EntityName": "United States v. Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025vplq",
            "EntityName": "Quality King Distributors Inc., v. L'anza Research International Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025wz9w",
            "EntityName": "Byrd v. Blue Ridge Rural Electric Cooperative, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025wzd8",
            "EntityName": "Guaranty Trust Co. v. York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025x08w",
            "EntityName": "Hanna v. Plumer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025y1cy",
            "EntityName": "Keystone Bituminous Coal Ass'n v. DeBenedictis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025zg5d",
            "EntityName": "Egbert v. Lippmann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_fdl",
            "EntityName": "Black and White Taxicab and Transfer Co. v. Brown and Yellow Taxicab and Transfer Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026_hzg",
            "EntityName": "KSR International Co. v. Teleflex Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02603sk",
            "EntityName": "Central Hudson Gas & Electric Corp. v. Public Service Commission"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026085b",
            "EntityName": "McNeil v. Wisconsin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0260fdw",
            "EntityName": "Bragdon v. Abbott"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0261451",
            "EntityName": "Calder v. Bull"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026150l",
            "EntityName": "Sturges v. Crowninshield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02621v3",
            "EntityName": "Ewing v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02621w4",
            "EntityName": "Lockyer v. Andrade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0263qxp",
            "EntityName": "Knowles v. Iowa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264jx2",
            "EntityName": "American Insurance Co. v. 356 Bales of Cotton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264q7y",
            "EntityName": "Massiah v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264vlc",
            "EntityName": "Henderson v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0265xpn",
            "EntityName": "Strawbridge v. Curtiss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0266336",
            "EntityName": "United States v. Hubbell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0266j8r",
            "EntityName": "New York v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02672vf",
            "EntityName": "Kidd v. Pearson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0267ky1",
            "EntityName": "Zablocki v. Redhail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02683dl",
            "EntityName": "Mullane v. Central Hanover Bank & Trust Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0269cqc",
            "EntityName": "Martin v. City of Struthers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026bn7x",
            "EntityName": "Payton v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026bn8y",
            "EntityName": "Beacon Theatres, Inc. v. Westover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026bs35",
            "EntityName": "Breard v. Greene"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026d_m4",
            "EntityName": "Immigration and Naturalization Service v. Elias-Zacarias"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026dsgh",
            "EntityName": "Puerto Rico v. Branstad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026f1s9",
            "EntityName": "Immigration and Naturalization Service v. Stevic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026fnyh",
            "EntityName": "Immigration and Naturalization Service v. Cardoza-Fonseca"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g4ln",
            "EntityName": "United States v. Forty Barrels & Twenty Kegs of Coca-Cola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g4w7",
            "EntityName": "Feres v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026g5df",
            "EntityName": "Immigration and Naturalization Service v. Aguirre-Aguirre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026hxx7",
            "EntityName": "Late Corp. of the Church of Jesus Christ of Latter-Day Saints v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026js13",
            "EntityName": "Dean Milk Co. v. City of Madison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026jsjz",
            "EntityName": "Immigration and Naturalization Service v. Abudu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026jznl",
            "EntityName": "Davis v. Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026k55",
            "EntityName": "Cohen v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026kfh4",
            "EntityName": "Immigration and Naturalization Service v. Doherty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026kmc_",
            "EntityName": "Powell v. McCormack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026ktk3",
            "EntityName": "Celotex Corp. v. Catrett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026lw3f",
            "EntityName": "Mistretta v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026q1vx",
            "EntityName": "Village of Belle Terre v. Boraas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026qr2r",
            "EntityName": "Osborne v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026r1w9",
            "EntityName": "Palazzolo v. Rhode Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026r7x5",
            "EntityName": "Loretto v. Teleprompter Manhattan CATV Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026sj1l",
            "EntityName": "Cohen v. Cowles Media Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026v29v",
            "EntityName": "City of Richmond v. J.A. Croson Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wbpg",
            "EntityName": "Hurtado v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wdxm",
            "EntityName": "National Socialist Party of America v. Village of Skokie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wpws",
            "EntityName": "Bunting v. Oregon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026z9f",
            "EntityName": "Coffin v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026zm2k",
            "EntityName": "Meredith v. Jefferson County Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027_dth",
            "EntityName": "Nebraska Press Ass'n v. Stuart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0271zqt",
            "EntityName": "Parents Involved in Community Schools v. Seattle School District No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0273hn8",
            "EntityName": "Crandall v. Nevada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0274wb0",
            "EntityName": "Almendarez-Torres v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0276knv",
            "EntityName": "Huddleston v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02781z2",
            "EntityName": "Paul v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027b944",
            "EntityName": "Carey v. Musladin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027f48f",
            "EntityName": "Burdick v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027jhx3",
            "EntityName": "United States v. Harriss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027kqw",
            "EntityName": "Gitlow v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027ktg",
            "EntityName": "Near v. Minnesota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027msv4",
            "EntityName": "Illinois Central Railroad Co. v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027p67c",
            "EntityName": "Newberry v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027q6wx",
            "EntityName": "Sibbach v. Wilson & Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027qj6c",
            "EntityName": "World-Wide Volkswagen Corp. v. Woodson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027qvgs",
            "EntityName": "Fogerty v. Fantasy, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027s4hd",
            "EntityName": "Vernonia School District 47J v. Acton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027sws7",
            "EntityName": "Arizona v. Hicks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027wf_x",
            "EntityName": "Taylor v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027x16g",
            "EntityName": "Duro v. Reina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027yvbq",
            "EntityName": "Strickland v. Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027ywqd",
            "EntityName": "Eli Lilly & Co. v. Medtronic, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027zghj",
            "EntityName": "United Steelworkers v. Weber"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027zr1_",
            "EntityName": "Ohio v. Robinette"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027zryj",
            "EntityName": "Caterpillar, Inc. v. Lewis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0281c_p",
            "EntityName": "Old Chief v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0281lk_",
            "EntityName": "C&A Carbone, Inc. v. Town of Clarkstown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02823mt",
            "EntityName": "Linder v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02823ys",
            "EntityName": "Leary v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0282sy8",
            "EntityName": "Stanford v. Kentucky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0285wv_",
            "EntityName": "Oregon v. Bradshaw"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0287bgq",
            "EntityName": "Nixon v. Fitzgerald"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0287vbz",
            "EntityName": "Leocal v. Ashcroft"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0288p8w",
            "EntityName": "O'Connor v. Donaldson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02895v_",
            "EntityName": "Cleveland Board of Education v. LaFleur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0289jnk",
            "EntityName": "The Paquete Habana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028b_p8",
            "EntityName": "College Savings Bank v. Florida Prepaid Postsecondary Education Expense Board"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028bnc0",
            "EntityName": "Village of Arlington Heights v. Metropolitan Housing Development Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028c0d9",
            "EntityName": "Florida Prepaid Postsecondary Education Expense Board v. College Savings Bank"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028c670",
            "EntityName": "Lehnert v. Ferris Faculty Ass'n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028pbj",
            "EntityName": "Buckley v. Valeo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02904q",
            "EntityName": "United States v. Cruikshank"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d16t",
            "EntityName": "Memoirs v. Massachusetts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dh51",
            "EntityName": "Boynton v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02dwt2",
            "EntityName": "Cumming v. Richmond County Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02f6p8",
            "EntityName": "Elk Grove Unified School District v. Newdow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fx04",
            "EntityName": "Wabash, St. Louis & Pacific Railway Co. v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gf62",
            "EntityName": "Doe v. Chao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gqdj",
            "EntityName": "Flast v. Cohen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hfz7",
            "EntityName": "Tinker v. Des Moines Independent Community School District"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hgsw",
            "EntityName": "Oliphant v. Suquamish Indian Tribe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l68n",
            "EntityName": "Morrison v. Olson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02np73",
            "EntityName": "Hammer v. Dagenhart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nvyq",
            "EntityName": "Insular Cases"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p_26q",
            "EntityName": "Hope v. Pelzer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pj3qd",
            "EntityName": "Penry v. Lynaugh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pjm4",
            "EntityName": "Texas v. Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pk5tz",
            "EntityName": "United States v. Sioux Nation of Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pk6s6",
            "EntityName": "Mississippi University for Women v. Hogan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pkz3f",
            "EntityName": "United States v. Fordice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pm4cq",
            "EntityName": "Cunningham v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pm4d1",
            "EntityName": "Goesaert v. Cleary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pmfxy",
            "EntityName": "Philip Morris USA Inc. v. Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pml6p",
            "EntityName": "Lopez v. Gonzales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pmv4y",
            "EntityName": "Minnesota v. Mille Lacs Band of Chippewa Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pnb0d",
            "EntityName": "National Treasury Employees Union v. Von Raab"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pndt3",
            "EntityName": "Nixon v. Herndon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pp08t",
            "EntityName": "Ferguson v. City of Charleston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pprk1",
            "EntityName": "Tellabs, Inc. v. Makor Issues & Rights, Ltd."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pql14",
            "EntityName": "Humphrey's Executor v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pr7n6",
            "EntityName": "Scott v. Harris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02prkpy",
            "EntityName": "Witherspoon v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02prm0k",
            "EntityName": "United States v. Stanley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02przs9",
            "EntityName": "Goss v. Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02psyk7",
            "EntityName": "Mississippi v. Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pvnw7",
            "EntityName": "Nixon v. Condon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pvrlk",
            "EntityName": "Jones v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02px86f",
            "EntityName": "Dun & Bradstreet, Inc. v. Greenmoss Builders, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02py8p6",
            "EntityName": "District of Columbia v. Heller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q_j5q",
            "EntityName": "Runyon v. McCrary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q064l",
            "EntityName": "South Carolina v. Katzenbach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q2n5j",
            "EntityName": "Northern Securities Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q427c",
            "EntityName": "Cooper Industries, Inc. v. Leatherman Tool Group, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q44r5",
            "EntityName": "Merrell Dow Pharmaceuticals Inc. v. Thompson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q513r",
            "EntityName": "Berger v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q7gfg",
            "EntityName": "Collins v. Yosemite Park & Curry Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q8ymq",
            "EntityName": "United States v. Kagama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qbl_5",
            "EntityName": "New England Mutual Life Insurance Co. v. Woodworth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qdj0v",
            "EntityName": "Panetti v. Quarterman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qh5l9",
            "EntityName": "United States v. Robel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qhf75",
            "EntityName": "Anderson v. Mt. Clemens Pottery Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qjlsb",
            "EntityName": "Greenholtz v. Inmates of the Nebraska Penal & Correctional Complex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qkgbb",
            "EntityName": "BP America Production Co. v. Burton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qlbb4",
            "EntityName": "Barnes v. Glen Theatre, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qmxhp",
            "EntityName": "Stanford v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qn0m0",
            "EntityName": "Agostini v. Felton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qn35k",
            "EntityName": "Boumediene v. Bush"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qpct7",
            "EntityName": "Flagg Bros., Inc. v. Brooks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qptq4",
            "EntityName": "Fuentes v. Shevin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqb0r",
            "EntityName": "Whitman v. American Trucking Ass'ns, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqbpw",
            "EntityName": "Board of Regents of State Colleges v. Roth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqhv3",
            "EntityName": "James v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qqnnn",
            "EntityName": "Califano v. Yamasaki"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qr2tk",
            "EntityName": "Pacific States Box & Basket Co. v. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qr5m8",
            "EntityName": "Heckler v. Chaney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qr5n_",
            "EntityName": "United States v. Mead Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qslm",
            "EntityName": "Hollingsworth v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsr_g",
            "EntityName": "Shapiro v. Thompson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsz3l",
            "EntityName": "Manual Enterprises, Inc. v. Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qtlvw",
            "EntityName": "Florida v. Royer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qvr4p",
            "EntityName": "Hurley v. Irish-American Gay, Lesbian, & Bisexual Group of Boston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qx71g",
            "EntityName": "Clay v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qxdsq",
            "EntityName": "Pocket Veto Case"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qxs3v",
            "EntityName": "Microsoft Corp. v. AT&T Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qxz13",
            "EntityName": "Baker v. Morton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qy_6s",
            "EntityName": "Parratt v. Taylor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qyf_b",
            "EntityName": "Estelle v. Gamble"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qyg9n",
            "EntityName": "Correctional Services Corp. v. Malesko"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qygz8",
            "EntityName": "Monell v. Department of Social Services of the City of New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qyhb9",
            "EntityName": "Will v. Michigan Department of State Police"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qyq63",
            "EntityName": "Wilkinson v. Austin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r0pz6",
            "EntityName": "Helicopteros Nacionales de Colombia, S. A. v. Hall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r0q0z",
            "EntityName": "Asahi Metal Industry Co. v. Superior Court"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r0r3y",
            "EntityName": "Piper Aircraft Co. v. Reyno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r1jp4",
            "EntityName": "Colorado v. Connelly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r2sbt",
            "EntityName": "Coppage v. Kansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r3bdy",
            "EntityName": "Brown v. Hotel and Restaurant Employees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rb431",
            "EntityName": "McDonnell Douglas Corp. v. Green"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rck6x",
            "EntityName": "Ford v. Wainwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rctzz",
            "EntityName": "Bellotti v. Baird"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rfs47",
            "EntityName": "Ledbetter v. Goodyear Tire & Rubber Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rh217",
            "EntityName": "United States v. Flores-Montano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl24w",
            "EntityName": "Skinner v. Railway Labor Executives Ass'n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rvn05",
            "EntityName": "Credit Suisse Securities (USA) LLC v. Billing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rvrmr",
            "EntityName": "Bronston v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rvw0g",
            "EntityName": "Brendlin v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rwctt",
            "EntityName": "Hein v. Freedom From Religion Foundation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ry9gc",
            "EntityName": "Permanent Mission of India v. City of New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rz585",
            "EntityName": "Time, Inc. v. Firestone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rzw0t",
            "EntityName": "Federal Election Commission v. Wisconsin Right to Life, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02v8rj",
            "EntityName": "City of Boerne v. Flores"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vkj5_",
            "EntityName": "Enmund v. Florida"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vkj6c",
            "EntityName": "Tison v. Arizona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vlh5s",
            "EntityName": "Leegin Creative Leather Products, Inc. v. PSKS, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vpk_h",
            "EntityName": "Rita v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vvk5q",
            "EntityName": "NLRB v. J. Weingarten, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vvqg",
            "EntityName": "Roth v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vzkw",
            "EntityName": "Hazelwood v. Kuhlmeier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w7ls9",
            "EntityName": "Verizon Communications Inc. v. Law Offices of Curtis V. Trinko, LLP"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wbcb",
            "EntityName": "Gertz v. Robert Welch, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wcc37",
            "EntityName": "Sipuel v. Board of Regents of the University of Oklahoma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wctty",
            "EntityName": "Hill v. Wallace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wj09",
            "EntityName": "Webster v. Reproductive Health Services"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wvncz",
            "EntityName": "Board of Trade of City of Chicago v. Olsen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wx2py",
            "EntityName": "Saint Francis College v. al-Khazraji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wxfln",
            "EntityName": "MedImmune, Inc. v. Genentech, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wzny5",
            "EntityName": "Wallace v. Cutten"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x154z",
            "EntityName": "Harris v. McRae"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x1k82",
            "EntityName": "Lynch v. Donnelly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x1qgp",
            "EntityName": "Griffith v. Kentucky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x5_",
            "EntityName": "Feist Publications, Inc., v. Rural Telephone Service Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x6hrt",
            "EntityName": "Pace v. Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x79lj",
            "EntityName": "Adams v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xpr9",
            "EntityName": "Rochin v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yc8w",
            "EntityName": "Bernal v. Fainter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yxwv",
            "EntityName": "Cherokee Nation v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z1fjp",
            "EntityName": "New Mexico v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z2sfn",
            "EntityName": "Rose v. Locke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z4mm",
            "EntityName": "Intel Corp. v. Advanced Micro Devices, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z4z5t",
            "EntityName": "Terminiello v. City of Chicago"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z5dv6",
            "EntityName": "United States v. Ninety-Five Barrels Alleged Apple Cider Vinegar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z6bgl",
            "EntityName": "Strader v. Graham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zbrp",
            "EntityName": "United States v. Wong Kim Ark"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zwqx",
            "EntityName": "Rasul v. Bush"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zx8g",
            "EntityName": "Central Laborers' Pension Fund v. Heinz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_2jt",
            "EntityName": "Missouri v. Holland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_n2y",
            "EntityName": "Wisconsin v. Yoder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_rbb",
            "EntityName": "United States v. X-Citement Video, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030_vs",
            "EntityName": "McConnell v. FEC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030_yf",
            "EntityName": "Pierce v. Society of Sisters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030p8b",
            "EntityName": "Jacobellis v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030r68",
            "EntityName": "Buck v. Bell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031sqv",
            "EntityName": "Ex parte Bollman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035d4s",
            "EntityName": "Skinner v. Oklahoma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dvr",
            "EntityName": "Ex parte Endo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037h7r",
            "EntityName": "Hiibel v. Sixth Judicial District Court of Nevada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037lcc",
            "EntityName": "Santa Fe Independent School District v. Doe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038b7t",
            "EntityName": "Clinton v. City of New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038gs8",
            "EntityName": "Terry v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.038p5z",
            "EntityName": "Rumsfeld v. Padilla"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039j7w",
            "EntityName": "Smith v. Allwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03b8cv",
            "EntityName": "Blakely v. Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c041f",
            "EntityName": "Edmonson v. Leesville Concrete Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c10gl",
            "EntityName": "Flint v. Stone Tracy Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c4zfc",
            "EntityName": "Georgia v. Stanton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c4zxh",
            "EntityName": "Chicago, Milwaukee & St. Paul Railway Co. v. Minnesota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5fpp",
            "EntityName": "New State Ice Co. v. Liebmann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5qcc",
            "EntityName": "Bose Corp. v. Consumers Union of United States, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5slw",
            "EntityName": "United States v. Students Challenging Regulatory Agency Procedures"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cbb_1",
            "EntityName": "Baze v. Rees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cjxx2",
            "EntityName": "Kansas v. Hendricks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03clmp3",
            "EntityName": "Moyer v. Peabody"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cly1r",
            "EntityName": "Ohio v. Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cmgt_",
            "EntityName": "Sanchez-Llamas v. Oregon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cnjrb",
            "EntityName": "Murdock v. Pennsylvania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cnnlj",
            "EntityName": "Jones v. City of Opelika"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cnppj",
            "EntityName": "Cox v. New Hampshire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cnps8",
            "EntityName": "Dickinson v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cnqdy",
            "EntityName": "Douglas v. City of Jeannette"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqflb",
            "EntityName": "Follett v. Town of McCormick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqfqg",
            "EntityName": "Prince v. Massachusetts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqfvy",
            "EntityName": "Watchtower Bible & Tract Society of New York, Inc. v. Village of Stratton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqltl",
            "EntityName": "J.E.B. v. Alabama ex rel. T.B."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crdyr",
            "EntityName": "Falbo v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crf8d",
            "EntityName": "Estep v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crfng",
            "EntityName": "Sicurella v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crfx0",
            "EntityName": "Witmer v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crg1j",
            "EntityName": "Niemotko v. Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crh3t",
            "EntityName": "Jamison v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crhff",
            "EntityName": "Fowler v. Rhode Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03crn02",
            "EntityName": "Poulos v. New Hampshire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs1j_",
            "EntityName": "Gibson v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs1lq",
            "EntityName": "Cox v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs1md",
            "EntityName": "Simmons v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs1sc",
            "EntityName": "Tucker v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs1xh",
            "EntityName": "Wooley v. Maynard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs20z",
            "EntityName": "Largent v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs21_",
            "EntityName": "Busey v. District of Columbia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs54d",
            "EntityName": "Thomas v. Review Board of the Indiana Employment Security Division"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cs8r7",
            "EntityName": "Taylor v. Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03csx0s",
            "EntityName": "Ingraham v. Wright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cv5l4",
            "EntityName": "Saia v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cyh5q",
            "EntityName": "Taft v. Bowers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d0g84",
            "EntityName": "Yasui v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d4s_",
            "EntityName": "Coleman v. Miller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03grhrj",
            "EntityName": "Planned Parenthood of Central Missouri v. Danforth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gscy7",
            "EntityName": "Frank Lyon Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gsmw9",
            "EntityName": "Kimbrough v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hjn32",
            "EntityName": "Pruneyard Shopping Center v. Robins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hkvp2",
            "EntityName": "Hinderlider v. La Plata River & Cherry Creek Ditch Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hly6",
            "EntityName": "Reynolds v. Sims"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hnkz3",
            "EntityName": "Mitchell v. Forsyth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jdcz",
            "EntityName": "Tennessee v. Lane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jgvz",
            "EntityName": "Board of Trustees of the University of Alabama v. Garrett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m6dvt",
            "EntityName": "Addington v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m725g",
            "EntityName": "Estelle v. Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m7cj7",
            "EntityName": "Illinois v. Lidster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m9xwp",
            "EntityName": "Federal Power Commission v. Tuscarora Indian Nation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mb6y5",
            "EntityName": "Tee-Hit-Ton Indians v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mcssw",
            "EntityName": "Wyoming v. Colorado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mf8pp",
            "EntityName": "Bates v. State Bar of Arizona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mgh_y",
            "EntityName": "Florida Bar v. Went For It, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ns4m0",
            "EntityName": "Oregon Waste Systems, Inc. v. Department of Environmental Quality of Oregon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03pk7r",
            "EntityName": "Edwards v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03pv50",
            "EntityName": "Branzburg v. Hayes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qhgwz",
            "EntityName": "Flood v. Kuhn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qkk_k",
            "EntityName": "Haynes v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ql0qd",
            "EntityName": "Herring v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qlf_5",
            "EntityName": "Toolson v. New York Yankees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qp5l_",
            "EntityName": "United States v. International Boxing Club of New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r996",
            "EntityName": "McLaurin v. Oklahoma State Regents"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rsr5",
            "EntityName": "Everson v. Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03s0jd",
            "EntityName": "Lee v. Weisman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03s4g4",
            "EntityName": "Minor v. Happersett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03smfr",
            "EntityName": "Apprendi v. New Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sv8s",
            "EntityName": "Meyer v. Nebraska"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03sxm0",
            "EntityName": "First National Bank of Boston v. Bellotti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1xk",
            "EntityName": "Federal Baseball Club v. National League"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03thfj",
            "EntityName": "Abrams v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03tj4z",
            "EntityName": "Perry v. Sindermann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03tjlw",
            "EntityName": "Speiser v. Randall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v9t0",
            "EntityName": "Wheaton v. Peters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vfh3",
            "EntityName": "Michigan v. Long"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w9g7y",
            "EntityName": "Kennedy v. Louisiana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wbj58",
            "EntityName": "Radovich v. National Football League"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wcmg8",
            "EntityName": "Harris v. Balk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wdwc6",
            "EntityName": "Board of Airport Commissioners of Los Angeles v. Jews for Jesus, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wgppk",
            "EntityName": "Farrington v. Tokushige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03x_n0",
            "EntityName": "Lum v. Rice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xhgq",
            "EntityName": "Batson v. Kentucky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xj1q",
            "EntityName": "Nix v. Whiteside"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xw5z",
            "EntityName": "Chaplinsky v. New Hampshire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y6jwp",
            "EntityName": "Avegno v. Schmidt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yd_q2",
            "EntityName": "Street v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03zb7_",
            "EntityName": "Oregon v. Mitchell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_rrk",
            "EntityName": "Burrow-Giles Lithographic Co. v. Sarony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04050tz",
            "EntityName": "Gilbert v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0408d1v",
            "EntityName": "Doyle v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040ntz",
            "EntityName": "United States v. Curtiss-Wright Export Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04117y4",
            "EntityName": "County of Sacramento v. Lewis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04182rw",
            "EntityName": "Virginia v. Moore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0421p6y",
            "EntityName": "Roberts v. United States Jaycees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042493",
            "EntityName": "Hague v. Committee for Industrial Organization"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0428fm",
            "EntityName": "Rogers v. Tennessee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.042jj3",
            "EntityName": "Bouie v. City of Columbia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043r81t",
            "EntityName": "Crawford v. Marion County Election Board"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.044njz",
            "EntityName": "Powell v. Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.045vqm",
            "EntityName": "Miller v. Johnson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0465bjs",
            "EntityName": "United States v. Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0466b2b",
            "EntityName": "California v. Byers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046whn",
            "EntityName": "Bob Jones University v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0471ds",
            "EntityName": "United States v. Miller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047b032",
            "EntityName": "Rummel v. Estelle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047bb4h",
            "EntityName": "Maynard v. Cartwright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047bm02",
            "EntityName": "Beck v. Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047cs10",
            "EntityName": "Godfrey v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047dfn9",
            "EntityName": "Wilkerson v. Utah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047dx7t",
            "EntityName": "Lockett v. Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047lgj5",
            "EntityName": "Gall v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047n5t0",
            "EntityName": "Indiana v. Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qby2",
            "EntityName": "California v. Acevedo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qyx9",
            "EntityName": "Passenger Cases"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047rt5w",
            "EntityName": "Talbot v. Janson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047smqs",
            "EntityName": "Silver v. New York Stock Exchange"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0485j3",
            "EntityName": "Gregg v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04881q",
            "EntityName": "Republic of Austria v. Altmann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.048t_f",
            "EntityName": "Small v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04bcvk",
            "EntityName": "Eisner v. Macomber"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cwj6b",
            "EntityName": "United States v. Shoshone Tribe of Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d3t1",
            "EntityName": "Diamond v. Chakrabarty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04d4d4",
            "EntityName": "Escobedo v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04df5z",
            "EntityName": "Stump v. Sparkman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fndl",
            "EntityName": "Republican Party of Minnesota v. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fzcs",
            "EntityName": "Nix v. Hedden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gp39",
            "EntityName": "New Jersey v. T. L. O."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04h6y0",
            "EntityName": "McGowan v. Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqtx",
            "EntityName": "United States v. Raines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hxfw",
            "EntityName": "United States v. Carolene Products Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jr9k_",
            "EntityName": "Hart v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jr9l2",
            "EntityName": "Pryor v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jr9l5",
            "EntityName": "Schneider v. State (of New Jersey)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jr9l8",
            "EntityName": "Cantwell v. State of Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jr9lc",
            "EntityName": "Martin v. City of Struthers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jtxh",
            "EntityName": "Torcaso v. Watkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04k5fc",
            "EntityName": "United States v. Paramount Pictures, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04kkp9",
            "EntityName": "Prigg v. Pennsylvania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lw97",
            "EntityName": "NLRB v. Jones & Laughlin Steel Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n1vf",
            "EntityName": "Church of Lukumi Babalu Aye v. City of Hialeah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p9kp",
            "EntityName": "Immigration and Naturalization Service v. Chadha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pkpj",
            "EntityName": "Wickard v. Filburn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q7ry",
            "EntityName": "Maryland v. Craig"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qmky",
            "EntityName": "Dowling v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04r2ck",
            "EntityName": "Texas v. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s_93",
            "EntityName": "Strauder v. West Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t84s",
            "EntityName": "Frontiero v. Richardson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t897",
            "EntityName": "Craig v. Boren"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tgzm",
            "EntityName": "City of Cleburne v. Cleburne Living Center, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjfz",
            "EntityName": "Crawford v. Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjq_",
            "EntityName": "Yick Wo v. Hopkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xg61",
            "EntityName": "Barker v. Wingo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y17z",
            "EntityName": "Reynolds v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y4zg",
            "EntityName": "Doe v. Bolton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zl_c",
            "EntityName": "Joint Anti-Fascist Refugee Committee v. McGrath"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zqlh",
            "EntityName": "Hudson v. McMillian"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05_y4r",
            "EntityName": "Debs v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050_q6",
            "EntityName": "United States v. O'Brien"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051_dc",
            "EntityName": "Trop v. Dulles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05153s",
            "EntityName": "Village of Euclid v. Ambler Realty Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.052_5m",
            "EntityName": "Goldberg v. Kelly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.052pgq",
            "EntityName": "Ozawa v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0530q3",
            "EntityName": "Universal Camera Corp. v. NLRB"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053d7b",
            "EntityName": "Daubert v. Merrell Dow Pharmaceuticals, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053nh_",
            "EntityName": "McCreary County v. American Civil Liberties Union"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054199",
            "EntityName": "Turner v. Safley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05538m",
            "EntityName": "Downes v. Bidwell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056k5",
            "EntityName": "Marbury v. Madison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059wvf",
            "EntityName": "Van Orden v. Perry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b7nj",
            "EntityName": "Vermont Yankee Nuclear Power Corp. v. Natural Resources Defense Council, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b8pv",
            "EntityName": "Roper v. Simmons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bq4l",
            "EntityName": "Bradwell v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bqlp",
            "EntityName": "Atkins v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05btq9",
            "EntityName": "Tenet v. Doe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cj74",
            "EntityName": "Oyama v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05ctp7",
            "EntityName": "Wolf v. Colorado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cvcb",
            "EntityName": "Adamson v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cvtg",
            "EntityName": "Duncan v. Louisiana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cwcm",
            "EntityName": "Palko v. Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05d1d7",
            "EntityName": "Balzac v. Porto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05d232",
            "EntityName": "Cooley v. Board of Wardens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05dqfl",
            "EntityName": "Moore v. Dempsey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05dyn0",
            "EntityName": "Holden v. Hardy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f7x2",
            "EntityName": "Bethel School District v. Fraser"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fxt6",
            "EntityName": "United States v. Place"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05gmjx",
            "EntityName": "Youngstown Sheet & Tube Co. v. Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h6g6",
            "EntityName": "Johnson v. Eisentrager"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05hdkq",
            "EntityName": "Ex parte Quirin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05hjtz",
            "EntityName": "Muskrat v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jk1d",
            "EntityName": "Erie Railroad Co. v. Tompkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jmsy",
            "EntityName": "Ex parte Young"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jtmv",
            "EntityName": "Interstate Commerce Commission v. Cincinnati, New Orleans & Texas Pacific Railway Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jtyv",
            "EntityName": "NBC, Inc. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jv99",
            "EntityName": "United States v. Southwestern Cable Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jwgh",
            "EntityName": "Londoner v. City and County of Denver"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jwnt",
            "EntityName": "Bi-Metallic Investment Co. v. State Board of Equalization"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k1fp",
            "EntityName": "United States v. Ross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k87b",
            "EntityName": "United States v. Continental Can Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kkn5",
            "EntityName": "Mathews v. Eldridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05km0j",
            "EntityName": "Reed v. Reed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lmj3",
            "EntityName": "MGM Studios, Inc. v. Grokster, Ltd."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mx0k",
            "EntityName": "Zelman v. Simmons-Harris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05n_td",
            "EntityName": "Reid v. Covert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p_ly",
            "EntityName": "Pfaff v. Wells Electronics, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p0d1",
            "EntityName": "Cruzan v. Director, Missouri Department of Health"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pr7_",
            "EntityName": "Hans v. Louisiana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05psg8",
            "EntityName": "Giles v. Harris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pxq5",
            "EntityName": "Griggs v. Duke Power Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05q_pz",
            "EntityName": "Festo Corp. v. Shoketsu Kinzoku Kogyo Kabushiki Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qc1_",
            "EntityName": "Edelman v. Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qf6s",
            "EntityName": "Seminole Tribe of Florida v. Florida"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qf98",
            "EntityName": "Railroad Commission v. Pullman Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qfc0",
            "EntityName": "Younger v. Harris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qff4",
            "EntityName": "Rooker v. Fidelity Trust Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qffh",
            "EntityName": "District of Columbia Court of Appeals v. Feldman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qr1v",
            "EntityName": "Graver Tank & Manufacturing Co. v. Linde Air Products Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qs02",
            "EntityName": "Warner-Jenkinson Co. v. Hilton Davis Chemical Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qyvf",
            "EntityName": "Swift v. Tyson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r34d",
            "EntityName": "Allen v. Wright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r8k2",
            "EntityName": "Louisville & Nashville Railroad Co. v. Mottley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r90b",
            "EntityName": "Shaffer v. Heitner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r94w",
            "EntityName": "International Shoe Co. v. Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rhbr",
            "EntityName": "Banco Nacional de Cuba v. Sabbatino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rkwk",
            "EntityName": "Fitzpatrick v. Bitzer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rndx",
            "EntityName": "Harper & Row v. Nation Enterprises"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05s0q9",
            "EntityName": "Hartford Fire Insurance Co. v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05scwz",
            "EntityName": "United States v. Trans-Missouri Freight Ass'n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sjq9",
            "EntityName": "Merck KGaA v. Integra Lifesciences I, Ltd."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05svbhn",
            "EntityName": "Savana Redding v. Safford Unified School District #1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tbxj",
            "EntityName": "Schweiker v. Chilicky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tc53",
            "EntityName": "Bivens v. Six Unknown Named Agents"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tfw1",
            "EntityName": "Yates v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v7c4",
            "EntityName": "United States v. Verdugo-Urquidez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vqg6",
            "EntityName": "England v. Louisiana State Board of Medical Examiners"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vzbw",
            "EntityName": "Stenberg v. Carhart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yny9",
            "EntityName": "Stanley v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06__sw",
            "EntityName": "United Mine Workers of America v. Bagwell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_x2s",
            "EntityName": "Rust v. Sullivan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_y4n",
            "EntityName": "Hamdan v. Rumsfeld"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060j90",
            "EntityName": "Katz v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060vr1",
            "EntityName": "FEC v. Akins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060ybd",
            "EntityName": "Cannon v. University of Chicago"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06109x",
            "EntityName": "Poe v. Ullman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0610ll",
            "EntityName": "DeFunis v. Odegaard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0610xf",
            "EntityName": "Friends of the Earth, Inc. v. Laidlaw Environmental Services, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0616ts",
            "EntityName": "Standard Oil Co. of New Jersey v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.061jr4",
            "EntityName": "Gray v. Sanders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.061zng",
            "EntityName": "Marsh v. Chambers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0623k8",
            "EntityName": "Tory v. Cochran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.062jkm",
            "EntityName": "Eisenstadt v. Baird"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.063mbs",
            "EntityName": "Lau v. Nichols"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064tw5",
            "EntityName": "Florida v. Riley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hwr",
            "EntityName": "Nixon v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065nw8",
            "EntityName": "Berman v. Parker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0668mf",
            "EntityName": "Granholm v. Heald"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066stq",
            "EntityName": "United States v. Reynolds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0677yt",
            "EntityName": "International News Service v. Associated Press"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067v3b",
            "EntityName": "Arthur Andersen LLP v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069xqj",
            "EntityName": "Cutter v. Wilkinson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bhn_",
            "EntityName": "North Carolina v. Alford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06d9fc",
            "EntityName": "Spector v. Norwegian Cruise Line Ltd."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dkxc",
            "EntityName": "Gonzales v. Raich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dtg3",
            "EntityName": "DeLima v. Bidwell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fwzr",
            "EntityName": "Employment Division v. Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06g8n6",
            "EntityName": "United States v. Booker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06h_br",
            "EntityName": "Hernandez v. Texas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06k81l",
            "EntityName": "California v. Greenwood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lt20",
            "EntityName": "Stromberg v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lx91",
            "EntityName": "Olmstead v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m4tj",
            "EntityName": "Kelo v. City of New London"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mtp7",
            "EntityName": "PGA Tour, Inc. v. Martin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mtyn",
            "EntityName": "Ring v. Arizona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mxcc",
            "EntityName": "Cramer v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06p3gn",
            "EntityName": "Town of Castle Rock v. Gonzales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06p8q0",
            "EntityName": "National Cable & Telecommunications Ass'n v. Brand X Internet Services"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ppg1",
            "EntityName": "Hawaii Housing Authority v. Midkiff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pql3",
            "EntityName": "City of Philadelphia v. New Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pqq8",
            "EntityName": "Maine v. Taylor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pqvw",
            "EntityName": "Hunt v. Washington State Apple Advertising Commission"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pv1p",
            "EntityName": "United Public Workers v. Mitchell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q29c",
            "EntityName": "Crosby v. National Foreign Trade Council"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2dk",
            "EntityName": "Florida Lime & Avocado Growers, Inc. v. Paul"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06qj4j",
            "EntityName": "Berea College v. Kentucky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06r0hv",
            "EntityName": "McLaughlin v. Florida"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s64c",
            "EntityName": "Missouri v. Jenkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sgjh",
            "EntityName": "United States v. Bhagat Singh Thind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06txw0",
            "EntityName": "New York Times Co. v. Tasini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v_lq",
            "EntityName": "Scott v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v9lj",
            "EntityName": "Pennoyer v. Neff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vp4y",
            "EntityName": "United States v. Kirby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vy3p",
            "EntityName": "Forsyth County v. Nationalist Movement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vzx7",
            "EntityName": "Betts v. Brady"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wf69",
            "EntityName": "Church of the Holy Trinity v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06z51g",
            "EntityName": "Community for Creative Non-Violence v. Reid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070_74",
            "EntityName": "Diamond v. Diehr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0704mb",
            "EntityName": "BMW of North America, Inc. v. Gore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0704sv",
            "EntityName": "Alaska v. Native Village of Venetie Tribal Government"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0706bb",
            "EntityName": "Lujan v. Defenders of Wildlife"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0706sz",
            "EntityName": "Ayotte v. Planned Parenthood of Northern New England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070l38",
            "EntityName": "Chung Fook v. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070nsh",
            "EntityName": "Tennessee Valley Authority v. Hill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070x68",
            "EntityName": "Parisi v. Davidson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070xzz",
            "EntityName": "Rice v. Cayetano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070y1t",
            "EntityName": "Smith v. Doe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071cmd",
            "EntityName": "United States v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071sqk",
            "EntityName": "United States v. Playboy Entertainment Group"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0720vx",
            "EntityName": "TrafFix Devices, Inc. v. Marketing Displays, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074j51",
            "EntityName": "Atwater v. City of Lago Vista"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074w5s",
            "EntityName": "Champion v. Ames"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.078gl6",
            "EntityName": "United States v. Darby Lumber Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0793qk",
            "EntityName": "Calder v. Jones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079ncs",
            "EntityName": "Meritor Savings Bank v. Vinson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07b5lr",
            "EntityName": "United States v. Gouveia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07d9nr",
            "EntityName": "Fullilove v. Klutznick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07h23x",
            "EntityName": "Virginia v. Black"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k3yk",
            "EntityName": "Hirabayashi v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07lchr",
            "EntityName": "Hylton v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07m90c",
            "EntityName": "Head Money Cases"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07rtw1",
            "EntityName": "Parker v. Flook"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07shh1",
            "EntityName": "Stuart v. Laird"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sj8v",
            "EntityName": "Westside School District v. Mergens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sjj5",
            "EntityName": "De Jonge v. Oregon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tfyl",
            "EntityName": "Bowen v. Roy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v8gt",
            "EntityName": "Dillon v. Gloss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wxm4",
            "EntityName": "Baker v. Selden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07x70c",
            "EntityName": "Harper v. Virginia State Board of Elections"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07xr00",
            "EntityName": "United States v. Sprague"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07yd3w",
            "EntityName": "Island Trees School District v. Pico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08_8d0",
            "EntityName": "Ball v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08_ddj",
            "EntityName": "Jones v. Alfred H. Mayer Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08_v5z",
            "EntityName": "Cheek v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081vhm",
            "EntityName": "Lauro Lines v. Chasser"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082tn_",
            "EntityName": "Washington v. Davis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083h19",
            "EntityName": "Kyllo v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084qrb",
            "EntityName": "Kawakita v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084t22",
            "EntityName": "Bell v. Wolfish"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084tyb",
            "EntityName": "United States v. Moreland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084wjd",
            "EntityName": "Hills v. Gautreaux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085mv3",
            "EntityName": "Markman v. Westview Instruments, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085tr9",
            "EntityName": "Jaffee v. Redmond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08666x",
            "EntityName": "Gonzales v. Oregon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.086kr9",
            "EntityName": "Campbell v. Acuff-Rose Music, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.087nbb",
            "EntityName": "Ake v. Oklahoma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088rby",
            "EntityName": "United States v. Seeger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088rfq",
            "EntityName": "Board of Education of Kiryas Joel Village School District v. Grumet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088rrs",
            "EntityName": "United States v. Ballard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.089s5v",
            "EntityName": "Bailey v. Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08cqb7",
            "EntityName": "California Democratic Party v. Jones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08cqj0",
            "EntityName": "Nixon v. Shrink Missouri Government PAC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08cqnp",
            "EntityName": "Storer v. Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dv_z",
            "EntityName": "Schriro v. Summerlin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fm5l",
            "EntityName": "Johnson v. M'Intosh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08fn7f",
            "EntityName": "Carnival Cruise Lines, Inc. v. Shute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gds6",
            "EntityName": "Bates v. City of Little Rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gdx2",
            "EntityName": "Brown v. Louisiana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gdzn",
            "EntityName": "Cox v. Louisiana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08gf14",
            "EntityName": "Edwards v. South Carolina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08hjff",
            "EntityName": "Hepburn v. Griswold"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08jq8q",
            "EntityName": "Ashcroft v. Free Speech Coalition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08lf74",
            "EntityName": "Brady v. Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08lkv3",
            "EntityName": "Grosjean v. American Press Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08p4tt",
            "EntityName": "Solem v. Helm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08q113",
            "EntityName": "United States v. Thompson-Center Arms Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08qr05",
            "EntityName": "South Dakota v. Dole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08qrpn",
            "EntityName": "Benton v. Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08qt4c",
            "EntityName": "Blanton v. City of North Las Vegas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08rk28",
            "EntityName": "International Salt Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08s84d",
            "EntityName": "Dickerson v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08tsfv",
            "EntityName": "Commissioner v. Glenshaw Glass Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08vdfx",
            "EntityName": "Scheidler v. National Organization for Women"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08wfzf",
            "EntityName": "United States v. Leon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08yqqm",
            "EntityName": "Goldwater v. Carter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09__jl",
            "EntityName": "Hansberry v. Lee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093908",
            "EntityName": "Charles River Bridge v. Warren Bridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093y57",
            "EntityName": "Sheldon v. Sill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0942g4",
            "EntityName": "James v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.094hxp",
            "EntityName": "Bowers v. Kerbaugh-Empire Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.096ch0",
            "EntityName": "County of Allegheny v. American Civil Liberties Union"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.096wr1",
            "EntityName": "Rumsfeld v. Forum for Academic & Institutional Rights, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09702f",
            "EntityName": "City of Akron v. Akron Center for Reproductive Health"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097055",
            "EntityName": "Hodgson v. Minnesota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097fyf",
            "EntityName": "United States v. Constantine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.098p3l",
            "EntityName": "Chevron U.S.A., Inc. v. Natural Resources Defense Council, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.098qmq",
            "EntityName": "McCleskey v. Kemp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.099x5t",
            "EntityName": "Coker v. Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09bk3h",
            "EntityName": "Plyler v. Doe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09cf40",
            "EntityName": "Illinois v. Gates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09d1nt",
            "EntityName": "City of Indianapolis v. Edmond"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09db0p",
            "EntityName": "Locke v. Davey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09dp99",
            "EntityName": "Kumho Tire Co. v. Carmichael"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09f38_",
            "EntityName": "Clinton v. Jones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09hysk",
            "EntityName": "Duke Power Co. v. Carolina Environmental Study Group"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l_l_",
            "EntityName": "Milkovich v. Lorain Journal Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09p44_",
            "EntityName": "United States v. Schwimmer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09q6sj",
            "EntityName": "Lisenba v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09s89g",
            "EntityName": "Utah v. Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09sbs6",
            "EntityName": "Willson v. Black-Bird Creek Marsh Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v1_d",
            "EntityName": "Bailey v. Drexel Furniture Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v3zc",
            "EntityName": "Gregory v. Helvering"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v7zp",
            "EntityName": "Luther v. Borden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09yl8q",
            "EntityName": "Schenck v. Pro-Choice Network of Western New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09zybd",
            "EntityName": "United States v. United States District Court"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_rc8",
            "EntityName": "Alden v. Maine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b08gb",
            "EntityName": "Warth v. Seldin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b19x8",
            "EntityName": "United States v. Salerno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5bz5",
            "EntityName": "Beauharnais v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5r1c",
            "EntityName": "Oregon v. Guzek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b8d5w",
            "EntityName": "Central Virginia Community College v. Katz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b9svv",
            "EntityName": "Williams v. Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bb05n",
            "EntityName": "Joseph Burstyn, Inc. v. Wilson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bdkr",
            "EntityName": "Eldred v. Ashcroft"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bgx3l",
            "EntityName": "Feiner v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhphy",
            "EntityName": "Afroyim v. Rusk"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0blntr",
            "EntityName": "Prize Cases"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0blxr7",
            "EntityName": "Gonzales v. O Centro Espirita Beneficente Uniao do Vegetal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bml3r",
            "EntityName": "Twining v. New Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bq4rg",
            "EntityName": "Kohl v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqrj0",
            "EntityName": "In re Debs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0br8wv",
            "EntityName": "Marshall v. Marshall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt2_z",
            "EntityName": "Katzenbach v. Morgan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0btg_",
            "EntityName": "Edwards v. Aguillard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvxy1",
            "EntityName": "Chimel v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bx7l5",
            "EntityName": "Cort v. Ash"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bxtvx",
            "EntityName": "Exxon Mobil Corp. v. Saudi Basic Industries Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzw8q",
            "EntityName": "Citizens to Preserve Overton Park v. Volpe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bzyrw",
            "EntityName": "United States v. Hudson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_xx0",
            "EntityName": "Morissette v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_yg7",
            "EntityName": "Wisconsin v. Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c009f",
            "EntityName": "Kassel v. Consolidated Freightways Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c13b6",
            "EntityName": "Brown v. Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3mlk",
            "EntityName": "Gomillion v. Lightfoot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c4hys",
            "EntityName": "McCollum v. Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c4q2g",
            "EntityName": "Georgia v. Randolph"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5byl",
            "EntityName": "American Well Works Co. v. Layne & Bowler Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5ks_",
            "EntityName": "Burford v. Sun Oil Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5rpr",
            "EntityName": "Tahoe-Sierra Preservation Council, Inc. v. Tahoe Regional Planning Agency"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c61c5",
            "EntityName": "United States v. Matlock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c69vy",
            "EntityName": "Illinois v. Rodriguez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6tdp",
            "EntityName": "Grove City College v. Bell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6v5m",
            "EntityName": "Shaw v. Reno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6vtw",
            "EntityName": "Virginia State Pharmacy Board v. Virginia Citizens Consumer Council"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c7b9v",
            "EntityName": "Gonzales v. Carhart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c7vbb",
            "EntityName": "United States v. Grubbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c7yfy",
            "EntityName": "Chauffeurs, Teamsters, & Helpers Local No. 391 v. Terry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c84xt",
            "EntityName": "Illinois Tool Works Inc. v. Independent Ink, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c85cp",
            "EntityName": "Upjohn Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c85yh",
            "EntityName": "Burger King Corp. v. Rudzewicz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c86p_",
            "EntityName": "Thompson v. Oklahoma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8gv9",
            "EntityName": "Steward Machine Co. v. Davis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9sd9",
            "EntityName": "Marquez v. Screen Actors Guild Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ccx_p",
            "EntityName": "Rapanos v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cg83t",
            "EntityName": "Texaco Inc. v. Dagher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cgvwx",
            "EntityName": "National League of Cities v. Usery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ch10w",
            "EntityName": "Northern Pipeline Construction Co. v. Marathon Pipe Line Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chfth",
            "EntityName": "Clearfield Trust Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chw1s",
            "EntityName": "Fox Film Corp. v. Muller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cj_by",
            "EntityName": "Washington v. Glucksberg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cj5c_",
            "EntityName": "Exxon Corp. v. Governor of Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjmrn",
            "EntityName": "Penn Central Transportation Co. v. New York City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjqtm",
            "EntityName": "Saenz v. Roe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cln5p",
            "EntityName": "Tennessee v. Garner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cly6s",
            "EntityName": "Missouri ex rel. Gaines v. Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm79m",
            "EntityName": "Colorado River Water Conservation District v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnk83",
            "EntityName": "Gade v. National Solid Wastes Management Ass'n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnlck",
            "EntityName": "City of Mobile v. Bolden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cp002",
            "EntityName": "Nebbia v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cp07r",
            "EntityName": "Williamson v. Lee Optical Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cplwc",
            "EntityName": "Continental Paper Bag Co. v. Eastern Paper Bag Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cps0p",
            "EntityName": "Rostker v. Goldberg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cpyrq",
            "EntityName": "Arbaugh v. Y & H Corp."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq5xy",
            "EntityName": "Hawker v. New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqhzq",
            "EntityName": "Dolan v. United States Postal Service"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cqw9b",
            "EntityName": "Marsh v. Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crhht",
            "EntityName": "Commodity Futures Trading Commission v. Schor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cskb1",
            "EntityName": "Brigham City v. Stuart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ct1d2",
            "EntityName": "Pennsylvania Coal Co. v. Mahon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ct1rq",
            "EntityName": "San Antonio Independent School District v. Rodriguez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cwfy0",
            "EntityName": "Northern Insurance Co. of New York v. Chatham County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cwlp1",
            "EntityName": "Sale v. Haitian Centers Council, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cz1tc",
            "EntityName": "Bartnicki v. Vopper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cz83m",
            "EntityName": "New York City Transit Authority v. Beazer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0czcs6",
            "EntityName": "United States v. Harris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_99m",
            "EntityName": "Stewart v. Abend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d_d5q",
            "EntityName": "Lovell v. City of Griffin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d1c6j",
            "EntityName": "Martin v. Wilks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d1cxy",
            "EntityName": "Dolan v. City of Tigard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2fpq",
            "EntityName": "Day v. McDonough"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d2ngd",
            "EntityName": "Cantwell v. Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d3lky",
            "EntityName": "Jones v. Flowers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d51zf",
            "EntityName": "United Building & Construction Trades Council v. Mayor and Council of Camden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d57br",
            "EntityName": "Cooper v. Aaron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d59x2",
            "EntityName": "Holmes v. South Carolina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d5dyr",
            "EntityName": "eBay Inc. v. MercExchange, L.L.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d6pr3",
            "EntityName": "Arkansas Department of Human Services v. Ahlborn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d76b3",
            "EntityName": "Hickman v. Taylor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d79rv",
            "EntityName": "Domino's Pizza, Inc. v. McDonald"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9lbc",
            "EntityName": "Lechmere, Inc. v. NLRB"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9qcp",
            "EntityName": "Egelhoff v. Egelhoff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0db_2_",
            "EntityName": "United States v. Oakland Cannabis Buyers' Cooperative"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dc_19",
            "EntityName": "United States v. Bajakajian"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dcrpx",
            "EntityName": "New York v. Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dfcml",
            "EntityName": "Old Colony Trust Co. v. Commissioner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgpxbh",
            "EntityName": "Brown v. Entertainment Merchants Ass'n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dh86m",
            "EntityName": "Garcetti v. Ceballos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dhpdt",
            "EntityName": "DaimlerChrysler Corp. v. Cuno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dhw5x",
            "EntityName": "Pickering v. Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dj1g5",
            "EntityName": "Ray v. Blair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dj8mw",
            "EntityName": "S. D. Warren Co. v. Maine Board of Environmental Protection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djdy6",
            "EntityName": "Sereboff v. Mid Atlantic Medical Services, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dk71y",
            "EntityName": "New Negro Alliance v. Sanitary Grocery Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dl114",
            "EntityName": "Rankin v. McPherson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dlwpv",
            "EntityName": "Sherbert v. Verner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtc09",
            "EntityName": "Hudson v. Michigan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtnk_",
            "EntityName": "Osborn v. Bank of the United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtntb",
            "EntityName": "Ogden v. Saunders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvftc",
            "EntityName": "Wisconsin v. Mitchell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvm37",
            "EntityName": "United States v. Montoya De Hernandez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dx3y2",
            "EntityName": "Samson v. California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxjsz",
            "EntityName": "Illinois v. Caballes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dywn4",
            "EntityName": "Perez v. Brownell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzgtf",
            "EntityName": "Burlington Northern & Santa Fe Railway Co. v. White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dzhxx",
            "EntityName": "Commissioner v. Wilcox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0cj2",
            "EntityName": "Braunfeld v. Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0hcb",
            "EntityName": "Taylor v. Taintor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0mt_",
            "EntityName": "Schneider v. New Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0xnq",
            "EntityName": "Kansas v. Marsh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0yn5",
            "EntityName": "Randall v. Sorrell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f1193",
            "EntityName": "Massachusetts v. Environmental Protection Agency"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2dnv",
            "EntityName": "League of United Latin American Citizens v. Perry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2h0h",
            "EntityName": "Jacobson v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2w0d",
            "EntityName": "Totten v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3b1y",
            "EntityName": "Owen Equipment & Erection Co. v. Kroger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3bcm",
            "EntityName": "Red Lion Broadcasting Co. v. FCC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3m0f",
            "EntityName": "Schlesinger v. Councilman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6snr",
            "EntityName": "Albertson v. Subversive Activities Control Board"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6svq",
            "EntityName": "Baird v. State Bar of Arizona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fh15_",
            "EntityName": "Little v. Barreme"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhg8q",
            "EntityName": "New York v. Ferber"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fjqb_",
            "EntityName": "Harmelin v. Michigan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fl58v",
            "EntityName": "Webster v. Doe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flfst",
            "EntityName": "Board of Education v. Earls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fp6lx",
            "EntityName": "Rosenberger v. University of Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpn_s",
            "EntityName": "Florida v. Bostick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq2x_3",
            "EntityName": "United States v. Stewart"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fr77q",
            "EntityName": "Dames & Moore v. Regan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsx6l",
            "EntityName": "Zorach v. Clauson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftcp7",
            "EntityName": "Eastern Associated Coal Corp. v. United Mine Workers of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fts99",
            "EntityName": "Bowsher v. Synar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fttj0",
            "EntityName": "United States v. Kirby Lumber Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fwm_7",
            "EntityName": "2003 term per curiam opinions of the Supreme Court of the United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxw3r",
            "EntityName": "Good News Club v. Milford Central School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fzv9w",
            "EntityName": "Peretz v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g0884",
            "EntityName": "South Dakota v. Opperman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3995",
            "EntityName": "Curtis Publishing Co. v. Butts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g5q0j",
            "EntityName": "U.S. Term Limits, Inc. v. Thornton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g7fb_",
            "EntityName": "Walton v. Arizona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g7v3l",
            "EntityName": "Sorrells v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g86kh",
            "EntityName": "Morse v. Frederick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8847",
            "EntityName": "Arizona v. Evans"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8k1f",
            "EntityName": "Sherman v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g9vtt",
            "EntityName": "United States v. Russell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcpwz",
            "EntityName": "Smith v. Maryland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdtsg",
            "EntityName": "Lucas v. South Carolina Coastal Council"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdv5z",
            "EntityName": "Sparf v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gg_7d",
            "EntityName": "Graham v. John Deere Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gh6lm",
            "EntityName": "United States v. Shipp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ghqbn",
            "EntityName": "Bailey v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gj2nn",
            "EntityName": "Alexander v. Sandoval"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gjsps",
            "EntityName": "SEC v. W. J. Howey Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmcc7v",
            "EntityName": "Watson v. Jones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gpfcb",
            "EntityName": "City of Elizabeth v. American Nicholson Pavement Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gqn8g",
            "EntityName": "Qualitex Co. v. Jacobson Products Co."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0grryw",
            "EntityName": "Irwin v. Gavit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtz2v",
            "EntityName": "Hayburn's Case"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gv8gs",
            "EntityName": "Landmark Communications, Inc. v. Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gvbfq",
            "EntityName": "Swidler & Berlin v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gxdvn",
            "EntityName": "TSC Industries, Inc. v. Northway, Inc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0834",
            "EntityName": "Cottage Savings Ass'n v. Commissioner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h0rbc",
            "EntityName": "DeShaney v. Winnebago County"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h13s9",
            "EntityName": "Troxel v. Granville"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1bml",
            "EntityName": "Leser v. Garnett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h39z8",
            "EntityName": "Houston East & West Texas Railway Co. v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3kgj",
            "EntityName": "In re Gault"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h4pkx",
            "EntityName": "Mertens v. Hewitt Associates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h6q2d",
            "EntityName": "Pinkerton v. United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h6x1k",
            "EntityName": "Ex parte Madrazzo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hk56",
            "EntityName": "Brown v. Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hx5v",
            "EntityName": "Roe v. Wade"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7l53h",
            "EntityName": "National Federation of Independent Business v. Sebelius"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3p257",
            "EntityName": "National Gay Task Force v. Board of Education"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qjlj",
            "EntityName": "Dred Scott v. Sandford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qjn1",
            "EntityName": "Bush v. Gore"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07sz1": "Supreme Court of the United States"
    },
    "qid_topic_entity": {
      "Q11201": "Supreme Court of the United States"
    },
    "index": 603
  },
  {
    "QuestionId": "WebQTest-1308",
    "RawQuestion": "what college did jrr tolkien go to?",
    "ProcessedQuestion": "what college did jrr tolkien go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1308.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041h0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041h0 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "jrr tolkien",
        "TopicEntityName": "J. R. R. Tolkien",
        "TopicEntityMid": "m.041h0",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ylvj",
            "EntityName": "Exeter College, Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.041h0": "J. R. R. Tolkien"
    },
    "qid_topic_entity": {
      "Q892": "J. R. R. Tolkien"
    },
    "index": 604
  },
  {
    "QuestionId": "WebQTest-847",
    "RawQuestion": "what countries are members of the security council?",
    "ProcessedQuestion": "what countries are members of the security council",
    "Parses": [
      {
        "ParseId": "WebQTest-847.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vnr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vnr ns:base.unitednations.united_nations_body.members ?y .\n?y ns:base.unitednations.united_nations_body_membership.member ?x .\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk0} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk2} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "security council",
        "TopicEntityName": "United Nations Security Council",
        "TopicEntityMid": "m.07vnr",
        "InferentialChain": [
          "base.unitednations.united_nations_body.members",
          "base.unitednations.united_nations_body_membership.member"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.unitednations.united_nations_body_membership.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "base.unitednations.united_nations_body_membership.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01699",
            "EntityName": "Burkina Faso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01crd5",
            "EntityName": "Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p8s",
            "EntityName": "Costa Rica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pj7",
            "EntityName": "Croatia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bnz",
            "EntityName": "Russia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07vnr": "United Nations Security Council"
    },
    "qid_topic_entity": {
      "Q37470": "United Nations Security Council"
    },
    "index": 605
  },
  {
    "QuestionId": "WebQTest-980",
    "RawQuestion": "where did they get the name stanley cup?",
    "ProcessedQuestion": "where did they get the name stanley cup",
    "Parses": [
      {
        "ParseId": "WebQTest-980.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hn79)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hn79 ns:symbols.namesake.named_after ?x .\n}\n",
        "PotentialTopicEntityMention": "stanley cup",
        "TopicEntityName": "Stanley Cup",
        "TopicEntityMid": "m.0hn79",
        "InferentialChain": [
          "symbols.namesake.named_after"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q69p",
            "EntityName": "Frederick Stanley, 16th Earl of Derby"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hn79": "Stanley Cup"
    },
    "qid_topic_entity": {
      "Q211872": "Stanley Cup"
    },
    "index": 606
  },
  {
    "QuestionId": "WebQTest-523",
    "RawQuestion": "what is the largest nation in europe?",
    "ProcessedQuestion": "what is the largest nation in europe",
    "Parses": [
      {
        "ParseId": "WebQTest-523.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02j9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02j9z ns:base.locations.continents.countries_within ?x .\n?x ns:topic_server.population_number ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "europe",
        "TopicEntityName": "Europe",
        "TopicEntityMid": "m.02j9z",
        "InferentialChain": [
          "base.locations.continents.countries_within"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "topic_server.population_number",
          "ValueType": "Number"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bnz",
            "EntityName": "Russia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02j9z": "Europe"
    },
    "qid_topic_entity": {
      "Q46": "Europe"
    },
    "index": 607
  },
  {
    "QuestionId": "WebQTest-517",
    "RawQuestion": "what do people speak in canada?",
    "ProcessedQuestion": "what do people speak in canada",
    "Parses": [
      {
        "ParseId": "WebQTest-517.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "canada",
        "TopicEntityName": "Canada",
        "TopicEntityMid": "m.0d060g",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0121sr",
            "EntityName": "Gujarati Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01r2l",
            "EntityName": "Chinese language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02g5qs",
            "EntityName": "Slavey language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwhyv",
            "EntityName": "Korean Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx6h7",
            "EntityName": "Western Canadian Inuktitut Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxc3j",
            "EntityName": "Romanian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxcvy",
            "EntityName": "Urdu Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kdw56",
            "EntityName": "Canadian English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pmtdt",
            "EntityName": "Abenaki language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02syd6",
            "EntityName": "Chipewyan Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02t692",
            "EntityName": "Gwich'in Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tfbg",
            "EntityName": "Dogrib Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w36s",
            "EntityName": "Inuinnaqtun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0322q8",
            "EntityName": "Inuktitut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032f6",
            "EntityName": "Persian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0349s",
            "EntityName": "Greek Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gd7",
            "EntityName": "Lojban"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qqm",
            "EntityName": "Polish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0688f",
            "EntityName": "Punjabi language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jdbv",
            "EntityName": "Upper Midwest American English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07c9s",
            "EntityName": "Tamil Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07qv_",
            "EntityName": "Tagalog language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07zrf",
            "EntityName": "Vietnamese Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dqhd",
            "EntityName": "Cree language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzc",
            "EntityName": "Arabic Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-517.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "canada",
        "TopicEntityName": "Canada",
        "TopicEntityMid": "m.0d060g",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d060g": "Canada"
    },
    "qid_topic_entity": {
      "Q16": "Canada"
    },
    "index": 608
  },
  {
    "QuestionId": "WebQTest-615",
    "RawQuestion": "what were the names of henry viii's three children?",
    "ProcessedQuestion": "what were the names of henry viii 's three children",
    "Parses": [
      {
        "ParseId": "WebQTest-615.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p77 ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "henry viii",
        "TopicEntityName": "Henry VIII of England",
        "TopicEntityMid": "m.03p77",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rg_",
            "EntityName": "Elizabeth I of England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02s82",
            "EntityName": "Edward VI of England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02sx6f",
            "EntityName": "Henry FitzRoy, 1st Duke of Richmond and Somerset"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056j9",
            "EntityName": "Mary I of England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hn9rc9",
            "EntityName": "Henry, Duke of Cornwall"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03p77": "Henry VIII of England"
    },
    "qid_topic_entity": {
      "Q38370": "Henry VIII of England"
    },
    "index": 609
  },
  {
    "QuestionId": "WebQTest-1361",
    "RawQuestion": "what currency should take to mexico?",
    "ProcessedQuestion": "what currency should take to mexico",
    "Parses": [
      {
        "ParseId": "WebQTest-1361.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "mexico",
        "TopicEntityName": "Mexico",
        "TopicEntityMid": "m.0b90_r",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012ts8",
            "EntityName": "Mexican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0b90_r": "Mexico"
    },
    "qid_topic_entity": {
      "Q96": "Mexico"
    },
    "index": 610
  },
  {
    "QuestionId": "WebQTest-1116",
    "RawQuestion": "what is the capital city of spain wiki answers?",
    "ProcessedQuestion": "what is the capital city of spain wiki answers",
    "Parses": [
      {
        "ParseId": "WebQTest-1116.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056_y",
            "EntityName": "Madrid"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 611
  },
  {
    "QuestionId": "WebQTest-657",
    "RawQuestion": "where did martin luther king got shot at?",
    "ProcessedQuestion": "where did martin luther king got shot at",
    "Parses": [
      {
        "ParseId": "WebQTest-657.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "martin luther king",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_m3",
            "EntityName": "Memphis"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 612
  },
  {
    "QuestionId": "WebQTest-1936",
    "RawQuestion": "when was the last time the dodgers won a championship?",
    "ProcessedQuestion": "when was the last time the dodgers won a championship",
    "Parses": [
      {
        "ParseId": "WebQTest-1936.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mjl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mjl ns:sports.sports_team.championships ?x .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "dodgers",
        "TopicEntityName": "Los Angeles Dodgers",
        "TopicEntityMid": "m.04mjl",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j7ml",
            "EntityName": "1988 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04mjl": "Los Angeles Dodgers"
    },
    "qid_topic_entity": {
      "Q334634": "Los Angeles Dodgers"
    },
    "index": 613
  },
  {
    "QuestionId": "WebQTest-109",
    "RawQuestion": "who did tim tebow play college football for?",
    "ProcessedQuestion": "who did tim tebow play college football for",
    "Parses": [
      {
        "ParseId": "WebQTest-109.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? school is not none"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g7km1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g7km1 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?x ns:sports.school_sports_team.school ns:m.0j_sncb .\n}\n",
        "PotentialTopicEntityMention": "tim tebow",
        "TopicEntityName": "Tim Tebow",
        "TopicEntityMid": "m.0g7km1",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0j_sncb",
            "EntityName": "University of Florida",
            "SourceNodeIndex": 1,
            "NodePredicate": "sports.school_sports_team.school",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ftf0f",
            "EntityName": "Florida Gators football"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g7km1": "Tim Tebow"
    },
    "qid_topic_entity": {
      "Q517467": "Tim Tebow"
    },
    "index": 614
  },
  {
    "QuestionId": "WebQTest-1991",
    "RawQuestion": "what part of the country is ohio in?",
    "ProcessedQuestion": "what part of the country is ohio in",
    "Parses": [
      {
        "ParseId": "WebQTest-1991.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kkh ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n",
        "PotentialTopicEntityMention": "ohio",
        "TopicEntityName": "Ohio",
        "TopicEntityMid": "m.05kkh",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nt",
            "EntityName": "Region",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03pzys",
            "EntityName": "East North Central States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q76g",
            "EntityName": "Midwestern United States"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05kkh": "Ohio"
    },
    "qid_topic_entity": {
      "Q1397": "Ohio"
    },
    "index": 615
  },
  {
    "QuestionId": "WebQTest-1278",
    "RawQuestion": "what are some major events in venezuela?",
    "ProcessedQuestion": "what are some major events in venezuela",
    "Parses": [
      {
        "ParseId": "WebQTest-1278.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ylj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ylj ns:location.location.events ?x .\n}\n",
        "PotentialTopicEntityMention": "venezuela",
        "TopicEntityName": "Venezuela",
        "TopicEntityMid": "m.07ylj",
        "InferentialChain": [
          "location.location.events"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.122dshgz",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_s2b74",
            "EntityName": "2014\u201315 Venezuelan protests"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_yl8cs",
            "EntityName": "2014 NACAM Rally Championship"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01082t0z",
            "EntityName": "Battle of Santa In\u00e9s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010pvsz8",
            "EntityName": "2014 Caribbean Earthquake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011nwg_8",
            "EntityName": "2014 Festival Internacional de Cine Infantil y Juvenil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011sm70c",
            "EntityName": "Dutch\u2013Venezuelan crisis of 1908"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qb83",
            "EntityName": "Venezuelan War of Independence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qlx__",
            "EntityName": "Battle of La Victoria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r0mx4",
            "EntityName": "Machurucuto Incident"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rf6lc",
            "EntityName": "2007 RCTV protests"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0461c3",
            "EntityName": "2002 Venezuelan coup d'\u00e9tat attempt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080bblj",
            "EntityName": "Los Maniceros massacre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c0349z",
            "EntityName": "12th G-15 summit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cnymms",
            "EntityName": "Dutch\u2013Venezuela War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgqgqf",
            "EntityName": "Venezuelan crisis of 1902\u201303"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggbq0x",
            "EntityName": "Bombardment of Fort San Carlos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gys1lh",
            "EntityName": "2011 ALBA Games"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ryskwc",
            "EntityName": "2013 Venezuela Transaereo 5074 Britten-Norman Islander crash"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ylj": "Venezuela"
    },
    "qid_topic_entity": {
      "Q717": "Venezuela"
    },
    "index": 616
  },
  {
    "QuestionId": "WebQTest-792",
    "RawQuestion": "when did roth ira originate?",
    "ProcessedQuestion": "when did roth ira originate",
    "Parses": [
      {
        "ParseId": "WebQTest-792.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.023_lp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.023_lp ns:symbols.namesake.named_after ?x .\n}\n",
        "PotentialTopicEntityMention": "roth ira",
        "TopicEntityName": "Roth IRA",
        "TopicEntityMid": "m.023_lp",
        "InferentialChain": [
          "symbols.namesake.named_after"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023xsb",
            "EntityName": "William V. Roth, Jr."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.023_lp": "Roth IRA"
    },
    "qid_topic_entity": {
      "Q7370386": "Roth IRA"
    },
    "index": 617
  },
  {
    "QuestionId": "WebQTest-827",
    "RawQuestion": "what country does justin bieber come from?",
    "ProcessedQuestion": "what country does justin bieber come from",
    "Parses": [
      {
        "ParseId": "WebQTest-827.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "justin bieber",
        "TopicEntityName": "Justin Bieber",
        "TopicEntityMid": "m.06w2sn5",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06w2sn5": "Justin Bieber"
    },
    "qid_topic_entity": {
      "Q34086": "Justin Bieber"
    },
    "index": 618
  },
  {
    "QuestionId": "WebQTest-738",
    "RawQuestion": "what kind of government does japan have now?",
    "ProcessedQuestion": "what kind of government does japan have now",
    "Parses": [
      {
        "ParseId": "WebQTest-738.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "japan",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 619
  },
  {
    "QuestionId": "WebQTest-1115",
    "RawQuestion": "what is lawton ok zip code?",
    "ProcessedQuestion": "what is lawton ok zip code",
    "Parses": [
      {
        "ParseId": "WebQTest-1115.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0z53k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0z53k ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "lawton ok",
        "TopicEntityName": "Lawton",
        "TopicEntityMid": "m.0z53k",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020qj4c",
            "EntityName": "73505"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020qj5_",
            "EntityName": "73507"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020qj55",
            "EntityName": "73501"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nqg4t",
            "EntityName": "73506"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nqg50",
            "EntityName": "73502"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0z53k": "Lawton"
    },
    "qid_topic_entity": {
      "Q503336": "Lawton"
    },
    "index": 620
  },
  {
    "QuestionId": "WebQTest-65",
    "RawQuestion": "who was the first dictator of the soviet union?",
    "ProcessedQuestion": "who was the first dictator of the soviet union",
    "Parses": [
      {
        "ParseId": "WebQTest-65.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? dictator"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05vz3zq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05vz3zq ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "soviet union",
        "TopicEntityName": "Soviet Union",
        "TopicEntityMid": "m.05vz3zq",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "government.government_position_held.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05wh0sh",
            "EntityName": "Vladimir Lenin"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05vz3zq": "Soviet Union"
    },
    "qid_topic_entity": {
      "Q15180": "Soviet Union"
    },
    "index": 621
  },
  {
    "QuestionId": "WebQTest-298",
    "RawQuestion": "what year did the orioles go to the world series?",
    "ProcessedQuestion": "what year did the orioles go to the world series",
    "Parses": [
      {
        "ParseId": "WebQTest-298.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d6g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d6g ns:sports.sports_team.championships ?x .\n}\n",
        "PotentialTopicEntityMention": "orioles",
        "TopicEntityName": "Baltimore Orioles",
        "TopicEntityMid": "m.01d6g",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046_p6",
            "EntityName": "1983 World Series"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jg7y",
            "EntityName": "1970 World Series"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04td_d",
            "EntityName": "1966 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01d6g": "Baltimore Orioles"
    },
    "qid_topic_entity": {
      "Q650816": "Baltimore Orioles"
    },
    "index": 622
  },
  {
    "QuestionId": "WebQTest-1528",
    "RawQuestion": "what movies does logan lerman play in?",
    "ProcessedQuestion": "what movies does logan lerman play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1528.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f1s6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f1s6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "logan lerman",
        "TopicEntityName": "Logan Lerman",
        "TopicEntityMid": "m.04f1s6",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.122h61qh",
            "EntityName": "The Flannerys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bg55",
            "EntityName": "The Butterfly Effect"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pjkz7",
            "EntityName": "Gamer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f46k7",
            "EntityName": "My One and Only"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0642xf3",
            "EntityName": "Percy Jackson & the Olympians: The Lightning Thief"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y_y74",
            "EntityName": "A Painted House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07799g",
            "EntityName": "Riding in Cars with Boys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7hdh",
            "EntityName": "Hoot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0btbyn",
            "EntityName": "3:10 to Yuma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c4mcp",
            "EntityName": "The Number 23"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crc2cp",
            "EntityName": "The Three Musketeers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d31rqr",
            "EntityName": "Percy Jackson: Sea of Monsters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d67yl",
            "EntityName": "Meet Bill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g57wgv",
            "EntityName": "The Perks of Being a Wallflower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gltv",
            "EntityName": "The Patriot"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwrkkn",
            "EntityName": "The Only Living Boy in New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j27n5r",
            "EntityName": "Stuck in Love"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kdy118",
            "EntityName": "Noah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lbcy8h",
            "EntityName": "The Scribe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qlz9",
            "EntityName": "What Women Want"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t_5p_m",
            "EntityName": "Fury"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f1s6": "Logan Lerman"
    },
    "qid_topic_entity": {
      "Q221068": "Logan Lerman"
    },
    "index": 623
  },
  {
    "QuestionId": "WebQTest-1979",
    "RawQuestion": "who is number 22 on miami dolphins?",
    "ProcessedQuestion": "who is number 22 on miami dolphins",
    "Parses": [
      {
        "ParseId": "WebQTest-1979.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04vn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04vn5 ns:sports.sports_team.roster ?y .\n?y ns:sports.sports_team_roster.player ?x .\n?y ns:sports.sports_team_roster.number ?sk0 .\nFILTER (str(?sk0) = \"22\")\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk1} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk2 . \nFILTER(xsd:datetime(?sk2) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk3} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk4 . \nFILTER(xsd:datetime(?sk4) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "miami dolphins",
        "TopicEntityName": "Miami Dolphins",
        "TopicEntityMid": "m.04vn5",
        "InferentialChain": [
          "sports.sports_team.roster",
          "sports.sports_team_roster.player"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "22",
            "EntityName": null,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.number",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q3yxb2",
            "EntityName": "Jamar Taylor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04vn5": "Miami Dolphins"
    },
    "qid_topic_entity": {
      "Q223243": "Miami Dolphins"
    },
    "index": 624
  },
  {
    "QuestionId": "WebQTest-785",
    "RawQuestion": "who does michael keaton play in cars?",
    "ProcessedQuestion": "who does michael keaton play in cars",
    "Parses": [
      {
        "ParseId": "WebQTest-785.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j5ws)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j5ws ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.03q0r1 .\n}\n",
        "PotentialTopicEntityMention": "michael keaton",
        "TopicEntityName": "Michael Keaton",
        "TopicEntityMid": "m.01j5ws",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03q0r1",
            "EntityName": "Cars",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtcs2",
            "EntityName": "Chick Hicks"
          }
        ]
      },
      {
        "ParseId": "WebQTest-785.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03q0r1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03q0r1 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.01j5ws .\n}\n",
        "PotentialTopicEntityMention": "cars",
        "TopicEntityName": "Cars",
        "TopicEntityMid": "m.03q0r1",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01j5ws",
            "EntityName": "Michael Keaton",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtcs2",
            "EntityName": "Chick Hicks"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01j5ws": "Michael Keaton",
      "m.03q0r1": "Cars"
    },
    "qid_topic_entity": {
      "Q138005": "Michael Keaton",
      "Q182153": "Cars"
    },
    "index": 625
  },
  {
    "QuestionId": "WebQTest-849",
    "RawQuestion": "what country sponsored ferdinand magellan?",
    "ProcessedQuestion": "what country sponsored ferdinand magellan",
    "Parses": [
      {
        "ParseId": "WebQTest-849.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033ky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033ky ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "ferdinand magellan",
        "TopicEntityName": "Ferdinand Magellan",
        "TopicEntityMid": "m.033ky",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0285m87",
            "EntityName": "Kingdom of Portugal"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.033ky": "Ferdinand Magellan"
    },
    "qid_topic_entity": {
      "Q1496": "Ferdinand Magellan"
    },
    "index": 626
  },
  {
    "QuestionId": "WebQTest-936",
    "RawQuestion": "where were greek temples built?",
    "ProcessedQuestion": "where were greek temples built",
    "Parses": [
      {
        "ParseId": "WebQTest-936.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F need longer chains or more expressive representations"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.03f34_ ns:architecture.building_function.buildings ?y .\n\t?y ns:travel.tourist_attraction.near_travel_destination ?x .\n}",
        "PotentialTopicEntityMention": "greek temples",
        "TopicEntityName": "Ancient Greek temple",
        "TopicEntityMid": "m.03f34_",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01swlf",
            "EntityName": "Olympia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p8r",
            "EntityName": "Ephesus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f_hwc",
            "EntityName": "Shahhat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ygm3",
            "EntityName": "Ku\u015fadas\u0131"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09lgkz",
            "EntityName": "Corfu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n2z",
            "EntityName": "Athens"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03f34_": "Ancient Greek temple"
    },
    "qid_topic_entity": {
      "Q267596": "Ancient Greek temple"
    },
    "index": 627
  },
  {
    "QuestionId": "WebQTest-1056",
    "RawQuestion": "who did the cleveland cavaliers draft?",
    "ProcessedQuestion": "who did the cleveland cavaliers draft",
    "Parses": [
      {
        "ParseId": "WebQTest-1056.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jm7n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jm7n ns:sports.professional_sports_team.draft_picks ?y .\n?y ns:sports.sports_league_draft_pick.player ?x .\n}\n",
        "PotentialTopicEntityMention": "cleveland cavaliers",
        "TopicEntityName": "Cleveland Cavaliers",
        "TopicEntityMid": "m.0jm7n",
        "InferentialChain": [
          "sports.professional_sports_team.draft_picks",
          "sports.sports_league_draft_pick.player"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jz6d",
            "EntityName": "LeBron James"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cfvqd",
            "EntityName": "JJ Hickson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04bmkq",
            "EntityName": "Luke Jackson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2zfl",
            "EntityName": "Shannon Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hnd33n",
            "EntityName": "Anthony Bennett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0wkgy",
            "EntityName": "Dion Waiters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kg2hkr",
            "EntityName": "Andrew Wiggins"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jm7n": "Cleveland Cavaliers"
    },
    "qid_topic_entity": {
      "Q162990": "Cleveland Cavaliers"
    },
    "index": 628
  },
  {
    "QuestionId": "WebQTest-359",
    "RawQuestion": "what team does heskey play for?",
    "ProcessedQuestion": "what team does heskey play for",
    "Parses": [
      {
        "ParseId": "WebQTest-359.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yj16)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yj16 ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n",
        "PotentialTopicEntityMention": "heskey",
        "TopicEntityName": "Emile Heskey",
        "TopicEntityMid": "m.01yj16",
        "InferentialChain": [
          "base.schemastaging.athlete_extra.salary",
          "base.schemastaging.athlete_salary.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d4g8",
            "EntityName": "Newcastle Jets FC"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bl8l",
            "EntityName": "Aston Villa F.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01yj16": "Emile Heskey"
    },
    "qid_topic_entity": {
      "Q191162": "Emile Heskey"
    },
    "index": 629
  },
  {
    "QuestionId": "WebQTest-978",
    "RawQuestion": "what book did benjamin franklin published?",
    "ProcessedQuestion": "what book did benjamin franklin published",
    "Parses": [
      {
        "ParseId": "WebQTest-978.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n}\n",
        "PotentialTopicEntityMention": "benjamin franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xryvm",
            "EntityName": "Book",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zwbg",
            "EntityName": "Poor Richard's Almanack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c67p8",
            "EntityName": "Some Fruits of Solitude in Reflections and Maxims"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zmd",
            "EntityName": "Bite-size Ben Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zmn",
            "EntityName": "Autobiography, Poor Richard, and later writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zmx",
            "EntityName": "Benjamin Franklin's the art of virtue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zn4",
            "EntityName": "The sayings of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w5ynd",
            "EntityName": "Compleated Autobiography by Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b22sd",
            "EntityName": "The Drinker's Dictionary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05q9nw8",
            "EntityName": "Observations Concerning the Increase of Mankind, Peopling of Countries, etc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0638kh",
            "EntityName": "The Autobiography of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066ymc6",
            "EntityName": "Political, Miscellaneous And Philosophical Pieces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069v34p",
            "EntityName": "The Means and Manner of Obtaining Virtue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bc5yn",
            "EntityName": "Free silver, and some other things"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dqc2w",
            "EntityName": "Founding Fathers Benjamin Franklin Volume 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f96j7",
            "EntityName": "Essays And Letters V1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fl24x",
            "EntityName": "Poor Richard's Horse Keeper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gsgp3",
            "EntityName": "Selected Works of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gw6_b",
            "EntityName": "Conseils pour s'enrichir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hvzsn",
            "EntityName": "Authobiography Of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j_wqp",
            "EntityName": "The Writings Of Benjamin Franklin, Vol. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jq4kg",
            "EntityName": "The Immortal Mentor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l923t",
            "EntityName": "My Dear Girl Ii"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ln9sy",
            "EntityName": "How to Attain Moral Perfection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lsf_m",
            "EntityName": "Articles Of Belief And Acts Of Religion Vol.2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m0y80",
            "EntityName": "The glory of eternity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n38yt",
            "EntityName": "Reflection On Courtship And Marriage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n8wr1",
            "EntityName": "Not Your Usual Founding Father"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pnj_d",
            "EntityName": "Avis n\u00e9cessaire \u00e0 ceux qui veulent devenir riche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2529",
            "EntityName": "Collected Works Of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06spsy3",
            "EntityName": "The Life of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06thfrr",
            "EntityName": "The Works Of Benjamin Franklin V1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b28ym",
            "EntityName": "A Dissertation on Liberty and Necessity, Pleasure and Pain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdhz",
            "EntityName": "Address"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj_",
            "EntityName": "The life and letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj1",
            "EntityName": "Articles of belief"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj4",
            "EntityName": "The art of making money plenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj7",
            "EntityName": "Autobiography"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjb",
            "EntityName": "The autobiography of Benjamin Franklin and selections from his other writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjj",
            "EntityName": "The essays, humorous, moral and literary of the late Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjq",
            "EntityName": "Franklin was there"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjt",
            "EntityName": "The ingenious Dr. Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjx",
            "EntityName": "The life and essays of the late Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdk2",
            "EntityName": "The life of Benjamin Franklin, written chiefly by himself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdk5",
            "EntityName": "The life of Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdk8",
            "EntityName": "The life of Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkc",
            "EntityName": "The life of the late Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkg",
            "EntityName": "The life of the late Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkk",
            "EntityName": "Memoirs of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkn",
            "EntityName": "Memoirs of the life and writings of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkr",
            "EntityName": "A parable"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkv",
            "EntityName": "The political thought of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdky",
            "EntityName": "Private correspondence of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdl0",
            "EntityName": "Select works, including his autobiography"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdl6",
            "EntityName": "Some account of the Pennsylvania Hospital"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdl9",
            "EntityName": "The works of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdld",
            "EntityName": "The works of Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdlh",
            "EntityName": "Works of the late Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdll",
            "EntityName": "The works of the late Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyl_",
            "EntityName": "The autobiography, with an introd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyld",
            "EntityName": "America's Big Ben"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqylh",
            "EntityName": "Apology for printers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyln",
            "EntityName": "The autobiography of Benjamin Franklin, and a sketch of Franklin's life from the point where the autobiography ends, drawn chiefly from his letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqylw",
            "EntityName": "The autobiography, Poor Richard's almanac and other papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqym2",
            "EntityName": "Benjamin Franklin on balloons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqym6",
            "EntityName": "B. Franklin, innovator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymc",
            "EntityName": "Early to bed, and early to rise, makes a man healthy, wealthy, and wise, or, Early rising, a natural, social, and religious duty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymg",
            "EntityName": "Father Abraham's speech to a great number of people, at a vendue of merchant-goods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyml",
            "EntityName": "Franklin's Way to wealth, or, \\\"Poor Richard improved\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymr",
            "EntityName": "A letter from B. Franklin to a young man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymv",
            "EntityName": "A letter from Mr. Franklin to Mr. Peter Collinson, F.R.S. concerning the effect of lightning ; A letter of Benjamin Franklin, Esq. to Mr. Peter Collinson, F.R.S. concerning an electrical kite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymy",
            "EntityName": "New experiments and observations on electricity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyn2",
            "EntityName": "Observations on the causes and cure of smoky chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyn8",
            "EntityName": "Poor Richard, or, The way to wealth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqynk",
            "EntityName": "Satires & Bagatelles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqynp",
            "EntityName": "The way to wealth, or, Poor Richard improved"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyns",
            "EntityName": "What good is a newborn baby?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1dy",
            "EntityName": "The autobiography and other writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f0",
            "EntityName": "The autobiography of Benjamin Franklin; a restoration of a \\\"fair copy\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f3",
            "EntityName": "The bagatelles from Passy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f6",
            "EntityName": "Benjamin Franklin and Jonathan Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f9",
            "EntityName": "Benjamin Franklin's autobiographical writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fd",
            "EntityName": "Benjamin Franklin's Experiments"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fh",
            "EntityName": "Benjamin Franklin's own story"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fl",
            "EntityName": "Benjamin Franklin's Proposals for the education of youth in Pennsylvania, 1749"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fp",
            "EntityName": "The complete works in philosophy, politics, and morals, of the late Dr. Benjamin Franklin, now first collected and arranged: with memoirs of his early life, written by himself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fs",
            "EntityName": "Experiments and observations on electricity, made at Philadelphia in America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fw",
            "EntityName": "Faceti\u00e6 Frankliana.   [sic]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fz",
            "EntityName": "Franklin's boyhood in Boston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1g1",
            "EntityName": "Franklin's wit & folly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1g4",
            "EntityName": "A letter of advice to a young man concerning marriage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1g7",
            "EntityName": "Letters and papers of Benjamin Franklin and Richard Jackson, 1753-1785"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gb",
            "EntityName": "The letters of Benjamin Franklin & Jane Mecom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gf",
            "EntityName": "Letters to the press, 1758-1775"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gj",
            "EntityName": "The life and essays, of Dr. Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gm",
            "EntityName": "On war and peace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gq",
            "EntityName": "The Papers of Benjamin Franklin, Vol. 28: Volume 28: November 1, 1778 through February 28, 1779"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gt",
            "EntityName": "Poor Richard, 1733"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gx",
            "EntityName": "Poor Richard day by day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1h2",
            "EntityName": "Representative selections"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1h5",
            "EntityName": "\\\"The sayings of Poor Richard\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1h8",
            "EntityName": "The select works of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hc",
            "EntityName": "Sheep will never make insurrections"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hg",
            "EntityName": "The wisdom of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hk",
            "EntityName": "The works of Dr. Benjamin Franklin, in philosophy, politics, and morals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hn",
            "EntityName": "The works of Dr. Benjn. Franklin;"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hr",
            "EntityName": "The writings of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dytg4y",
            "EntityName": "The Papers of Benjamin Franklin, Volume 1: January 1, 1706 through December 31, 1734"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5j2d",
            "EntityName": "The Way to Wealth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xptgyh",
            "EntityName": "The Morals of Chess"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd3_",
            "EntityName": "Silence Dogood, No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd60",
            "EntityName": "Silence Dogood, No. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd6w",
            "EntityName": "Silence Dogood, No. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd7_",
            "EntityName": "Silence Dogood, No. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd7d",
            "EntityName": "Silence Dogood, No. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd9_",
            "EntityName": "Silence Dogood, No. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd9c",
            "EntityName": "Silence Dogood, No. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdbl",
            "EntityName": "Silence Dogood, No. 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdc8",
            "EntityName": "Silence Dogood, No. 9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdds",
            "EntityName": "Silence Dogood, No. 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdfb",
            "EntityName": "Silence Dogood, No. 11"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdfp",
            "EntityName": "Silence Dogood, No. 12"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdg1",
            "EntityName": "Silence Dogood, No. 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdgc",
            "EntityName": "Silence Dogood, No. 14"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 630
  },
  {
    "QuestionId": "WebQTest-1138",
    "RawQuestion": "where honduras in the world?",
    "ProcessedQuestion": "where honduras in the world",
    "Parses": [
      {
        "ParseId": "WebQTest-1138.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03h2c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03h2c ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "honduras",
        "TopicEntityName": "Honduras",
        "TopicEntityMid": "m.03h2c",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tzh",
            "EntityName": "Central America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pnx",
            "EntityName": "Latin America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07c5l",
            "EntityName": "Americas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03h2c": "Honduras"
    },
    "qid_topic_entity": {
      "Q783": "Honduras"
    },
    "index": 631
  },
  {
    "QuestionId": "WebQTest-1700",
    "RawQuestion": "where is mt st helens located?",
    "ProcessedQuestion": "where is mt st helens located",
    "Parses": [
      {
        "ParseId": "WebQTest-1700.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094xz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094xz ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mt st helens",
        "TopicEntityName": "Mount St. Helens",
        "TopicEntityMid": "m.094xz",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059g4",
            "EntityName": "North America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081yw",
            "EntityName": "Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3nk",
            "EntityName": "Cascade Range"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mly4",
            "EntityName": "Skamania County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.094xz": "Mount St. Helens"
    },
    "qid_topic_entity": {
      "Q4675": "Mount St. Helens"
    },
    "index": 632
  },
  {
    "QuestionId": "WebQTest-1390",
    "RawQuestion": "who won utah attorney general?",
    "ProcessedQuestion": "who won utah attorney general",
    "Parses": [
      {
        "ParseId": "WebQTest-1390.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.0hzbyr1 .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0hzbyr1",
            "EntityName": "Utah Attorney General",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v9vs_",
            "EntityName": "John Swallow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g93dh",
            "EntityName": "Mark Shurtleff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ztk8w5",
            "EntityName": "Sean Reyes"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07srw": "Utah"
    },
    "qid_topic_entity": {
      "Q829": "Utah"
    },
    "index": 633
  },
  {
    "QuestionId": "WebQTest-85",
    "RawQuestion": "who are the colorado representatives?",
    "ProcessedQuestion": "who are the colorado representatives",
    "Parses": [
      {
        "ParseId": "WebQTest-85.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n4w ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "colorado",
        "TopicEntityName": "Colorado",
        "TopicEntityMid": "m.01n4w",
        "InferentialChain": [
          "government.political_district.representatives",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024zbx",
            "EntityName": "Mark Udall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b60qf",
            "EntityName": "Michael Bennet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n4w": "Colorado"
    },
    "qid_topic_entity": {
      "Q1261": "Colorado"
    },
    "index": 634
  },
  {
    "QuestionId": "WebQTest-1909",
    "RawQuestion": "what is spoken in czech republic?",
    "ProcessedQuestion": "what is spoken in czech republic",
    "Parses": [
      {
        "ParseId": "WebQTest-1909.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mjq ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "czech republic",
        "TopicEntityName": "Czech Republic",
        "TopicEntityMid": "m.01mjq",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012psb",
            "EntityName": "Romani language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013hyy",
            "EntityName": "Rusyn Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bkv",
            "EntityName": "Bulgarian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wgr",
            "EntityName": "Czech Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ztjwg",
            "EntityName": "Hungarian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0349s",
            "EntityName": "Greek Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04306rv",
            "EntityName": "German Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qqm",
            "EntityName": "Polish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zvx",
            "EntityName": "Slovak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjk9",
            "EntityName": "Ukrainian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sb",
            "EntityName": "Serbian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0sv",
            "EntityName": "Croatian language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1909.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mjq ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "czech republic",
        "TopicEntityName": "Czech Republic",
        "TopicEntityMid": "m.01mjq",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wgr",
            "EntityName": "Czech Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01mjq": "Czech Republic"
    },
    "qid_topic_entity": {
      "Q213": "Czech Republic"
    },
    "index": 635
  },
  {
    "QuestionId": "WebQTest-1423",
    "RawQuestion": "what language did they speak in ghana?",
    "ProcessedQuestion": "what language did they speak in ghana",
    "Parses": [
      {
        "ParseId": "WebQTest-1423.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035dk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035dk ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "ghana",
        "TopicEntityName": "Ghana",
        "TopicEntityMid": "m.035dk",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_lfh",
            "EntityName": "Asante dialect"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kphj",
            "EntityName": "Ga Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hw_03",
            "EntityName": "Akan Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwm3m",
            "EntityName": "Kasem Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx8z6",
            "EntityName": "Nzema Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j199",
            "EntityName": "\u00c9w\u00e9 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vkpsr",
            "EntityName": "Dagaare language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wm85",
            "EntityName": "Dagbani Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05781j",
            "EntityName": "Dangme Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05n7jk",
            "EntityName": "Fula language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08r4hf",
            "EntityName": "Gonja Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035dk": "Ghana"
    },
    "qid_topic_entity": {
      "Q117": "Ghana"
    },
    "index": 636
  },
  {
    "QuestionId": "WebQTest-1276",
    "RawQuestion": "when are the summer and winter olympics held?",
    "ProcessedQuestion": "when are the summer and winter olympics held",
    "Parses": [
      {
        "ParseId": "WebQTest-1276.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? close but not quite"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nd_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nd_ ns:time.recurring_event.current_frequency ?x .\n}\n",
        "PotentialTopicEntityMention": "olympics",
        "TopicEntityName": "Olympic Games",
        "TopicEntityMid": "m.05nd_",
        "InferentialChain": [
          "time.recurring_event.current_frequency"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q0_4f",
            "EntityName": "Quadrennial"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05nd_": "Olympic Games"
    },
    "qid_topic_entity": {
      "Q5389": "Olympic Games"
    },
    "index": 637
  },
  {
    "QuestionId": "WebQTest-714",
    "RawQuestion": "what is the political system of south africa?",
    "ProcessedQuestion": "what is the political system of south africa",
    "Parses": [
      {
        "ParseId": "WebQTest-714.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzlz ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "south africa",
        "TopicEntityName": "South Africa",
        "TopicEntityMid": "m.0hzlz",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hzlz": "South Africa"
    },
    "qid_topic_entity": {
      "Q258": "South Africa"
    },
    "index": 638
  },
  {
    "QuestionId": "WebQTest-200",
    "RawQuestion": "where was the vietnam war location?",
    "ProcessedQuestion": "where was the vietnam war location",
    "Parses": [
      {
        "ParseId": "WebQTest-200.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_nf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_nf ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "vietnam war",
        "TopicEntityName": "Vietnam War",
        "TopicEntityMid": "m.07_nf",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01crd5",
            "EntityName": "Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xbgx",
            "EntityName": "Cambodia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073q1",
            "EntityName": "Southeast Asia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g8bw",
            "EntityName": "South Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g970",
            "EntityName": "North Vietnam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07_nf": "Vietnam War"
    },
    "qid_topic_entity": {
      "Q8740": "Vietnam War"
    },
    "index": 639
  },
  {
    "QuestionId": "WebQTest-1901",
    "RawQuestion": "where did kevin james go to college?",
    "ProcessedQuestion": "where did kevin james go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-1901.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03xb2w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03xb2w ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "kevin james",
        "TopicEntityName": "Kevin James",
        "TopicEntityMid": "m.03xb2w",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0clvs5s",
            "EntityName": "State University of New York at Cortland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03xb2w": "Kevin James"
    },
    "qid_topic_entity": {
      "Q44561": "Kevin James"
    },
    "index": 640
  },
  {
    "QuestionId": "WebQTest-1337",
    "RawQuestion": "what all did ben franklin invent?",
    "ProcessedQuestion": "what all did ben franklin invent",
    "Parses": [
      {
        "ParseId": "WebQTest-1337.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "ben franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135nr",
            "EntityName": "Lightning rod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013cqs",
            "EntityName": "Bifocals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zh8g",
            "EntityName": "Glass harmonica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029mmz",
            "EntityName": "Franklin stove"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 641
  },
  {
    "QuestionId": "WebQTest-9",
    "RawQuestion": "who was richard nixon married to?",
    "ProcessedQuestion": "who was richard nixon married to",
    "Parses": [
      {
        "ParseId": "WebQTest-9.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c97)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c97 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "richard nixon",
        "TopicEntityName": "Richard Nixon",
        "TopicEntityMid": "m.06c97",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023v03",
            "EntityName": "Pat Nixon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06c97": "Richard Nixon"
    },
    "qid_topic_entity": {
      "Q9588": "Richard Nixon"
    },
    "index": 642
  },
  {
    "QuestionId": "WebQTest-1119",
    "RawQuestion": "what is colorado technical university?",
    "ProcessedQuestion": "what is colorado technical university",
    "Parses": [
      {
        "ParseId": "WebQTest-1119.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? meaning of \"what\" question here is not clear"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_5g9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_5g9 ns:common.topic.notable_types ?x .\n}\n",
        "PotentialTopicEntityMention": "colorado technical university",
        "TopicEntityName": "Colorado Technical University",
        "TopicEntityMid": "m.0c_5g9",
        "InferentialChain": [
          "common.topic.notable_types"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y2hnl",
            "EntityName": "College/University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c_5g9": "Colorado Technical University"
    },
    "qid_topic_entity": {
      "Q5148968": "Colorado Technical University"
    },
    "index": 643
  },
  {
    "QuestionId": "WebQTest-421",
    "RawQuestion": "who did kim richards marry?",
    "ProcessedQuestion": "who did kim richards marry",
    "Parses": [
      {
        "ParseId": "WebQTest-421.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08l257)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08l257 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "kim richards",
        "TopicEntityName": "Kim Richards",
        "TopicEntityMid": "m.08l257",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 1,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bjbnly",
            "EntityName": "G. Monty Brinson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mtnbfr",
            "EntityName": "Gregg Davis"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08l257": "Kim Richards"
    },
    "qid_topic_entity": {
      "Q587156": "Kim Richards"
    },
    "index": 644
  },
  {
    "QuestionId": "WebQTest-1287",
    "RawQuestion": "what is the state motto of ohio?",
    "ProcessedQuestion": "what is the state motto of ohio",
    "Parses": [
      {
        "ParseId": "WebQTest-1287.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kkh ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.0j749 .\n}\n",
        "PotentialTopicEntityMention": "ohio",
        "TopicEntityName": "Ohio",
        "TopicEntityMid": "m.05kkh",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0j749",
            "EntityName": "Motto",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08y6vd",
            "EntityName": "With God, all things are possible"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05kkh": "Ohio"
    },
    "qid_topic_entity": {
      "Q1397": "Ohio"
    },
    "index": 645
  },
  {
    "QuestionId": "WebQTest-1247",
    "RawQuestion": "who is angelina jolie?",
    "ProcessedQuestion": "who is angelina jolie",
    "Parses": [
      {
        "ParseId": "WebQTest-1247.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "angelina jolie",
        "TopicEntityName": "Angelina Jolie",
        "TopicEntityMid": "m.0f4vbz",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d_h8",
            "EntityName": "Film Producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jknp",
            "EntityName": "Film director"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d1pc",
            "EntityName": "Model"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dxtg",
            "EntityName": "Screenwriter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0np9r",
            "EntityName": "Voice Actor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f4vbz": "Angelina Jolie"
    },
    "qid_topic_entity": {
      "Q13909": "Angelina Jolie"
    },
    "index": 646
  },
  {
    "QuestionId": "WebQTest-1662",
    "RawQuestion": "where is english spoken around the world?",
    "ProcessedQuestion": "where is english spoken around the world",
    "Parses": [
      {
        "ParseId": "WebQTest-1662.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162b",
            "EntityName": "Bangladesh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0167v",
            "EntityName": "Brunei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016p5p",
            "EntityName": "Transkei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019pcs",
            "EntityName": "Ethiopia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01k0p4",
            "EntityName": "State of Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lx0",
            "EntityName": "Timor-Leste"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ryn",
            "EntityName": "Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065skb",
            "EntityName": "Gazankulu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m_5",
            "EntityName": "Sri Lanka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f9q",
            "EntityName": "Tokelau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pmkv",
            "EntityName": "Malaysia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hbgh",
            "EntityName": "Cura\u00e7ao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rdr4",
            "EntityName": "Bonaire"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1662.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014tss",
            "EntityName": "Kingdom of Great Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 647
  },
  {
    "QuestionId": "WebQTest-442",
    "RawQuestion": "what industry does walmart operate in?",
    "ProcessedQuestion": "what industry does walmart operate in",
    "Parses": [
      {
        "ParseId": "WebQTest-442.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0841v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0841v ns:business.business_operation.industry ?x .\n}\n",
        "PotentialTopicEntityMention": "walmart",
        "TopicEntityName": "Walmart",
        "TopicEntityMid": "m.0841v",
        "InferentialChain": [
          "business.business_operation.industry"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0191_7",
            "EntityName": "Retail"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01k_mv",
            "EntityName": "Department store"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qtgrv",
            "EntityName": "Variety Stores"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0841v": "Walmart"
    },
    "qid_topic_entity": {
      "Q483551": "Walmart"
    },
    "index": 648
  },
  {
    "QuestionId": "WebQTest-384",
    "RawQuestion": "what was robert burns famous for?",
    "ProcessedQuestion": "what was robert burns famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-384.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09482)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09482 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "robert burns",
        "TopicEntityName": "Robert Burns",
        "TopicEntityMid": "m.09482",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knj1",
            "EntityName": "Bard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09482": "Robert Burns"
    },
    "qid_topic_entity": {
      "Q81960": "Robert Burns"
    },
    "index": 649
  },
  {
    "QuestionId": "WebQTest-1348",
    "RawQuestion": "what team did peyton manning's dad play for?",
    "ProcessedQuestion": "what team did peyton manning 's dad play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1348.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F longer chain. Original comment: F "
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nns:m.027jv8 ns:people.person.parents ?y .\n?y ns:people.person.gender ns:m.05zppz . #Male\n?y ns:sports.pro_athlete.teams ?z .\n?z ns:sports.sports_team_roster.team ?x .\n}",
        "PotentialTopicEntityMention": "peyton manning",
        "TopicEntityName": "Peyton Manning",
        "TopicEntityMid": "m.027jv8",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gqb0k",
            "EntityName": "Ole Miss Rebels football"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04nmxtk",
            "EntityName": "Houston Oilers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051q5",
            "EntityName": "Minnesota Vikings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g3v",
            "EntityName": "New Orleans Saints"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027jv8": "Peyton Manning"
    },
    "qid_topic_entity": {
      "Q7539": "Peyton Manning"
    },
    "index": 650
  },
  {
    "QuestionId": "WebQTest-1143",
    "RawQuestion": "what galileo galilei was famous for?",
    "ProcessedQuestion": "what galileo galilei was famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-1143.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034ks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034ks ns:user.lindenb.default_domain.scientist.known_for ?x .\n}\n",
        "PotentialTopicEntityMention": "galileo galilei",
        "TopicEntityName": "Galileo Galilei",
        "TopicEntityMid": "m.034ks",
        "InferentialChain": [
          "user.lindenb.default_domain.scientist.known_for"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kf8z",
            "EntityName": "Heliocentrism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06p5g",
            "EntityName": "Solar System"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hggs",
            "EntityName": "Kinematics"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034ks": "Galileo Galilei"
    },
    "qid_topic_entity": {
      "Q307": "Galileo Galilei"
    },
    "index": 651
  },
  {
    "QuestionId": "WebQTest-43",
    "RawQuestion": "what did george clemenceau do?",
    "ProcessedQuestion": "what did george clemenceau do",
    "Parses": [
      {
        "ParseId": "WebQTest-43.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hff8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hff8 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "george clemenceau",
        "TopicEntityName": "Georges Cl\u00e9menceau",
        "TopicEntityMid": "m.0hff8",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016fc2",
            "EntityName": "Statesman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h668d",
            "EntityName": "Publisher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t4q",
            "EntityName": "Physician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8qb",
            "EntityName": "Journalist"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hff8": "Georges Cl\u00e9menceau"
    },
    "qid_topic_entity": {
      "Q171730": "Georges Cl\u00e9menceau"
    },
    "index": 652
  },
  {
    "QuestionId": "WebQTest-1796",
    "RawQuestion": "what city was michael jackson born in?",
    "ProcessedQuestion": "what city was michael jackson born in",
    "Parses": [
      {
        "ParseId": "WebQTest-1796.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jackson",
        "TopicEntityName": "Michael Jackson",
        "TopicEntityMid": "m.09889g",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03b12",
            "EntityName": "Gary"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09889g": "Michael Jackson"
    },
    "qid_topic_entity": {
      "Q2831": "Michael Jackson"
    },
    "index": 653
  },
  {
    "QuestionId": "WebQTest-414",
    "RawQuestion": "who does brian dawkins play for 2011?",
    "ProcessedQuestion": "who does brian dawkins play for 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-414.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04m4p5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04m4p5 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "brian dawkins",
        "TopicEntityName": "Brian Dawkins",
        "TopicEntityMid": "m.04m4p5",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0289q",
            "EntityName": "Denver Broncos"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04m4p5": "Brian Dawkins"
    },
    "qid_topic_entity": {
      "Q641601": "Brian Dawkins"
    },
    "index": 654
  },
  {
    "QuestionId": "WebQTest-1572",
    "RawQuestion": "what should i do today in san francisco?",
    "ProcessedQuestion": "what should i do today in san francisco",
    "Parses": [
      {
        "ParseId": "WebQTest-1572.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d6lp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d6lp ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "san francisco",
        "TopicEntityName": "San Francisco",
        "TopicEntityMid": "m.0d6lp",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_1t",
            "EntityName": "San Francisco Museum of Modern Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012vvtp_",
            "EntityName": "Travefy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z4cc",
            "EntityName": "Angel Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.022q0n",
            "EntityName": "Coit Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023x4y",
            "EntityName": "Lombard Street"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0245vl",
            "EntityName": "Asian Art Museum of San Francisco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025psq",
            "EntityName": "Golden Gate Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027yy0b",
            "EntityName": "Yerba Buena Center for the Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029bdk",
            "EntityName": "Chinatown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p_8jw",
            "EntityName": "Haas-Lilienthal House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pqty5",
            "EntityName": "San Francisco Railway Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rwwk9",
            "EntityName": "Contemporary Jewish Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z4m5c",
            "EntityName": "Consulate General of Mexico, San Francisco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034gjn",
            "EntityName": "Exploratorium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035p3",
            "EntityName": "Golden Gate Bridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p_pq",
            "EntityName": "San Francisco City Hall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lh5gw",
            "EntityName": "Camera Obscura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ptrc",
            "EntityName": "San Francisco cable car system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhpfx",
            "EntityName": "San Francisco Fire Department Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050wqp",
            "EntityName": "Union Square"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.057mlm",
            "EntityName": "Fisherman's Wharf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.058h2l",
            "EntityName": "Ghirardelli Square"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0595pv",
            "EntityName": "Cartoon Art Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05nxnt",
            "EntityName": "Baker Beach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vvwl",
            "EntityName": "San Francisco Ferry Building"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05w70m",
            "EntityName": "Twin Peaks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.061tjx",
            "EntityName": "Crissy Field"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ybm9",
            "EntityName": "Mus\u00e9e M\u00e9canique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f726z",
            "EntityName": "Museum of the African Diaspora"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fhvgc",
            "EntityName": "Japanese Tea Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g2_pk",
            "EntityName": "St. Regis Museum Tower"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g687",
            "EntityName": "Presidio of San Francisco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h594",
            "EntityName": "Alcatraz Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hmt3bb",
            "EntityName": "Ripley's Believe It or Not! Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j2gj8v",
            "EntityName": "Palace of the Legion of Honor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d6lp": "San Francisco"
    },
    "qid_topic_entity": {
      "Q62": "San Francisco"
    },
    "index": 655
  },
  {
    "QuestionId": "WebQTest-1097",
    "RawQuestion": "where did michelle obama graduated from?",
    "ProcessedQuestion": "where did michelle obama graduated from",
    "Parses": [
      {
        "ParseId": "WebQTest-1097.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025s5v9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025s5v9 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "michelle obama",
        "TopicEntityName": "Michelle Obama",
        "TopicEntityMid": "m.025s5v9",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014zws",
            "EntityName": "Harvard Law School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zl0",
            "EntityName": "Princeton University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09rs7mx",
            "EntityName": "Whitney M. Young Magnet High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.025s5v9": "Michelle Obama"
    },
    "qid_topic_entity": {
      "Q13133": "Michelle Obama"
    },
    "index": 656
  },
  {
    "QuestionId": "WebQTest-112",
    "RawQuestion": "what was robert burns?",
    "ProcessedQuestion": "what was robert burns",
    "Parses": [
      {
        "ParseId": "WebQTest-112.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09482)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09482 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "robert burns",
        "TopicEntityName": "Robert Burns",
        "TopicEntityMid": "m.09482",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knj1",
            "EntityName": "Bard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kyk",
            "EntityName": "Author"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09482": "Robert Burns"
    },
    "qid_topic_entity": {
      "Q81960": "Robert Burns"
    },
    "index": 657
  },
  {
    "QuestionId": "WebQTest-595",
    "RawQuestion": "when is the last time the ravens won a superbowl?",
    "ProcessedQuestion": "when is the last time the ravens won a superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-595.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ct6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ct6 ns:sports.sports_team.championships ?x .\n?x ns:sports.sports_championship_event.championship ns:m.06x5s .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "ravens",
        "TopicEntityName": "Baltimore Ravens",
        "TopicEntityMid": "m.01ct6",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06x5s",
            "EntityName": "Super Bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_championship_event.championship",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0642vqv",
            "EntityName": "Super Bowl XLVII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ct6": "Baltimore Ravens"
    },
    "qid_topic_entity": {
      "Q276539": "Baltimore Ravens"
    },
    "index": 658
  },
  {
    "QuestionId": "WebQTest-1452",
    "RawQuestion": "where is dwight howard now?",
    "ProcessedQuestion": "where is dwight howard now",
    "Parses": [
      {
        "ParseId": "WebQTest-1452.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02fg_f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02fg_f ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "dwight howard",
        "TopicEntityName": "Dwight Howard",
        "TopicEntityMid": "m.02fg_f",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "now"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jmfb",
            "EntityName": "Houston Rockets"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02fg_f": "Dwight Howard"
    },
    "qid_topic_entity": {
      "Q25278": "Dwight Howard"
    },
    "index": 659
  },
  {
    "QuestionId": "WebQTest-745",
    "RawQuestion": "what was augustus caesar famous for?",
    "ProcessedQuestion": "what was augustus caesar famous for",
    "Parses": [
      {
        "ParseId": "WebQTest-745.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ngg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ngg ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "augustus caesar",
        "TopicEntityName": "Augustus",
        "TopicEntityMid": "m.0ngg",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g14w",
            "EntityName": "Roman emperor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fj9f",
            "EntityName": "Politician"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ngg": "Augustus"
    },
    "qid_topic_entity": {
      "Q1405": "Augustus"
    },
    "index": 660
  },
  {
    "QuestionId": "WebQTest-1715",
    "RawQuestion": "where did cs lewis wrote?",
    "ProcessedQuestion": "where did cs lewis wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-1715.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? where does someboy write = where does someboy live"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wd02c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wd02c ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "cs lewis",
        "TopicEntityName": "C. S. Lewis",
        "TopicEntityMid": "m.01wd02c",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01l63",
            "EntityName": "Belfast"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01wd02c": "C. S. Lewis"
    },
    "qid_topic_entity": {
      "Q9204": "C. S. Lewis"
    },
    "index": 661
  },
  {
    "QuestionId": "WebQTest-605",
    "RawQuestion": "what degrees did obama get in college?",
    "ProcessedQuestion": "what degrees did obama get in college",
    "Parses": [
      {
        "ParseId": "WebQTest-605.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.degree ?x .\n}\n",
        "PotentialTopicEntityMention": "obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "people.person.education",
          "education.education.degree"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013zdg",
            "EntityName": "Juris Doctor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014mlp",
            "EntityName": "Bachelor of Arts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 662
  },
  {
    "QuestionId": "WebQTest-1971",
    "RawQuestion": "what movies gerard butler has been in?",
    "ProcessedQuestion": "what movies gerard butler has been in",
    "Parses": [
      {
        "ParseId": "WebQTest-1971.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.038rzr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.038rzr ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "gerard butler",
        "TopicEntityName": "Gerard Butler",
        "TopicEntityMid": "m.038rzr",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010vzxsl",
            "EntityName": "London Has Fallen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01242_",
            "EntityName": "Mrs Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0124x_l1",
            "EntityName": "Geostorm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015yl2",
            "EntityName": "Reign of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01sxdy",
            "EntityName": "The Phantom of the Opera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v1ln",
            "EntityName": "Tomorrow Never Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0292qb",
            "EntityName": "Lara Croft Tomb Raider: The Cradle of Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p1fl7",
            "EntityName": "Shooters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pjkz7",
            "EntityName": "Gamer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qk3fk",
            "EntityName": "P.S. I Love You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r3rry",
            "EntityName": "Wrath of Gods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vvwqg",
            "EntityName": "RocknRolla"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c6w7q",
            "EntityName": "Harrison's Flowers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03g_sj5",
            "EntityName": "Nim's Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047qxs",
            "EntityName": "Timeline"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047rkcm",
            "EntityName": "The Ugly Truth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f10b5",
            "EntityName": "One More Kiss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f52jw",
            "EntityName": "How to Train Your Dragon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j04w7",
            "EntityName": "Fast Food"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jdgq",
            "EntityName": "Dracula 2000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yb52q",
            "EntityName": "Jewel of the Sahara"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05dj6d",
            "EntityName": "Dear Frankie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h4_qt",
            "EntityName": "Law Abiding Citizen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lm43",
            "EntityName": "The Game of Their Lives"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p2gz3",
            "EntityName": "Tales of the Black Freighter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w9zfg",
            "EntityName": "The Bounty Hunter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f_t4",
            "EntityName": "300"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09210y",
            "EntityName": "Beowulf & Grendel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh8x1y",
            "EntityName": "Coriolanus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwhkkw",
            "EntityName": "Machine Gun Preacher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1p6zg",
            "EntityName": "Trailer for a Remake of Gore Vidal's Caligula"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1z3g",
            "EntityName": "Butterfly on a Wheel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crvp0c",
            "EntityName": "How to Train Your Dragon: Legend of the Boneknapper Dragon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crz6lg",
            "EntityName": "The Cherry Orchard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dlk_qn",
            "EntityName": "Movie 43"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0w6n",
            "EntityName": "Attila"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gmglbv",
            "EntityName": "Playing for Keeps"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwp_k3",
            "EntityName": "How to Train Your Dragon 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhggp1",
            "EntityName": "Chasing Mavericks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hnd78z",
            "EntityName": "How to Train Your Dragon: Gift of the Night Fury"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hz7mx7",
            "EntityName": "Thunder Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m_cnk_",
            "EntityName": "How to Train Your Dragon 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n43ym4",
            "EntityName": "Olympus Has Fallen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v3yjg1",
            "EntityName": "Justin and the Knights of Valour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w0l3pk",
            "EntityName": "Gods of Egypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w17vsj",
            "EntityName": "Dynamo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.038rzr": "Gerard Butler"
    },
    "qid_topic_entity": {
      "Q169982": "Gerard Butler"
    },
    "index": 663
  },
  {
    "QuestionId": "WebQTest-1471",
    "RawQuestion": "what famous people came from delaware?",
    "ProcessedQuestion": "what famous people came from delaware",
    "Parses": [
      {
        "ParseId": "WebQTest-1471.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026mj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026mj ns:location.location.people_born_here ?x .\n}\n",
        "PotentialTopicEntityMention": "delaware",
        "TopicEntityName": "Delaware",
        "TopicEntityMid": "m.026mj",
        "InferentialChain": [
          "location.location.people_born_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_xw9n5",
            "EntityName": "Bill Indursky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_y_9x0",
            "EntityName": "Andrew Cebulka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01129fkw",
            "EntityName": "Ann Marie Borghese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131bnwf",
            "EntityName": "Norman Hutchins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wgcqq",
            "EntityName": "Billy Ficca"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pklp5",
            "EntityName": "Huck Betts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pvs20",
            "EntityName": "William Grassie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qnnct",
            "EntityName": "Solomon Bayley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qt46z",
            "EntityName": "Jacqueline Jones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vnjsq",
            "EntityName": "Matt Stawicki"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz9x4",
            "EntityName": "Collins J. Seitz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z58yt",
            "EntityName": "Jim Wilson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cpszm",
            "EntityName": "Griffin Seward"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ctznp",
            "EntityName": "R. R. M. Carpenter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dzs00",
            "EntityName": "Chris Gutierrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jssy6",
            "EntityName": "Herbert Bennett Fenn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zs9n7",
            "EntityName": "David McElwee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bc6b",
            "EntityName": "Rebecca Lee Crumpler"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mw5wh",
            "EntityName": "Hampton Del Ruth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05w85n5",
            "EntityName": "Katharine Pyle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.063h55",
            "EntityName": "Francine Fournier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kqn",
            "EntityName": "Reuben James"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08rwbh",
            "EntityName": "Eddie Paskey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l25n",
            "EntityName": "John Sedwick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wyb6",
            "EntityName": "Alfred I. du Pont"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhlkkh",
            "EntityName": "Nathaniel Harrington Bannister"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c0311b",
            "EntityName": "A.C. Golden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6vmy",
            "EntityName": "Steve Ressel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d65y5",
            "EntityName": "Tully Satre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dry27q",
            "EntityName": "James B. Clark, Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drydyc",
            "EntityName": "William King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5c9g",
            "EntityName": "Fred Lonberg-Holm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gkg6m7",
            "EntityName": "Chris Dapkins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hqqthn",
            "EntityName": "Patrick Kearney"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hz6xr1",
            "EntityName": "Jeffrey W. Bullock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3dk2k",
            "EntityName": "Edward Groesbeck Voss"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j47g36",
            "EntityName": "Jeremy Conway"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9l05d",
            "EntityName": "Hugh T. Broomall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jz14_",
            "EntityName": "Rex Carlton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8r_15",
            "EntityName": "Tom Peszek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n5y06z",
            "EntityName": "Outerbridge Horsey IV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nhcvxt",
            "EntityName": "Gimel \\\"Young Guru\\\" Keaton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rphj64",
            "EntityName": "James Tilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vsbk22",
            "EntityName": "Ed Haskett"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w36css",
            "EntityName": "Joe Garcio"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.026mj": "Delaware"
    },
    "qid_topic_entity": {
      "Q1393": "Delaware"
    },
    "index": 664
  },
  {
    "QuestionId": "WebQTest-366",
    "RawQuestion": "what language do british speak?",
    "ProcessedQuestion": "what language do british speak",
    "Parses": [
      {
        "ParseId": "WebQTest-366.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "british",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v0g",
            "EntityName": "Cornish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03x42",
            "EntityName": "Irish"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070zw",
            "EntityName": "Scottish Gaelic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.083tk",
            "EntityName": "Welsh Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ct8m",
            "EntityName": "British Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h407",
            "EntityName": "Scots Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-366.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "british",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 665
  },
  {
    "QuestionId": "WebQTest-180",
    "RawQuestion": "where the missouri river ends?",
    "ProcessedQuestion": "where the missouri river ends",
    "Parses": [
      {
        "ParseId": "WebQTest-180.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ykz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ykz ns:geography.river.mouth ?x .\n}\n",
        "PotentialTopicEntityMention": "missouri river",
        "TopicEntityName": "Missouri River",
        "TopicEntityMid": "m.04ykz",
        "InferentialChain": [
          "geography.river.mouth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yf_",
            "EntityName": "Mississippi River"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ykz": "Missouri River"
    },
    "qid_topic_entity": {
      "Q5419": "Missouri River"
    },
    "index": 666
  },
  {
    "QuestionId": "WebQTest-2023",
    "RawQuestion": "where are the nato headquarters located?",
    "ProcessedQuestion": "where are the nato headquarters located",
    "Parses": [
      {
        "ParseId": "WebQTest-2023.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059dn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059dn ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "nato",
        "TopicEntityName": "North Atlantic Treaty Organization (NATO)",
        "TopicEntityMid": "m.059dn",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0177z",
            "EntityName": "Brussels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.059dn": "North Atlantic Treaty Organization (NATO)"
    },
    "qid_topic_entity": {
      "Q7184": "North Atlantic Treaty Organization (NATO)"
    },
    "index": 667
  },
  {
    "QuestionId": "WebQTest-189",
    "RawQuestion": "what region of the world is egypt associated with?",
    "ProcessedQuestion": "what region of the world is egypt associated with",
    "Parses": [
      {
        "ParseId": "WebQTest-189.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nt",
            "EntityName": "Region",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wsz",
            "EntityName": "Middle East"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 668
  },
  {
    "QuestionId": "WebQTest-1321",
    "RawQuestion": "where did the gallipoli war take place?",
    "ProcessedQuestion": "where did the gallipoli war take place",
    "Parses": [
      {
        "ParseId": "WebQTest-1321.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fc7p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fc7p ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "gallipoli",
        "TopicEntityName": "Gallipoli Campaign",
        "TopicEntityMid": "m.01fc7p",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03czv",
            "EntityName": "Gallipoli"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01fc7p": "Gallipoli Campaign"
    },
    "qid_topic_entity": {
      "Q164983": "Gallipoli Campaign"
    },
    "index": 669
  },
  {
    "QuestionId": "WebQTest-156",
    "RawQuestion": "what time zone am i in california?",
    "ProcessedQuestion": "what time zone am i in california",
    "Parses": [
      {
        "ParseId": "WebQTest-156.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n7q ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "california",
        "TopicEntityName": "California",
        "TopicEntityMid": "m.01n7q",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lcqs",
            "EntityName": "Pacific Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n7q": "California"
    },
    "qid_topic_entity": {
      "Q99": "California"
    },
    "index": 670
  },
  {
    "QuestionId": "WebQTest-1785",
    "RawQuestion": "what was kim richards in?",
    "ProcessedQuestion": "what was kim richards in",
    "Parses": [
      {
        "ParseId": "WebQTest-1785.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08l257)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08l257 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "kim richards",
        "TopicEntityName": "Kim Richards",
        "TopicEntityMid": "m.08l257",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r2r2j",
            "EntityName": "Devil Dog: The Hound of Hell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rl4qq",
            "EntityName": "Tuff Turf"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f2h9q",
            "EntityName": "Escape to Witch Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f76fm",
            "EntityName": "Race to Witch Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05dj6dc",
            "EntityName": "Nanny and the Professor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r3nm",
            "EntityName": "Return from Witch Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wbmd",
            "EntityName": "Meatballs Part II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dyxd",
            "EntityName": "The Car"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bfmjvh",
            "EntityName": "The Whiz Kid and the Mystery at Riverton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d1_kl",
            "EntityName": "No Deposit, No Return"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dnh5w",
            "EntityName": "Raid on Entebbe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ff1st",
            "EntityName": "Black Snake Moan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08l257": "Kim Richards"
    },
    "qid_topic_entity": {
      "Q587156": "Kim Richards"
    },
    "index": 671
  },
  {
    "QuestionId": "WebQTest-1414",
    "RawQuestion": "what happened to pope john paul ii?",
    "ProcessedQuestion": "what happened to pope john paul ii",
    "Parses": [
      {
        "ParseId": "WebQTest-1414.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05yfx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05yfx ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "john paul ii",
        "TopicEntityName": "Pope John Paul II",
        "TopicEntityMid": "m.05yfx",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g02vk",
            "EntityName": "Parkinson's disease"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gk4g",
            "EntityName": "heart attack"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05yfx": "Pope John Paul II"
    },
    "qid_topic_entity": {
      "Q989": "Pope John Paul II"
    },
    "index": 672
  },
  {
    "QuestionId": "WebQTest-423",
    "RawQuestion": "when's the last time the steelers won the superbowl?",
    "ProcessedQuestion": "when 's the last time the steelers won the superbowl",
    "Parses": [
      {
        "ParseId": "WebQTest-423.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? no max"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tfm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tfm ns:sports.sports_team.championships ?x .\n?x ns:common.topic.notable_types ns:m.01xljv1 .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "steelers",
        "TopicEntityName": "Pittsburgh Steelers",
        "TopicEntityMid": "m.05tfm",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01xljv1",
            "EntityName": "Super bowl",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n7r5",
            "EntityName": "Super Bowl XLIII"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05tfm": "Pittsburgh Steelers"
    },
    "qid_topic_entity": {
      "Q191477": "Pittsburgh Steelers"
    },
    "index": 673
  },
  {
    "QuestionId": "WebQTest-1878",
    "RawQuestion": "what form of government does the united states use?",
    "ProcessedQuestion": "what form of government does the united states use",
    "Parses": [
      {
        "ParseId": "WebQTest-1878.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 674
  },
  {
    "QuestionId": "WebQTest-886",
    "RawQuestion": "who voiced darth vader in the original star wars movies?",
    "ProcessedQuestion": "who voiced darth vader in the original star wars movies",
    "Parses": [
      {
        "ParseId": "WebQTest-886.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n?y ns:film.performance.film ns:m.0dtfn .\n}\n",
        "PotentialTopicEntityMention": "darth vader",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0dtfn",
            "EntityName": "Star Wars",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 675
  },
  {
    "QuestionId": "WebQTest-693",
    "RawQuestion": "what language do most people speak in afghanistan?",
    "ProcessedQuestion": "what language do most people speak in afghanistan",
    "Parses": [
      {
        "ParseId": "WebQTest-693.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jdd ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "afghanistan",
        "TopicEntityName": "Afghanistan",
        "TopicEntityMid": "m.0jdd",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl5z",
            "EntityName": "Farsi, Eastern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0swlx",
            "EntityName": "Pashto language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-693.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jdd ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "afghanistan",
        "TopicEntityName": "Afghanistan",
        "TopicEntityMid": "m.0jdd",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl5z",
            "EntityName": "Farsi, Eastern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0swlx",
            "EntityName": "Pashto language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jdd": "Afghanistan"
    },
    "qid_topic_entity": {
      "Q889": "Afghanistan"
    },
    "index": 676
  },
  {
    "QuestionId": "WebQTest-125",
    "RawQuestion": "what are abraham sons names?",
    "ProcessedQuestion": "what are abraham sons names",
    "Parses": [
      {
        "ParseId": "WebQTest-125.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pwb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pwb ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "abraham",
        "TopicEntityName": "Abraham",
        "TopicEntityMid": "m.0pwb",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ghr4",
            "EntityName": "Ishmael"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pv75j",
            "EntityName": "Ishbak"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w6dpm",
            "EntityName": "Shuah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xqw",
            "EntityName": "Isaac"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08flgy",
            "EntityName": "Zimran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b__3p",
            "EntityName": "Jokshan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c05cp",
            "EntityName": "Medan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ch5jk5",
            "EntityName": "Midian"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pwb": "Abraham"
    },
    "qid_topic_entity": {
      "Q9181": "Abraham"
    },
    "index": 677
  },
  {
    "QuestionId": "WebQTest-1022",
    "RawQuestion": "what country is nike based in?",
    "ProcessedQuestion": "what country is nike based in",
    "Parses": [
      {
        "ParseId": "WebQTest-1022.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lwkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lwkh ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.country ?x .\n}\n",
        "PotentialTopicEntityMention": "nike",
        "TopicEntityName": "Nike, Inc.",
        "TopicEntityMid": "m.0lwkh",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lwkh": "Nike, Inc."
    },
    "qid_topic_entity": {
      "Q483915": "Nike, Inc."
    },
    "index": 678
  },
  {
    "QuestionId": "WebQTest-1864",
    "RawQuestion": "who plays the role of tony dinozzo on ncis?",
    "ProcessedQuestion": "who plays the role of tony dinozzo on ncis",
    "Parses": [
      {
        "ParseId": "WebQTest-1864.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07wp25)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07wp25 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.03m8sg .\n}\n",
        "PotentialTopicEntityMention": "tony dinozzo",
        "TopicEntityName": "Special Agent Anthony DiNozzo",
        "TopicEntityMid": "m.07wp25",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03m8sg",
            "EntityName": "NCIS",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0578mx",
            "EntityName": "Michael Weatherly"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07wp25": "Special Agent Anthony DiNozzo"
    },
    "qid_topic_entity": {
      "Q772107": "Special Agent Anthony DiNozzo"
    },
    "index": 679
  },
  {
    "QuestionId": "WebQTest-933",
    "RawQuestion": "what political party did andrew johnson belong to?",
    "ProcessedQuestion": "what political party did andrew johnson belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-933.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rmg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rmg ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "andrew johnson",
        "TopicEntityName": "Andrew Johnson",
        "TopicEntityMid": "m.0rmg",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07wbk",
            "EntityName": "Republican Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d075m",
            "EntityName": "Democratic Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d9fdp",
            "EntityName": "National Union Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0rmg": "Andrew Johnson"
    },
    "qid_topic_entity": {
      "Q8612": "Andrew Johnson"
    },
    "index": 680
  },
  {
    "QuestionId": "WebQTest-261",
    "RawQuestion": "what is cindy sherman known for?",
    "ProcessedQuestion": "what is cindy sherman known for",
    "Parses": [
      {
        "ParseId": "WebQTest-261.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.074g02)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.074g02 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "cindy sherman",
        "TopicEntityName": "Cindy Sherman",
        "TopicEntityMid": "m.074g02",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jknp",
            "EntityName": "Film director"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hz6vv",
            "EntityName": "Visual Artist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lgw7",
            "EntityName": "Photographer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n1h",
            "EntityName": "Artist"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.074g02": "Cindy Sherman"
    },
    "qid_topic_entity": {
      "Q229455": "Cindy Sherman"
    },
    "index": 681
  },
  {
    "QuestionId": "WebQTest-1560",
    "RawQuestion": "who founded new york university?",
    "ProcessedQuestion": "who founded new york university",
    "Parses": [
      {
        "ParseId": "WebQTest-1560.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bwfn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bwfn ns:organization.organization.founders ?x .\n}\n",
        "PotentialTopicEntityMention": "new york university",
        "TopicEntityName": "New York University",
        "TopicEntityMid": "m.0bwfn",
        "InferentialChain": [
          "organization.organization.founders"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p369",
            "EntityName": "Albert Gallatin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m665",
            "EntityName": "Mordecai Manuel Noah"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bwfn": "New York University"
    },
    "qid_topic_entity": {
      "Q49210": "New York University"
    },
    "index": 682
  },
  {
    "QuestionId": "WebQTest-896",
    "RawQuestion": "when did the philadelphia flyers win the cup?",
    "ProcessedQuestion": "when did the philadelphia flyers win the cup",
    "Parses": [
      {
        "ParseId": "WebQTest-896.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hn2q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hn2q ns:sports.sports_team.championships ?x .\n}\n",
        "PotentialTopicEntityMention": "philadelphia flyers",
        "TopicEntityName": "Philadelphia Flyers",
        "TopicEntityMid": "m.0hn2q",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by14v",
            "EntityName": "1975 Stanley Cup Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03by156",
            "EntityName": "1974 Stanley Cup Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hn2q": "Philadelphia Flyers"
    },
    "qid_topic_entity": {
      "Q192083": "Philadelphia Flyers"
    },
    "index": 683
  },
  {
    "QuestionId": "WebQTest-1142",
    "RawQuestion": "who does ronaldinho play for now 2011?",
    "ProcessedQuestion": "who does ronaldinho play for now 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1142.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lfw5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lfw5 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "ronaldinho",
        "TopicEntityName": "Ronaldinho",
        "TopicEntityMid": "m.02lfw5",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01352_",
            "EntityName": "Brazil national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019lty",
            "EntityName": "Clube de Regatas do Flamengo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02lfw5": "Ronaldinho"
    },
    "qid_topic_entity": {
      "Q39444": "Ronaldinho"
    },
    "index": 684
  },
  {
    "QuestionId": "WebQTest-295",
    "RawQuestion": "what type of government does germany have now?",
    "ProcessedQuestion": "what type of government does germany have now",
    "Parses": [
      {
        "ParseId": "WebQTest-295.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "germany",
        "TopicEntityName": "Germany",
        "TopicEntityMid": "m.0345h",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drnm",
            "EntityName": "Representative democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0345h": "Germany"
    },
    "qid_topic_entity": {
      "Q183": "Germany"
    },
    "index": 685
  },
  {
    "QuestionId": "WebQTest-1571",
    "RawQuestion": "what is sir isaac newton theory?",
    "ProcessedQuestion": "what is sir isaac newton theory",
    "Parses": [
      {
        "ParseId": "WebQTest-1571.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:base.argumentmaps.innovator.original_ideas ?x .\n}\n",
        "PotentialTopicEntityMention": "sir isaac newton",
        "TopicEntityName": "Isaac Newton",
        "TopicEntityMid": "m.03s9v",
        "InferentialChain": [
          "base.argumentmaps.innovator.original_ideas"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kffn",
            "EntityName": "Newton's law of universal gravitation"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03s9v": "Isaac Newton"
    },
    "qid_topic_entity": {
      "Q935": "Isaac Newton"
    },
    "index": 686
  },
  {
    "QuestionId": "WebQTest-1663",
    "RawQuestion": "what music did louis armstrong play?",
    "ProcessedQuestion": "what music did louis armstrong play",
    "Parses": [
      {
        "ParseId": "WebQTest-1663.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "louis armstrong",
        "TopicEntityName": "Louis Armstrong",
        "TopicEntityMid": "m.04n32",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015y_n",
            "EntityName": "Swing music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_d0",
            "EntityName": "Jazz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09xw2",
            "EntityName": "Dixieland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dhb2",
            "EntityName": "Scat singing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m40d",
            "EntityName": "Traditional pop music"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04n32": "Louis Armstrong"
    },
    "qid_topic_entity": {
      "Q1779": "Louis Armstrong"
    },
    "index": 687
  },
  {
    "QuestionId": "WebQTest-1758",
    "RawQuestion": "where do they speak afrikaans?",
    "ProcessedQuestion": "where do they speak afrikaans",
    "Parses": [
      {
        "ParseId": "WebQTest-1758.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x82)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x82 ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "afrikaans",
        "TopicEntityName": "Afrikaans Language",
        "TopicEntityMid": "m.0x82",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016p5p",
            "EntityName": "Transkei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tr1",
            "EntityName": "Malawi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065skb",
            "EntityName": "Gazankulu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1758.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x82)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x82 ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "afrikaans",
        "TopicEntityName": "Afrikaans Language",
        "TopicEntityMid": "m.0x82",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0x82": "Afrikaans Language"
    },
    "qid_topic_entity": {
      "Q14196": "Afrikaans Language"
    },
    "index": 688
  },
  {
    "QuestionId": "WebQTest-1554",
    "RawQuestion": "what is the official language of brazil now?",
    "ProcessedQuestion": "what is the official language of brazil now",
    "Parses": [
      {
        "ParseId": "WebQTest-1554.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 689
  },
  {
    "QuestionId": "WebQTest-883",
    "RawQuestion": "who was king george vi married to?",
    "ProcessedQuestion": "who was king george vi married to",
    "Parses": [
      {
        "ParseId": "WebQTest-883.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.to ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "king george vi",
        "TopicEntityName": "George VI",
        "TopicEntityMid": "m.0cm83",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "people.marriage.to",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cm63",
            "EntityName": "Queen Elizabeth The Queen Mother"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cm83": "George VI"
    },
    "qid_topic_entity": {
      "Q280856": "George VI"
    },
    "index": 690
  },
  {
    "QuestionId": "WebQTest-1803",
    "RawQuestion": "what does gm make?",
    "ProcessedQuestion": "what does gm make",
    "Parses": [
      {
        "ParseId": "WebQTest-1803.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035nm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035nm ns:business.business_operation.industry ?x .\n}\n",
        "PotentialTopicEntityMention": "gm",
        "TopicEntityName": "General Motors",
        "TopicEntityMid": "m.035nm",
        "InferentialChain": [
          "business.business_operation.industry"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015smg",
            "EntityName": "Automotive industry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qtfw8",
            "EntityName": "Motor Vehicles and Passenger Car Bodies"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035nm": "General Motors"
    },
    "qid_topic_entity": {
      "Q81965": "General Motors"
    },
    "index": 691
  },
  {
    "QuestionId": "WebQTest-1546",
    "RawQuestion": "where did rick santorum attend high school?",
    "ProcessedQuestion": "where did rick santorum attend high school",
    "Parses": [
      {
        "ParseId": "WebQTest-1546.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fgd3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fgd3 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hn6 .\n}\n",
        "PotentialTopicEntityMention": "rick santorum",
        "TopicEntityName": "Rick Santorum",
        "TopicEntityMid": "m.01fgd3",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hn6",
            "EntityName": "School",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06skgp",
            "EntityName": "Carmel High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01fgd3": "Rick Santorum"
    },
    "qid_topic_entity": {
      "Q155985": "Rick Santorum"
    },
    "index": 692
  },
  {
    "QuestionId": "WebQTest-1231",
    "RawQuestion": "where is chris paul from?",
    "ProcessedQuestion": "where is chris paul from",
    "Parses": [
      {
        "ParseId": "WebQTest-1231.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cymln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cymln ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "chris paul",
        "TopicEntityName": "Chris Paul",
        "TopicEntityMid": "m.0cymln",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cymln": "Chris Paul"
    },
    "qid_topic_entity": {
      "Q46040": "Chris Paul"
    },
    "index": 693
  },
  {
    "QuestionId": "WebQTest-339",
    "RawQuestion": "what nationality is mother teresa?",
    "ProcessedQuestion": "what nationality is mother teresa",
    "Parses": [
      {
        "ParseId": "WebQTest-339.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yv6p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yv6p ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "mother teresa",
        "TopicEntityName": "Mother Teresa",
        "TopicEntityMid": "m.01yv6p",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kyr",
            "EntityName": "Ottoman Empire"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01yv6p": "Mother Teresa"
    },
    "qid_topic_entity": {
      "Q30547": "Mother Teresa"
    },
    "index": 694
  },
  {
    "QuestionId": "WebQTest-1289",
    "RawQuestion": "what type of music did mozart composed?",
    "ProcessedQuestion": "what type of music did mozart composed",
    "Parses": [
      {
        "ParseId": "WebQTest-1289.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.082db)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.082db ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "mozart",
        "TopicEntityName": "Wolfgang Amadeus Mozart",
        "TopicEntityMid": "m.082db",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021dvj",
            "EntityName": "Ballet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lls",
            "EntityName": "Opera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q6jz",
            "EntityName": "Art song"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggq0m",
            "EntityName": "Classical music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l8gh",
            "EntityName": "Chamber music"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.082db": "Wolfgang Amadeus Mozart"
    },
    "qid_topic_entity": {
      "Q254": "Wolfgang Amadeus Mozart"
    },
    "index": 695
  },
  {
    "QuestionId": "WebQTest-1738",
    "RawQuestion": "who plays nicholas newman on the young and the restless?",
    "ProcessedQuestion": "who plays nicholas newman on the young and the restless",
    "Parses": [
      {
        "ParseId": "WebQTest-1738.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01b64v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01b64v ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0f22p8 .\n}\n",
        "PotentialTopicEntityMention": "the young and the restless",
        "TopicEntityName": "The Young and the Restless",
        "TopicEntityMid": "m.01b64v",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0f22p8",
            "EntityName": "Nicholas Newman",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07sklj",
            "EntityName": "Joshua Morrow"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01b64v": "The Young and the Restless"
    },
    "qid_topic_entity": {
      "Q849627": "The Young and the Restless"
    },
    "index": 696
  },
  {
    "QuestionId": "WebQTest-1006",
    "RawQuestion": "what movies is omar epps in?",
    "ProcessedQuestion": "what movies is omar epps in",
    "Parses": [
      {
        "ParseId": "WebQTest-1006.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_tv5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_tv5 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "omar epps",
        "TopicEntityName": "Omar Epps",
        "TopicEntityMid": "m.02_tv5",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02v5_g",
            "EntityName": "Scream 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033gkt",
            "EntityName": "Higher Learning"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03820v",
            "EntityName": "Brother"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qhxn_",
            "EntityName": "Perfume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.040btp",
            "EntityName": "Against the Ropes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0456zg",
            "EntityName": "Alfie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j0jtp",
            "EntityName": "Deadly Voyage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2hqm",
            "EntityName": "Conviction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jdgq",
            "EntityName": "Dracula 2000"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zx33c",
            "EntityName": "First Time Felon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pr8b",
            "EntityName": "Big Trouble"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q_hx",
            "EntityName": "Don't Be a Menace to South Central While Drinking Your Juice in the Hood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zl2q4",
            "EntityName": "A Day in the Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08487v",
            "EntityName": "Love & Basketball"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08r27j",
            "EntityName": "The Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08tw1f",
            "EntityName": "In Too Deep"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08w51z",
            "EntityName": "Juice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08yf3q",
            "EntityName": "The Mod Squad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08zjv6",
            "EntityName": "Breakfast of Champions"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09fgyt",
            "EntityName": "The Program"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09glbk",
            "EntityName": "Major League II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c5dgvg",
            "EntityName": "Daybreak"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cvcdtm",
            "EntityName": "MTV 20: Jams"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_tv5": "Omar Epps"
    },
    "qid_topic_entity": {
      "Q297334": "Omar Epps"
    },
    "index": 697
  },
  {
    "QuestionId": "WebQTest-487",
    "RawQuestion": "who did veronica lake mary?",
    "ProcessedQuestion": "who did veronica lake mary",
    "Parses": [
      {
        "ParseId": "WebQTest-487.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xm6k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xm6k ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "veronica lake",
        "TopicEntityName": "Veronica Lake",
        "TopicEntityMid": "m.01xm6k",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w1_m0",
            "EntityName": "John S. Detlie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07cszd",
            "EntityName": "Andr\u00e9 de Toth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2qr4q",
            "EntityName": "Joseph A. McCarthy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2qr53",
            "EntityName": "Robert Carleton-Munro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01xm6k": "Veronica Lake"
    },
    "qid_topic_entity": {
      "Q84232": "Veronica Lake"
    },
    "index": 698
  },
  {
    "QuestionId": "WebQTest-89",
    "RawQuestion": "what do you call the chinese writing system?",
    "ProcessedQuestion": "what do you call the chinese writing system",
    "Parses": [
      {
        "ParseId": "WebQTest-89.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.writing_system ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.writing_system"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014lbg",
            "EntityName": "N\u00fcshu script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mw7r",
            "EntityName": "Simplified Chinese character"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nf5z",
            "EntityName": "Traditional Chinese characters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050fyz",
            "EntityName": "'Phags-pa script"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmzb",
            "EntityName": "Chinese characters"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 699
  },
  {
    "QuestionId": "WebQTest-14",
    "RawQuestion": "where is the fukushima daiichi nuclear plant located?",
    "ProcessedQuestion": "where is the fukushima daiichi nuclear plant located",
    "Parses": [
      {
        "ParseId": "WebQTest-14.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vkzy2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vkzy2 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "fukushima daiichi nuclear plant",
        "TopicEntityName": "Fukushima Daiichi Nuclear Power Plant",
        "TopicEntityMid": "m.02vkzy2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k_g5",
            "EntityName": "Okuma"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02vkzy2": "Fukushima Daiichi Nuclear Power Plant"
    },
    "qid_topic_entity": {
      "Q114295": "Fukushima Daiichi Nuclear Power Plant"
    },
    "index": 700
  },
  {
    "QuestionId": "WebQTest-542",
    "RawQuestion": "where did alex chilton die?",
    "ProcessedQuestion": "where did alex chilton die",
    "Parses": [
      {
        "ParseId": "WebQTest-542.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024bwn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024bwn ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "alex chilton",
        "TopicEntityName": "Alex Chilton",
        "TopicEntityMid": "m.024bwn",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2tj",
            "EntityName": "New Orleans"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.024bwn": "Alex Chilton"
    },
    "qid_topic_entity": {
      "Q206693": "Alex Chilton"
    },
    "index": 701
  },
  {
    "QuestionId": "WebQTest-1750",
    "RawQuestion": "what city does paul ryan live in?",
    "ProcessedQuestion": "what city does paul ryan live in",
    "Parses": [
      {
        "ParseId": "WebQTest-1750.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.024v2j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.024v2j ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "paul ryan",
        "TopicEntityName": "Paul Ryan",
        "TopicEntityMid": "m.024v2j",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.end_date",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.place_lived.start_date",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mm_c",
            "EntityName": "Janesville"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.024v2j": "Paul Ryan"
    },
    "qid_topic_entity": {
      "Q203966": "Paul Ryan"
    },
    "index": 702
  },
  {
    "QuestionId": "WebQTest-644",
    "RawQuestion": "what famous people are from el salvador?",
    "ProcessedQuestion": "what famous people are from el salvador",
    "Parses": [
      {
        "ParseId": "WebQTest-644.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k8k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k8k ns:location.location.people_born_here ?x .\n}\n",
        "PotentialTopicEntityMention": "el salvador",
        "TopicEntityName": "El Salvador",
        "TopicEntityMid": "m.02k8k",
        "InferentialChain": [
          "location.location.people_born_here"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11b8058v7j",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010h0d8y",
            "EntityName": "William Armando"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011k0bpp",
            "EntityName": "Victor Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011k0bx8",
            "EntityName": "Johnny Lopez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011v5_6y",
            "EntityName": "Francisco Funes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_0d7s",
            "EntityName": "Damaris Qu\u00e9les"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012_0fc_",
            "EntityName": "Francisca Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012z_6bb",
            "EntityName": "Ricardo L\u00f3pez Tenorio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01311sns",
            "EntityName": "Xenia Estrada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0131y42k",
            "EntityName": "Mauricio Alvarenga"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013b7xby",
            "EntityName": "Milton Palacios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xmgs",
            "EntityName": "Alexander Campos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02phhjj",
            "EntityName": "Jose Orlando Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pyjqw",
            "EntityName": "Mauricio Alonso Rodr\u00edguez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qgkkg",
            "EntityName": "Miguel Ca\u00f1izalez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsc86",
            "EntityName": "Francisco Gavidia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qscbm",
            "EntityName": "Pedro Geoffroy Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qsclj",
            "EntityName": "Camilo Minero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02v_3hr",
            "EntityName": "Ana Sol Gutierrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vmtpg",
            "EntityName": "Joel Aguilar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x5pqn",
            "EntityName": "Wilfredo Iraheta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c250_",
            "EntityName": "Mauricio Alfaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c5z5s",
            "EntityName": "Jos\u00e9 Luis Rugamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c9124",
            "EntityName": "Eduardo Hern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cblzx",
            "EntityName": "Roberto Carlos Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cfwyh",
            "EntityName": "Jos\u00e9 Manfredi Portillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chqtt",
            "EntityName": "Melvin Barrera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03chr1c",
            "EntityName": "Pedro Chavarria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ck2fb",
            "EntityName": "Jos\u00e9 Mar\u00eda Ca\u00f1as"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ctvv4",
            "EntityName": "Ruben Cedillos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f4fxd",
            "EntityName": "Keoki"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hzxty",
            "EntityName": "DJ Quest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m4f_f",
            "EntityName": "Prudencia Ayala"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nxgl4",
            "EntityName": "Andr\u00e9s Eduardo Men\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nxqf0",
            "EntityName": "William Renderos Iraheta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_076h",
            "EntityName": "Laura Molina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043ks6h",
            "EntityName": "F\u00e9lix Pineda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cykvj",
            "EntityName": "Jos\u00e9 Castellanos Contreras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dyyg2",
            "EntityName": "Jose Solis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f4spb",
            "EntityName": "Edwin Ramos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f69lb",
            "EntityName": "Roberto Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lhqln",
            "EntityName": "Alfredo Ruano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n3xqn",
            "EntityName": "Rafael Menj\u00edvar Ochoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8w4h",
            "EntityName": "Papa A.P."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y963w",
            "EntityName": "Elmer Acevedo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yfkr7",
            "EntityName": "Armando Chac\u00f3n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b_737",
            "EntityName": "Saturnino Osorio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c2y_f",
            "EntityName": "Ernesto Aparicio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m3gg",
            "EntityName": "Arturo Armando Molina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yr4wm",
            "EntityName": "Diego Vel\u00e1zquez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zkrkw",
            "EntityName": "Miguel Cruz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zv1fd",
            "EntityName": "Juan Rafael Bustillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065thkd",
            "EntityName": "Sarah Ramos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066127x",
            "EntityName": "Juan Ram\u00f3n S\u00e1nchez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w9_j6",
            "EntityName": "Jorge B\u00facaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1sn",
            "EntityName": "Tom\u00e1s Medina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1tb",
            "EntityName": "Doroteo Vasconcelos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1yh",
            "EntityName": "Rafael Campo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y1yv",
            "EntityName": "Francisco Due\u00f1as"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y25k",
            "EntityName": "Gerardo Barrios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y27b",
            "EntityName": "Francisco Men\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2bv",
            "EntityName": "Pedro Jos\u00e9 Escal\u00f3n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2cw",
            "EntityName": "Manuel Enrique Araujo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2kd",
            "EntityName": "Jorge Mel\u00e9ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2mv",
            "EntityName": "Salvador Castaneda Castro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06y2q9",
            "EntityName": "Julio Adalberto Rivera Carballo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bk65",
            "EntityName": "Consuelo de Saint Exup\u00e9ry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07p8ps",
            "EntityName": "Rub\u00e9n Zamora"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07swd6",
            "EntityName": "Rutilio Grande"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080bz0l",
            "EntityName": "V\u00edctor Ram\u00edrez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08vz5d",
            "EntityName": "Nicolas F. Shi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ggck_",
            "EntityName": "Eva Dimas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v1mhy",
            "EntityName": "Fausto Omar V\u00e1squez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b__gm3",
            "EntityName": "Steve Montenegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_qjns",
            "EntityName": "Carlos Linares"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm9y7c",
            "EntityName": "Miguel Angel Deras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc70k9",
            "EntityName": "Gualberto Fern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc8gnq",
            "EntityName": "Paula Heredia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cny39v",
            "EntityName": "Jorge Rivera"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dbk9r",
            "EntityName": "Erwin McManus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dd34w",
            "EntityName": "Claudia Lars"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dlnrmt",
            "EntityName": "Victor Manuel Ochoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drw_42",
            "EntityName": "Ra\u00fal Cicero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds0ght",
            "EntityName": "Carlos Barrios"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fbs00",
            "EntityName": "Jos\u00e9 Inocencio Alas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gck6d6",
            "EntityName": "Elena Diaz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glt20_",
            "EntityName": "Patricia Chica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx_9sj",
            "EntityName": "Bernard Lewinsky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyr_2r",
            "EntityName": "Jaime Portillo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gysvkq",
            "EntityName": "Genaro Serme\u00f1o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1bw_6",
            "EntityName": "Ana Maria de Martinez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1gfdk",
            "EntityName": "Eduardo \\\"Volkswagen\\\" Hern\u00e1ndez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2lqh",
            "EntityName": "Arturo Rivera y Damas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3cwk",
            "EntityName": "Enrique \u00c1lvarez C\u00f3rdova"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3vkz2",
            "EntityName": "Mario Montoya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h5595b",
            "EntityName": "Jos\u00e9 Francisco Valiente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7mwf5",
            "EntityName": "Norman Quijano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h8k38b",
            "EntityName": "Rene Moran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hr5tm9",
            "EntityName": "Jose B. Gonzalez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hrgx45",
            "EntityName": "Richard Oriani"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j3y75j",
            "EntityName": "Alexander M\u00e9ndoza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j442fb",
            "EntityName": "\u00c1ngel Orellana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9k7c7",
            "EntityName": "Emilio Guardado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j9nts6",
            "EntityName": "Am\u00e9rico Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k_fvt",
            "EntityName": "Bobby Rivas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kg2yh2",
            "EntityName": "\u00d3scar Antonio Ulloa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kmy4yx",
            "EntityName": "Guillermo Garc\u00eda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knmfg3",
            "EntityName": "Selvin Gonz\u00e1lez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0knxpym",
            "EntityName": "William L\u00f3pez"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ktzqtz",
            "EntityName": "Marlon Menj\u00edvar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n484vf",
            "EntityName": "Isa\u00edas Choto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ndx3dp",
            "EntityName": "Takeshi Fujiwara"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pmg_63",
            "EntityName": "Mario Wilfredo Contreras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q200b9",
            "EntityName": "Malin Arvidsson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_3g3z",
            "EntityName": "Robert Renderos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yzmtry",
            "EntityName": "Santiago \\\"Jimmy\\\" Mellado"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k8k": "El Salvador"
    },
    "qid_topic_entity": {
      "Q792": "El Salvador"
    },
    "index": 703
  },
  {
    "QuestionId": "WebQTest-1083",
    "RawQuestion": "where president obama was born?",
    "ProcessedQuestion": "where president obama was born",
    "Parses": [
      {
        "ParseId": "WebQTest-1083.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "president obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh0_",
            "EntityName": "Honolulu"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 704
  },
  {
    "QuestionId": "WebQTest-776",
    "RawQuestion": "what sport is popular in italy?",
    "ProcessedQuestion": "what sport is popular in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-776.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11x7vhqcx",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_lhg",
            "EntityName": "Italy national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026pr5r",
            "EntityName": "Italy women's national beach handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026r5sg",
            "EntityName": "Italy women's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026xx_g",
            "EntityName": "Italy men's national volleyball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026yzx0",
            "EntityName": "Italy national handball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02py_ct",
            "EntityName": "Italy Davis Cup team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r4hv4",
            "EntityName": "Italy Fed Cup team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wcqls",
            "EntityName": "Italy national futsal team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x8htg",
            "EntityName": "Dinamo Basket Sassari"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x92lv",
            "EntityName": "Partenope Napoli"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yjv4",
            "EntityName": "Fortitudo Pallacanestro Bologna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yjwb",
            "EntityName": "Virtus Pallacanestro Bologna"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z136v",
            "EntityName": "Juvecaserta Basket"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z68lf",
            "EntityName": "Italy women's national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c622g",
            "EntityName": "Italy men's national pitch and putt team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t962",
            "EntityName": "Italy national rugby union team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03y9nqh",
            "EntityName": "Italy women's national water polo team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041bcz",
            "EntityName": "Olimpia Milano"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04n2m87",
            "EntityName": "Italy national speedway team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tgph",
            "EntityName": "Victoria Libertas Pesaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yxjr",
            "EntityName": "Italy national basketball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_8_s",
            "EntityName": "Italy national rugby league team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6pr",
            "EntityName": "Italy women's national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0746dd",
            "EntityName": "Mens Sana 1871 Basket"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07lwfq",
            "EntityName": "Italy national cricket team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v93_",
            "EntityName": "Team Liquigas-Cannondale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09bl55",
            "EntityName": "Pallacanestro Varese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09d34d",
            "EntityName": "Pallacanestro Treviso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09zc0d",
            "EntityName": "Italy men's national ice hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_2gr",
            "EntityName": "Italy women's national ice hockey team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bwf1x",
            "EntityName": "Italy national baseball team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0tjt",
            "EntityName": "Pallacanestro Cant\u00f9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0vc8",
            "EntityName": "S.S. Felice Scandone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f0vk_",
            "EntityName": "Pallacanestro Virtus Roma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j289d9",
            "EntityName": "AS Vicenza"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 705
  },
  {
    "QuestionId": "WebQTest-893",
    "RawQuestion": "what is the zip code for azle texas?",
    "ProcessedQuestion": "what is the zip code for azle texas",
    "Parses": [
      {
        "ParseId": "WebQTest-893.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013n59)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013n59 ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "azle texas",
        "TopicEntityName": "Azle",
        "TopicEntityMid": "m.013n59",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020zj8h",
            "EntityName": "76020"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nqdl8",
            "EntityName": "76098"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013n59": "Azle"
    },
    "qid_topic_entity": {
      "Q793929": "Azle"
    },
    "index": 706
  },
  {
    "QuestionId": "WebQTest-1736",
    "RawQuestion": "where is holy roman empire located?",
    "ProcessedQuestion": "where is holy roman empire located",
    "Parses": [
      {
        "ParseId": "WebQTest-1736.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gk2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gk2 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "holy roman empire",
        "TopicEntityName": "Holy Roman Empire",
        "TopicEntityMid": "m.03gk2",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j9z",
            "EntityName": "Europe"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gk2": "Holy Roman Empire"
    },
    "qid_topic_entity": {
      "Q12548": "Holy Roman Empire"
    },
    "index": 707
  },
  {
    "QuestionId": "WebQTest-758",
    "RawQuestion": "who is the governor of indiana 2009?",
    "ProcessedQuestion": "who is the governor of indiana 2009",
    "Parses": [
      {
        "ParseId": "WebQTest-758.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f_xd8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f_xd8 ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2009-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2009-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "governor of indiana",
        "TopicEntityName": "Governor of Indiana",
        "TopicEntityMid": "m.04f_xd8",
        "InferentialChain": [
          "government.government_office_or_title.office_holders",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2009-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2009-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2009-01-01",
          "End": "2009-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2009"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.048v04",
            "EntityName": "Mitch Daniels"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04f_xd8": "Governor of Indiana"
    },
    "qid_topic_entity": {
      "Q16147601": "Governor of Indiana"
    },
    "index": 708
  },
  {
    "QuestionId": "WebQTest-1981",
    "RawQuestion": "what state did john adams live in?",
    "ProcessedQuestion": "what state did john adams live in",
    "Parses": [
      {
        "ParseId": "WebQTest-1981.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_js)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_js ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "PotentialTopicEntityMention": "john adams",
        "TopicEntityName": "John Adams",
        "TopicEntityMid": "m.03_js",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpys4",
            "EntityName": "US State",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k7sb",
            "EntityName": "Massachusetts"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_js": "John Adams"
    },
    "qid_topic_entity": {
      "Q11806": "John Adams"
    },
    "index": 709
  },
  {
    "QuestionId": "WebQTest-1117",
    "RawQuestion": "where do they speak german?",
    "ProcessedQuestion": "where do they speak german",
    "Parses": [
      {
        "ParseId": "WebQTest-1117.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04306rv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04306rv ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "german",
        "TopicEntityName": "German Language",
        "TopicEntityMid": "m.04306rv",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0154j",
            "EntityName": "Belgium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mjq",
            "EntityName": "Czech Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345h",
            "EntityName": "Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f2w",
            "EntityName": "East Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03pn9",
            "EntityName": "Second Polish Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g61",
            "EntityName": "Luxembourg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j53",
            "EntityName": "Liechtenstein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mzp",
            "EntityName": "Switzerland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082fr",
            "EntityName": "West Germany"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h7x",
            "EntityName": "Austria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k6nt",
            "EntityName": "Denmark"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04306rv": "German Language"
    },
    "qid_topic_entity": {
      "Q188": "German Language"
    },
    "index": 710
  },
  {
    "QuestionId": "WebQTest-630",
    "RawQuestion": "what language do colombian people speak?",
    "ProcessedQuestion": "what language do colombian people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-630.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "colombian",
        "TopicEntityName": "Colombia",
        "TopicEntityMid": "m.01ls2",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1q6h_1_4j",
            "EntityName": "Piratapuyo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yppj",
            "EntityName": "Cocama language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025syhx",
            "EntityName": "Bora Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wqvr",
            "EntityName": "Wayuu Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hw_7r",
            "EntityName": "Malayo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwglw",
            "EntityName": "Quechua, Napo Lowland Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgnw",
            "EntityName": "Curripaco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwgxh",
            "EntityName": "Hupd\u00eb Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwh2x",
            "EntityName": "Baudo language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl4_",
            "EntityName": "Siona Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwl46",
            "EntityName": "Cabiyar\u00ed Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwmth",
            "EntityName": "Nukak language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwnpn",
            "EntityName": "Bar\u00ed Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwnwm",
            "EntityName": "Tama Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwpxb",
            "EntityName": "Awa-Cuaiquer Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqkg",
            "EntityName": "Guanano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqrn",
            "EntityName": "Tanimuca-Retuar\u00e3 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwqww",
            "EntityName": "Cagua Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwr84",
            "EntityName": "Runa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwrvb",
            "EntityName": "Coyaima Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwt3q",
            "EntityName": "Ponares Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwv5q",
            "EntityName": "Macaguaje Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwv8r",
            "EntityName": "Inga, Jungle Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwvm1",
            "EntityName": "Coxima Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hww1x",
            "EntityName": "Tomedes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwwlp",
            "EntityName": "Natagaimas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwwxk",
            "EntityName": "Cumeral Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwxg4",
            "EntityName": "Carijona Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwxgh",
            "EntityName": "Tunebo, Barro Negro Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyr3",
            "EntityName": "Siriano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzdd",
            "EntityName": "Muinane Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzgg",
            "EntityName": "Macagu\u00e1n Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwzld",
            "EntityName": "Pijao Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx_dp",
            "EntityName": "Puinave Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx0bf",
            "EntityName": "Cubeo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2q2",
            "EntityName": "Desano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx2tn",
            "EntityName": "Tunebo, Central Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx5w4",
            "EntityName": "Guayabero Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx8nb",
            "EntityName": "Arhuaco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb1x",
            "EntityName": "Tunebo, Western Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb4m",
            "EntityName": "Totoro Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxb6s",
            "EntityName": "Palenquero Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxdd2",
            "EntityName": "Kogi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxdfd",
            "EntityName": "Barasana Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxds7",
            "EntityName": "Yukpa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxf1r",
            "EntityName": "Waimaj\u00e3 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxfkq",
            "EntityName": "Colombian Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxh5f",
            "EntityName": "Guambiano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxhrz",
            "EntityName": "Minica Huitoto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxj6x",
            "EntityName": "Piaroa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxksk",
            "EntityName": "Ember\u00e1, Northern Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxl2t",
            "EntityName": "Ocaina Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxlpz",
            "EntityName": "Anserma Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxnf6",
            "EntityName": "Carabayo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxp1v",
            "EntityName": "Macuna Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxs7q",
            "EntityName": "Omejes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxs9_",
            "EntityName": "Andoque Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxssc",
            "EntityName": "Chipiajes Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxswb",
            "EntityName": "Inga Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxsy4",
            "EntityName": "Piapoco Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxsz8",
            "EntityName": "Tunebo, Angosturas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxtwj",
            "EntityName": "Catio language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxv46",
            "EntityName": "Koreguaje Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxvjw",
            "EntityName": "Kuna, Border Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxxcv",
            "EntityName": "Andaqui Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxy04",
            "EntityName": "S\u00e1liba Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxy6v",
            "EntityName": "Cams\u00e1 Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxz2z",
            "EntityName": "Murui Huitoto language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hxzv2",
            "EntityName": "Yucuna Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbb5",
            "EntityName": "Guahibo language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbg9",
            "EntityName": "Cuiba language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppbnh",
            "EntityName": "Playero language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pq8qn",
            "EntityName": "Uwa language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h0wpt",
            "EntityName": "Achawa language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03w6b4",
            "EntityName": "Ticuna language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tnswp",
            "EntityName": "Islander Creole English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gdhz",
            "EntityName": "Nheengatu language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07k4r10",
            "EntityName": "Tinigua language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.085vdy",
            "EntityName": "Providencia Sign Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08w0ky",
            "EntityName": "Romani, Vlax Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gpqdh",
            "EntityName": "Tuyuca language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09k4cp",
            "EntityName": "Tucano Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b7mcv",
            "EntityName": "P\u00e1ez language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm08x",
            "EntityName": "Cof\u00e1n Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0km3ztb",
            "EntityName": "Nonuya language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-630.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "colombian",
        "TopicEntityName": "Colombia",
        "TopicEntityMid": "m.01ls2",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ls2": "Colombia"
    },
    "qid_topic_entity": {
      "Q739": "Colombia"
    },
    "index": 711
  },
  {
    "QuestionId": "WebQTest-970",
    "RawQuestion": "where was caesar when he was stabbed?",
    "ProcessedQuestion": "where was caesar when he was stabbed",
    "Parses": [
      {
        "ParseId": "WebQTest-970.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? need to know that he was stabbed to death"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041wm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041wm ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "caesar",
        "TopicEntityName": "Julius Caesar",
        "TopicEntityMid": "m.041wm",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l4p5",
            "EntityName": "Theatre of Pompey"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.041wm": "Julius Caesar"
    },
    "qid_topic_entity": {
      "Q1048": "Julius Caesar"
    },
    "index": 712
  },
  {
    "QuestionId": "WebQTest-474",
    "RawQuestion": "who played jacob black in twilight?",
    "ProcessedQuestion": "who played jacob black in twilight",
    "Parses": [
      {
        "ParseId": "WebQTest-474.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03nm_fh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03nm_fh ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.02qd_td .\n}\n",
        "PotentialTopicEntityMention": "twilight",
        "TopicEntityName": "Twilight",
        "TopicEntityMid": "m.03nm_fh",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02qd_td",
            "EntityName": "Jacob Black",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ldhs",
            "EntityName": "Taylor Lautner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-474.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qd_td)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qd_td ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "jacob black",
        "TopicEntityName": "Jacob Black",
        "TopicEntityMid": "m.02qd_td",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ldhs",
            "EntityName": "Taylor Lautner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03nm_fh": "Twilight",
      "m.02qd_td": "Jacob Black"
    },
    "qid_topic_entity": {
      "Q160071": "Twilight",
      "Q716835": "Jacob Black"
    },
    "index": 713
  },
  {
    "QuestionId": "WebQTest-728",
    "RawQuestion": "what is the name of the speaker of the house of representatives now 2011?",
    "ProcessedQuestion": "what is the name of the speaker of the house of representatives now 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-728.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cgqx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cgqx ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "speaker of the house of representatives",
        "TopicEntityName": "Speaker of the United States House of Representatives",
        "TopicEntityMid": "m.0cgqx",
        "InferentialChain": [
          "government.government_office_or_title.office_holders",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012v1t",
            "EntityName": "Nancy Pelosi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039rwf",
            "EntityName": "John Boehner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cgqx": "Speaker of the United States House of Representatives"
    },
    "qid_topic_entity": {
      "Q912994": "Speaker of the United States House of Representatives"
    },
    "index": 714
  },
  {
    "QuestionId": "WebQTest-34",
    "RawQuestion": "who did cam newton sign with?",
    "ProcessedQuestion": "who did cam newton sign with",
    "Parses": [
      {
        "ParseId": "WebQTest-34.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02phnp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02phnp7 ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n",
        "PotentialTopicEntityMention": "cam newton",
        "TopicEntityName": "Cam Newton",
        "TopicEntityMid": "m.02phnp7",
        "InferentialChain": [
          "base.schemastaging.athlete_extra.salary",
          "base.schemastaging.athlete_salary.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y3c",
            "EntityName": "Carolina Panthers"
          }
        ]
      },
      {
        "ParseId": "WebQTest-34.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02phnp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02phnp7 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?x ns:common.topic.notable_types ns:m.044801x .\n}\n",
        "PotentialTopicEntityMention": "cam newton",
        "TopicEntityName": "Cam Newton",
        "TopicEntityMid": "m.02phnp7",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.044801x",
            "EntityName": "Professional Sports Team",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y3c",
            "EntityName": "Carolina Panthers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02phnp7": "Cam Newton"
    },
    "qid_topic_entity": {
      "Q591678": "Cam Newton"
    },
    "index": 715
  },
  {
    "QuestionId": "WebQTest-1792",
    "RawQuestion": "where is midlothian scotland?",
    "ProcessedQuestion": "where is midlothian scotland",
    "Parses": [
      {
        "ParseId": "WebQTest-1792.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? GPS location?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011w8v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011w8v ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "midlothian",
        "TopicEntityName": "Midlothian",
        "TopicEntityMid": "m.011w8v",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzc9md",
            "EntityName": "United Kingdom, with Dependencies and Territories"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.011w8v": "Midlothian"
    },
    "qid_topic_entity": {
      "Q206934": "Midlothian"
    },
    "index": 716
  },
  {
    "QuestionId": "WebQTest-243",
    "RawQuestion": "where did george w bush live as a child?",
    "ProcessedQuestion": "where did george w bush live as a child",
    "Parses": [
      {
        "ParseId": "WebQTest-243.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b6zr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b6zr ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "george w bush",
        "TopicEntityName": "George W. Bush",
        "TopicEntityMid": "m.09b6zr",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2nf",
            "EntityName": "New Haven"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09b6zr": "George W. Bush"
    },
    "qid_topic_entity": {
      "Q207": "George W. Bush"
    },
    "index": 717
  },
  {
    "QuestionId": "WebQTest-80",
    "RawQuestion": "what county is greeley colorado in?",
    "ProcessedQuestion": "what county is greeley colorado in",
    "Parses": [
      {
        "ParseId": "WebQTest-80.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "greeley colorado",
        "TopicEntityName": "Greeley",
        "TopicEntityMid": "m.0rczx",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n_ps",
            "EntityName": "Weld County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-80.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "greeley colorado",
        "TopicEntityName": "Greeley",
        "TopicEntityMid": "m.0rczx",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n_ps",
            "EntityName": "Weld County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0rczx": "Greeley"
    },
    "qid_topic_entity": {
      "Q94274": "Greeley"
    },
    "index": 718
  },
  {
    "QuestionId": "WebQTest-403",
    "RawQuestion": "what kind of language does turkey speak?",
    "ProcessedQuestion": "what kind of language does turkey speak",
    "Parses": [
      {
        "ParseId": "WebQTest-403.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyss",
            "EntityName": "Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033xvz",
            "EntityName": "Zaza language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p7x",
            "EntityName": "Ladino Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b1g2",
            "EntityName": "Kurdish languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzc",
            "EntityName": "Arabic Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-403.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "turkey",
        "TopicEntityName": "Turkey",
        "TopicEntityMid": "m.01znc_",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwyss",
            "EntityName": "Turkish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01znc_": "Turkey"
    },
    "qid_topic_entity": {
      "Q43": "Turkey"
    },
    "index": 719
  },
  {
    "QuestionId": "WebQTest-1220",
    "RawQuestion": "what has shannen doherty played in?",
    "ProcessedQuestion": "what has shannen doherty played in",
    "Parses": [
      {
        "ParseId": "WebQTest-1220.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039crh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039crh ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "shannen doherty",
        "TopicEntityName": "Shannen Doherty",
        "TopicEntityMid": "m.039crh",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.12214l9tm",
            "EntityName": "Another Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jc1h",
            "EntityName": "Mallrats"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mh4b",
            "EntityName": "Night Shift"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pynz",
            "EntityName": "The Secret of NIMH"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vl04p",
            "EntityName": "Gone in the Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vykg0",
            "EntityName": "Christmas Caper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h5yly",
            "EntityName": "Friends 'Til the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03m3j",
            "EntityName": "Heathers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0408ch5",
            "EntityName": "Satan's School for Girls"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2ff5",
            "EntityName": "The Rendering"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j2rgh",
            "EntityName": "Striking Poses"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jvls",
            "EntityName": "Nowhere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q0k5p",
            "EntityName": "Obsessed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q1w97",
            "EntityName": "Blindfold: Acts of Obsession"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q37f6",
            "EntityName": "Freeze Frame"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q3m0j",
            "EntityName": "Nightlight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q7c_s",
            "EntityName": "The Other Lover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8bmc",
            "EntityName": "Jailbreakers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q8njq",
            "EntityName": "Hell on Heels: The Battle of Mary Kay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q9znk",
            "EntityName": "Sleeping with the Devil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y6khs",
            "EntityName": "A Burning Passion: The Margaret Mitchell Story"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ycptv",
            "EntityName": "Burning Palms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yhc6q",
            "EntityName": "The Lost Treasure of the Grand Canyon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05dkr3l",
            "EntityName": "Bless All the Dear Children"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06r7r1",
            "EntityName": "Girls Just Want to Have Fun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08rczt",
            "EntityName": "Category 7: The End of the World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhccky",
            "EntityName": "The Delphi Effect"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crttzw",
            "EntityName": "Growing the Big One"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3g14",
            "EntityName": "Almost Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gks9h_",
            "EntityName": "The Ticket"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0prrm",
            "EntityName": "Jay and Silent Bob Strike Back"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v1zdx4",
            "EntityName": "Bukowski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w66b4r",
            "EntityName": "Witchslayer Gretl"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.039crh": "Shannen Doherty"
    },
    "qid_topic_entity": {
      "Q207598": "Shannen Doherty"
    },
    "index": 720
  },
  {
    "QuestionId": "WebQTest-1274",
    "RawQuestion": "who won the governor election in texas?",
    "ProcessedQuestion": "who won the governor election in texas",
    "Parses": [
      {
        "ParseId": "WebQTest-1274.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? governor = winning governor election"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07b_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07b_l ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\n}\n",
        "PotentialTopicEntityMention": "texas",
        "TopicEntityName": "Texas",
        "TopicEntityMid": "m.07b_l",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fkvn",
            "EntityName": "Governor",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lwvz",
            "EntityName": "Edward Clark"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lwx3",
            "EntityName": "Pendleton Murrah"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rtbd",
            "EntityName": "John Connally"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v2r2",
            "EntityName": "Ann Richards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nlj_",
            "EntityName": "Rick Perry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pv3w",
            "EntityName": "James Pinckney Henderson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02py7s",
            "EntityName": "Francis Lubbock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r_7k",
            "EntityName": "Mark White"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02r_g_",
            "EntityName": "Dolph Briscoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rv0t",
            "EntityName": "Bill Clements"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wv_6",
            "EntityName": "W. Lee O'Daniel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032j8w",
            "EntityName": "Lawrence Sullivan Ross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0364z4",
            "EntityName": "Preston Smith"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037_45",
            "EntityName": "Hardin Richard Runnels"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037f5r",
            "EntityName": "Charles Allen Culberson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03848l",
            "EntityName": "George Tyler Wood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bbm8",
            "EntityName": "Beauford H. Jester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ccjj",
            "EntityName": "Ross S. Sterling"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03clnj",
            "EntityName": "Coke R. Stevenson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d1sj",
            "EntityName": "Fletcher Stockdale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03frg9",
            "EntityName": "Dan Moody"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03htx7",
            "EntityName": "Miriam A. Ferguson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03r03b",
            "EntityName": "William P. Hobby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vhjr",
            "EntityName": "Allan Shivers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03x_db",
            "EntityName": "Richard Coke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xxmq",
            "EntityName": "James E. Ferguson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03yvp9",
            "EntityName": "Price Daniel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g54r",
            "EntityName": "Andrew Jackson Hamilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04kn2s",
            "EntityName": "Elisha M. Pease"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p5r8",
            "EntityName": "James Allred"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sm5m",
            "EntityName": "Pat Morris Neff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tcb9",
            "EntityName": "Jim Hogg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rnw",
            "EntityName": "James W. Throckmorton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rqc",
            "EntityName": "Edmund J. Davis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rsh",
            "EntityName": "J. W. Henderson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rty",
            "EntityName": "Peter Hansborough Bell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rv9",
            "EntityName": "Richard B. Hubbard"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rvp",
            "EntityName": "Oran Milo Roberts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rw1",
            "EntityName": "John Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rx2",
            "EntityName": "Joseph D. Sayers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059rxf",
            "EntityName": "S. W. T. Lanham"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ryg",
            "EntityName": "Thomas Mitchell Campbell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ryt",
            "EntityName": "Oscar Branch Colquitt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09b6zr",
            "EntityName": "George W. Bush"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gbjz",
            "EntityName": "Sam Houston"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07b_l": "Texas"
    },
    "qid_topic_entity": {
      "Q1439": "Texas"
    },
    "index": 721
  },
  {
    "QuestionId": "WebQTest-258",
    "RawQuestion": "which of the following does australia export the most?",
    "ProcessedQuestion": "which of the following does australia export the most",
    "Parses": [
      {
        "ParseId": "WebQTest-258.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.statistical_region.major_exports ?y .\n?y ns:location.imports_exports_by_industry.industry ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.statistical_region.major_exports",
          "location.imports_exports_by_industry.industry"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h66y8",
            "EntityName": "Energy industry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hkf",
            "EntityName": "Agriculture"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 722
  },
  {
    "QuestionId": "WebQTest-971",
    "RawQuestion": "what style of music did bessie smith perform?",
    "ProcessedQuestion": "what style of music did bessie smith perform",
    "Parses": [
      {
        "ParseId": "WebQTest-971.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dq47)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dq47 ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "bessie smith",
        "TopicEntityName": "Bessie Smith",
        "TopicEntityMid": "m.0dq47",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0155w",
            "EntityName": "Blues"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_d0",
            "EntityName": "Jazz"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dq47": "Bessie Smith"
    },
    "qid_topic_entity": {
      "Q93349": "Bessie Smith"
    },
    "index": 723
  },
  {
    "QuestionId": "WebQTest-1473",
    "RawQuestion": "what currency does cyprus use?",
    "ProcessedQuestion": "what currency does cyprus use",
    "Parses": [
      {
        "ParseId": "WebQTest-1473.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ppq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ppq ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "cyprus",
        "TopicEntityName": "Cyprus",
        "TopicEntityMid": "m.01ppq",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01ppq": "Cyprus"
    },
    "qid_topic_entity": {
      "Q229": "Cyprus"
    },
    "index": 724
  },
  {
    "QuestionId": "WebQTest-1805",
    "RawQuestion": "what do people in jamaica speak?",
    "ProcessedQuestion": "what do people in jamaica speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1805.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "jamaica",
        "TopicEntityName": "Jamaica",
        "TopicEntityMid": "m.03_r3",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01428y",
            "EntityName": "Jamaican English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ygk0",
            "EntityName": "Jamaican Creole English Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1805.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "jamaica",
        "TopicEntityName": "Jamaica",
        "TopicEntityMid": "m.03_r3",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01428y",
            "EntityName": "Jamaican English"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_r3": "Jamaica"
    },
    "qid_topic_entity": {
      "Q766": "Jamaica"
    },
    "index": 725
  },
  {
    "QuestionId": "WebQTest-196",
    "RawQuestion": "what language do navajo people speak?",
    "ProcessedQuestion": "what language do navajo people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-196.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08k5jg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08k5jg ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "navajo",
        "TopicEntityName": "Navajo people",
        "TopicEntityMid": "m.08k5jg",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017yph",
            "EntityName": "Navajo Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.08k5jg": "Navajo people"
    },
    "qid_topic_entity": {
      "Q108266": "Navajo people"
    },
    "index": 726
  },
  {
    "QuestionId": "WebQTest-1353",
    "RawQuestion": "what are the four nations of the united kingdom?",
    "ProcessedQuestion": "what are the four nations of the united kingdom",
    "Parses": [
      {
        "ParseId": "WebQTest-1353.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n}\n",
        "PotentialTopicEntityMention": "united kingdom",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "base.aareas.schema.administrative_area.administrative_children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1353.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.first_level_divisions ?x .\n}\n",
        "PotentialTopicEntityMention": "united kingdom",
        "TopicEntityName": "United Kingdom",
        "TopicEntityMid": "m.07ssc",
        "InferentialChain": [
          "location.country.first_level_divisions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07ssc": "United Kingdom"
    },
    "qid_topic_entity": {
      "Q145": "United Kingdom"
    },
    "index": 727
  },
  {
    "QuestionId": "WebQTest-1419",
    "RawQuestion": "what inspired michelangelo buonarroti?",
    "ProcessedQuestion": "what inspired michelangelo buonarroti",
    "Parses": [
      {
        "ParseId": "WebQTest-1419.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.058w5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.058w5 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "michelangelo buonarroti",
        "TopicEntityName": "Michelangelo",
        "TopicEntityMid": "m.058w5",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013w_3",
            "EntityName": "Giovanni Pico della Mirandola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cc3w",
            "EntityName": "Domenico Ghirlandaio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qj5",
            "EntityName": "Lorenzo de' Medici"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072cpw",
            "EntityName": "Melozzo da Forl\u00ec"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d8wb",
            "EntityName": "Girolamo Savonarola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j56d",
            "EntityName": "Donatello"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.058w5": "Michelangelo"
    },
    "qid_topic_entity": {
      "Q5592": "Michelangelo"
    },
    "index": 728
  },
  {
    "QuestionId": "WebQTest-1087",
    "RawQuestion": "what films has scarlett johansson been in?",
    "ProcessedQuestion": "what films has scarlett johansson been in",
    "Parses": [
      {
        "ParseId": "WebQTest-1087.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02114t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02114t ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "scarlett johansson",
        "TopicEntityName": "Scarlett Johansson",
        "TopicEntityMid": "m.02114t",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0110nff9",
            "EntityName": "The Jungle Book"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0125zrjx",
            "EntityName": "Captain America: Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jzyf",
            "EntityName": "The Man Who Wasn't There"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n30p",
            "EntityName": "Ghost World"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0209xj",
            "EntityName": "Lost in Translation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qpt1w",
            "EntityName": "Vicky Cristina Barcelona"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rq3jq",
            "EntityName": "My Brother the Pig"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vdw6",
            "EntityName": "An American Rhapsody"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033g39",
            "EntityName": "Home Alone 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033s0w",
            "EntityName": "The Horse Whisperer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bzjpm",
            "EntityName": "He's Just Not That Into You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rtz1",
            "EntityName": "North"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t6l4",
            "EntityName": "Eight Legged Freaks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vfr_",
            "EntityName": "The SpongeBob SquarePants Movie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0435vm",
            "EntityName": "The Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fvch",
            "EntityName": "The Perfect Score"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gcw8",
            "EntityName": "A Love Song for Bobby Long"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1zl8",
            "EntityName": "Fall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fmsx",
            "EntityName": "In Good Company"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qbckf",
            "EntityName": "Iron Man 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.062zm5h",
            "EntityName": "The Avengers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0693hm",
            "EntityName": "A Good Woman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gjk9",
            "EntityName": "Match Point"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l5v6",
            "EntityName": "Just Cause"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z6xs",
            "EntityName": "The Black Dahlia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084302",
            "EntityName": "The Prestige"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09jcj6",
            "EntityName": "Scoop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c0rz3",
            "EntityName": "The Nanny Diaries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds1glg",
            "EntityName": "We Bought a Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dy575",
            "EntityName": "If Lucy Fell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fgpvf",
            "EntityName": "Girl with a Pearl Earring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fldjy",
            "EntityName": "The Spirit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g1vcm",
            "EntityName": "Manny & Lo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g4nxzt",
            "EntityName": "Buck"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gxbjgn",
            "EntityName": "Under the Skin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyy53",
            "EntityName": "The Other Boleyn Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hz07jj",
            "EntityName": "Hitchcock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jzt8tx",
            "EntityName": "Captain America: The Winter Soldier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kd0k5k",
            "EntityName": "Don Jon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lq6fb5",
            "EntityName": "Her"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n15g8q",
            "EntityName": "The Avengers: Age of Ultron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w1rtg8",
            "EntityName": "Chef"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w36vqd",
            "EntityName": "Lucy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02114t": "Scarlett Johansson"
    },
    "qid_topic_entity": {
      "Q34436": "Scarlett Johansson"
    },
    "index": 729
  },
  {
    "QuestionId": "WebQTest-1268",
    "RawQuestion": "where did jay moriarty die?",
    "ProcessedQuestion": "where did jay moriarty die",
    "Parses": [
      {
        "ParseId": "WebQTest-1268.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jswm8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jswm8 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "jay moriarty",
        "TopicEntityName": "Jay Moriarty",
        "TopicEntityMid": "m.04jswm8",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ty8",
            "EntityName": "Maldives"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04jswm8": "Jay Moriarty"
    },
    "qid_topic_entity": {
      "Q3737389": "Jay Moriarty"
    },
    "index": 730
  },
  {
    "QuestionId": "WebQTest-1226",
    "RawQuestion": "what form of government does australia use?",
    "ProcessedQuestion": "what form of government does australia use",
    "Parses": [
      {
        "ParseId": "WebQTest-1226.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3y9q",
            "EntityName": "Federal monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 731
  },
  {
    "QuestionId": "WebQTest-448",
    "RawQuestion": "what type of government system does italy have?",
    "ProcessedQuestion": "what type of government system does italy have",
    "Parses": [
      {
        "ParseId": "WebQTest-448.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 732
  },
  {
    "QuestionId": "WebQTest-1793",
    "RawQuestion": "where does marta play soccer?",
    "ProcessedQuestion": "where does marta play soccer",
    "Parses": [
      {
        "ParseId": "WebQTest-1793.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09fr69)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09fr69 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "marta",
        "TopicEntityName": "Marta",
        "TopicEntityMid": "m.09fr69",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0755sb",
            "EntityName": "Brazil women's national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h9814q",
            "EntityName": "Tyres\u00f6 FF"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09fr69": "Marta"
    },
    "qid_topic_entity": {
      "Q228616": "Marta"
    },
    "index": 733
  },
  {
    "QuestionId": "WebQTest-945",
    "RawQuestion": "what political system did spain have?",
    "ProcessedQuestion": "what political system did spain have",
    "Parses": [
      {
        "ParseId": "WebQTest-945.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04szc",
            "EntityName": "Monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 734
  },
  {
    "QuestionId": "WebQTest-515",
    "RawQuestion": "where was teddy roosevelt's house?",
    "ProcessedQuestion": "where was teddy roosevelt 's house",
    "Parses": [
      {
        "ParseId": "WebQTest-515.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hyk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hyk ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "teddy roosevelt",
        "TopicEntityName": "Theodore Roosevelt",
        "TopicEntityMid": "m.07hyk",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rh6k",
            "EntityName": "Washington, D.C."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07hyk": "Theodore Roosevelt"
    },
    "qid_topic_entity": {
      "Q33866": "Theodore Roosevelt"
    },
    "index": 735
  },
  {
    "QuestionId": "WebQTest-1186",
    "RawQuestion": "what kind of government does cuba have today?",
    "ProcessedQuestion": "what kind of government does cuba have today",
    "Parses": [
      {
        "ParseId": "WebQTest-1186.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "cuba",
        "TopicEntityName": "Cuba",
        "TopicEntityMid": "m.0d04z6",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dw03",
            "EntityName": "Semi-presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025tbxf",
            "EntityName": "Socialist state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cx9",
            "EntityName": "Republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0d04z6": "Cuba"
    },
    "qid_topic_entity": {
      "Q241": "Cuba"
    },
    "index": 736
  },
  {
    "QuestionId": "WebQTest-1095",
    "RawQuestion": "who did william shakespeare marry?",
    "ProcessedQuestion": "who did william shakespeare marry",
    "Parses": [
      {
        "ParseId": "WebQTest-1095.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081k8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081k8 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "william shakespeare",
        "TopicEntityName": "William Shakespeare",
        "TopicEntityMid": "m.081k8",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mzbg",
            "EntityName": "Anne Hathaway"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.081k8": "William Shakespeare"
    },
    "qid_topic_entity": {
      "Q692": "William Shakespeare"
    },
    "index": 737
  },
  {
    "QuestionId": "WebQTest-1173",
    "RawQuestion": "where is walton county ga?",
    "ProcessedQuestion": "where is walton county ga",
    "Parses": [
      {
        "ParseId": "WebQTest-1173.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nym5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nym5 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "walton county",
        "TopicEntityName": "Walton County",
        "TopicEntityMid": "m.0nym5",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06kt1_8",
            "EntityName": "Atlanta-Sandy Springs-Marietta, GA Metropolitan Statistical Area"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0x8",
            "EntityName": "Georgia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0nym5": "Walton County"
    },
    "qid_topic_entity": {
      "Q498312": "Walton County"
    },
    "index": 738
  },
  {
    "QuestionId": "WebQTest-1599",
    "RawQuestion": "where did kim jong il die?",
    "ProcessedQuestion": "where did kim jong il die",
    "Parses": [
      {
        "ParseId": "WebQTest-1599.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0143y5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0143y5 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "kim jong il",
        "TopicEntityName": "Kim Jong-il",
        "TopicEntityMid": "m.0143y5",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cw5k",
            "EntityName": "Pyongyang"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0143y5": "Kim Jong-il"
    },
    "qid_topic_entity": {
      "Q10665": "Kim Jong-il"
    },
    "index": 739
  },
  {
    "QuestionId": "WebQTest-707",
    "RawQuestion": "who played cletus hogg?",
    "ProcessedQuestion": "who played cletus hogg",
    "Parses": [
      {
        "ParseId": "WebQTest-707.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bxcc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bxcc6 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "cletus hogg",
        "TopicEntityName": "Cletus Hogg",
        "TopicEntityMid": "m.0bxcc6",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cyn66",
            "EntityName": "Jack Polick"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bxcc6": "Cletus Hogg"
    },
    "qid_topic_entity": {
      "Q3680572": "Cletus Hogg"
    },
    "index": 740
  },
  {
    "QuestionId": "WebQTest-899",
    "RawQuestion": "where is olympic national park wa?",
    "ProcessedQuestion": "where is olympic national park wa",
    "Parses": [
      {
        "ParseId": "WebQTest-899.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nrn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nrn ns:base.usnationalparks.us_national_park.state ?x .\n}\n",
        "PotentialTopicEntityMention": "olympic national park",
        "TopicEntityName": "Olympic National Park",
        "TopicEntityMid": "m.015nrn",
        "InferentialChain": [
          "base.usnationalparks.us_national_park.state"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081yw",
            "EntityName": "Washington"
          }
        ]
      },
      {
        "ParseId": "WebQTest-899.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015nrn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015nrn ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "olympic national park",
        "TopicEntityName": "Olympic National Park",
        "TopicEntityMid": "m.015nrn",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081yw",
            "EntityName": "Washington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mmqb",
            "EntityName": "Jefferson County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015nrn": "Olympic National Park"
    },
    "qid_topic_entity": {
      "Q372093": "Olympic National Park"
    },
    "index": 741
  },
  {
    "QuestionId": "WebQTest-725",
    "RawQuestion": "what states does the sierra nevada run through?",
    "ProcessedQuestion": "what states does the sierra nevada run through",
    "Parses": [
      {
        "ParseId": "WebQTest-725.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0db94)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0db94 ns:location.location.partially_containedby ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"State\")\n}\n",
        "PotentialTopicEntityMention": "the sierra",
        "TopicEntityName": "Sierra Nevada",
        "TopicEntityMid": "m.0db94",
        "InferentialChain": [
          "location.location.partially_containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "State",
            "EntityName": null,
            "SourceNodeIndex": 0,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n7q",
            "EntityName": "California"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059_c",
            "EntityName": "Nevada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0db94": "Sierra Nevada"
    },
    "qid_topic_entity": {
      "Q26777": "Sierra Nevada"
    },
    "index": 742
  },
  {
    "QuestionId": "WebQTest-812",
    "RawQuestion": "what movies does matt dallas play in?",
    "ProcessedQuestion": "what movies does matt dallas play in",
    "Parses": [
      {
        "ParseId": "WebQTest-812.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dfyw6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dfyw6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "matt dallas",
        "TopicEntityName": "Matt Dallas",
        "TopicEntityMid": "m.0dfyw6",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026jldh",
            "EntityName": "Babysitter Wanted"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02phpqn",
            "EntityName": "Camp Slaughter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04j1y3y",
            "EntityName": "Way of the Vampire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yy0f",
            "EntityName": "Wannabe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051x5f2",
            "EntityName": "Living the Dream"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p309z",
            "EntityName": "The Story of Bonnie and Clyde"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kjjgx",
            "EntityName": "Beauty & the Briefcase"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b3w04n",
            "EntityName": "As Good as Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crsyk2",
            "EntityName": "The Indian"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx0043",
            "EntityName": "Wyatt Earp's Revenge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2ky9j",
            "EntityName": "Hot Dudes with Kittens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2kycm",
            "EntityName": "You, Me & The Circus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2kydx",
            "EntityName": "The Ghost of Goodnight Lane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h2r0x7",
            "EntityName": "In Between Days"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n_5c2p",
            "EntityName": "Naughty or Nice"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dfyw6": "Matt Dallas"
    },
    "qid_topic_entity": {
      "Q313656": "Matt Dallas"
    },
    "index": 743
  },
  {
    "QuestionId": "WebQTest-1835",
    "RawQuestion": "what country did gregor mendel live in?",
    "ProcessedQuestion": "what country did gregor mendel live in",
    "Parses": [
      {
        "ParseId": "WebQTest-1835.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039c5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039c5 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "PotentialTopicEntityMention": "gregor mendel",
        "TopicEntityName": "Gregor Mendel",
        "TopicEntityMid": "m.039c5",
        "InferentialChain": [
          "people.person.places_lived",
          "people.place_lived.location"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p5_2s",
            "EntityName": "Austrian Silesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fs_s",
            "EntityName": "Brno"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.039c5": "Gregor Mendel"
    },
    "qid_topic_entity": {
      "Q37970": "Gregor Mendel"
    },
    "index": 744
  },
  {
    "QuestionId": "WebQTest-21",
    "RawQuestion": "who is keyshia cole dad?",
    "ProcessedQuestion": "who is keyshia cole dad",
    "Parses": [
      {
        "ParseId": "WebQTest-21.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pkxs9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pkxs9 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "keyshia cole",
        "TopicEntityName": "Keyshia Cole",
        "TopicEntityMid": "m.01pkxs9",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n9hj_f",
            "EntityName": "Francine Lons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n9hk0h",
            "EntityName": "Leon Cole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wq93rk",
            "EntityName": "Sal Gibson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01pkxs9": "Keyshia Cole"
    },
    "qid_topic_entity": {
      "Q233229": "Keyshia Cole"
    },
    "index": 745
  },
  {
    "QuestionId": "WebQTest-993",
    "RawQuestion": "who played meg in season 1 of family guy?",
    "ProcessedQuestion": "who played meg in season 1 of family guy",
    "Parses": [
      {
        "ParseId": "WebQTest-993.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035szd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035szd ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.seasons ns:m.027gynh .\n}\n",
        "PotentialTopicEntityMention": "meg",
        "TopicEntityName": "Meg Griffin",
        "TopicEntityMid": "m.035szd",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.027gynh",
            "EntityName": "Family Guy - Season 1",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.seasons",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k4b2",
            "EntityName": "Lacey Chabert"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035szd": "Meg Griffin"
    },
    "qid_topic_entity": {
      "Q908772": "Meg Griffin"
    },
    "index": 746
  },
  {
    "QuestionId": "WebQTest-1671",
    "RawQuestion": "where did leif ericson grow up?",
    "ProcessedQuestion": "where did leif ericson grow up",
    "Parses": [
      {
        "ParseId": "WebQTest-1671.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? correct entity?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vwg2_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vwg2_ ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "leif ericson",
        "TopicEntityName": "Leif Eriksson",
        "TopicEntityMid": "m.02vwg2_",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vmwn",
            "EntityName": "K\u00f6ping"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02vwg2_": "Leif Eriksson"
    },
    "qid_topic_entity": {
      "Q1814927": "Leif Eriksson"
    },
    "index": 747
  },
  {
    "QuestionId": "WebQTest-1248",
    "RawQuestion": "where is nineveh city?",
    "ProcessedQuestion": "where is nineveh city",
    "Parses": [
      {
        "ParseId": "WebQTest-1248.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fym ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "nineveh",
        "TopicEntityName": "Nineveh",
        "TopicEntityMid": "m.05fym",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01chdh",
            "EntityName": "Nineveh Governorate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05fym": "Nineveh"
    },
    "qid_topic_entity": {
      "Q5680": "Nineveh"
    },
    "index": 748
  },
  {
    "QuestionId": "WebQTest-1843",
    "RawQuestion": "what did the blackfoot indians speak?",
    "ProcessedQuestion": "what did the blackfoot indians speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1843.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016f5d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016f5d ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "blackfoot",
        "TopicEntityName": "Blackfoot Confederacy",
        "TopicEntityMid": "m.016f5d",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hx790",
            "EntityName": "Blackfoot Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016f5d": "Blackfoot Confederacy"
    },
    "qid_topic_entity": {
      "Q388264": "Blackfoot Confederacy"
    },
    "index": 749
  },
  {
    "QuestionId": "WebQTest-321",
    "RawQuestion": "what do people in australia speak?",
    "ProcessedQuestion": "what do people in australia speak",
    "Parses": [
      {
        "ParseId": "WebQTest-321.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "australia",
        "TopicEntityName": "Australia",
        "TopicEntityMid": "m.0chghy",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jcw",
            "EntityName": "Esperanto Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gd7",
            "EntityName": "Lojban"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0chghy": "Australia"
    },
    "qid_topic_entity": {
      "Q408": "Australia"
    },
    "index": 750
  },
  {
    "QuestionId": "WebQTest-393",
    "RawQuestion": "what are the two official languages of paraguay?",
    "ProcessedQuestion": "what are the two official languages of paraguay",
    "Parses": [
      {
        "ParseId": "WebQTest-393.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05v10)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05v10 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "paraguay",
        "TopicEntityName": "Paraguay",
        "TopicEntityMid": "m.05v10",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3pq",
            "EntityName": "Paraguayan Guaran\u00ed"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05v10": "Paraguay"
    },
    "qid_topic_entity": {
      "Q733": "Paraguay"
    },
    "index": 751
  },
  {
    "QuestionId": "WebQTest-132",
    "RawQuestion": "who is michael j fox wife?",
    "ProcessedQuestion": "who is michael j fox wife",
    "Parses": [
      {
        "ParseId": "WebQTest-132.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "michael j fox",
        "TopicEntityName": "Michael J. Fox",
        "TopicEntityMid": "m.0hz_1",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gpck",
            "EntityName": "Tracy Pollan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hz_1": "Michael J. Fox"
    },
    "qid_topic_entity": {
      "Q395274": "Michael J. Fox"
    },
    "index": 752
  },
  {
    "QuestionId": "WebQTest-1263",
    "RawQuestion": "what team is cristiano ronaldo play for?",
    "ProcessedQuestion": "what team is cristiano ronaldo play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1263.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xt6q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xt6q ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "cristiano ronaldo",
        "TopicEntityName": "Cristiano Ronaldo",
        "TopicEntityMid": "m.02xt6q",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rqxc",
            "EntityName": "Portugal national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l22",
            "EntityName": "Real Madrid C.F."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xt6q": "Cristiano Ronaldo"
    },
    "qid_topic_entity": {
      "Q11571": "Cristiano Ronaldo"
    },
    "index": 753
  },
  {
    "QuestionId": "WebQTest-131",
    "RawQuestion": "who inspired obama?",
    "ProcessedQuestion": "who inspired obama",
    "Parses": [
      {
        "ParseId": "WebQTest-131.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018q7p",
            "EntityName": "Saul Alinsky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d1nj",
            "EntityName": "Reinhold Niebuhr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ct6p",
            "EntityName": "Nipsey Russell"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 754
  },
  {
    "QuestionId": "WebQTest-231",
    "RawQuestion": "when did florida marlins join mlb?",
    "ProcessedQuestion": "when did florida marlins join mlb",
    "Parses": [
      {
        "ParseId": "WebQTest-231.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02__x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02__x ns:baseball.baseball_team.team_stats ?y .\n?y ns:baseball.baseball_team_stats.season ?x .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "florida marlins",
        "TopicEntityName": "Miami Marlins",
        "TopicEntityMid": "m.02__x",
        "InferentialChain": [
          "baseball.baseball_team.team_stats",
          "baseball.baseball_team_stats.season"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 1,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h7s8p",
            "EntityName": "1994 Major League Baseball Season"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02__x": "Miami Marlins"
    },
    "qid_topic_entity": {
      "Q652879": "Miami Marlins"
    },
    "index": 755
  },
  {
    "QuestionId": "WebQTest-765",
    "RawQuestion": "what celebrities has brody jenner dated?",
    "ProcessedQuestion": "what celebrities has brody jenner dated",
    "Parses": [
      {
        "ParseId": "WebQTest-765.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026_dq6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026_dq6 ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "PotentialTopicEntityMention": "brody jenner",
        "TopicEntityName": "Brody Jenner",
        "TopicEntityMid": "m.026_dq6",
        "InferentialChain": [
          "base.popstra.celebrity.dated",
          "base.popstra.dated.participant"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014v6x",
            "EntityName": "Haylie Duff"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0227vl",
            "EntityName": "Paris Hilton"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04nvm8f",
            "EntityName": "Ryan J. Parker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08wv1j",
            "EntityName": "Kristin Cavallari"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq9wx",
            "EntityName": "Lauren Conrad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhr1fv",
            "EntityName": "Cora Skinner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-765.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026_dq6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026_dq6 ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n}\n",
        "PotentialTopicEntityMention": "brody jenner",
        "TopicEntityName": "Brody Jenner",
        "TopicEntityMid": "m.026_dq6",
        "InferentialChain": [
          "celebrities.celebrity.sexual_relationships",
          "celebrities.romantic_relationship.celebrity"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.022q32",
            "EntityName": "Nicole Richie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026c8yk",
            "EntityName": "Jayde Nicole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq9wx",
            "EntityName": "Lauren Conrad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.026_dq6": "Brody Jenner"
    },
    "qid_topic_entity": {
      "Q554091": "Brody Jenner"
    },
    "index": 756
  },
  {
    "QuestionId": "WebQTest-489",
    "RawQuestion": "who plays stephanie plum in one for the money?",
    "ProcessedQuestion": "who plays stephanie plum in one for the money",
    "Parses": [
      {
        "ParseId": "WebQTest-489.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g5sxb4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g5sxb4 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.098by5 .\n}\n",
        "PotentialTopicEntityMention": "one for the money",
        "TopicEntityName": "One for the Money",
        "TopicEntityMid": "m.0g5sxb4",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.098by5",
            "EntityName": "Stephanie Plum",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025b5y",
            "EntityName": "Katherine Heigl"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0g5sxb4": "One for the Money"
    },
    "qid_topic_entity": {
      "Q602501": "One for the Money"
    },
    "index": 757
  },
  {
    "QuestionId": "WebQTest-578",
    "RawQuestion": "who was kobe bryant drafted by?",
    "ProcessedQuestion": "who was kobe bryant drafted by",
    "Parses": [
      {
        "ParseId": "WebQTest-578.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kmd4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kmd4 ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.team ?x .\n}\n",
        "PotentialTopicEntityMention": "kobe bryant",
        "TopicEntityName": "Kobe Bryant",
        "TopicEntityMid": "m.01kmd4",
        "InferentialChain": [
          "sports.drafted_athlete.drafted",
          "sports.sports_league_draft_pick.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z8z6",
            "EntityName": "Charlotte Hornets"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01kmd4": "Kobe Bryant"
    },
    "qid_topic_entity": {
      "Q25369": "Kobe Bryant"
    },
    "index": 758
  },
  {
    "QuestionId": "WebQTest-1232",
    "RawQuestion": "what year was albert pujols rookie year?",
    "ProcessedQuestion": "what year was albert pujols rookie year",
    "Parses": [
      {
        "ParseId": "WebQTest-1232.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035gcb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035gcb ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.04yny9t .\n}\n",
        "PotentialTopicEntityMention": "albert pujols",
        "TopicEntityName": "Albert Pujols",
        "TopicEntityMid": "m.035gcb",
        "InferentialChain": [
          "sports.sports_award_winner.awards",
          "sports.sports_award.season"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04yny9t",
            "EntityName": "National League Rookie of the Year",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.award",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h7sdf",
            "EntityName": "2001 Major League Baseball Season"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035gcb": "Albert Pujols"
    },
    "qid_topic_entity": {
      "Q148726": "Albert Pujols"
    },
    "index": 759
  },
  {
    "QuestionId": "WebQTest-71",
    "RawQuestion": "who did michael j fox marry?",
    "ProcessedQuestion": "who did michael j fox marry",
    "Parses": [
      {
        "ParseId": "WebQTest-71.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "michael j fox",
        "TopicEntityName": "Michael J. Fox",
        "TopicEntityMid": "m.0hz_1",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gpck",
            "EntityName": "Tracy Pollan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hz_1": "Michael J. Fox"
    },
    "qid_topic_entity": {
      "Q395274": "Michael J. Fox"
    },
    "index": 760
  },
  {
    "QuestionId": "WebQTest-455",
    "RawQuestion": "when did chipper jones get drafted?",
    "ProcessedQuestion": "when did chipper jones get drafted",
    "Parses": [
      {
        "ParseId": "WebQTest-455.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crdkb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crdkb ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.draft ?x .\n}\n",
        "PotentialTopicEntityMention": "chipper jones",
        "TopicEntityName": "Chipper Jones",
        "TopicEntityMid": "m.0crdkb",
        "InferentialChain": [
          "sports.drafted_athlete.drafted",
          "sports.sports_league_draft_pick.draft"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cwtph",
            "EntityName": "1990 Major League Baseball Draft"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0crdkb": "Chipper Jones"
    },
    "qid_topic_entity": {
      "Q948508": "Chipper Jones"
    },
    "index": 761
  },
  {
    "QuestionId": "WebQTest-911",
    "RawQuestion": "what year did the golden state warriors win their first nba championship?",
    "ProcessedQuestion": "what year did the golden state warriors win their first nba championship",
    "Parses": [
      {
        "ParseId": "WebQTest-911.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jmj7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jmj7 ns:sports.sports_team.championships ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "golden state warriors",
        "TopicEntityName": "Golden State Warriors",
        "TopicEntityMid": "m.0jmj7",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.start_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs1bx",
            "EntityName": "1975 NBA Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jmj7": "Golden State Warriors"
    },
    "qid_topic_entity": {
      "Q157376": "Golden State Warriors"
    },
    "index": 762
  },
  {
    "QuestionId": "WebQTest-142",
    "RawQuestion": "who developed the tcp ip reference model?",
    "ProcessedQuestion": "who developed the tcp ip reference model",
    "Parses": [
      {
        "ParseId": "WebQTest-142.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hzk ns:base.argumentmaps.original_idea.innovator ?x .\n}\n",
        "PotentialTopicEntityMention": "tcp",
        "TopicEntityName": "Transmission Control Protocol",
        "TopicEntityMid": "m.07hzk",
        "InferentialChain": [
          "base.argumentmaps.original_idea.innovator"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_z5v",
            "EntityName": "Robert  E. Kahn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z23",
            "EntityName": "Vint Cerf"
          }
        ]
      },
      {
        "ParseId": "WebQTest-142.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hzk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hzk ns:law.invention.inventor ?x .\n}\n",
        "PotentialTopicEntityMention": "tcp",
        "TopicEntityName": "Transmission Control Protocol",
        "TopicEntityMid": "m.07hzk",
        "InferentialChain": [
          "law.invention.inventor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_z5v",
            "EntityName": "Robert  E. Kahn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z23",
            "EntityName": "Vint Cerf"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07hzk": "Transmission Control Protocol"
    },
    "qid_topic_entity": {
      "Q8803": "Transmission Control Protocol"
    },
    "index": 763
  },
  {
    "QuestionId": "WebQTest-149",
    "RawQuestion": "what do portuguese people speak?",
    "ProcessedQuestion": "what do portuguese people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-149.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r4w ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "portuguese",
        "TopicEntityName": "Portugal",
        "TopicEntityMid": "m.05r4w",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05r4w": "Portugal"
    },
    "qid_topic_entity": {
      "Q45": "Portugal"
    },
    "index": 764
  },
  {
    "QuestionId": "WebQTest-1641",
    "RawQuestion": "who is nicolas cage married too?",
    "ProcessedQuestion": "who is nicolas cage married too",
    "Parses": [
      {
        "ParseId": "WebQTest-1641.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvb4m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvb4m ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "nicolas cage",
        "TopicEntityName": "Nicolas Cage",
        "TopicEntityMid": "m.01vvb4m",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025dscf",
            "EntityName": "Alice Kim"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vvb4m": "Nicolas Cage"
    },
    "qid_topic_entity": {
      "Q42869": "Nicolas Cage"
    },
    "index": 765
  },
  {
    "QuestionId": "WebQTest-2008",
    "RawQuestion": "which countries speak arabic language?",
    "ProcessedQuestion": "which countries speak arabic language",
    "Parses": [
      {
        "ParseId": "WebQTest-2008.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "arabic",
        "TopicEntityName": "Arabic Language",
        "TopicEntityMid": "m.0jzc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0161c",
            "EntityName": "Bahrain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z215",
            "EntityName": "Saudi Arabia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z88t",
            "EntityName": "Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01znc_",
            "EntityName": "Turkey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027jk",
            "EntityName": "Djibouti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k54",
            "EntityName": "Egypt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z62v1",
            "EntityName": "Seljuk Empire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03shp",
            "EntityName": "Iran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047yc",
            "EntityName": "Kuwait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gqr",
            "EntityName": "Libya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqz",
            "EntityName": "Lebanon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjh",
            "EntityName": "Mauritania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wgh",
            "EntityName": "Morocco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l8y",
            "EntityName": "Oman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vbd",
            "EntityName": "Syria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h3y",
            "EntityName": "Algeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j1z8",
            "EntityName": "United Arab Emirates"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jzc": "Arabic Language"
    },
    "qid_topic_entity": {
      "Q13955": "Arabic Language"
    },
    "index": 766
  },
  {
    "QuestionId": "WebQTest-869",
    "RawQuestion": "where is ancient phoenician?",
    "ProcessedQuestion": "where is ancient phoenician",
    "Parses": [
      {
        "ParseId": "WebQTest-869.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0617q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0617q ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "phoenician",
        "TopicEntityName": "Phoenicia",
        "TopicEntityMid": "m.0617q",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqz",
            "EntityName": "Lebanon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0617q": "Phoenicia"
    },
    "qid_topic_entity": {
      "Q41642": "Phoenicia"
    },
    "index": 767
  },
  {
    "QuestionId": "WebQTest-861",
    "RawQuestion": "who will coach carolina panthers in 2013?",
    "ProcessedQuestion": "who will coach carolina panthers in 2013",
    "Parses": [
      {
        "ParseId": "WebQTest-861.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? Future tense"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01y3c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01y3c ns:american_football.football_team.current_head_coach ?x .\n}\n",
        "PotentialTopicEntityMention": "carolina panthers",
        "TopicEntityName": "Carolina Panthers",
        "TopicEntityMid": "m.01y3c",
        "InferentialChain": [
          "american_football.football_team.current_head_coach"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g57l",
            "EntityName": "Ron Rivera"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01y3c": "Carolina Panthers"
    },
    "qid_topic_entity": {
      "Q330120": "Carolina Panthers"
    },
    "index": 768
  },
  {
    "QuestionId": "WebQTest-1032",
    "RawQuestion": "who played captain kirk in star trek movie?",
    "ProcessedQuestion": "who played captain kirk in star trek movie",
    "Parses": [
      {
        "ParseId": "WebQTest-1032.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.06qyw .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06qyw",
            "EntityName": "Star Trek Generations",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1032.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.06r2_ .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06r2_",
            "EntityName": "Star Trek II: The Wrath of Khan",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1032.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.01dc8g .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01dc8g",
            "EntityName": "Star Trek III: The Search for Spock",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1032.P3",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0m5s5 .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0m5s5",
            "EntityName": "Star Trek IV: The Voyage Home",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1032.P4",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.012gk9 .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.012gk9",
            "EntityName": "Star Trek V: The Final Frontier",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1032.P5",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.015bpl .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.015bpl",
            "EntityName": "Star Trek VI: The Undiscovered Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1032.P6",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0crtw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0crtw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.01pg1t .\n}\n",
        "PotentialTopicEntityMention": "captain kirk",
        "TopicEntityName": "James T. Kirk",
        "TopicEntityMid": "m.0crtw",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01pg1t",
            "EntityName": "Star Trek: The Motion Picture",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084m3",
            "EntityName": "William Shatner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0crtw": "James T. Kirk"
    },
    "qid_topic_entity": {
      "Q16311": "James T. Kirk"
    },
    "index": 769
  },
  {
    "QuestionId": "WebQTest-1985",
    "RawQuestion": "what team does mike fisher play for?",
    "ProcessedQuestion": "what team does mike fisher play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1985.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07d7xv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07d7xv ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "mike fisher",
        "TopicEntityName": "Mike Fisher",
        "TopicEntityMid": "m.07d7xv",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jnr_",
            "EntityName": "Nashville Predators"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07d7xv": "Mike Fisher"
    },
    "qid_topic_entity": {
      "Q945715": "Mike Fisher"
    },
    "index": 770
  },
  {
    "QuestionId": "WebQTest-1640",
    "RawQuestion": "where is tunis on a map?",
    "ProcessedQuestion": "where is tunis on a map",
    "Parses": [
      {
        "ParseId": "WebQTest-1640.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07fj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07fj_ ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "tunis",
        "TopicEntityName": "Tunisia",
        "TopicEntityMid": "m.07fj_",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3n1",
            "EntityName": "Africa"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1640.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ftn8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ftn8 ns:location.administrative_division.country ?x .\n}\n",
        "PotentialTopicEntityMention": "tunis",
        "TopicEntityName": "Tunis",
        "TopicEntityMid": "m.0ftn8",
        "InferentialChain": [
          "location.administrative_division.country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1640.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ftn8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ftn8 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "tunis",
        "TopicEntityName": "Tunis",
        "TopicEntityMid": "m.0ftn8",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fj_",
            "EntityName": "Tunisia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cyb_z",
            "EntityName": "Tunis Governorate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3n1",
            "EntityName": "Africa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07fj_": "Tunisia",
      "m.0ftn8": "Tunis"
    },
    "qid_topic_entity": {
      "Q948": "Tunisia",
      "Q3572": "Tunis"
    },
    "index": 771
  },
  {
    "QuestionId": "WebQTest-1496",
    "RawQuestion": "where does the city of paris get its name?",
    "ProcessedQuestion": "where does the city of paris get its name",
    "Parses": [
      {
        "ParseId": "WebQTest-1496.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:symbols.namesake.named_after ?x .\n}\n",
        "PotentialTopicEntityMention": "paris",
        "TopicEntityName": "Paris",
        "TopicEntityMid": "m.05qtj",
        "InferentialChain": [
          "symbols.namesake.named_after"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0283_dl",
            "EntityName": "Parisii"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qtj": "Paris"
    },
    "qid_topic_entity": {
      "Q90": "Paris"
    },
    "index": 772
  },
  {
    "QuestionId": "WebQTest-1081",
    "RawQuestion": "where did george washington carver go to collage?",
    "ProcessedQuestion": "where did george washington carver go to collage",
    "Parses": [
      {
        "ParseId": "WebQTest-1081.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03djm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03djm ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "george washington carver",
        "TopicEntityName": "George Washington Carver",
        "TopicEntityMid": "m.03djm",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xssh",
            "EntityName": "Simpson College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v6t",
            "EntityName": "Iowa State University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03djm": "George Washington Carver"
    },
    "qid_topic_entity": {
      "Q296898": "George Washington Carver"
    },
    "index": 773
  },
  {
    "QuestionId": "WebQTest-376",
    "RawQuestion": "what books did agatha christie wrote?",
    "ProcessedQuestion": "what books did agatha christie wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-376.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "agatha christie",
        "TopicEntityName": "Agatha Christie",
        "TopicEntityMid": "m.0ldd",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xw99",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xy2v",
            "EntityName": "The Hound of Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028xyps",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028y5cy",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028yc88",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028ym09",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028yq8_",
            "EntityName": "Hercule Poirot\u2019s Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7_1",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7_v",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7vw",
            "EntityName": "Ordeal by innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7wl",
            "EntityName": "Ordeal By Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7wv",
            "EntityName": "Ordeal By Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7x2",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7xb",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7xl",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7xw",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7y3",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7yc",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7yn",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7yx",
            "EntityName": "Ordeal by innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7zc",
            "EntityName": "Ordeal by Innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7zm",
            "EntityName": "Ordeal by innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_8jf",
            "EntityName": "Ordeal by Innocence (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_8jz",
            "EntityName": "Ordeal by innocence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_8kv",
            "EntityName": "Ordeal by Innocence (Signature Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_8n2",
            "EntityName": "Ordeal by Innocence (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_j7h",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_j8l",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_j9l",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_j9v",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jb2",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jbc",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jbm",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jbw",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jc3",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jcc",
            "EntityName": "Murder in Mesopotamia."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jcm",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jcw",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jd3",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jdc",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jdt",
            "EntityName": "Murder in Mesopotamia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_l_j",
            "EntityName": "Murder in Mesopotamia (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_l8w",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_l93",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_l9c",
            "EntityName": "The hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_l9v",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lb3",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lbc",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lbn",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lbx",
            "EntityName": "The Hollow."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lc4",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lcd",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_lcp",
            "EntityName": "The hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m0b",
            "EntityName": "Murder in Mesopotamia (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m0w",
            "EntityName": "Murder in Mesopotamia (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m13",
            "EntityName": "Murder in Mesopotamia (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m1c",
            "EntityName": "Murder In Mesopotamia (Agatha Christie Mystery Collection) Bantam Blue Leatherette Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m2c",
            "EntityName": "Murder in Mesopotamia (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m2m",
            "EntityName": "Murder in Mesopotamia (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m2w",
            "EntityName": "Murder in Mesopotamia (BBC Radio Presents)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m3n",
            "EntityName": "Murder in Mesopotamia (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m7z",
            "EntityName": "The Hollow"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m8d",
            "EntityName": "The Hollow (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m8n",
            "EntityName": "The Hollow (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m8x",
            "EntityName": "The Hollow (Winterbrook Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m94",
            "EntityName": "The Hollow (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m9f",
            "EntityName": "The Hollow (A Hercule Poirot Novel)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_m9p",
            "EntityName": "The Hollow (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_npl",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_npv",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nq2",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nqb",
            "EntityName": "CLOCKS"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nqm",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nqw",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nr3",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nrc",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nrm",
            "EntityName": "Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nrw",
            "EntityName": "The Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_nt9",
            "EntityName": "Clocks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_pw7",
            "EntityName": "The Clocks (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_pxr",
            "EntityName": "Clocks (Hc Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_py0",
            "EntityName": "The Clocks (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_py8",
            "EntityName": "The Clocks (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_pyj",
            "EntityName": "The Clocks (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_pys",
            "EntityName": "Clocks (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_pzb",
            "EntityName": "The Clocks (A Hercule Poirot Murder Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_w88",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_w8j",
            "EntityName": "Appointment With Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_w91",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_w99",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_w9k",
            "EntityName": "Appointment with death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wb0",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wb9",
            "EntityName": "Appointment With Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wbl",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wbv",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wc2",
            "EntityName": "Appointment With Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wcc",
            "EntityName": "Appointment with Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wdp",
            "EntityName": "Appointment with death."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y10",
            "EntityName": "Appointment with Death (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y18",
            "EntityName": "Appointment with death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y1p",
            "EntityName": "Appointment with Death (Dell; 10246)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y1y",
            "EntityName": "Appointment with Death (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y2f",
            "EntityName": "Appointment with Death (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y2p",
            "EntityName": "Appointment with Death (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y2y",
            "EntityName": "Appointment With Death (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_y52",
            "EntityName": "Appointment With Death (G K Hall Large Print Book Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z02",
            "EntityName": "4.50 from Paddington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z0b",
            "EntityName": "4.50 From Paddington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z0l",
            "EntityName": "4.50 from Paddington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z0v",
            "EntityName": "4.50 from Paddington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z12",
            "EntityName": "4.50 from Paddington."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z1b",
            "EntityName": "4.50 from Paddington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsx_1",
            "EntityName": "Hickory dickory dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsx_h",
            "EntityName": "The thirteen problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsx_y",
            "EntityName": "Dead man's folly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxr2",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxrj",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxrz",
            "EntityName": "Sleeping murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxsd",
            "EntityName": "Sad cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxsv",
            "EntityName": "The big four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxt8",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxtq",
            "EntityName": "The murder on the links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxv4",
            "EntityName": "The regatta mystery and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxvl",
            "EntityName": "Taken at the flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxw0",
            "EntityName": "At Bertram's Hotel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxwg",
            "EntityName": "Third girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxwx",
            "EntityName": "Poirot investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxxb",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxxs",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxy6",
            "EntityName": "While the light lasts and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxyp",
            "EntityName": "Death in the clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxz5",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsxzm",
            "EntityName": "Hallowe'en party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy0c",
            "EntityName": "Mrs. McGinty's dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy0t",
            "EntityName": "Destination unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy17",
            "EntityName": "Five little pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy1x",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy2b",
            "EntityName": "Murder on the Orient Express"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy2s",
            "EntityName": "A pocket full of rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy36",
            "EntityName": "A murder is announced"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy3n",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy42",
            "EntityName": "Dumb witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy4j",
            "EntityName": "Lord Edgware dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy4z",
            "EntityName": "The seven dials mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy5d",
            "EntityName": "The secret adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy5v",
            "EntityName": "The mystery of the blue train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy68",
            "EntityName": "The harlequin tea set and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy6q",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy74",
            "EntityName": "Evil under the sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy7l",
            "EntityName": "One, two, buckle my shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy80",
            "EntityName": "Cat among the pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tsy8g",
            "EntityName": "Partners in crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_0n",
            "EntityName": "The Pale Horse (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_0x",
            "EntityName": "The Pale Horse (The Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_15",
            "EntityName": "Pale Horse (R)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_1f",
            "EntityName": "The Pale Horse (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_qt",
            "EntityName": "Death On The Nile (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_rm",
            "EntityName": "Death on the Nile (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_rw",
            "EntityName": "Death on the Nile (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_s3",
            "EntityName": "Death on the Nile (Hercule Poirot Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_sc",
            "EntityName": "Death on the Nile (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_sm",
            "EntityName": "Death on the Nile (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_tk",
            "EntityName": "Death on the Nile (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_wr",
            "EntityName": "Death on the Nile (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmk1",
            "EntityName": "The A.B.C. murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzml0",
            "EntityName": "The A.B.C. murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmlr",
            "EntityName": "The A.B.C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmm0",
            "EntityName": "The A.B.C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmm8",
            "EntityName": "The A.B.C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmmj",
            "EntityName": "The A.B.C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmms",
            "EntityName": "The A.B.C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmn0",
            "EntityName": "The A.B.C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmn8",
            "EntityName": "The A. B. C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmnk",
            "EntityName": "The A. B. C. Murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmnv",
            "EntityName": "The A.B.C. Murders (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzmpj",
            "EntityName": "The A.B.C. murders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznqp",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznqy",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznsk",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznt2",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzntb",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzntl",
            "EntityName": "Death Comes As the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznv3",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznvc",
            "EntityName": "Death Comes As the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznvx",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznw4",
            "EntityName": "Death Comes As the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznwp",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tznwy",
            "EntityName": "Death Comes as the End"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzps5",
            "EntityName": "Death Comes as the End (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzpsf",
            "EntityName": "Death Comes As the End (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzpsq",
            "EntityName": "Death Comes As the End (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzpsz",
            "EntityName": "Death comes as the end"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzpv2",
            "EntityName": "Death Comes As the End (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzql3",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqlc",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqlm",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqlw",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqm3",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqmc",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqmn",
            "EntityName": "After the funeral."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqmx",
            "EntityName": "After The Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqnn",
            "EntityName": "After the Funeral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqnx",
            "EntityName": "After the funeral."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqpf",
            "EntityName": "After the Funeral (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzscv",
            "EntityName": "After the Funeral (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzsd2",
            "EntityName": "After the Funeral (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzsdb",
            "EntityName": "After the Funeral (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzsdl",
            "EntityName": "After the Funeral (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzsdv",
            "EntityName": "After the Funeral (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzsf2",
            "EntityName": "After the Funeral (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzsfl",
            "EntityName": "After the Funeral (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwk8",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwks",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwl7",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwlq",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwlz",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwm6",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwmr",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwn_",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwn6",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwng",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwnr",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwp7",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwpy",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwq5",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwqf",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzwqp",
            "EntityName": "Death on the Nile."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyh6",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyhn",
            "EntityName": "Death on the Nile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyj2",
            "EntityName": "Death on the Nile (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyjc",
            "EntityName": "Death on the Nile (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyjn",
            "EntityName": "Death on the Nile (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyk4",
            "EntityName": "Death on the Nile (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyq5",
            "EntityName": "The pale horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyqn",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyqx",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyr4",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyrn",
            "EntityName": "Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyry",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzys5",
            "EntityName": "Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzysg",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzysq",
            "EntityName": "The pale horse."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzysz",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyt6",
            "EntityName": "The pale horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzytn",
            "EntityName": "Pale horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyv1",
            "EntityName": "The Pale Horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyvw",
            "EntityName": "The pale horse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_14g",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_15_",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_150",
            "EntityName": "Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_16f",
            "EntityName": "The mysterious affair at Styles."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_16p",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_174",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_17f",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_17w",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_18_",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_189",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2s4",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2tc",
            "EntityName": "Mysterious Affair at Styles/Cassettes (1362)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2tx",
            "EntityName": "The Mysterious Affair at Styles (Dodo Press)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2v5",
            "EntityName": "The Mysterious Affair at Styles (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2vg",
            "EntityName": "The Mysterious Affair at Styles (Hercule Poirot Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2vq",
            "EntityName": "The Mysterious Affair At Styles (Classic Books on Cassettes Collection) (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2vz",
            "EntityName": "The Mysterious Affair at Styles (Hercule Poirot Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_2wg",
            "EntityName": "The Mysterious Affair at Styles, Large-Print Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v006z",
            "EntityName": "4.50 from Paddington"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v007d",
            "EntityName": "4.50 from Paddington (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v007n",
            "EntityName": "4.50 from Paddington (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0084",
            "EntityName": "4.50 from Paddington (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v008p",
            "EntityName": "4.50 from Paddington (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v008y",
            "EntityName": "4.50 from Paddington (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0095",
            "EntityName": "4.50 from Paddington (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00bc",
            "EntityName": "4.50 from Paddington (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01wm",
            "EntityName": "4.50 from Paddington (Miss Marple Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vs1",
            "EntityName": "The Witness for the Prosecution and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vs9",
            "EntityName": "The Witness for the Prosecution and Other Stories (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vsk",
            "EntityName": "The Witness for the Prosecution and Other Stories (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vst",
            "EntityName": "The witness for the prosecution and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vvh",
            "EntityName": "Witness for the Prosecution and Other Stories (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vwx",
            "EntityName": "Witness for the prosecution, and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11lk",
            "EntityName": "The under dog and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11m_",
            "EntityName": "The Under Dog and Other Stories (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11n_",
            "EntityName": "The Under Dog and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11p7",
            "EntityName": "The Under Dog and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v11qf",
            "EntityName": "The Under Dog and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v13_4",
            "EntityName": "The adventure of the Christmas pudding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v13_l",
            "EntityName": "The Adventure of the Christmas Pudding (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v13_v",
            "EntityName": "The Adventure of the Christmas Pudding (The Crime Club)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v13zc",
            "EntityName": "The adventure of the Christmas pudding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v13zm",
            "EntityName": "The Adventure of the Christmas Pudding and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v13zw",
            "EntityName": "The Adventure of the Christmas Pudding"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1402",
            "EntityName": "The Adventure of the Christmas Pudding and The Mystery of the Spanish Chest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v140b",
            "EntityName": "The adventure of the Christmas pudding and a selection of entre\u0301es."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v140l",
            "EntityName": "The adventure of the Christmas pudding, and a selection of entr\u00e9es"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v144x",
            "EntityName": "The Golden Ball and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v146c",
            "EntityName": "The golden ball and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1473",
            "EntityName": "The Golden Ball and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v147c",
            "EntityName": "The golden ball and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v147m",
            "EntityName": "The Golden Ball and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1483",
            "EntityName": "The Golden Ball and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v148c",
            "EntityName": "The Golden Ball and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v148n",
            "EntityName": "Golden Ball and Other Stories (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v14bc",
            "EntityName": "The Golden Ball and Other Stories (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v14yb",
            "EntityName": "Problem at Pollensa Bay & Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v171_",
            "EntityName": "Three blind mice and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1717",
            "EntityName": "Three blind mice and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v172g",
            "EntityName": "Three blind mice and other stories (Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17ry",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17sg",
            "EntityName": "The mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17sq",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17t_",
            "EntityName": "The \\\"Mysterious Mr Quin\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17t7",
            "EntityName": "The mysterious Mr. Quin."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17th",
            "EntityName": "The Mysterious Mr.Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17tr",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17v_",
            "EntityName": "The Mysterious Mr Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17vh",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17w7",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17x1",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17xb",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17xv",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17yc",
            "EntityName": "The mysterious Mr Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v17yt",
            "EntityName": "The Mysterious Mr. Quin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1800",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v180q",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v180z",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1817",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v181h",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v181r",
            "EntityName": "The Listerdale mystery."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v182f",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v182z",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1839",
            "EntityName": "The Listerdale Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v183k",
            "EntityName": "The Listerdale mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v184g",
            "EntityName": "The Listerdale mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v18lh",
            "EntityName": "The Mysterious Mr. Quin (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v18m0",
            "EntityName": "The Mysterious Mr.Quin (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v18mr",
            "EntityName": "The Mysterious Mr. Quin (Paperback)) (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v18nr",
            "EntityName": "The Listerdale Mystery (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v195h",
            "EntityName": "Murder in the Mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1968",
            "EntityName": "Murder in the Mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v196j",
            "EntityName": "Murder in the mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v196y",
            "EntityName": "Murder in the mews."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1975",
            "EntityName": "Murder in the Mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v197f",
            "EntityName": "Murder in the mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v197v",
            "EntityName": "Murder in the Mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1982",
            "EntityName": "Murder in the Mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v198b",
            "EntityName": "Murder in the mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v198s",
            "EntityName": "Murder in the Mews (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1999",
            "EntityName": "Murder in the Mews"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v199k",
            "EntityName": "Murder in the Mews (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19cw",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19d3",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19dc",
            "EntityName": "Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19dm",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19f3",
            "EntityName": "Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19g3",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19gd",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19gn",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19gx",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19h4",
            "EntityName": "The labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19hl",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19j2",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19jb",
            "EntityName": "The labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19k6",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19ll",
            "EntityName": "The Labours of Hercules"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19nr",
            "EntityName": "Double Sin and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19pf",
            "EntityName": "Double sin and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19qx",
            "EntityName": "Double Sin and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19rl",
            "EntityName": "Double Sin and other stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19s8",
            "EntityName": "Double Sin and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v19vm",
            "EntityName": "Double Sin and Other Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1b6g",
            "EntityName": "The Labours of Hercules (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bb3",
            "EntityName": "The Labours of Hercules (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bbc",
            "EntityName": "Murder in the Mews (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bs_",
            "EntityName": "Problem at Pollensa Bay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bs8",
            "EntityName": "Problem at Pollensa Bay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bt7",
            "EntityName": "Problem at Pollensa Bay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bth",
            "EntityName": "Problem at Pollensa Bay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bty",
            "EntityName": "Problem at Pollensa Bay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bvb",
            "EntityName": "Problem at Pollensa Bay and 7 Other Mysteries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bw0",
            "EntityName": "Problem at Pollensa Bay and 7 Other Mysteries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1bw8",
            "EntityName": "Problem At Pollensa Bay and Seven Other Mysteries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cbz",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cc_",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cc6",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cch",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1ccr",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cd7",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cdh",
            "EntityName": "Parker Pyne investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cdy",
            "EntityName": "Parker Pyne investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cfm",
            "EntityName": "Parker Pyne investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cfw",
            "EntityName": "Parker Pyne Investigates (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cg4",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cgd",
            "EntityName": "Parker Pyne Investigates (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1chk",
            "EntityName": "Parker Pyne investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1cjg",
            "EntityName": "Parker Pyne Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w10",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w18",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w1j",
            "EntityName": "By the Pricking of my Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w1s",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w20",
            "EntityName": "By the pricking of my thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w2h",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w2s",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w30",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w38",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w3j",
            "EntityName": "By The Pricking Of My Thumbs (Tommy and Tuppence Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w3s",
            "EntityName": "By the pricking of my thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w45",
            "EntityName": "By the pricking of my thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w52",
            "EntityName": "By the Pricking of My Thumbs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w5b",
            "EntityName": "By the Pricking of My Thumbs (Tommy & Tuppence Chronology)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w69",
            "EntityName": "Postern of fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w71",
            "EntityName": "Postern of fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w7j",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w7s",
            "EntityName": "Postern of fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w87",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w8j",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w8s",
            "EntityName": "Postern of fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1w9z",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wcg",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wcq",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wcz",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wd6",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wdg",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wdq",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wf6",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wfr",
            "EntityName": "Postern of fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1whf",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wj3",
            "EntityName": "Postern of fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wjk",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wjv",
            "EntityName": "Endless night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wk_",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wkr",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wl_",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wl7",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wlj",
            "EntityName": "Endless night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wm_",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wm7",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wmh",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wmr",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wn7",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wp6",
            "EntityName": "Endless Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wqg",
            "EntityName": "Endless night."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wtp",
            "EntityName": "By the Pricking of My Thumbs (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1wvc",
            "EntityName": "By the Pricking of My Thumbs (Tommy and Tuppence Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1ww2",
            "EntityName": "By the Pricking of My Thumbs (Tommy and Tuppence Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x1f",
            "EntityName": "Postern of Fate (Tommy & Tuppence Chronology)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x1p",
            "EntityName": "Postern of Fate (G K Hall Large Print Book Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x1z",
            "EntityName": "Postern of Fate (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x26",
            "EntityName": "Endless Night (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x2g",
            "EntityName": "Postern of Fate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x2r",
            "EntityName": "Endless night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v1x35",
            "EntityName": "Endless Night (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v21_3",
            "EntityName": "The Secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v21_c",
            "EntityName": "The secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v21_t",
            "EntityName": "Secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v21zc",
            "EntityName": "The Secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v21zm",
            "EntityName": "The Secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v21zw",
            "EntityName": "The Secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2201",
            "EntityName": "The secret of chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v220j",
            "EntityName": "The Secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v220s",
            "EntityName": "The secret of chimneys."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2216",
            "EntityName": "The secret of Chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v221n",
            "EntityName": "The secret of chimneys."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v221x",
            "EntityName": "The Secret of Chimneys (Ulverscroft Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2225",
            "EntityName": "The Secret of Chimneys (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v222f",
            "EntityName": "The Secret of Chimneys (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v224w",
            "EntityName": "The Secret of Chimneys (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v22w4",
            "EntityName": "The Secret Of Chimneys (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v22wd",
            "EntityName": "Secret of Chimneys (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v24_5",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v24_x",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v24zg",
            "EntityName": "They came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v24zy",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2504",
            "EntityName": "They came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v250m",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v250w",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2513",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v251c",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v251m",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v251w",
            "EntityName": "They came to Baghdad."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v252w",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v256b",
            "EntityName": "They Came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25l9",
            "EntityName": "Towards Zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25m7",
            "EntityName": "Towards Zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25mh",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25mz",
            "EntityName": "Towards Zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25n6",
            "EntityName": "Towards Zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25nh",
            "EntityName": "Towards Zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25ns",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25p6",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25pp",
            "EntityName": "Towards zero."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25py",
            "EntityName": "Sittaford Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25q5",
            "EntityName": "Towards Zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25qg",
            "EntityName": "The Sittaford Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25qq",
            "EntityName": "The Sittaford Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25qz",
            "EntityName": "Towards zero."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25rd",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25rt",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25s_",
            "EntityName": "The Sittaford mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25s7",
            "EntityName": "The Sittaford Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25sh",
            "EntityName": "The Sittaford Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25sr",
            "EntityName": "The Sittaford Mystery (BBC Radio Presents)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25tf",
            "EntityName": "The Sittaford Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25tp",
            "EntityName": "The Sittaford mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25v3",
            "EntityName": "The Sittaford Mystery (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25vc",
            "EntityName": "The Sittaford Mystery (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25vm",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25vw",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25w3",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25wc",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25wm",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25ww",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25x3",
            "EntityName": "Sparkling cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25xc",
            "EntityName": "Sparkling cyanide."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25xm",
            "EntityName": "Sparkling Cyanide (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25xw",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25y4",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25yd",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25yn",
            "EntityName": "Sparkling Cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25yx",
            "EntityName": "Sparkling cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v25zb",
            "EntityName": "Sparkling cyanide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26_2",
            "EntityName": "The Sittaford Mystery (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26_b",
            "EntityName": "The Sittaford Mystery (Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26kk",
            "EntityName": "They Came to Baghdad (Dell Book)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26lr",
            "EntityName": "They came to Baghdad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26n2",
            "EntityName": "They Came to Baghdad (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26nn",
            "EntityName": "They Came to Baghdad (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26p_",
            "EntityName": "They Came to Baghdad (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26pq",
            "EntityName": "They Came to Baghdad (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v26qr",
            "EntityName": "They Came to Baghdad (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2701",
            "EntityName": "The Sittaford Mystery (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2709",
            "EntityName": "Sittaford Mystery (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v270k",
            "EntityName": "The Sittaford Mystery (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v270t",
            "EntityName": "The Sittaford Mystery (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v272n",
            "EntityName": "Sittaford Mystery (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2759",
            "EntityName": "Sparkling Cyanide (Variant Title = Remembered Death)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v275k",
            "EntityName": "Sparkling Cyanide (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v275t",
            "EntityName": "Sparkling Cyanide (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2762",
            "EntityName": "Sparkling Cyanide (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v276t",
            "EntityName": "Sparkling Cyanide (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v277k",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v277z",
            "EntityName": "Towards Zero (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2796",
            "EntityName": "Towards zero"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v279m",
            "EntityName": "Towards Zero (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v279w",
            "EntityName": "Towards Zero."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v27b4",
            "EntityName": "Towards Zero (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v27bn",
            "EntityName": "Towards Zero (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v27cc",
            "EntityName": "Towards Zero (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v27cm",
            "EntityName": "Towards Zero (Agatha Christie Mysteries Collection (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v27cw",
            "EntityName": "Towards Zero (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rq8",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rqr",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rr_",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rr0",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rr8",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rrj",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rs_",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rs7",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rsj",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rt8",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rtj",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rts",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rv0",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rv9",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rvk",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2rxc",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2ryx",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s3b",
            "EntityName": "Murder is easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s3t",
            "EntityName": "Murder Is Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s41",
            "EntityName": "Murder Is Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s49",
            "EntityName": "Murder Is Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s4k",
            "EntityName": "Murder Is Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s4t",
            "EntityName": "Murder Is Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s51",
            "EntityName": "Murder Is Easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s59",
            "EntityName": "Murder is easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s5r",
            "EntityName": "Murder is easy."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s64",
            "EntityName": "Murder is easy."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s6d",
            "EntityName": "Murder is easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s6v",
            "EntityName": "Murder is easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2s78",
            "EntityName": "Murder is easy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2skk",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2skt",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2sl2",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2slb",
            "EntityName": "CROOKED HOUSE"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2sll",
            "EntityName": "Crooked house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2sm1",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2sm9",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2smk",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2smv",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2sn2",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2snb",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2snl",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2snv",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2sp2",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2spb",
            "EntityName": "Crooked House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2spl",
            "EntityName": "The crooked house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t45",
            "EntityName": "Murder Is Easy (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t4f",
            "EntityName": "Murder is Easy (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t4q",
            "EntityName": "Murder Is Easy (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t64",
            "EntityName": "Murder Is Easy (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t6d",
            "EntityName": "Nemesis (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t6n",
            "EntityName": "Nemesis (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t6x",
            "EntityName": "Nemesis (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t7n",
            "EntityName": "Murder Is Easy (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t7x",
            "EntityName": "Nemesis (Cover to Cover Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t84",
            "EntityName": "Nemesis (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t8d",
            "EntityName": "Nemesis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tbp",
            "EntityName": "Nemesis (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tdl",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tf_",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tf1",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tfj",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tg7",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tgh",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tgs",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2th0",
            "EntityName": "The Murder At the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2th8",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2thj",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2ths",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tjj",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tjs",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tk0",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tk8",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v5p",
            "EntityName": "Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v6c",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v6m",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v6x",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v74",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v7n",
            "EntityName": "The Man In The Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v88",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v8t",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v92",
            "EntityName": "The Man in the Brown Suit (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v9b",
            "EntityName": "The Man in the Brown Suit (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v9l",
            "EntityName": "The Man in the Brown Suit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v9v",
            "EntityName": "The Man in the Brown Suit (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vb2",
            "EntityName": "Man in the Brown Suit (Ulverscroft Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vbc",
            "EntityName": "The Man in the Brown Suit (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vby",
            "EntityName": "Man in the Brown Suit (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vk4",
            "EntityName": "Crooked house."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vkd",
            "EntityName": "Crooked House (Winterbrook Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vkn",
            "EntityName": "Crooked house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vll",
            "EntityName": "Crooked House (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vlv",
            "EntityName": "Crooked House (Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vmd",
            "EntityName": "Crooked House (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vvt",
            "EntityName": "Crooked House (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2w79",
            "EntityName": "The Man In The Brown Suit (Agatha Christie Mystery Collection) Bantam Blue Leatherette Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2w81",
            "EntityName": "The Man In The Brown Suit (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wb4",
            "EntityName": "The Man in the Brown Suit (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wft",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wh1",
            "EntityName": "The murder at the vicarage."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wj0",
            "EntityName": "The Murder at the Vicarage (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wj9",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wjq",
            "EntityName": "The Murder at the Vicarage (Acting Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wjz",
            "EntityName": "Murder at the Vicarage (Miss Marple Mystery Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wk6",
            "EntityName": "The Murder at the Vicarage (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wkg",
            "EntityName": "Murder at the vicarage."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wkq",
            "EntityName": "Murder at the Vicarage (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wkz",
            "EntityName": "Murder at the Vicarage (BBC Radio Presents)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wlp",
            "EntityName": "Murder at the Vicarage (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wly",
            "EntityName": "Murder at the Vicarage (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wmf",
            "EntityName": "Murder at the Vicarage (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2wsw",
            "EntityName": "The Murder at the Vicarage (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2x7b",
            "EntityName": "The Murder at the Vicarage (BBC Full Cast Dramatization)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2x7l",
            "EntityName": "Murder at the Vicarage (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_fr",
            "EntityName": "They Do It with Mirrors (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_g_",
            "EntityName": "They Do It With Mirrors (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_gh",
            "EntityName": "They Do It With Mirrors (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_h_",
            "EntityName": "They Do It With Mirrors (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_hr",
            "EntityName": "They Do It with Mirrors (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_j7",
            "EntityName": "They Do It with Mirrors (Miss Marple Mysteries (Audio Partners))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3_k0",
            "EntityName": "They Do It With Mirrors (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jgy",
            "EntityName": "The murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jhd",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jhn",
            "EntityName": "The murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jj3",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jjc",
            "EntityName": "The Murder of Roger Ackroyd (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jjm",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jk4",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jkd",
            "EntityName": "The murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jkw",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jld",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jlp",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jly",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jm5",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jnn",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jp9",
            "EntityName": "The Murder of Roger Ackroyd. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jpl",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jpw",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3jq3",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l7t",
            "EntityName": "Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l81",
            "EntityName": "The Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l89",
            "EntityName": "Murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l8q",
            "EntityName": "The Murder of Roger Ackroyd (Hercule Poirot Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l8z",
            "EntityName": "The murder of Roger Ackroyd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l9d",
            "EntityName": "The murder of Roger Ackroyd."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3l9t",
            "EntityName": "The Murder of Roger Ackroyd (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3lb1",
            "EntityName": "The Murder of Roger Ackroyd (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3s3z",
            "EntityName": "Absent in the Spring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3s47",
            "EntityName": "Absent in the Spring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3s4s",
            "EntityName": "Absent in the Spring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3s68",
            "EntityName": "Absent in the Spring (Westmacott)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3s71",
            "EntityName": "Absent in the Spring"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3svs",
            "EntityName": "The Rose and the Yew Tree (Westmacott)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3sww",
            "EntityName": "Rose and the Yew Tree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3sxf",
            "EntityName": "The Rose and the Yew Tree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3sy4",
            "EntityName": "Rose and the Yew Tree"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3v_p",
            "EntityName": "The Burden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w0w",
            "EntityName": "Burden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w14",
            "EntityName": "Burden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w1f",
            "EntityName": "The Burden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w34",
            "EntityName": "Burden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w3y",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w45",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w4f",
            "EntityName": "The body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w4x",
            "EntityName": "The body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w5c",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w5m",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w5w",
            "EntityName": "The body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w6b",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w6l",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w6v",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w72",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w7c",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w7m",
            "EntityName": "The body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w7x",
            "EntityName": "Body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3w8l",
            "EntityName": "The Body in the Library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3y_p",
            "EntityName": "The Body In The Library (A Miss Marple Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3ycw",
            "EntityName": "The body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yf3",
            "EntityName": "The Body in the Library (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yfc",
            "EntityName": "The body in the library"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yg2",
            "EntityName": "The Body in the Library (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3ygn",
            "EntityName": "The Body in the Library (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3ygx",
            "EntityName": "The Body in the Library (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yh4",
            "EntityName": "The Body in the Library (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yhd",
            "EntityName": "The Body in the Library (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yj2",
            "EntityName": "Body in the Library (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yjb",
            "EntityName": "The Body in the Library (BBC Radio Collection: Crimes and Thrillers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3yk1",
            "EntityName": "The Body in the Library (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z7_",
            "EntityName": "They Do It with Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z8_",
            "EntityName": "They Do It with Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z8h",
            "EntityName": "They do it with Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z8r",
            "EntityName": "They Do It with Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z97",
            "EntityName": "They Do It With Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z9h",
            "EntityName": "They Do It with Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3z9r",
            "EntityName": "They do it with mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3zb4",
            "EntityName": "They Do It With Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3zbf",
            "EntityName": "They Do It With Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3zbq",
            "EntityName": "They Do It with Mirrors (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3zbz",
            "EntityName": "They Do It With Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3zc6",
            "EntityName": "They Do It With Mirrors"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4_g9",
            "EntityName": "Star over Bethlehem and other stories by Agatha Christie Mallowan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4_h9",
            "EntityName": "Star over Bethlehem, and other stories (The Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v41x5",
            "EntityName": "Unfinished Portrait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v41xg",
            "EntityName": "Unfinished Portrait"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v41xq",
            "EntityName": "Unfinished Portrait (Westmacott)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wn4",
            "EntityName": "Come, Tell Me How You Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wnd",
            "EntityName": "Come, Tell Me How You Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wnn",
            "EntityName": "Come, Tell Me How You Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wp5",
            "EntityName": "Come, Tell Me How You Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wpq",
            "EntityName": "Come, tell me how you live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wq4",
            "EntityName": "Come, Tell Me How You Live (Common Reader Editions: Rediscoveries: LONDON)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wqf",
            "EntityName": "Come, tell me how you live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4wrb",
            "EntityName": "Come tell me how you live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4ws8",
            "EntityName": "Come, Tell Me How You Live"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5qd1",
            "EntityName": "Poems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5qdt",
            "EntityName": "Poems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5qf8",
            "EntityName": "Poems (The Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5z7n",
            "EntityName": "Unexpected Guest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5z8w",
            "EntityName": "The Unexpected Guest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5z93",
            "EntityName": "The Unexpected Guest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5z9c",
            "EntityName": "The unexpected guest"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5zb4",
            "EntityName": "The Unexpected Guest (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5zbd",
            "EntityName": "The Unexpected Guest (Acting Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7g_6",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7g_z",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7gzg",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7gzq",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7gzz",
            "EntityName": "Peril At End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h0f",
            "EntityName": "Peril at End House (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h0p",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h0y",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h1_",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h16",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h1g",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h1q",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7h27",
            "EntityName": "Peril at End House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jpd",
            "EntityName": "Peril at end house."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jpn",
            "EntityName": "Peril at End House."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jqj",
            "EntityName": "Peril at End House (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jqs",
            "EntityName": "Peril at End House (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jr0",
            "EntityName": "Peril at End House (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jr8",
            "EntityName": "Peril at End House (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7jrz",
            "EntityName": "Peril at End House (The Agatha Christie Mystery Collection) (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7n91",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7n9j",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nb7",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nbs",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nc8",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ncr",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nd9",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ndl",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ndv",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nf3",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nfm",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7nfx",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ng4",
            "EntityName": "CURTAIN"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ngf",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ngp",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7q_4",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7q_y",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7r0l",
            "EntityName": "Curtain (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7r0v",
            "EntityName": "Curtain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7r18",
            "EntityName": "Curtain (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7r1j",
            "EntityName": "Curtain (Ulverscroft Large Print Ser.)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7r1s",
            "EntityName": "Curtain (The Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7r29",
            "EntityName": "Curtain (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vf0",
            "EntityName": "Third girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vfh",
            "EntityName": "Third girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vg6",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vgr",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vh0",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vh8",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vhk",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vhv",
            "EntityName": "Third girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vj8",
            "EntityName": "Third Girl (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vjj",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vjs",
            "EntityName": "Third girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7vk6",
            "EntityName": "Third Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w7x",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w8j",
            "EntityName": "A CARIBBEAN MYSTERY"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w8t",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w91",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w99",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w9k",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7w9t",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wb1",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wb9",
            "EntityName": "A Caribbean Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wbl",
            "EntityName": "A Caribbean Mystery (Greenway E.)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wbw",
            "EntityName": "A Caribbean Mystery (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wc3",
            "EntityName": "A Caribbean Mystery (Audio Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wcc",
            "EntityName": "A Caribbean Mystery (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wcm",
            "EntityName": "A Caribbean Mystery (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wcw",
            "EntityName": "A Caribbean Mystery (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wdn",
            "EntityName": "A Caribbean Mystery (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wjk",
            "EntityName": "Third Girl (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wjt",
            "EntityName": "Third Girl (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wkh",
            "EntityName": "Third Girl (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wmp",
            "EntityName": "Third Girl (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wmy",
            "EntityName": "Third Girl (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wn6",
            "EntityName": "Third Girl (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wnq",
            "EntityName": "Third Girl (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7wvs",
            "EntityName": "A Caribbean Mystery (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ww0",
            "EntityName": "A Caribbean Mystery (BBC Radio Presents: An Audio Dramatization)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v7ww8",
            "EntityName": "A Caribbean Mystery (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v88_2",
            "EntityName": "Five little pigs (Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v88_r",
            "EntityName": "Five Little Pigs (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v881_",
            "EntityName": "Five Little Pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8817",
            "EntityName": "Five Little Pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v881h",
            "EntityName": "Five Little Pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v881r",
            "EntityName": "Five Little Pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8828",
            "EntityName": "Five Little Pigs (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v882j",
            "EntityName": "Five little pigs."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v882s",
            "EntityName": "Five Little Pigs."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8836",
            "EntityName": "Five Little Pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v883g",
            "EntityName": "Five Little Pigs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v883q",
            "EntityName": "Five Little Pigs (Also published as Murder In Retrospect)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v883z",
            "EntityName": "Five Little Pigs (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8846",
            "EntityName": "Five Little Pigs (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k2p",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k34",
            "EntityName": "Cards on the Table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k3d",
            "EntityName": "Cards on the Table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k3n",
            "EntityName": "Cards on the Table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k3x",
            "EntityName": "Cards on the Table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k44",
            "EntityName": "Cards on the Table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k4d",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k4t",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k57",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k5n",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k62",
            "EntityName": "Cards on the table."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8k6l",
            "EntityName": "Cards on the table"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l60",
            "EntityName": "Cards on the Table (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l7h",
            "EntityName": "Cards on the Table (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l80",
            "EntityName": "Cards on the Table (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l88",
            "EntityName": "Cards on the Table (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l8j",
            "EntityName": "Cards on the Table (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l99",
            "EntityName": "Cards on the Table (A Hercule Poirot Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l9k",
            "EntityName": "Cards on the table (Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8l9t",
            "EntityName": "Cards on the Table (Agatha Christie Mysteries Collection (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8lb9",
            "EntityName": "Cards on the Table (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v8lbk",
            "EntityName": "Cards on the Table (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v986y",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v987_",
            "EntityName": "Cat Among the Pigeons (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v987r",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9887",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v988z",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v989_",
            "EntityName": "Cat among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9898",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v989j",
            "EntityName": "Cat among the pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v98b7",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v98bh",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v98br",
            "EntityName": "Cat Among the Pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b3d",
            "EntityName": "Cat among the pigeons."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b4c",
            "EntityName": "Cat among the pigeons."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b4w",
            "EntityName": "Cat among the pigeons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b5b",
            "EntityName": "Cat Among the Pigeons (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b5l",
            "EntityName": "A Cat Among the Pigeons (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b62",
            "EntityName": "Cat Among the Pigeons (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b6b",
            "EntityName": "Cat Among the Pigeons ( A Hercule Poirot Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b73",
            "EntityName": "Cat Among the Pigeons (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9b8j",
            "EntityName": "Cat Among the Pigeons (Ulverscroft Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9f_6",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9f_y",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9ftz",
            "EntityName": "Evil under the sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fvf",
            "EntityName": "Evil under the sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fvx",
            "EntityName": "Evil Under the Sun (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fwm",
            "EntityName": "Evil under the sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fx2",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fxs",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fy0",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fyp",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fz5",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fzf",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fzp",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9fzy",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9g0r",
            "EntityName": "Evil Under the Sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hk8",
            "EntityName": "Evil under the Sun (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hkj",
            "EntityName": "Evil under the sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hky",
            "EntityName": "Evil Under the Sun (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hl5",
            "EntityName": "Evil under the sun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hlm",
            "EntityName": "Evil under the sun."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hm4",
            "EntityName": "Evil Under the Sun (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hmd",
            "EntityName": "Evil Under the Sun (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hmn",
            "EntityName": "Evil Under the Sun (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hmx",
            "EntityName": "Evil Under the Sun (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v9hn_",
            "EntityName": "Evil Under the Sun (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8_c",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8_n",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8_x",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8w_",
            "EntityName": "Elephants Can Remember (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8x7",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8xq",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8y5",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8yx",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8zc",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8zm",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb8zx",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb90b",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb90l",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb90w",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb913",
            "EntityName": "Elephants Can Remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vb91y",
            "EntityName": "Elephants can remember."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc4q",
            "EntityName": "Elephants Can Remember (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc5w",
            "EntityName": "Elephants can remember"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc69",
            "EntityName": "Elephants Can Remember (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc6l",
            "EntityName": "Elephants Can Remember (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc6v",
            "EntityName": "Elephants Can Remember (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc73",
            "EntityName": "Elephants Can Remember (Hercule Poirot Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbc89",
            "EntityName": "Elephants Can Remember (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd0s",
            "EntityName": "One, Two, Buckle My Shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd20",
            "EntityName": "One, Two, Buckle My Shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd2r",
            "EntityName": "One, Two, Buckle My Shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd38",
            "EntityName": "One, Two, Buckle My Shoe (Agatha Christie Mysteries Collection (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd3j",
            "EntityName": "One, Two, Buckle My Shoe (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd3s",
            "EntityName": "One, Two, Buckle My Shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd40",
            "EntityName": "One, Two, Buckle My Shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd48",
            "EntityName": "One, two, buckle my shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd4p",
            "EntityName": "One, Two, Buckle My Shoe (Ulverscroft Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd4z",
            "EntityName": "One,two, buckle my shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd5d",
            "EntityName": "One, Two, Buckle My Shoe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd5n",
            "EntityName": "One, Two Buckle My Shoe (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbd64",
            "EntityName": "One, Two Buckle My Shoe (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk0s",
            "EntityName": "Taken at the Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk1s",
            "EntityName": "Taken at the Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk20",
            "EntityName": "Taken at the Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk28",
            "EntityName": "Taken at the Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk2j",
            "EntityName": "Taken at the Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk3c",
            "EntityName": "Taken at the Flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk3m",
            "EntityName": "Taken at the flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk40",
            "EntityName": "Taken at the Flood (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk51",
            "EntityName": "Taken at the flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk5h",
            "EntityName": "Taken at the Flood (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbk5r",
            "EntityName": "Taken at the flood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vblm_",
            "EntityName": "Taken at the Flood (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbln7",
            "EntityName": "Taken at the Flood (aka There is a Tide...)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vblnh",
            "EntityName": "Taken at the Flood (Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vblpg",
            "EntityName": "Taken At The Flood (A Hercule Poirot Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vblpq",
            "EntityName": "Taken at the Flood (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbls4",
            "EntityName": "Taken at the Flood (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrck",
            "EntityName": "Dumb Witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrdr",
            "EntityName": "Dumb Witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrf8",
            "EntityName": "Dumb Witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrfj",
            "EntityName": "Dumb Witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrfs",
            "EntityName": "Dumb Witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrg6",
            "EntityName": "Dumb witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrgg",
            "EntityName": "Dumb Witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrgz",
            "EntityName": "Dumb witness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrj2",
            "EntityName": "Dumb witness."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrkj",
            "EntityName": "Hickory Dickory Dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrl8",
            "EntityName": "Hickory Dickory Dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrlj",
            "EntityName": "Hickory Dickory Dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrm1",
            "EntityName": "Hickory Dickory Dock (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrm9",
            "EntityName": "Hickory Dickory Dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrn3",
            "EntityName": "Hickory dickory dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrnk",
            "EntityName": "Hickory dickory dock."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrnt",
            "EntityName": "Hickory Dickory Dock (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrp1",
            "EntityName": "Hickory Dickory Dock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrpk",
            "EntityName": "Hickory Dickory Dock (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbrwn",
            "EntityName": "Dumb Witness (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbt_0",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbt_8",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbt_j",
            "EntityName": "Three Act Tragedy (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbt_s",
            "EntityName": "Three act tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv07",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv0j",
            "EntityName": "Three ACT Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv0s",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv10",
            "EntityName": "Three act tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv1g",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv1q",
            "EntityName": "Three act tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv24",
            "EntityName": "Three act tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbv2l",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbwbt",
            "EntityName": "Three Act Tragedy (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbwc1",
            "EntityName": "Three Act Tragedy (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbwd1",
            "EntityName": "Three Act Tragedy (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbwd9",
            "EntityName": "Three Act Tragedy (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vbwdt",
            "EntityName": "Three Act Tragedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc20s",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc210",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc219",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc21k",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc220",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc229",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc22l",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc231",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc23l",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc23w",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc243",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc24c",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc24m",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc24w",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc26b",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc26r",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc274",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc28p",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc29c",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4p2",
            "EntityName": "And Then There Were None (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4ps",
            "EntityName": "And Then There Were None (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4qh",
            "EntityName": "And Then There Were None (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4rn",
            "EntityName": "And Then There Were None (St. Martin's True Crime Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4rx",
            "EntityName": "And Then There Were None (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4sd",
            "EntityName": "And Then There Were None (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4sp",
            "EntityName": "And Then There Were None (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4sy",
            "EntityName": "And Then There Were None (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4tf",
            "EntityName": "And Then There Were None Book (Detective English Readers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc4vf",
            "EntityName": "And Then There Were None (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6_7",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6_h",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6_s",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6xz",
            "EntityName": "Death In The Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6y_",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6yh",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6yr",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6z_",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6z7",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc6zj",
            "EntityName": "Death in the clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc700",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc709",
            "EntityName": "Death In The Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc719",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc71n",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc71x",
            "EntityName": "Death in the Clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc87_",
            "EntityName": "Death in the clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc88_",
            "EntityName": "Death in the clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc89f",
            "EntityName": "Death in the Clouds (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc89p",
            "EntityName": "Death in the clouds"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc8b3",
            "EntityName": "Death in the Clouds (Agatha Christie Mysteries Collection (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc8bc",
            "EntityName": "Death in the Clouds (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc8bx",
            "EntityName": "Death in the Clouds (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc8cn",
            "EntityName": "Death in the Clouds (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc9jx",
            "EntityName": "The Hound of Death (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc9k5",
            "EntityName": "The Hound of Death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vc9kf",
            "EntityName": "The hound of death"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw37",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw3r",
            "EntityName": "Lord Edgware dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw4j",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw4s",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw59",
            "EntityName": "Lord Edgware Dies (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw5k",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw5t",
            "EntityName": "Lord Edgware dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw6_",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw66",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw6g",
            "EntityName": "Lord Edgware dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw6q",
            "EntityName": "Lord Edgware Dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw77",
            "EntityName": "Lord Edgware dies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcw8x",
            "EntityName": "Lord Edgware dies."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcwxl",
            "EntityName": "Lord Edgware Dies (Agatha Christie Collection S.)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcwxw",
            "EntityName": "Lord Edgware Dies (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcwy3",
            "EntityName": "Lord Edgware Dies (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vcwyc",
            "EntityName": "Lord Edgware Dies (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1h5",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1hz",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1lc",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1lm",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1nf",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1nq",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1p9",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1px",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1qc",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1qw",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1rp",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1s4",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1t5",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1vx",
            "EntityName": "Partners in Crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1w8",
            "EntityName": "Partners in crime."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1wj",
            "EntityName": "Partners in crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1x1",
            "EntityName": "Partners in crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf1xh",
            "EntityName": "Partners in crime"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf26z",
            "EntityName": "The Regatta Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf27g",
            "EntityName": "The Regatta Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf27z",
            "EntityName": "The Regatta Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf28h",
            "EntityName": "The Regatta Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf28v",
            "EntityName": "The Regatta Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf33q",
            "EntityName": "Partners in Crime (Listen for Pleasure)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf34_",
            "EntityName": "Partners in Crime (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf346",
            "EntityName": "Partners in Crime (Tommy & Tuppence Chronology)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf34h",
            "EntityName": "Partners in Crime (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf34r",
            "EntityName": "Partners in Crime (Tommy and Tuppence Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf359",
            "EntityName": "Partners in Crime (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf35k",
            "EntityName": "Partners in Crime (Vol. 1 Finessing the King, Vol 2 The Crackler, Vol 3 The Unbreakable Alibi)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3qy",
            "EntityName": "Poirot Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3r5",
            "EntityName": "Poirot Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3rq",
            "EntityName": "Poirot Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3s7",
            "EntityName": "Poirot investigates."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3sh",
            "EntityName": "Poirot investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3sz",
            "EntityName": "Poirot investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3tf",
            "EntityName": "Poirot investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3tw",
            "EntityName": "Poirot Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3v3",
            "EntityName": "Poirot investigates."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3vk",
            "EntityName": "Poirot Investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3vt",
            "EntityName": "Poirot investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3w7",
            "EntityName": "Poirot Investigates (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf3wh",
            "EntityName": "Poirot investigates"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf52b",
            "EntityName": "Poirot Investigates (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf52l",
            "EntityName": "Poirot Investigates (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf52v",
            "EntityName": "Poirot Investigates (Hercule Poirot Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf532",
            "EntityName": "Poirot Investigates (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf53b",
            "EntityName": "Poirot Investigates (Hercule Poirot Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf54g",
            "EntityName": "POIROT INVESTIGATES (Hercule Poirot Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vf556",
            "EntityName": "Poirot Investigates (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfs_3",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfs_c",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfs_n",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfs_y",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfszw",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft_w",
            "EntityName": "The Mystery of the Blue Train (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft07",
            "EntityName": "Destination unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft0p",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft0y",
            "EntityName": "Destination Unknown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft16",
            "EntityName": "Destination Unknown (Signature Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft1w",
            "EntityName": "Destination Unknown (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft23",
            "EntityName": "Destination Unknown (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft2t",
            "EntityName": "Destination Unknown (Mystery Masters Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft64",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft79",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft7k",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft7t",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft81",
            "EntityName": "PASSENGER TO FRANKFURT"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft8b",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft8l",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft91",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vft9b",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftb1",
            "EntityName": "Passenger to Frankfurt."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftbn",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftcd",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftcp",
            "EntityName": "PASSENGER TO FRANKFURT."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftcy",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftdc",
            "EntityName": "Passenger to Frankfurt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftnp",
            "EntityName": "Destination unknown (Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftq2",
            "EntityName": "Destination Unknown (St. Martin's Minotaur Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftrm",
            "EntityName": "Passenger to Frankfurt (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vftsv",
            "EntityName": "Passenger to Frankfurt (Winterbrook Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv03",
            "EntityName": "Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv0d",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv0n",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv0y",
            "EntityName": "The mystery of the blue train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv1d",
            "EntityName": "Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv1n",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv1x",
            "EntityName": "Mystery of the blue train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv29",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv2l",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv2v",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv32",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfv3b",
            "EntityName": "The Mystery of the Blue Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfvm6",
            "EntityName": "The mystery of the blue train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfvmy",
            "EntityName": "THE MYSTERY OF THE BLUE TRAIN."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfvn5",
            "EntityName": "Mystery Of The Blue Train / The Listerdale Mystery / Murder At The Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfvnf",
            "EntityName": "The Mystery of the Blue Train (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vfvqw",
            "EntityName": "The Mystery of the Blue Train (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_0f",
            "EntityName": "Sleeping Murder (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_0z",
            "EntityName": "Sleeping Murder (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_17",
            "EntityName": "Sleeping Murder (Large Print Ed)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_21",
            "EntityName": "Sleeping Murder (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_29",
            "EntityName": "Sleeping Murder (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_2m",
            "EntityName": "Sleeping Murder (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_2w",
            "EntityName": "Sleeping Murder (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg_33",
            "EntityName": "Sleeping Murder (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4_2",
            "EntityName": "Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4_b",
            "EntityName": "The seven dials mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4_s",
            "EntityName": "The Seven Dials mystery."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4v_",
            "EntityName": "The Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4w8",
            "EntityName": "Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4wz",
            "EntityName": "The Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4xz",
            "EntityName": "The Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4y6",
            "EntityName": "The seven dials mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4yp",
            "EntityName": "The Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4z5",
            "EntityName": "Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4zf",
            "EntityName": "The Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg4zp",
            "EntityName": "The seven dials mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vg500",
            "EntityName": "The Seven Dials Mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgbvn",
            "EntityName": "The seven dials mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgbw9",
            "EntityName": "The Seven Dials Mystery (Agatha Christie Signature Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgbwl",
            "EntityName": "The Seven Dials Mystery (Agatha Christie Mystery Collection) Bantam Blue Leatherette Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgbwv",
            "EntityName": "The Seven Dials mystery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgbxb",
            "EntityName": "Seven Dials Mystery (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgftt",
            "EntityName": "The secret adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfv8",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfvj",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfvt",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfw1",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfw9",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfwk",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfwv",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfx2",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfxc",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfxn",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfxy",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfy6",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfyg",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfyr",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfz0",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgfz9",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghp7",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghqh",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghqs",
            "EntityName": "Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghr0",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghr9",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghrk",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghrv",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghs2",
            "EntityName": "Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghsb",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghsm",
            "EntityName": "Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghsx",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vght_",
            "EntityName": "Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vght4",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghtf",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghtq",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghv7",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghvj",
            "EntityName": "The Secret Adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghvt",
            "EntityName": "The secret adversary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vghwn",
            "EntityName": "Secret Adversary (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgj86",
            "EntityName": "The murder on the links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgj90",
            "EntityName": "Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgj98",
            "EntityName": "The Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgj9j",
            "EntityName": "The Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgj9s",
            "EntityName": "Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjbk",
            "EntityName": "Murder On the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjc8",
            "EntityName": "Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjcj",
            "EntityName": "Murder On The Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjcs",
            "EntityName": "The murder on the links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjd5",
            "EntityName": "Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjdf",
            "EntityName": "Murder on the Links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjdp",
            "EntityName": "The murder on the links."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjvy",
            "EntityName": "The Secret Adversary (Tommy & Tuppence Chronology)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjwf",
            "EntityName": "The Secret Adversary (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjwq",
            "EntityName": "Secret Adversary (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjx6",
            "EntityName": "The Secret Adversary (Dodo Press)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjxh",
            "EntityName": "The Secret Adversary (G K Hall's Agatha Christie Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjxs",
            "EntityName": "The Secret Adversary (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjy0",
            "EntityName": "Secret Adversary (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgjys",
            "EntityName": "The Secret Adversary (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgkq_",
            "EntityName": "The murder on the links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgkq2",
            "EntityName": "Murder on the links"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgkrk",
            "EntityName": "The Murder on the Links (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgkrt",
            "EntityName": "Murder on the Links (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgks1",
            "EntityName": "Murder on the links (The Agatha Christie mystery collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgks9",
            "EntityName": "The Murder on the Links (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgksl",
            "EntityName": "Murder on the Links (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgktm",
            "EntityName": "Murder On The Links (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgx_3",
            "EntityName": "A Pocket Full of Rye (Miss Marple Mysteries (Audio))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgx_c",
            "EntityName": "A Pocket Full of Rye (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgx_n",
            "EntityName": "A Pocket Full of Rye (BBC Audio Crime)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgx_x",
            "EntityName": "A Pocket Full of Rye (BBC Radio Collection: Crimes and Thrillers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxw0",
            "EntityName": "A Pocket Full of Rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxx3",
            "EntityName": "A Pocket Full of Rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxxc",
            "EntityName": "A Pocket Full of Rye (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxxm",
            "EntityName": "a Pocket full of Rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxxw",
            "EntityName": "A Pocket Full of Rye (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxy3",
            "EntityName": "A Pocket Full Of Rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxyc",
            "EntityName": "A Pocket Full of Rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxzb",
            "EntityName": "A Pocket Full of Rye"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxzl",
            "EntityName": "A Pocket Full of Rye (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgxzv",
            "EntityName": "A Pocket Full of Rye (A Jane Marple Murder Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy71",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy79",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy7k",
            "EntityName": "Sleeping murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy80",
            "EntityName": "Sleeping murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy8h",
            "EntityName": "Sleeping murder."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy8x",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy94",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy9f",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy9p",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgy9y",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgyb5",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgybf",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgybp",
            "EntityName": "Sleeping Murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgyf0",
            "EntityName": "Sleeping murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgzyl",
            "EntityName": "Sleeping Murder (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vgzz8",
            "EntityName": "Sleeping murder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfmg",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfmz",
            "EntityName": "Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfn6",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfng",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfnq",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfnz",
            "EntityName": "Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfph",
            "EntityName": "Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfpr",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfqg",
            "EntityName": "The big four."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfqq",
            "EntityName": "Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfqz",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfs6",
            "EntityName": "The Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhfsz",
            "EntityName": "Big Four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgwf",
            "EntityName": "The Big Four."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgwq",
            "EntityName": "The big four"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgx4",
            "EntityName": "The Big Four (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgxd",
            "EntityName": "The Big Four (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgy3",
            "EntityName": "The Big Four (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgyx",
            "EntityName": "The Big Four (G K Hall Large Print Book Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhgz5",
            "EntityName": "Big Four (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnpm",
            "EntityName": "A Murder Is Announced"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnq3",
            "EntityName": "A Murder Is Announced"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnqc",
            "EntityName": "A Murder Is Announced"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnqm",
            "EntityName": "A Murder Is Announced (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnr3",
            "EntityName": "A Murder is Announced"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnrc",
            "EntityName": "A Murder Is Announced (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnrw",
            "EntityName": "A Murder Is Announced (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhns3",
            "EntityName": "A Murder Is Announced (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnt1",
            "EntityName": "A Murder Is Announced (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnt9",
            "EntityName": "A Murder Is Announced (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhntk",
            "EntityName": "A Murder Is Announced"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhnv9",
            "EntityName": "A Murder is Announced (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhpbz",
            "EntityName": "A Murder Is Announced (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vhpch",
            "EntityName": "A Murder Is Announced (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjk_7",
            "EntityName": "The Thirteen Problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjk_h",
            "EntityName": "The thirteen problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjkzd",
            "EntityName": "The Thirteen Problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl07",
            "EntityName": "The Thirteen Problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl0h",
            "EntityName": "Thirteen Problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl0s",
            "EntityName": "Thirteen Problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl1_",
            "EntityName": "The Thirteen Problems (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl10",
            "EntityName": "The thirteen problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl18",
            "EntityName": "The Thirteen Problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl1k",
            "EntityName": "The thirteen problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjl2q",
            "EntityName": "The thirteen problems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjlvl",
            "EntityName": "The Thirteen Problems (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vjlvv",
            "EntityName": "The Thirteen Problems (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkg9q",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkg9z",
            "EntityName": "The Murder At the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgbq",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgc5",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgcf",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgcp",
            "EntityName": "The Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgcy",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgdm",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgfb",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgfw",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgg3",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkggc",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkggw",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkgh4",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkh_5",
            "EntityName": "The murder at the vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkh_l",
            "EntityName": "Murder at the Vicarage (Miss Marple Mystery Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkh_v",
            "EntityName": "The Murder at the Vicarage (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkhyq",
            "EntityName": "Murder at the Vicarage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkhzf",
            "EntityName": "Murder at the vicarage."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkhzp",
            "EntityName": "The murder at the vicarage."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkhzy",
            "EntityName": "The Murder at the Vicarage (Miss Marple)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj03",
            "EntityName": "The Murder at the Vicarage (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj0c",
            "EntityName": "Murder at the Vicarage (BBC Radio Presents)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj0m",
            "EntityName": "The Murder at the Vicarage (Acting Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj0w",
            "EntityName": "Murder at the Vicarage (Miss Marple Mysteries (Paperback))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj13",
            "EntityName": "Murder at the Vicarage (Miss Marple Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj23",
            "EntityName": "Murder at the Vicarage (G. K. Hall (Large Print))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkj2n",
            "EntityName": "Murder at the Vicarage (Agatha Christie Mysteries Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkjfy",
            "EntityName": "Murder at the Vicarage (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkjlz",
            "EntityName": "The Murder at the Vicarage (BBC Full Cast Dramatization)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxm_",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxnj",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxns",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxp1",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxpb",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxpl",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxpw",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxqb",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxqt",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxr1",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxrb",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxrr",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxs0",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxsf",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxsp",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxsy",
            "EntityName": "And then there were none"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxt5",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkxtq",
            "EntityName": "And Then There Were None"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vky_1",
            "EntityName": "And Then There Were None (Agatha Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vky_9",
            "EntityName": "And Then There Were None (The Agatha Christie Mystery Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vky_k",
            "EntityName": "And Then There Were None (The Christie Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vky_y",
            "EntityName": "And Then There Were None (Ulverscroft Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkz0_",
            "EntityName": "And Then There Were None Book (Detective English Readers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkz06",
            "EntityName": "And Then There Were None (Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkz0r",
            "EntityName": "And Then There Were None (St. Martin's True Crime Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkz18",
            "EntityName": "And Then There Were None (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkz1j",
            "EntityName": "And Then There Were None (Audio Editions Mystery Masters)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vkz1s",
            "EntityName": "And Then There Were None (Agatha Christie Audio Mystery)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz5n",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz63",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz6l",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz71",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz7j",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz7v",
            "EntityName": "Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz82",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz8m",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz8x",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz96",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzz9s",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzzb0",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzzb9",
            "EntityName": "The mysterious affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzzbl",
            "EntityName": "Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzzbw",
            "EntityName": "Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vzzcf",
            "EntityName": "The Mysterious Affair at Styles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00tc",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00tm",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00v_",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00vd",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00vp",
            "EntityName": "Sad cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00w7",
            "EntityName": "Sad cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00wp",
            "EntityName": "Sad cypress."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00wy",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00x6",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00xg",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00xq",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00xz",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w00yg",
            "EntityName": "Sad cypress."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02vv",
            "EntityName": "Sad Cypress (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02w2",
            "EntityName": "Sad cypress."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02wj",
            "EntityName": "Sad Cypress (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02ws",
            "EntityName": "Sad Cypress (Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02x0",
            "EntityName": "Sad cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02xh",
            "EntityName": "Sad Cypress (BBC Radio Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02xr",
            "EntityName": "Sad Cypress"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02y4",
            "EntityName": "Sad Cypress (Hercule Poirot)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02yf",
            "EntityName": "Sad Cypress (Hercule Poirot Mysteries)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w02yp",
            "EntityName": "Sad Cypress (BBC Radio Collection)"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ldd": "Agatha Christie"
    },
    "qid_topic_entity": {
      "Q35064": "Agatha Christie"
    },
    "index": 774
  },
  {
    "QuestionId": "WebQTest-1907",
    "RawQuestion": "what kind of currency does dominican republic use?",
    "ProcessedQuestion": "what kind of currency does dominican republic use",
    "Parses": [
      {
        "ParseId": "WebQTest-1907.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "dominican republic",
        "TopicEntityName": "Dominican Republic",
        "TopicEntityMid": "m.027rn",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lt7_",
            "EntityName": "Dominican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027rn": "Dominican Republic"
    },
    "qid_topic_entity": {
      "Q786": "Dominican Republic"
    },
    "index": 775
  },
  {
    "QuestionId": "WebQTest-176",
    "RawQuestion": "who is emma stone father?",
    "ProcessedQuestion": "who is emma stone father",
    "Parses": [
      {
        "ParseId": "WebQTest-176.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09yhzs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09yhzs ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "emma stone",
        "TopicEntityName": "Emma Stone",
        "TopicEntityMid": "m.09yhzs",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3qys",
            "EntityName": "Jeff Stone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09yhzs": "Emma Stone"
    },
    "qid_topic_entity": {
      "Q147077": "Emma Stone"
    },
    "index": 776
  },
  {
    "QuestionId": "WebQTest-1896",
    "RawQuestion": "what form of government does the united states have?",
    "ProcessedQuestion": "what form of government does the united states have",
    "Parses": [
      {
        "ParseId": "WebQTest-1896.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "united states",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 777
  },
  {
    "QuestionId": "WebQTest-146",
    "RawQuestion": "what team does jordan own?",
    "ProcessedQuestion": "what team does jordan own",
    "Parses": [
      {
        "ParseId": "WebQTest-146.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03__y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03__y ns:sports.sports_team_location.teams ?x .\n}\n",
        "PotentialTopicEntityMention": "jordan",
        "TopicEntityName": "Jordan",
        "TopicEntityMid": "m.03__y",
        "InferentialChain": [
          "sports.sports_team_location.teams"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0452m3",
            "EntityName": "Jordan national football team"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08htl1",
            "EntityName": "Al-Wehdat SC"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03__y": "Jordan"
    },
    "qid_topic_entity": {
      "Q810": "Jordan"
    },
    "index": 778
  },
  {
    "QuestionId": "WebQTest-2021",
    "RawQuestion": "what influenced john steinbeck to start writing?",
    "ProcessedQuestion": "what influenced john steinbeck to start writing",
    "Parses": [
      {
        "ParseId": "WebQTest-2021.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04107)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04107 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "john steinbeck",
        "TopicEntityName": "John Steinbeck",
        "TopicEntityMid": "m.04107",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023jy9",
            "EntityName": "Sherwood Anderson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07jrh",
            "EntityName": "Thomas Malory"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.084w8",
            "EntityName": "William Faulkner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09482",
            "EntityName": "Robert Burns"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04107": "John Steinbeck"
    },
    "qid_topic_entity": {
      "Q39212": "John Steinbeck"
    },
    "index": 779
  },
  {
    "QuestionId": "WebQTest-1103",
    "RawQuestion": "how many mary mary sisters?",
    "ProcessedQuestion": "how many mary mary sisters",
    "Parses": [
      {
        "ParseId": "WebQTest-1103.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01kq11t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01kq11t ns:music.musical_group.member ?y .\n?y ns:music.group_membership.member ?x .\n}\n",
        "PotentialTopicEntityMention": "mary mary",
        "TopicEntityName": "Mary Mary",
        "TopicEntityMid": "m.01kq11t",
        "InferentialChain": [
          "music.musical_group.member",
          "music.group_membership.member"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bw51f",
            "EntityName": "Tina Campbell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bw51n",
            "EntityName": "Erica Campbell"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01kq11t": "Mary Mary"
    },
    "qid_topic_entity": {
      "Q1906374": "Mary Mary"
    },
    "index": 780
  },
  {
    "QuestionId": "WebQTest-640",
    "RawQuestion": "who was saint paul the apostle?",
    "ProcessedQuestion": "who was saint paul the apostle",
    "Parses": [
      {
        "ParseId": "WebQTest-640.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060nc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060nc ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "saint paul the apostle",
        "TopicEntityName": "Paul the Apostle",
        "TopicEntityMid": "m.060nc",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k_m1q",
            "EntityName": "Tentmaker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066dv",
            "EntityName": "Prophet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2pm",
            "EntityName": "Missionary"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060nc": "Paul the Apostle"
    },
    "qid_topic_entity": {
      "Q9200": "Paul the Apostle"
    },
    "index": 781
  },
  {
    "QuestionId": "WebQTest-1828",
    "RawQuestion": "what currency does france accept?",
    "ProcessedQuestion": "what currency does france accept",
    "Parses": [
      {
        "ParseId": "WebQTest-1828.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "france",
        "TopicEntityName": "France",
        "TopicEntityMid": "m.0f8l9c",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyjx",
            "EntityName": "CFP franc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f8l9c": "France"
    },
    "qid_topic_entity": {
      "Q142": "France"
    },
    "index": 782
  },
  {
    "QuestionId": "WebQTest-1048",
    "RawQuestion": "who were king henry vii children?",
    "ProcessedQuestion": "who were king henry vii children",
    "Parses": [
      {
        "ParseId": "WebQTest-1048.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p6r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p6r ns:people.person.children ?x .\n}\n",
        "PotentialTopicEntityMention": "king henry vii",
        "TopicEntityName": "Henry VII of England",
        "TopicEntityMid": "m.03p6r",
        "InferentialChain": [
          "people.person.children"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0183g3",
            "EntityName": "Arthur, Prince of Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p4twb",
            "EntityName": "Edward Tudor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03p77",
            "EntityName": "Henry VIII of England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_p57",
            "EntityName": "Katherine Tudor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yss8",
            "EntityName": "Elizabeth Tudor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c8kk",
            "EntityName": "Edmund Tudor, Duke of Somerset"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0btnbg",
            "EntityName": "Edward Tudor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3yxg0",
            "EntityName": "Roland de Velville"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j83d",
            "EntityName": "Mary Tudor, Queen of France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j8jc",
            "EntityName": "Margaret Tudor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03p6r": "Henry VII of England"
    },
    "qid_topic_entity": {
      "Q675493": "Henry VII of England"
    },
    "index": 783
  },
  {
    "QuestionId": "WebQTest-1402",
    "RawQuestion": "what is the kentucky state bird?",
    "ProcessedQuestion": "what is the kentucky state bird",
    "Parses": [
      {
        "ParseId": "WebQTest-1402.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0498y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0498y ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627hw .\n}\n",
        "PotentialTopicEntityMention": "kentucky",
        "TopicEntityName": "Kentucky",
        "TopicEntityMid": "m.0498y",
        "InferentialChain": [
          "government.governmental_jurisdiction.official_symbols",
          "location.location_symbol_relationship.symbol"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04627hw",
            "EntityName": "State bird",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.location_symbol_relationship.Kind_of_symbol",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01m0p1",
            "EntityName": "Cardinal"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0498y": "Kentucky"
    },
    "qid_topic_entity": {
      "Q1603": "Kentucky"
    },
    "index": 784
  },
  {
    "QuestionId": "WebQTest-1877",
    "RawQuestion": "what kind of painter was wassily kandinsky?",
    "ProcessedQuestion": "what kind of painter was wassily kandinsky",
    "Parses": [
      {
        "ParseId": "WebQTest-1877.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0856z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0856z ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "wassily kandinsky",
        "TopicEntityName": "Wassily Kandinsky",
        "TopicEntityMid": "m.0856z",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0197s6",
            "EntityName": "Abstract art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xk0r",
            "EntityName": "Der Blaue Reiter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04191d",
            "EntityName": "German Expressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pybl",
            "EntityName": "Expressionism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0856z": "Wassily Kandinsky"
    },
    "qid_topic_entity": {
      "Q61064": "Wassily Kandinsky"
    },
    "index": 785
  },
  {
    "QuestionId": "WebQTest-1382",
    "RawQuestion": "what other countries border argentina?",
    "ProcessedQuestion": "what other countries border argentina",
    "Parses": [
      {
        "ParseId": "WebQTest-1382.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015fr",
            "EntityName": "Brazil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165v",
            "EntityName": "Bolivia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1v",
            "EntityName": "Chile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v10",
            "EntityName": "Paraguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07twz",
            "EntityName": "Uruguay"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 786
  },
  {
    "QuestionId": "WebQTest-365",
    "RawQuestion": "what is there to do in peoria illinois?",
    "ProcessedQuestion": "what is there to do in peoria illinois",
    "Parses": [
      {
        "ParseId": "WebQTest-365.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sf9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sf9_ ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "peoria illinois",
        "TopicEntityName": "Peoria",
        "TopicEntityMid": "m.0sf9_",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025vxh4",
            "EntityName": "Peoria Civic Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qlj1w",
            "EntityName": "John C. Flanagan House Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mzskn",
            "EntityName": "Heart of Illinois Fair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vxv8f",
            "EntityName": "WeaverRidge Golf Club"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mxh89",
            "EntityName": "Lakeview Museum of Arts and Sciences"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zlj1p",
            "EntityName": "Par-A-Dice Hotel and Casino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067f5q",
            "EntityName": "Dozer Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08bsxj",
            "EntityName": "Wildlife Prairie State Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093pd6",
            "EntityName": "George L. Luthy Memorial Botanical Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cmd5ys",
            "EntityName": "Peoria Zoo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0sf9_": "Peoria"
    },
    "qid_topic_entity": {
      "Q233129": "Peoria"
    },
    "index": 787
  },
  {
    "QuestionId": "WebQTest-7",
    "RawQuestion": "where was george washington carver from?",
    "ProcessedQuestion": "where was george washington carver from",
    "Parses": [
      {
        "ParseId": "WebQTest-7.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03djm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03djm ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "george washington carver",
        "TopicEntityName": "George Washington Carver",
        "TopicEntityMid": "m.03djm",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xhsh",
            "EntityName": "Diamond"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03djm": "George Washington Carver"
    },
    "qid_topic_entity": {
      "Q296898": "George Washington Carver"
    },
    "index": 788
  },
  {
    "QuestionId": "WebQTest-1790",
    "RawQuestion": "where was huey newton killed?",
    "ProcessedQuestion": "where was huey newton killed",
    "Parses": [
      {
        "ParseId": "WebQTest-1790.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018y0w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018y0w ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "huey newton",
        "TopicEntityName": "Huey P. Newton",
        "TopicEntityMid": "m.018y0w",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dc95",
            "EntityName": "Oakland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.018y0w": "Huey P. Newton"
    },
    "qid_topic_entity": {
      "Q360570": "Huey P. Newton"
    },
    "index": 789
  },
  {
    "QuestionId": "WebQTest-1493",
    "RawQuestion": "what school did wilfred owen go to?",
    "ProcessedQuestion": "what school did wilfred owen go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1493.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ckwt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ckwt ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "wilfred owen",
        "TopicEntityName": "Wilfred Owen",
        "TopicEntityMid": "m.0ckwt",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02f46y",
            "EntityName": "University of Reading"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qjj55",
            "EntityName": "Wakeman School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ckwt": "Wilfred Owen"
    },
    "qid_topic_entity": {
      "Q212719": "Wilfred Owen"
    },
    "index": 790
  },
  {
    "QuestionId": "WebQTest-1782",
    "RawQuestion": "where does egypt export to?",
    "ProcessedQuestion": "where does egypt export to",
    "Parses": [
      {
        "ParseId": "WebQTest-1782.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.statistical_region.places_exported_to ?y .\n?y ns:location.imports_and_exports.exported_to ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.statistical_region.places_exported_to",
          "location.imports_and_exports.exported_to"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 791
  },
  {
    "QuestionId": "WebQTest-1913",
    "RawQuestion": "where did rob kardashian go to school?",
    "ProcessedQuestion": "where did rob kardashian go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-1913.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043n6dp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043n6dp ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "rob kardashian",
        "TopicEntityName": "Rob Kardashian",
        "TopicEntityMid": "m.043n6dp",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2qb",
            "EntityName": "USC Marshall School of Business"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.043n6dp": "Rob Kardashian"
    },
    "qid_topic_entity": {
      "Q26318": "Rob Kardashian"
    },
    "index": 792
  },
  {
    "QuestionId": "WebQTest-1821",
    "RawQuestion": "which countries have spanish as their main language?",
    "ProcessedQuestion": "which countries have spanish as their main language",
    "Parses": [
      {
        "ParseId": "WebQTest-1821.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06nm1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06nm1 ns:language.human_language.countries_spoken_in ?x .\n?x ns:location.country.official_language ns:m.06nm1 .\n}\n",
        "PotentialTopicEntityMention": "spanish",
        "TopicEntityName": "Spanish Language",
        "TopicEntityMid": "m.06nm1",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06nm1",
            "EntityName": "Spanish Language",
            "SourceNodeIndex": 0,
            "NodePredicate": "location.country.official_language",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165v",
            "EntityName": "Bolivia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wzw",
            "EntityName": "Peru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ls2",
            "EntityName": "Colombia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1v",
            "EntityName": "Chile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p8s",
            "EntityName": "Costa Rica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027rn",
            "EntityName": "Dominican Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k1b",
            "EntityName": "Ecuador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k8k",
            "EntityName": "El Salvador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kcz",
            "EntityName": "Equatorial Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345_",
            "EntityName": "Guatemala"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c74",
            "EntityName": "Nicaragua"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qx1",
            "EntityName": "Panama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v10",
            "EntityName": "Paraguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07twz",
            "EntityName": "Uruguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ylj",
            "EntityName": "Venezuela"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d04z6",
            "EntityName": "Cuba"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jgd",
            "EntityName": "Argentina"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06nm1": "Spanish Language"
    },
    "qid_topic_entity": {
      "Q1321": "Spanish Language"
    },
    "index": 793
  },
  {
    "QuestionId": "WebQTest-2009",
    "RawQuestion": "where does tim cook work?",
    "ProcessedQuestion": "where does tim cook work",
    "Parses": [
      {
        "ParseId": "WebQTest-2009.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r65m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r65m ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.company ?x .\n?y ns:business.employment_tenure.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "tim cook",
        "TopicEntityName": "Tim Cook",
        "TopicEntityMid": "m.05r65m",
        "InferentialChain": [
          "people.person.employment_history",
          "business.employment_tenure.company"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "business.employment_tenure.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k8z",
            "EntityName": "Apple Inc."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05r65m": "Tim Cook"
    },
    "qid_topic_entity": {
      "Q265852": "Tim Cook"
    },
    "index": 794
  },
  {
    "QuestionId": "WebQTest-1768",
    "RawQuestion": "what are the official languages of argentina?",
    "ProcessedQuestion": "what are the official languages of argentina",
    "Parses": [
      {
        "ParseId": "WebQTest-1768.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 795
  },
  {
    "QuestionId": "WebQTest-1089",
    "RawQuestion": "who played amy squirrel in bad teacher?",
    "ProcessedQuestion": "who played amy squirrel in bad teacher",
    "Parses": [
      {
        "ParseId": "WebQTest-1089.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cp0ph6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cp0ph6 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0glzmqc .\n}\n",
        "PotentialTopicEntityMention": "bad teacher",
        "TopicEntityName": "Bad Teacher",
        "TopicEntityMid": "m.0cp0ph6",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0glzmqc",
            "EntityName": "Amy Squirrel",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025__x2",
            "EntityName": "Lucy Punch"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cp0ph6": "Bad Teacher"
    },
    "qid_topic_entity": {
      "Q798797": "Bad Teacher"
    },
    "index": 796
  },
  {
    "QuestionId": "WebQTest-232",
    "RawQuestion": "what countries have spanish as the national language?",
    "ProcessedQuestion": "what countries have spanish as the national language",
    "Parses": [
      {
        "ParseId": "WebQTest-232.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06nm1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06nm1 ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "spanish",
        "TopicEntityName": "Spanish Language",
        "TopicEntityMid": "m.06nm1",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165v",
            "EntityName": "Bolivia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wzw",
            "EntityName": "Peru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ls2",
            "EntityName": "Colombia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p1v",
            "EntityName": "Chile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p8s",
            "EntityName": "Costa Rica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027rn",
            "EntityName": "Dominican Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k1b",
            "EntityName": "Ecuador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k8k",
            "EntityName": "El Salvador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kcz",
            "EntityName": "Equatorial Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02srrt",
            "EntityName": "Kingdom of Aragon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345_",
            "EntityName": "Guatemala"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05c74",
            "EntityName": "Nicaragua"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cnr",
            "EntityName": "Northern Mariana Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qx1",
            "EntityName": "Panama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v10",
            "EntityName": "Paraguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mkj",
            "EntityName": "Spain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07twz",
            "EntityName": "Uruguay"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ylj",
            "EntityName": "Venezuela"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.082qk",
            "EntityName": "Western Sahara"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b90_r",
            "EntityName": "Mexico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d04z6",
            "EntityName": "Cuba"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hbgh",
            "EntityName": "Cura\u00e7ao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hg5",
            "EntityName": "Andorra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jgd",
            "EntityName": "Argentina"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06nm1": "Spanish Language"
    },
    "qid_topic_entity": {
      "Q1321": "Spanish Language"
    },
    "index": 797
  },
  {
    "QuestionId": "WebQTest-904",
    "RawQuestion": "what state is barack obama from?",
    "ProcessedQuestion": "what state is barack obama from",
    "Parses": [
      {
        "ParseId": "WebQTest-904.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Longer chain. Original comment: F nested"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\tns:m.02mjmr ns:people.person.place_of_birth ?y .\n\t?y ns:location.location.containedby ?x .\n\t?x ns:common.topic.notable_types ns:m.0kpys4 .  #US State\n}",
        "PotentialTopicEntityMention": "barack obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gh4",
            "EntityName": "Hawaii"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 798
  },
  {
    "QuestionId": "WebQTest-666",
    "RawQuestion": "where is isthmus of panama located on the map?",
    "ProcessedQuestion": "where is isthmus of panama located on the map",
    "Parses": [
      {
        "ParseId": "WebQTest-666.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04zwft)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04zwft ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "isthmus of panama",
        "TopicEntityName": "Isthmus of Panama",
        "TopicEntityMid": "m.04zwft",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n3y",
            "EntityName": "South America"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04zwft": "Isthmus of Panama"
    },
    "qid_topic_entity": {
      "Q182139": "Isthmus of Panama"
    },
    "index": 799
  },
  {
    "QuestionId": "WebQTest-1453",
    "RawQuestion": "who is nick lachey married to?",
    "ProcessedQuestion": "who is nick lachey married to",
    "Parses": [
      {
        "ParseId": "WebQTest-1453.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039bpc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039bpc ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "nick lachey",
        "TopicEntityName": "Nick Lachey",
        "TopicEntityMid": "m.039bpc",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.063yvp",
            "EntityName": "Vanessa Lachey"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.039bpc": "Nick Lachey"
    },
    "qid_topic_entity": {
      "Q356109": "Nick Lachey"
    },
    "index": 800
  },
  {
    "QuestionId": "WebQTest-19",
    "RawQuestion": "what is my timezone in louisiana?",
    "ProcessedQuestion": "what is my timezone in louisiana",
    "Parses": [
      {
        "ParseId": "WebQTest-19.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04ly1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04ly1 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "louisiana",
        "TopicEntityName": "Louisiana",
        "TopicEntityMid": "m.04ly1",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04ly1": "Louisiana"
    },
    "qid_topic_entity": {
      "Q1588": "Louisiana"
    },
    "index": 801
  },
  {
    "QuestionId": "WebQTest-6",
    "RawQuestion": "where is jamarcus russell from?",
    "ProcessedQuestion": "where is jamarcus russell from",
    "Parses": [
      {
        "ParseId": "WebQTest-6.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cjcdj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cjcdj ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "jamarcus russell",
        "TopicEntityName": "JaMarcus Russell",
        "TopicEntityMid": "m.0cjcdj",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.058cm",
            "EntityName": "Mobile"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cjcdj": "JaMarcus Russell"
    },
    "qid_topic_entity": {
      "Q1676743": "JaMarcus Russell"
    },
    "index": 802
  },
  {
    "QuestionId": "WebQTest-583",
    "RawQuestion": "what school did martin luther king jr received his doctorate degree from?",
    "ProcessedQuestion": "what school did martin luther king jr received his doctorate degree from",
    "Parses": [
      {
        "ParseId": "WebQTest-583.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.04zx3q1 .\n}\n",
        "PotentialTopicEntityMention": "martin luther king jr",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04zx3q1",
            "EntityName": "PhD",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gl5_",
            "EntityName": "Boston University"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 803
  },
  {
    "QuestionId": "WebQTest-1760",
    "RawQuestion": "who plays ziva david on ncis?",
    "ProcessedQuestion": "who plays ziva david on ncis",
    "Parses": [
      {
        "ParseId": "WebQTest-1760.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.093xn8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.093xn8 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.03m8sg .\n}\n",
        "PotentialTopicEntityMention": "ziva david",
        "TopicEntityName": "Mossad Agent Ziva David",
        "TopicEntityMid": "m.093xn8",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03m8sg",
            "EntityName": "NCIS",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cpd76",
            "EntityName": "Cote de Pablo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.093xn8": "Mossad Agent Ziva David"
    },
    "qid_topic_entity": {
      "Q839093": "Mossad Agent Ziva David"
    },
    "index": 804
  },
  {
    "QuestionId": "WebQTest-215",
    "RawQuestion": "where was elvis costello born?",
    "ProcessedQuestion": "where was elvis costello born",
    "Parses": [
      {
        "ParseId": "WebQTest-215.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02vr7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02vr7 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "elvis costello",
        "TopicEntityName": "Elvis Costello",
        "TopicEntityMid": "m.02vr7",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nbrp",
            "EntityName": "Paddington"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02vr7": "Elvis Costello"
    },
    "qid_topic_entity": {
      "Q206939": "Elvis Costello"
    },
    "index": 805
  },
  {
    "QuestionId": "WebQTest-1829",
    "RawQuestion": "what type of religion did massachusetts have?",
    "ProcessedQuestion": "what type of religion did massachusetts have",
    "Parses": [
      {
        "ParseId": "WebQTest-1829.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05k7sb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05k7sb ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "massachusetts",
        "TopicEntityName": "Massachusetts",
        "TopicEntityMid": "m.05k7sb",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019cr",
            "EntityName": "Baptists"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lp8",
            "EntityName": "Christianity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01s5nb",
            "EntityName": "United Church of Christ"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021_0p",
            "EntityName": "Churches of Christ"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rsw",
            "EntityName": "Episcopal Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_gx",
            "EntityName": "Judaism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pk9",
            "EntityName": "Lutheranism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051kv",
            "EntityName": "Methodism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sfs",
            "EntityName": "Protestantism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05w5d",
            "EntityName": "Pentecostalism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0631_",
            "EntityName": "Presbyterianism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.092bf5",
            "EntityName": "Buddhism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dtdq",
            "EntityName": "Jehovah's Witnesses"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05k7sb": "Massachusetts"
    },
    "qid_topic_entity": {
      "Q771": "Massachusetts"
    },
    "index": 806
  },
  {
    "QuestionId": "WebQTest-1880",
    "RawQuestion": "who is my representative in illinois house?",
    "ProcessedQuestion": "who is my representative in illinois house",
    "Parses": [
      {
        "ParseId": "WebQTest-1880.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? \"my representative\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03j8g1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03j8g1 ns:government.governmental_body.members ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "illinois house",
        "TopicEntityName": "Illinois House of Representatives",
        "TopicEntityMid": "m.03j8g1",
        "InferentialChain": [
          "government.governmental_body.members",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0102ldy5",
            "EntityName": "Terry Deering"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0105s6hr",
            "EntityName": "Anna Moeller"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0128186x",
            "EntityName": "Robert W. McCarthy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01281c93",
            "EntityName": "Harber H. Hall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012j2m79",
            "EntityName": "Ralph C. Capparelli"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012j2nvc",
            "EntityName": "Bruce L. Douglas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012j2rng",
            "EntityName": "Bradley M. Glass"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012j2s0k",
            "EntityName": "Bernard B. Wolfe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012j2y3j",
            "EntityName": "Daniel M. Pierce"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012kc8bx",
            "EntityName": "James T. Londrigan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012kczhw",
            "EntityName": "Tobias Barry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w7qby",
            "EntityName": "Tom Cross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dsb8fw",
            "EntityName": "Wayne Rosenthal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhqr_y",
            "EntityName": "Ann Williams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lq0c4x",
            "EntityName": "Adam Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpjdpn",
            "EntityName": "Thaddeus Jones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wxs6vt",
            "EntityName": "John D. Anthony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wxvvxx",
            "EntityName": "David Harris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm_9br",
            "EntityName": "Josh Harms"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ztkk62",
            "EntityName": "Art Turner"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03j8g1": "Illinois House of Representatives"
    },
    "qid_topic_entity": {
      "Q908954": "Illinois House of Representatives"
    },
    "index": 807
  },
  {
    "QuestionId": "WebQTest-1876",
    "RawQuestion": "what language did the ancient babylonians speak?",
    "ProcessedQuestion": "what language did the ancient babylonians speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1876.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cn3b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cn3b ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "babylonians",
        "TopicEntityName": "Babylonia",
        "TopicEntityMid": "m.0cn3b",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dc0d",
            "EntityName": "Akkadian language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1876.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cyh ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "babylonians",
        "TopicEntityName": "Babylon",
        "TopicEntityMid": "m.01cyh",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dc0d",
            "EntityName": "Akkadian language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cn3b": "Babylonia",
      "m.01cyh": "Babylon"
    },
    "qid_topic_entity": {
      "Q47690": "Babylonia",
      "Q5684": "Babylon"
    },
    "index": 808
  },
  {
    "QuestionId": "WebQTest-1030",
    "RawQuestion": "what are italians classified as?",
    "ProcessedQuestion": "what are italians classified as",
    "Parses": [
      {
        "ParseId": "WebQTest-1030.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0222qb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0222qb ns:people.ethnicity.included_in_group ?x .\n}\n",
        "PotentialTopicEntityMention": "italians",
        "TopicEntityName": "Italian people",
        "TopicEntityMid": "m.0222qb",
        "InferentialChain": [
          "people.ethnicity.included_in_group"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rkmh",
            "EntityName": "Latin European peoples"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043_yvy",
            "EntityName": "Europeans"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0222qb": "Italian people"
    },
    "qid_topic_entity": {
      "Q50001": "Italian people"
    },
    "index": 809
  },
  {
    "QuestionId": "WebQTest-267",
    "RawQuestion": "where was martin luther king jr raised?",
    "ProcessedQuestion": "where was martin luther king jr raised",
    "Parses": [
      {
        "ParseId": "WebQTest-267.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? raised = birthplace"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "martin luther king jr",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013yq",
            "EntityName": "Atlanta"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 810
  },
  {
    "QuestionId": "WebQTest-1886",
    "RawQuestion": "what inventions were made by ben franklin?",
    "ProcessedQuestion": "what inventions were made by ben franklin",
    "Parses": [
      {
        "ParseId": "WebQTest-1886.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "ben franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135nr",
            "EntityName": "Lightning rod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013cqs",
            "EntityName": "Bifocals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zh8g",
            "EntityName": "Glass harmonica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029mmz",
            "EntityName": "Franklin stove"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 811
  },
  {
    "QuestionId": "WebQTest-225",
    "RawQuestion": "what state is mount st. helens in?",
    "ProcessedQuestion": "what state is mount st. helens in",
    "Parses": [
      {
        "ParseId": "WebQTest-225.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094xz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094xz ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "PotentialTopicEntityMention": "mount st . helens",
        "TopicEntityName": "Mount St. Helens",
        "TopicEntityMid": "m.094xz",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpys4",
            "EntityName": "US State",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081yw",
            "EntityName": "Washington"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.094xz": "Mount St. Helens"
    },
    "qid_topic_entity": {
      "Q4675": "Mount St. Helens"
    },
    "index": 812
  },
  {
    "QuestionId": "WebQTest-1077",
    "RawQuestion": "what language do the russian speak?",
    "ProcessedQuestion": "what language do the russian speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1077.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "russian",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017dsl",
            "EntityName": "Osetin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0198z0",
            "EntityName": "Chechen Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019yz7",
            "EntityName": "Tatar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bcw_",
            "EntityName": "Azerbaijani language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyqy",
            "EntityName": "Abaza Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y_vl",
            "EntityName": "Mari language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020g7w",
            "EntityName": "Bashkir Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0234zj",
            "EntityName": "Avar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264gxt",
            "EntityName": "Aghul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bj_4",
            "EntityName": "Tsakhur Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gj5b",
            "EntityName": "Tuvin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwm9x",
            "EntityName": "Moksha Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lpht",
            "EntityName": "Erzya Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mj1c",
            "EntityName": "Kalmyk-Oirat Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mxzf",
            "EntityName": "Kabardian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nbbh",
            "EntityName": "Adyghe Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q4t0g",
            "EntityName": "Rutul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x9lm",
            "EntityName": "Lezgi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037lmh",
            "EntityName": "Ingush Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037nfm",
            "EntityName": "Altai language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f3f1",
            "EntityName": "Crimean Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gn_0",
            "EntityName": "Nogai Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03klw8",
            "EntityName": "Dargwa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wt_j",
            "EntityName": "Komi language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049jrm",
            "EntityName": "Udmurt Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rxz0",
            "EntityName": "Kumyk Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xqkr",
            "EntityName": "Karachay-Balkar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054zyh",
            "EntityName": "Buryat language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l6md",
            "EntityName": "Yakut Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bw_x",
            "EntityName": "Tabassaran Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0880p",
            "EntityName": "Yiddish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.091dr6",
            "EntityName": "Lak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093gjw",
            "EntityName": "Khakas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjk9",
            "EntityName": "Ukrainian Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1077.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "russian",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 813
  },
  {
    "QuestionId": "WebQTest-1148",
    "RawQuestion": "what college did se hinton go?",
    "ProcessedQuestion": "what college did se hinton go",
    "Parses": [
      {
        "ParseId": "WebQTest-1148.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_fz1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_fz1 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "se hinton",
        "TopicEntityName": "S. E. Hinton",
        "TopicEntityMid": "m.01_fz1",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07w3r",
            "EntityName": "University of Tulsa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01_fz1": "S. E. Hinton"
    },
    "qid_topic_entity": {
      "Q117425": "S. E. Hinton"
    },
    "index": 814
  },
  {
    "QuestionId": "WebQTest-1735",
    "RawQuestion": "where do most of the people live in russia?",
    "ProcessedQuestion": "where do most of the people live in russia",
    "Parses": [
      {
        "ParseId": "WebQTest-1735.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.location.contains ?x .\n?x ns:topic_server.population_number ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "topic_server.population_number",
          "ValueType": "Number"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wr92",
            "EntityName": "Central Federal District"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 815
  },
  {
    "QuestionId": "WebQTest-197",
    "RawQuestion": "what places make up new england?",
    "ProcessedQuestion": "what places make up new england",
    "Parses": [
      {
        "ParseId": "WebQTest-197.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029jpy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029jpy ns:location.location.contains ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"State\")\n}\n",
        "PotentialTopicEntityMention": "new england",
        "TopicEntityName": "New England",
        "TopicEntityMid": "m.029jpy",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "State",
            "EntityName": null,
            "SourceNodeIndex": 0,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x73",
            "EntityName": "Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050ks",
            "EntityName": "Maine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059f4",
            "EntityName": "New Hampshire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k7sb",
            "EntityName": "Massachusetts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06btq",
            "EntityName": "Rhode Island"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_f2",
            "EntityName": "Vermont"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.029jpy": "New England"
    },
    "qid_topic_entity": {
      "Q18389": "New England"
    },
    "index": 816
  },
  {
    "QuestionId": "WebQTest-252",
    "RawQuestion": "where was benjamin franklin educated?",
    "ProcessedQuestion": "where was benjamin franklin educated",
    "Parses": [
      {
        "ParseId": "WebQTest-252.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "benjamin franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02kj7g",
            "EntityName": "Boston Latin School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 817
  },
  {
    "QuestionId": "WebQTest-1678",
    "RawQuestion": "what country did the battle of san juan hill take place?",
    "ProcessedQuestion": "what country did the battle of san juan hill take place",
    "Parses": [
      {
        "ParseId": "WebQTest-1678.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tf88)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tf88 ns:time.event.locations ?x .\n}\n",
        "PotentialTopicEntityMention": "battle of san juan hill",
        "TopicEntityName": "Battle of San Juan Hill",
        "TopicEntityMid": "m.01tf88",
        "InferentialChain": [
          "time.event.locations"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j4rs",
            "EntityName": "Santiago de Cuba"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01tf88": "Battle of San Juan Hill"
    },
    "qid_topic_entity": {
      "Q1215310": "Battle of San Juan Hill"
    },
    "index": 818
  },
  {
    "QuestionId": "WebQTest-270",
    "RawQuestion": "what kind of monarchy does japan have?",
    "ProcessedQuestion": "what kind of monarchy does japan have",
    "Parses": [
      {
        "ParseId": "WebQTest-270.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "japan",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 819
  },
  {
    "QuestionId": "WebQTest-744",
    "RawQuestion": "who was tupac signed to?",
    "ProcessedQuestion": "who was tupac signed to",
    "Parses": [
      {
        "ParseId": "WebQTest-744.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:music.artist.label ?x .\n}\n",
        "PotentialTopicEntityMention": "tupac",
        "TopicEntityName": "Tupac Shakur",
        "TopicEntityMid": "m.07pzc",
        "InferentialChain": [
          "music.artist.label"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n2m6",
            "EntityName": "Death Row Records"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01trtc",
            "EntityName": "Interscope Records"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076702",
            "EntityName": "Amaru Entertainment"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07pzc": "Tupac Shakur"
    },
    "qid_topic_entity": {
      "Q6107": "Tupac Shakur"
    },
    "index": 820
  },
  {
    "QuestionId": "WebQTest-432",
    "RawQuestion": "who did annie oakley married?",
    "ProcessedQuestion": "who did annie oakley married",
    "Parses": [
      {
        "ParseId": "WebQTest-432.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0237np)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0237np ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "annie oakley",
        "TopicEntityName": "Annie Oakley",
        "TopicEntityMid": "m.0237np",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zqpqq",
            "EntityName": "Frank E. Butler"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0237np": "Annie Oakley"
    },
    "qid_topic_entity": {
      "Q230935": "Annie Oakley"
    },
    "index": 821
  },
  {
    "QuestionId": "WebQTest-1199",
    "RawQuestion": "what does kim kardashian work as?",
    "ProcessedQuestion": "what does kim kardashian work as",
    "Parses": [
      {
        "ParseId": "WebQTest-1199.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261x8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261x8t ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "kim kardashian",
        "TopicEntityName": "Kim Kardashian",
        "TopicEntityMid": "m.0261x8t",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012t_z",
            "EntityName": "Businessperson"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hqyhw",
            "EntityName": "Fashion designer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gjzk",
            "EntityName": "Television producer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gkb0",
            "EntityName": "Socialite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09x_r",
            "EntityName": "Entrepreneur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d1pc",
            "EntityName": "Model"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dypbr",
            "EntityName": "TV Personality"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0261x8t": "Kim Kardashian"
    },
    "qid_topic_entity": {
      "Q186304": "Kim Kardashian"
    },
    "index": 822
  },
  {
    "QuestionId": "WebQTest-887",
    "RawQuestion": "what high school did maya angelou go to?",
    "ProcessedQuestion": "what high school did maya angelou go to",
    "Parses": [
      {
        "ParseId": "WebQTest-887.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01q9b9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01q9b9 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.0bpgx .\n}\n",
        "PotentialTopicEntityMention": "maya angelou",
        "TopicEntityName": "Maya Angelou",
        "TopicEntityMid": "m.01q9b9",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0bpgx",
            "EntityName": "High school",
            "SourceNodeIndex": 0,
            "NodePredicate": "education.education.degree",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kldk",
            "EntityName": "George Washington High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01q9b9": "Maya Angelou"
    },
    "qid_topic_entity": {
      "Q19526": "Maya Angelou"
    },
    "index": 823
  },
  {
    "QuestionId": "WebQTest-62",
    "RawQuestion": "what was jesse james killed with?",
    "ProcessedQuestion": "what was jesse james killed with",
    "Parses": [
      {
        "ParseId": "WebQTest-62.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02khkd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02khkd ns:people.deceased_person.cause_of_death ?x .\n?x ns:freebase.linguistic_hint.subject_form ?sk0 .\nFILTER (str(?sk0) = \"Firearms\")\n}\n",
        "PotentialTopicEntityMention": "jesse james",
        "TopicEntityName": "Jesse James",
        "TopicEntityMid": "m.02khkd",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "Firearms",
            "EntityName": null,
            "SourceNodeIndex": 0,
            "NodePredicate": "freebase.linguistic_hint.subject_form",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034qg",
            "EntityName": "Firearm"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02khkd": "Jesse James"
    },
    "qid_topic_entity": {
      "Q213626": "Jesse James"
    },
    "index": 824
  },
  {
    "QuestionId": "WebQTest-303",
    "RawQuestion": "where did margaret hoover go to college?",
    "ProcessedQuestion": "where did margaret hoover go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-303.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m6921)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m6921 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "margaret hoover",
        "TopicEntityName": "Margaret Hoover",
        "TopicEntityMid": "m.03m6921",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g7_r",
            "EntityName": "Bryn Mawr College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pdhz",
            "EntityName": "Davidson College"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03m6921": "Margaret Hoover"
    },
    "qid_topic_entity": {
      "Q6759529": "Margaret Hoover"
    },
    "index": 825
  },
  {
    "QuestionId": "WebQTest-1459",
    "RawQuestion": "what are some books that mark twain wrote?",
    "ProcessedQuestion": "what are some books that mark twain wrote",
    "Parses": [
      {
        "ParseId": "WebQTest-1459.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014635)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014635 ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "mark twain",
        "TopicEntityName": "Mark Twain",
        "TopicEntityMid": "m.014635",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__sd",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__sw",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__t3",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__tc",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__tm",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__tw",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__v3",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__vc",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__vm",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__w3",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__wm",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t__y0",
            "EntityName": "The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_17f",
            "EntityName": "The Adventures of Tom Sawyer (Puffin Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_17p",
            "EntityName": "Adventures of Tom Sawyer (New Windmill)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_195",
            "EntityName": "Adventures of Tom Sawyer (Children's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_19g",
            "EntityName": "Adventures of Tom Sawyer (Streamline Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1b5",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1bn",
            "EntityName": "Adventures of Tom Sawyer (Progress English)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1by",
            "EntityName": "Adventures of Tom Sawyer (Classic Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1c5",
            "EntityName": "Adventures of Tom Sawyer (Ec04)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1cf",
            "EntityName": "Adventures Of Tom Sawyer (Whole Story)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1cp",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1d4",
            "EntityName": "Adventures of Tom Sawyer, The (Classic Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1dd",
            "EntityName": "Adventures of Tom Sawyer (Dramascripts)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1dn",
            "EntityName": "Adventures of Tom Sawyer (Penguin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1f4",
            "EntityName": "Adventures of Tom Sawyer and Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1fw",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1gb",
            "EntityName": "Adventures of Tom Sawyer (Saddleback Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1gm",
            "EntityName": "The adventures of Tom Sawyer ; Tom Sawyer abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_1hk",
            "EntityName": "Adventures of Tom Sawyer (Dramascripts)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_41v",
            "EntityName": "The Adventures of Tom Sawyer and The Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_43n",
            "EntityName": "Adventures of Tom Sawyer GB"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_5p_",
            "EntityName": "Adventures of Tom Sawyer (Oxford Progressive English Readers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_5pr",
            "EntityName": "The Adventures of Tom Sawyer Adventure Classic (Adventure Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_5qj",
            "EntityName": "Adventures of Tom Sawyer Promo (Action Packs)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7jb",
            "EntityName": "The Adventures of Tom Sawyer (The Classic Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7jl",
            "EntityName": "Adventures of Tom Sawyer (Longman Simplified English Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7jw",
            "EntityName": "The Adventures of Tom Sawyer - Literary Touchstone Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7k3",
            "EntityName": "Adventures of Tom Sawyer - Huckleberry Finn (Classic Compendium)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7kd",
            "EntityName": "Adventures of Tom Sawyer (Children's Illustrated Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7kp",
            "EntityName": "Adventures of Tom Sawyer (Webster's Korean Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7kz",
            "EntityName": "Adventures of Tom Sawyer (Everyman's Classics S.)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7l6",
            "EntityName": "Adventures of Tom Sawyer (Modern Library Classics (Sagebrush))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7lg",
            "EntityName": "Adventures of Tom Sawyer (Deluxe Watermill Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7lq",
            "EntityName": "Adventures of Tom Sawyer (Cassette Sac 967)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7lz",
            "EntityName": "Adventures of Tom Sawyer (Family Classics Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_7mq",
            "EntityName": "Adventures of Tom Sawyer (08454) (Deans Childrens Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9dn",
            "EntityName": "The Adventures of Tom Sawyer and The Adventures of Huckleberry Finn (Signet Classical Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9fz",
            "EntityName": "The Adventures of Tom Sawyer and The Adventures of Huckleberry Finn (Everyman's Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9g6",
            "EntityName": "The Adventures of Tom Sawyer and The Adventures of Huckleberry Finn (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9gg",
            "EntityName": "The adventures of Tom Sawyer ; The adventures of Huckleberry Finn ; The prince and the pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9gy",
            "EntityName": "The Adventures of Tom Sawyer and The Adventures of Huckleberry Finn (Everyman Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9h5",
            "EntityName": "The Adventures of Tom Sawyer and the Adventures of Huckleberry Finn (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9hf",
            "EntityName": "The Adventures of Tom Sawyer With Audio CD (Hear It Read It)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9hr",
            "EntityName": "The Adventures of Tom Sawyer, (Classic Books on CDs) [UNABRIDGED] (Classic Books on CD)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9r6",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9rg",
            "EntityName": "Tom Sawyer abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9ry",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9s6",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9sh",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9ss",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9t1",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9tb",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9tl",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9tv",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9vl",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9vw",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_9x1",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_b9v",
            "EntityName": "Adventures of Tom Sawyer. Adventure stories typically. Prince and pauper. Stories"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_bb3",
            "EntityName": "Adventures of Tom Sawyer & Huck Finn Collector's Library Volume I (Collector's Library of Classics, Volume 1)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_bbm",
            "EntityName": "Adventures of Tom Sawyer (Episodes from/Cdl 51205)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_bc9",
            "EntityName": "The Adventures of Tom Sawyer, 1876 (IN RUSSIAN LANGUAGE) / (Las aventuras de Tom Sawyer / les Aventures de Tom Sawyer / Die Abenteuer des Tom Sawyer)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_bcl",
            "EntityName": "The adventures of Tom Sawyer ; The adventures of Huckleberry Finn ; The prince and the pauper ; Pudd'nhead Wilson ; Short stories ; A Connecticut Yankee at King Arthur's court"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cgb",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cgm",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cgx",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ch4",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_chw",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cj_",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cj4",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cjf",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cjq",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ck8",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ckj",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ckt",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cmr",
            "EntityName": "A Connecticut Yankee in King Arthur's Court Readalong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cn0",
            "EntityName": "A Connecticut Yankee in King Arthur's Court (Classics Read By Celebrities Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cnp",
            "EntityName": "A Connecticut Yankee in King Arthur's Court"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cnz",
            "EntityName": "A Connecticut Yankee in King Arthur's Court (Penguin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cp_",
            "EntityName": "A Connecticut Yankee in King Arthur's Court"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cp6",
            "EntityName": "A Connecticut Yankee in King Arthur's Court, Set"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cpr",
            "EntityName": "A Connecticut Yankee in King Arthur's Court (Tor Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cq7",
            "EntityName": "A Connecticut Yankee in King Arthur's Court"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cqh",
            "EntityName": "A Connecticut Yankee in King Arthur's Court (Enriched Classics Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_cqr",
            "EntityName": "A Connecticut Yankee in King Arthur's Court, 1889 (novel) (IN RUSSIAN LANGUAGE) / (Ein Yankee am Hofe des K\u00f6nig Artus / Janki iz Konnektikuta pri dvore korolja Artura)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_f8k",
            "EntityName": "Tom Sawyer Abroad (Penguin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_f9k",
            "EntityName": "Tom Sawyer abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_fbh",
            "EntityName": "Tom Sawyer Abroad (Watermill Classics Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_fbr",
            "EntityName": "Tom Sawyer Abroad (Tor Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_fc7",
            "EntityName": "Tom Sawyer Abroad (Watermill Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ft_",
            "EntityName": "Tom Sawyer Abroad (1894) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_fv7",
            "EntityName": "Tom Sawyer Abroad (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_fvj",
            "EntityName": "Tom Sawyer Abroad (The Works Of Mark Twain - 25 Volumes - Author's National Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gsc",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gsm",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gsw",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gt_",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gt4",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gtf",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gtq",
            "EntityName": "Tom Sawyer - Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gv8",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gvj",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gvs",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gw1",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gwb",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gwl",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gwv",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gx3",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_gxd",
            "EntityName": "Tom Sawyer Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jsg",
            "EntityName": "Tom Sawyer, Detective (Hesperus Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jt_",
            "EntityName": "Tom Sawyer, detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jvg",
            "EntityName": "Tom Sawyer Detective (Watermill Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jwk",
            "EntityName": "Tom Sawyer, Detective (Tor Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_jwt",
            "EntityName": "Tom Sawyer Detective (Austral Juvenil)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_l8m",
            "EntityName": "Tom Sawyer, Detective (Dover Evergreen Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wlj",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wmk",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wn0",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wnh",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wnz",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wpf",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wpx",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wqc",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wqv",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wr9",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wrs",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ws7",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wsq",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wt5",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wv3",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wvv",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ww9",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_wwm",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z1s",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z27",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z2q",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z3n",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z3z",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z4f",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z4y",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z57",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z5q",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z65",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_z6n",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_1p",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_24",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_2m",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_40",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_4h",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tz_4z",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzt82",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzt8l",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzt9_",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzt91",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzt9j",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztbz",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztcf",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztcx",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztdc",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztdv",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztf9",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztfs",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztgh",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztgz",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzthf",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvt_",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvtj",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvvx",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvwc",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvwv",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvxs",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzvy2",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy65",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy6y",
            "EntityName": "The adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy76",
            "EntityName": "The Adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy7g",
            "EntityName": "Adventures of Tom Sawyer (Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy7q",
            "EntityName": "The Adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy87",
            "EntityName": "The Adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy8j",
            "EntityName": "The Adventures Of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy8t",
            "EntityName": "Adventures of Tom Sawyer (Fiction)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy92",
            "EntityName": "The Adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy9b",
            "EntityName": "Adventures of Tom Sawyer, The"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzy9l",
            "EntityName": "Adventures of Tom Sawyer, The"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzyb2",
            "EntityName": "The Adventures of Tom Sawyer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01_d",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01_w",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01xb",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01xt",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01y8",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01yr",
            "EntityName": "Adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01z6",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01zy",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03w9",
            "EntityName": "The Adventures of Huckleberry Finn (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03x2",
            "EntityName": "The Adventures of Huckleberry Finn (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03xb",
            "EntityName": "The adventures of Huckleberry Finn (Tom Sawyer's comrade)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03xt",
            "EntityName": "The adventures of Huckleberry Finn (Tom Sawyer's comrade)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03zz",
            "EntityName": "The adventures of Huckleberry Finn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v05m2",
            "EntityName": "Adventures of Huckleberry Finn (Tom Sawyer's comrade)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v05mk",
            "EntityName": "Adventures of Huckleberry Finn (Tom Sawyer's comrade)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v05mw",
            "EntityName": "The Adventures of Huckleberry Finn, Complete (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v05n4",
            "EntityName": "Adventures of Huckleberry Finn (Illustrated Edition) (Dodo Press)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v05nf",
            "EntityName": "The Adventures of Huckleberry Finn CD set (Cambridge Literature)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07_0",
            "EntityName": "Adventures of Huckleberry Finn With Reader's Guide (Amsco Literature Program Series Grade 7 12, R 120 ALP)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07_k",
            "EntityName": "Adventures of Huckleberry Finn (Tom Sawyer's comrade)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07zj",
            "EntityName": "Adventures of Huckleberry Finn/Tom Sawyer (Junior Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07zs",
            "EntityName": "Adventures of Huckleberry Finn (1885) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v080s",
            "EntityName": "Adventures of Huckleberry Finn With Reader's Guide (Amsco Literature Program Series Grade 7-12)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0gdl",
            "EntityName": "Life on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0gfl",
            "EntityName": "Life on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0gg9",
            "EntityName": "Life on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0ggs",
            "EntityName": "Life on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0ghh",
            "EntityName": "Life on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0gj1",
            "EntityName": "Life on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12kg",
            "EntityName": "Sketches New and Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12l8",
            "EntityName": "Sketches New and Old (Complete)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12lk",
            "EntityName": "Sketches New And Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12lv",
            "EntityName": "Sketches, new and old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12m9",
            "EntityName": "Sketches New and Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12ml",
            "EntityName": "Sketches New And Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12mv",
            "EntityName": "Sketches New and Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12n3",
            "EntityName": "Sketches New And Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12nd",
            "EntityName": "Sketches New and Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v12np",
            "EntityName": "Sketches New And Old"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v138g",
            "EntityName": "Sketches, New and Old (1875) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v139n",
            "EntityName": "Sketches New And Old (The Works Of Mark Twain - 25 Volumes - Author's National Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v156y",
            "EntityName": "How to tell a story, and other essays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v159t",
            "EntityName": "How to Tell a Story and Other Essays (1897) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mpk",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mq8",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mqr",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2ms0",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2ms9",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2msl",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2msw",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mt4",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mtd",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mtp",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mtz",
            "EntityName": "Christian Science"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2mwn",
            "EntityName": "Christian Science (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2nwy",
            "EntityName": "Christian Science (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2nxg",
            "EntityName": "Christian Science (1907) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t_6",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2t_p",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2txw",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tyb",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tyt",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tz8",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2tzr",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v04",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v0m",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v12",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v1k",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v20",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2v2h",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vm2",
            "EntityName": "Personal recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vmp",
            "EntityName": "Personal recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vn4",
            "EntityName": "Personal recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vnm",
            "EntityName": "Personal Recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vnx",
            "EntityName": "Personal Recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vp5",
            "EntityName": "Personal recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vpn",
            "EntityName": "Personal recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vq3",
            "EntityName": "Personal Recollections Of Joan Of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vqd",
            "EntityName": "Personal Recollections Of Joan Of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vqp",
            "EntityName": "Personal Recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vsc",
            "EntityName": "Personal Recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2vtl",
            "EntityName": "Personal Recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xbt",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xc8",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xcj",
            "EntityName": "The prince and the pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xdf",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xdp",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xml",
            "EntityName": "Personal recollections of Joan of Arc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xn1",
            "EntityName": "Personal Recollections of Joan of Arc (Complete)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xnm",
            "EntityName": "Personal Recollections of Joan of Arc Volume 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xnx",
            "EntityName": "Personal Recollections of Joan of Arc Volume 2 (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xq9",
            "EntityName": "Personal Recollections of Joan of Arc, V2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xql",
            "EntityName": "Personal Recollections of Joan of Arc Volume 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xr8",
            "EntityName": "Personal Recollections of Joan of Arc Volume 1 (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xrz",
            "EntityName": "Personal Recollections of Joan of Arc (1896) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zrc",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zrm",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zs4",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zsd",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zsp",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zsz",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zt7",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2ztj",
            "EntityName": "The Prince And the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2ztt",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zv1",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2zxw",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3093",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v309v",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30b3",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30bl",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30bv",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30c8",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30cj",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30cs",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30d1",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30db",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30dl",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30f2",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30fv",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v30g2",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v31_4",
            "EntityName": "The Prince and the Pauper (Webster's Italian Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v31_p",
            "EntityName": "The Prince and the Pauper (Dover Children's Thrift Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v31z3",
            "EntityName": "The Prince and the Pauper (New Method Supplementary Readers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3207",
            "EntityName": "The Prince and the Pauper (Webster's Chinese-Traditional Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v320j",
            "EntityName": "The Prince and the Pauper (Webster's Korean Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v321k",
            "EntityName": "The Prince and the Pauper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v321t",
            "EntityName": "The Prince and the Pauper (Webster's Chinese-Simplified Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fx9",
            "EntityName": "Letters from the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fxk",
            "EntityName": "Letters from the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fxt",
            "EntityName": "Letters from the earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fy3",
            "EntityName": "Letters from the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fyc",
            "EntityName": "Letters from the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fyx",
            "EntityName": "Letters from the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3fz4",
            "EntityName": "Letters from the Earth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3vt9",
            "EntityName": "Old Times on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3vtv",
            "EntityName": "Old Times On The Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3vvc",
            "EntityName": "Old Times on the Mississippi."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3vw5",
            "EntityName": "Old times on the Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v40f9",
            "EntityName": "1601"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v40fk",
            "EntityName": "1601"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v40fv",
            "EntityName": "1601"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44qq",
            "EntityName": "Following the equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44r9",
            "EntityName": "Following the Equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44rl",
            "EntityName": "Following the Equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44rw",
            "EntityName": "Following the Equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44sb",
            "EntityName": "Following the Equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44sn",
            "EntityName": "Following the Equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v44sx",
            "EntityName": "Following the Equator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45_2",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45_b",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45_t",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v459h",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v459r",
            "EntityName": "The mysterious stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45b_",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45b6",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45br",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45c_",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45c7",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45ch",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45cr",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45d8",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45dj",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45ds",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45f1",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45f9",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45fl",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45fv",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45hm",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45xx",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45yc",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45yv",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45zl",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v45zv",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v460j",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v460t",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v461m",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47_2",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47_b",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47_l",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v477_",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v477q",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v478j",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v479b",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v479l",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v479w",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47b4",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47bd",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47bz",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47ch",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47cs",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47db",
            "EntityName": "The Mysterious Stranger (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47dl",
            "EntityName": "The Mysterious Stranger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47xl",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47y4",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47yf",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47yp",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47z1",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47z9",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47zl",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v47zv",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v48_p",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4802",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v48yk",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v48yv",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v48zn",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v48zy",
            "EntityName": "A Tramp Abroad (Konemann Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49_4",
            "EntityName": "Roughing it."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49_d",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49_n",
            "EntityName": "Roughing it."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v490d",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v490z",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4917",
            "EntityName": "A Tramp Abroad (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v491j",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v491s",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4921",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v492b",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v493_",
            "EntityName": "A Tramp Abroad (1880) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4930",
            "EntityName": "A Tramp Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49hm",
            "EntityName": "The Mysterious Stranger (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49wm",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49x2",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49y2",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49yv",
            "EntityName": "Roughing it"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49zl",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v49zw",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4b03",
            "EntityName": "Roughing It"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4b21",
            "EntityName": "Roughing It (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4c8p",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4c94",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4c9d",
            "EntityName": "The innocents abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4c9w",
            "EntityName": "The innocents abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cbb",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cbm",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cc3",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4ccc",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4ccm",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4ccx",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cd5",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cdf",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cnv",
            "EntityName": "Roughing It (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cpb",
            "EntityName": "Roughing It (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cpl",
            "EntityName": "Roughing It (Centre for Editions of American Authors)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cpw",
            "EntityName": "Roughing It (Classics of the Old West)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cqd",
            "EntityName": "Roughing It (Konemann Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cqp",
            "EntityName": "Roughing It (1872) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cqy",
            "EntityName": "Roughing It (Works of Mark Twain, Volume One)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4cr6",
            "EntityName": "Roughing It (Mark Twain Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4crs",
            "EntityName": "Roughing It (Classics of the Old West)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4d_0",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4d_9",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4d_l",
            "EntityName": "The innocents abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4dxb",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4dxw",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4dy3",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4dz2",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4dzb",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4f_v",
            "EntityName": "The innocents abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g0d",
            "EntityName": "The Innocents Abroad (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g0n",
            "EntityName": "The innocents abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g0x",
            "EntityName": "The Innocents Abroad (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g1q",
            "EntityName": "The Innocents Abroad (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g1z",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g35",
            "EntityName": "The Innocents Abroad, vol. 1: The Authorized Uniform Edition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g3g",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4g3r",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4gvg",
            "EntityName": "The Innocents Abroad (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62_6",
            "EntityName": "The American claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62_p",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v62_z",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6307",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v630j",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v630s",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6311",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v631b",
            "EntityName": "American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v631m",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v631x",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6325",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v632y",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v633n",
            "EntityName": "The American Claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64cm",
            "EntityName": "The American claimant"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64cx",
            "EntityName": "The American Claimant (1896)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64d5",
            "EntityName": "The American Claimant (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64dg",
            "EntityName": "The American Claimant (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64dr",
            "EntityName": "The American Claimant (1896)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64g9",
            "EntityName": "American Claimant (Writings of Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v64rn",
            "EntityName": "The American Claimant (1892) (The Oxford Mark Twain)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqgs_",
            "EntityName": "The wit and wisdom of Mark Twain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqgth",
            "EntityName": "The wit and wisdom of Mark Twain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqgv4",
            "EntityName": "The wit and wisdom of Mark Twain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bqkhl",
            "EntityName": "The Innocents Abroad (1869) (The Oxford Mark Twain)"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1459.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014635)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014635 ns:book.book_subject.works ?x .\n}\n",
        "PotentialTopicEntityMention": "mark twain",
        "TopicEntityName": "Mark Twain",
        "TopicEntityMid": "m.014635",
        "InferentialChain": [
          "book.book_subject.works"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04042z9",
            "EntityName": "Wild Nights!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04pqwr",
            "EntityName": "The Innocents Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wx00",
            "EntityName": "Tom Sawyer, Detective"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0507mq",
            "EntityName": "Tom Sawyer Abroad"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bzb6",
            "EntityName": "Autobiography of Mark Twain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v7wt9",
            "EntityName": "Who Is Mark Twain?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05yxls7",
            "EntityName": "The Trouble Begins at 8: A Life of Mark Twain in the Wild, Wild West"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z39sg",
            "EntityName": "Ignorance, Confidence, and Filthy Rich Friends: The Business Adventures of Mark Twain, Chronic Speculator and Entrepreneur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.062pbx6",
            "EntityName": "Grant and Twain: The Story of a Friendship That Changed America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pftnw",
            "EntityName": "Life on the Mississippi"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.014635": "Mark Twain"
    },
    "qid_topic_entity": {
      "Q7245": "Mark Twain"
    },
    "index": 826
  },
  {
    "QuestionId": "WebQTest-1383",
    "RawQuestion": "what language does people in iceland speak?",
    "ProcessedQuestion": "what language does people in iceland speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1383.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rj0 ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "iceland",
        "TopicEntityName": "Iceland",
        "TopicEntityMid": "m.03rj0",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gmkg",
            "EntityName": "Icelandic Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1383.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rj0 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "iceland",
        "TopicEntityName": "Iceland",
        "TopicEntityMid": "m.03rj0",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gmkg",
            "EntityName": "Icelandic Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rj0": "Iceland"
    },
    "qid_topic_entity": {
      "Q189": "Iceland"
    },
    "index": 827
  },
  {
    "QuestionId": "WebQTest-1295",
    "RawQuestion": "what does matt damon play in?",
    "ProcessedQuestion": "what does matt damon play in",
    "Parses": [
      {
        "ParseId": "WebQTest-1295.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0169dl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0169dl ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "matt damon",
        "TopicEntityName": "Matt Damon",
        "TopicEntityMid": "m.0169dl",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01149vs4",
            "EntityName": "Extreme Realities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0114bqb3",
            "EntityName": "Judge Not: In Defense of Dogma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011ypx",
            "EntityName": "Good Will Hunting"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01295z79",
            "EntityName": "The Martian"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b195",
            "EntityName": "The Rainmaker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dw49",
            "EntityName": "Gerry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j5ql",
            "EntityName": "Courage Under Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01s1wm",
            "EntityName": "The Majestic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02b5wk",
            "EntityName": "EuroTrip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hvyj",
            "EntityName": "Mystic Pizza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mpyh",
            "EntityName": "The Talented Mr. Ripley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q88q8",
            "EntityName": "The Good Mother"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qzh2",
            "EntityName": "Jersey Girl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x3y41",
            "EntityName": "Green Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034c5l",
            "EntityName": "Spirit: Stallion of the Cimarron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037j_8",
            "EntityName": "Titan A.E."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03k8th",
            "EntityName": "The Bourne Supremacy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03qbfb",
            "EntityName": "Rounders"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03s6l2",
            "EntityName": "Confessions of a Dangerous Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03twd6",
            "EntityName": "The Bourne Identity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0418wg",
            "EntityName": "Ocean's Twelve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.043tz0c",
            "EntityName": "The Informant!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04dnhc_",
            "EntityName": "Howard Zinn: You Can\u00b4t Be Neutral on a Moving Train"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ldj71",
            "EntityName": "The People Speak"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t46v",
            "EntityName": "Finding Forrester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vr_f",
            "EntityName": "The Departed"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04z257",
            "EntityName": "The Brothers Grimm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04zm1f",
            "EntityName": "School Ties"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.057__d",
            "EntityName": "The Legend of Bagger Vance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.061681",
            "EntityName": "The Bourne Ultimatum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hq4s",
            "EntityName": "Stuck on You"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lsnn",
            "EntityName": "Glory Daze"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06z8s_",
            "EntityName": "Ocean's Eleven"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06zjsc_",
            "EntityName": "The Adjustment Bureau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_466",
            "EntityName": "Magnificent Desolation: Walking On The Moon 3D"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07024",
            "EntityName": "Saving Private Ryan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.078sj4",
            "EntityName": "Syriana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dtx3",
            "EntityName": "Push, Nevada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nxvj",
            "EntityName": "The Good Shepherd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07t7246",
            "EntityName": "The Good Old Boys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07yd9z",
            "EntityName": "The Third Wheel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07yk1xz",
            "EntityName": "Invictus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.095yw_",
            "EntityName": "Margaret"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gdh6k",
            "EntityName": "Hereafter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09rvvpm",
            "EntityName": "Happy Feet Two"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09xbpt",
            "EntityName": "Ocean's Thirteen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b_w98s",
            "EntityName": "Rising Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b73_1d",
            "EntityName": "True Grit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_3nd",
            "EntityName": "Geronimo: An American Legend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c030yv",
            "EntityName": "Inside Job"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cp1_1",
            "EntityName": "Che: Part Two"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw8cx",
            "EntityName": "Behind the Screens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctnxn",
            "EntityName": "All the Pretty Horses"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgnwwr",
            "EntityName": "Contagion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djb3zw",
            "EntityName": "Unauthorized: The Harvey Weinstein Project"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds_wq",
            "EntityName": "Youth Without Youth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds1glg",
            "EntityName": "We Bought a Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dvdmg",
            "EntityName": "Oh, What a Lovely Tea Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fkf28",
            "EntityName": "Interstellar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gd92",
            "EntityName": "Chasing Amy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gwm_wy",
            "EntityName": "Elysium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0mzjx5c",
            "EntityName": "Rounders 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n5tytm",
            "EntityName": "The Zero Theorem"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ndx3rt",
            "EntityName": "The Monuments Men"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0p9lw",
            "EntityName": "Dogma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd6bpq",
            "EntityName": "Promised Land"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0prrm",
            "EntityName": "Jay and Silent Bob Strike Back"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t51n95",
            "EntityName": "Behind the Candelabra"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v2vjxh",
            "EntityName": "The Great Wall"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0yzp8",
            "EntityName": "Field of Dreams"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0169dl": "Matt Damon"
    },
    "qid_topic_entity": {
      "Q175535": "Matt Damon"
    },
    "index": 828
  },
  {
    "QuestionId": "WebQTest-1542",
    "RawQuestion": "what school does james franco go to?",
    "ProcessedQuestion": "what school does james franco go to",
    "Parses": [
      {
        "ParseId": "WebQTest-1542.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bnp0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bnp0 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "james franco",
        "TopicEntityName": "James Franco",
        "TopicEntityMid": "m.05bnp0",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vg13",
            "EntityName": "Brooklyn College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025rrjh",
            "EntityName": "Columbia University School of the Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02s62q",
            "EntityName": "Rhode Island School of Design"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ysv6",
            "EntityName": "Warren Wilson College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04b_46",
            "EntityName": "Tisch School of the Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lh_5",
            "EntityName": "Palo Alto High School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08815",
            "EntityName": "University Yale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09f2j",
            "EntityName": "University of California, Los Angeles"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05bnp0": "James Franco"
    },
    "qid_topic_entity": {
      "Q306403": "James Franco"
    },
    "index": 829
  },
  {
    "QuestionId": "WebQTest-1630",
    "RawQuestion": "what inspired michael jackson to become a singer?",
    "ProcessedQuestion": "what inspired michael jackson to become a singer",
    "Parses": [
      {
        "ParseId": "WebQTest-1630.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:influence.influence_node.influenced_by ?x .\n}\n",
        "PotentialTopicEntityMention": "michael jackson",
        "TopicEntityName": "Michael Jackson",
        "TopicEntityMid": "m.09889g",
        "InferentialChain": [
          "influence.influence_node.influenced_by"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01b9db",
            "EntityName": "Redd Foxx"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lc5",
            "EntityName": "Charlie Chaplin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0407f",
            "EntityName": "James Brown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ct6p",
            "EntityName": "Nipsey Russell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.081nh",
            "EntityName": "Walt Disney"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09889g": "Michael Jackson"
    },
    "qid_topic_entity": {
      "Q2831": "Michael Jackson"
    },
    "index": 830
  },
  {
    "QuestionId": "WebQTest-1742",
    "RawQuestion": "what type of government japan have?",
    "ProcessedQuestion": "what type of government japan have",
    "Parses": [
      {
        "ParseId": "WebQTest-1742.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "japan",
        "TopicEntityName": "Japan",
        "TopicEntityMid": "m.03_3d",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_3d": "Japan"
    },
    "qid_topic_entity": {
      "Q17": "Japan"
    },
    "index": 831
  },
  {
    "QuestionId": "WebQTest-1314",
    "RawQuestion": "where should a family stay in paris?",
    "ProcessedQuestion": "where should a family stay in paris",
    "Parses": [
      {
        "ParseId": "WebQTest-1314.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:travel.travel_destination.accommodation ?x .\n}\n",
        "PotentialTopicEntityMention": "paris",
        "TopicEntityName": "Paris",
        "TopicEntityMid": "m.05qtj",
        "InferentialChain": [
          "travel.travel_destination.accommodation"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04fcxl",
            "EntityName": "H\u00f4tel de Crillon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.056n81",
            "EntityName": "H\u00f4tel Ritz Paris"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05qtj": "Paris"
    },
    "qid_topic_entity": {
      "Q90": "Paris"
    },
    "index": 832
  },
  {
    "QuestionId": "WebQTest-1827",
    "RawQuestion": "what can do in new york?",
    "ProcessedQuestion": "what can do in new york",
    "Parses": [
      {
        "ParseId": "WebQTest-1827.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "PotentialTopicEntityMention": "new york",
        "TopicEntityName": "New York City",
        "TopicEntityMid": "m.02_286",
        "InferentialChain": [
          "travel.travel_destination.tourist_attractions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_ymbw6",
            "EntityName": "Crocheron Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012vvtp_",
            "EntityName": "Travefy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0163ff",
            "EntityName": "Rockefeller Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019vsd",
            "EntityName": "United Nations Headquarters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kht3",
            "EntityName": "St. Patrick's Cathedral"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01lnd3",
            "EntityName": "Flatiron Building"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nbpn",
            "EntityName": "Little Italy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rs7b",
            "EntityName": "The Cloisters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rxnm",
            "EntityName": "Brooklyn Botanic Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rxr7",
            "EntityName": "Staten Island Ferry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rz3c",
            "EntityName": "Grand Central Terminal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zmd",
            "EntityName": "Chrysler Building"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021848",
            "EntityName": "Frick Collection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023r9j",
            "EntityName": "American Museum of Natural History"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026cv0z",
            "EntityName": "A.I.R. Gallery"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hjvb",
            "EntityName": "Darien Lake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nd_",
            "EntityName": "Empire State Building"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qz9w",
            "EntityName": "Freedomland U.S.A."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vz0kx",
            "EntityName": "Andrew Carnegie Mansion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z7b9_",
            "EntityName": "Louis Armstrong House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cfv35",
            "EntityName": "Headless Horseman Hayrides"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03vstx",
            "EntityName": "George Gustav Heye Center"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0403zkg",
            "EntityName": "Chelsea Art Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04053sn",
            "EntityName": "FusionArts Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.048ltn",
            "EntityName": "National Academy Museum and School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04h9fs",
            "EntityName": "Central Park Zoo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jpg0f",
            "EntityName": "Statue of Liberty National Monument"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q3k0p",
            "EntityName": "New York Public Library for the Performing Arts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q4sg",
            "EntityName": "Franklin D. Roosevelt Presidential Library and Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04sr12",
            "EntityName": "Battery Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051vfm",
            "EntityName": "American Folk Art Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051xk9",
            "EntityName": "International Center of Photography"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0537mx",
            "EntityName": "Morgan Library & Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05f80pd",
            "EntityName": "New York City Half Marathon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05t0ps",
            "EntityName": "Wave Hill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fybq",
            "EntityName": "Peking"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nhn3",
            "EntityName": "Japan Society of New York"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072p8",
            "EntityName": "Statue of Liberty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07jwwf",
            "EntityName": "High Line"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07qdr",
            "EntityName": "Times Square"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07trd0",
            "EntityName": "Theodore Roosevelt Birthplace National Historic Site"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0989yy",
            "EntityName": "Museum of Modern Art Department of Film"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7b",
            "EntityName": "Metropolitan Museum of Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7v",
            "EntityName": "Central Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09sg3h",
            "EntityName": "New York Aquarium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09sjx5",
            "EntityName": "Museum of Sex"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh8czr",
            "EntityName": "Gavin Brown's Enterprise"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0brl0p",
            "EntityName": "New York International Fringe Festival"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0by0zd5",
            "EntityName": "Felix M. Warburg House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bz7bg",
            "EntityName": "Broadway Theatre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c02dld",
            "EntityName": "Henry Clay Frick House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc65g0",
            "EntityName": "New York Mini 10K"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cv4c",
            "EntityName": "Brooklyn Bridge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gy74y",
            "EntityName": "Museum of Arts and Design"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hhjk",
            "EntityName": "Museum of Modern Art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j_66",
            "EntityName": "Madison Square Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j32d_5",
            "EntityName": "Solomon R. Guggenheim Museum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwvjyz",
            "EntityName": "Museum of Mathematics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwy_gm",
            "EntityName": "UAE Healthy Kidney 10K"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ll4_ht",
            "EntityName": "Tesla Science Center at Wardenclyffe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n5wy3b",
            "EntityName": "Imagination Playground at Burling Slip"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pnb8",
            "EntityName": "Chinatown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q9h2",
            "EntityName": "Solomon R. Guggenheim Museum"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_286": "New York City"
    },
    "qid_topic_entity": {
      "Q60": "New York City"
    },
    "index": 833
  },
  {
    "QuestionId": "WebQTest-168",
    "RawQuestion": "what document did james madison write?",
    "ProcessedQuestion": "what document did james madison write",
    "Parses": [
      {
        "ParseId": "WebQTest-168.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0424m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0424m ns:book.author.works_written ?x .\n}\n",
        "PotentialTopicEntityMention": "james madison",
        "TopicEntityName": "James Madison",
        "TopicEntityMid": "m.0424m",
        "InferentialChain": [
          "book.author.works_written"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.067vb8j",
            "EntityName": "The forging of American federalism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.068vl9d",
            "EntityName": "Jonathan Bull and Mary Bull"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06crwm8",
            "EntityName": "James Madison: Writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06cxcmz",
            "EntityName": "The complete Madison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06czk99",
            "EntityName": "Letters and other writings of James Madison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dp2p9",
            "EntityName": "Calendar of the correspondence of James Madison"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dzpv4",
            "EntityName": "The Papers of James Madison Congressional Series, Vol. 12: 2 October 1789 - 20 January 1790"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06rh5rn",
            "EntityName": "The Papers of James Madison, Vol. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dvb2",
            "EntityName": "Federalist No. 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07trmk",
            "EntityName": "Federalist No. 39"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ty1r",
            "EntityName": "Federalist No. 42"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vg3d",
            "EntityName": "Federalist No. 14"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vg5t",
            "EntityName": "Federalist No. 18"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vg64",
            "EntityName": "Federalist No. 19"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vg6h",
            "EntityName": "Federalist No. 20"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vgpd",
            "EntityName": "Federalist No. 51"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vgpr",
            "EntityName": "Federalist No. 63"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmf4",
            "EntityName": "Federalist No. 37"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmfv",
            "EntityName": "Federalist No. 38"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmgk",
            "EntityName": "Federalist No. 40"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmgx",
            "EntityName": "Federalist No. 41"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmhy",
            "EntityName": "Federalist No. 43"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmj8",
            "EntityName": "Federalist No. 44"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmjm",
            "EntityName": "Federalist No. 45"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmjz",
            "EntityName": "Federalist No. 47"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmkp",
            "EntityName": "Federalist No. 48"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vml0",
            "EntityName": "Federalist No. 46"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmmr",
            "EntityName": "Federalist No. 49"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmn2",
            "EntityName": "Federalist No. 50"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmnf",
            "EntityName": "Federalist No. 52"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmns",
            "EntityName": "Federalist No. 53"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmp3",
            "EntityName": "Federalist No. 54"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmpg",
            "EntityName": "Federalist No. 56"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmqj",
            "EntityName": "Federalist No. 55"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmrk",
            "EntityName": "Federalist No. 57"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vms7",
            "EntityName": "Federalist No. 58"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07vmtz",
            "EntityName": "Federalist No. 62"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bbhbct",
            "EntityName": "Religious freedom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzvs",
            "EntityName": "An address delivered before the Agricultural Society of Albemarle, on Tuesday, May 12, 1818"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzvy",
            "EntityName": "All impressments unlawful and inadmissible"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzw_",
            "EntityName": "President Madison's inaugural speech"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzw3",
            "EntityName": "Equal religious liberty stated and defended"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzw8",
            "EntityName": "An examination of the British doctrine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzwg",
            "EntityName": "An examination of the British doctrine, which subjects to capture a neutral trade, not open in time of peace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzwk",
            "EntityName": "Extract of a letter from the Secretary of State to Mr. Monroe, relative to impressments"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzwn",
            "EntityName": "Letters from the Secretary of State to Messrs. Monroe and Pinkney, on subjects committed to their joint negotiations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzws",
            "EntityName": "Letters from the Secretary of State to Mr. Monroe, on the subject of impressments, &c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzww",
            "EntityName": "Mr. Madison's motion for commercial restrictions"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzx4",
            "EntityName": "The reply of Mr. Madison, in answer to Mr. Rose, in discussing the affair of the Chesapeake"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqzxb",
            "EntityName": "Selections from the private correspondence of James Madison, from 1813 to 1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t4vr",
            "EntityName": "James Madison, 1751-1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t4vv",
            "EntityName": "The mind of the founder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t4vy",
            "EntityName": "Papers of James Madison Volume 10: May 27, 1787-March 3, 1788"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t4w0",
            "EntityName": "A vocabulary of New Jersey Delaware"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cmsl",
            "EntityName": "The Federalist Papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dz4phw",
            "EntityName": "The James Madison Papers, 1723 - 1836"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpq85q",
            "EntityName": "The Papers of James Madison Retirement Series, Volume 1: 4 March 1817-31 January 1820"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g38x",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g39x",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g3dq",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g3gq",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g3h9",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g3j8",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5g3kr",
            "EntityName": "The Papers of James Madison, Presidential Series Vol. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5js_7",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jsmt",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jt66",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jt8w",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jt9f",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jt9r",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jtc4",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jtdl",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5jtfx",
            "EntityName": "The Papers of James Madison, Secretary of State Series, Vol. 9"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0424m": "James Madison"
    },
    "qid_topic_entity": {
      "Q11813": "James Madison"
    },
    "index": 834
  },
  {
    "QuestionId": "WebQTest-916",
    "RawQuestion": "what is the language of russia s spoken?",
    "ProcessedQuestion": "what is the language of russia s spoken",
    "Parses": [
      {
        "ParseId": "WebQTest-916.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.017dsl",
            "EntityName": "Osetin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0198z0",
            "EntityName": "Chechen Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019yz7",
            "EntityName": "Tatar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bcw_",
            "EntityName": "Azerbaijani language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01qyqy",
            "EntityName": "Abaza Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01y_vl",
            "EntityName": "Mari language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020g7w",
            "EntityName": "Bashkir Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0234zj",
            "EntityName": "Avar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0264gxt",
            "EntityName": "Aghul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027bj_4",
            "EntityName": "Tsakhur Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gj5b",
            "EntityName": "Tuvin Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwm9x",
            "EntityName": "Moksha Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lpht",
            "EntityName": "Erzya Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mj1c",
            "EntityName": "Kalmyk-Oirat Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mxzf",
            "EntityName": "Kabardian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nbbh",
            "EntityName": "Adyghe Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q4t0g",
            "EntityName": "Rutul language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02x9lm",
            "EntityName": "Lezgi Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037lmh",
            "EntityName": "Ingush Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.037nfm",
            "EntityName": "Altai language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03f3f1",
            "EntityName": "Crimean Turkish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03gn_0",
            "EntityName": "Nogai Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03klw8",
            "EntityName": "Dargwa Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03wt_j",
            "EntityName": "Komi language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049jrm",
            "EntityName": "Udmurt Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rxz0",
            "EntityName": "Kumyk Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xqkr",
            "EntityName": "Karachay-Balkar Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054zyh",
            "EntityName": "Buryat language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l6md",
            "EntityName": "Yakut Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bw_x",
            "EntityName": "Tabassaran Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0880p",
            "EntityName": "Yiddish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.091dr6",
            "EntityName": "Lak Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093gjw",
            "EntityName": "Khakas Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cjk9",
            "EntityName": "Ukrainian Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-916.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "russia",
        "TopicEntityName": "Russia",
        "TopicEntityMid": "m.06bnz",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b_j",
            "EntityName": "Russian Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06bnz": "Russia"
    },
    "qid_topic_entity": {
      "Q159": "Russia"
    },
    "index": 835
  },
  {
    "QuestionId": "WebQTest-1096",
    "RawQuestion": "what movies queen latifah is in?",
    "ProcessedQuestion": "what movies queen latifah is in",
    "Parses": [
      {
        "ParseId": "WebQTest-1096.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wgcvn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wgcvn ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "queen latifah",
        "TopicEntityName": "Queen Latifah",
        "TopicEntityMid": "m.01wgcvn",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.11bc95kg2q",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010p_crb",
            "EntityName": "Kung Faux: Vol. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01345yx_",
            "EntityName": "Bessie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01370796",
            "EntityName": "Barbershop 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016f62",
            "EntityName": "Jungle Fever"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01cmp9",
            "EntityName": "Chicago"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yzjg",
            "EntityName": "Bringing Out the Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027j9wd",
            "EntityName": "Ice Age: Dawn of the Dinosaurs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02b5v3",
            "EntityName": "Taxi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ntj8",
            "EntityName": "Barbershop 2: Back in Business"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rg6sm",
            "EntityName": "Arctic Tale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wc6sp",
            "EntityName": "Mad Money"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z84b3",
            "EntityName": "Life Support"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.032knp",
            "EntityName": "Set It Off"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c3vl6",
            "EntityName": "What Happens in Vegas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cljvq",
            "EntityName": "The Perfect Holiday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03l6q0",
            "EntityName": "Scary Movie 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f9bz6",
            "EntityName": "The Secret Life of Bees"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rncw",
            "EntityName": "Sphere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054vql",
            "EntityName": "House Party 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0569lx",
            "EntityName": "The Muppets' Wizard of Oz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bzxn0",
            "EntityName": "We Are One: The Obama Inaugural Celebration at the Lincoln Memorial"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p46dv",
            "EntityName": "Hairspray 2: White Lipstick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05rkmv",
            "EntityName": "Beauty Shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zynv8",
            "EntityName": "Living with the Dead"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06_wqk4",
            "EntityName": "Valentine's Day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060p1m",
            "EntityName": "Hoodlum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bks2",
            "EntityName": "The Cookout"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fwns",
            "EntityName": "The Bone Collector"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n95j",
            "EntityName": "The Country Bears"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_3vm",
            "EntityName": "Brown Sugar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0729rh",
            "EntityName": "Ice Age: The Meltdown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07kbj2s",
            "EntityName": "Just Wright"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nt4j",
            "EntityName": "Last Holiday"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08qsz2",
            "EntityName": "Bringing Down the House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08w51z",
            "EntityName": "Juice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bm2nq",
            "EntityName": "Stranger than Fiction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt3j9",
            "EntityName": "Hairspray"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bvpwc6",
            "EntityName": "Mama Flora's Family"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c3_662",
            "EntityName": "The Dilemma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crt91p",
            "EntityName": "The Making of What's Going On: An All-Star Tribute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crv_pd",
            "EntityName": "Kung Faux: Vol. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crvchf",
            "EntityName": "We Are Family"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crvfd7",
            "EntityName": "Kung Faux: Vol. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw1rn",
            "EntityName": "Breaking Out: The Alcatraz Concert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crw75p",
            "EntityName": "Kung Faux: Vol. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crxknq",
            "EntityName": "One Love: The Bob Marley All-Star Tribute"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cryhb4",
            "EntityName": "Queen Latifah - Unauthorized"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs2r3l",
            "EntityName": "Through the Years of Hip-Hop: Vol. 1: Graffiti"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs45fr",
            "EntityName": "Life in the 310: Vol. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs85c7",
            "EntityName": "Kung Faux: Vol. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ds27b",
            "EntityName": "My Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fpgp26",
            "EntityName": "Ice Age: Continental Drift"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g54bw9",
            "EntityName": "Joyful Noise"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gym9j6",
            "EntityName": "Zac Efron's Pool Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j24hls",
            "EntityName": "Ice Age: A Mammoth Christmas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j72nq9",
            "EntityName": "Steel Magnolias"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kvh49",
            "EntityName": "Living Out Loud"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0v_w91n",
            "EntityName": "22 Jump Street"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01wgcvn": "Queen Latifah"
    },
    "qid_topic_entity": {
      "Q1112005": "Queen Latifah"
    },
    "index": 836
  },
  {
    "QuestionId": "WebQTest-1690",
    "RawQuestion": "where is electrolux based?",
    "ProcessedQuestion": "where is electrolux based",
    "Parses": [
      {
        "ParseId": "WebQTest-1690.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h0_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h0_y ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "electrolux",
        "TopicEntityName": "Electrolux",
        "TopicEntityMid": "m.02h0_y",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mxs",
            "EntityName": "Stockholm"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h0_y": "Electrolux"
    },
    "qid_topic_entity": {
      "Q505922": "Electrolux"
    },
    "index": 837
  },
  {
    "QuestionId": "WebQTest-855",
    "RawQuestion": "what is the currency of brazil now?",
    "ProcessedQuestion": "what is the currency of brazil now",
    "Parses": [
      {
        "ParseId": "WebQTest-855.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03385m",
            "EntityName": "Brazilian real"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 838
  },
  {
    "QuestionId": "WebQTest-1011",
    "RawQuestion": "where do they speak tibetan?",
    "ProcessedQuestion": "where do they speak tibetan",
    "Parses": [
      {
        "ParseId": "WebQTest-1011.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.064r7fk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.064r7fk ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "tibetan",
        "TopicEntityName": "Standard Tibetan",
        "TopicEntityMid": "m.064r7fk",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8nf",
            "EntityName": "Tibet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.064r7fk": "Standard Tibetan"
    },
    "qid_topic_entity": {
      "Q34271": "Standard Tibetan"
    },
    "index": 839
  },
  {
    "QuestionId": "WebQTest-84",
    "RawQuestion": "what type of music did john lennon sing?",
    "ProcessedQuestion": "what type of music did john lennon sing",
    "Parses": [
      {
        "ParseId": "WebQTest-84.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vsl3_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vsl3_ ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "john lennon",
        "TopicEntityName": "John Lennon",
        "TopicEntityMid": "m.01vsl3_",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k_kn",
            "EntityName": "Soft rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yv6b",
            "EntityName": "Blues rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ckfl9",
            "EntityName": "Experimental music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bt6j",
            "EntityName": "Pop rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05w3f",
            "EntityName": "Psychedelic rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064t9",
            "EntityName": "Pop music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06by7",
            "EntityName": "Rock music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08jyyk",
            "EntityName": "Experimental rock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cx7f",
            "EntityName": "Art rock"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01vsl3_": "John Lennon"
    },
    "qid_topic_entity": {
      "Q1203": "John Lennon"
    },
    "index": 840
  },
  {
    "QuestionId": "WebQTest-1014",
    "RawQuestion": "where did kim kardashian come from?",
    "ProcessedQuestion": "where did kim kardashian come from",
    "Parses": [
      {
        "ParseId": "WebQTest-1014.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0261x8t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0261x8t ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "kim kardashian",
        "TopicEntityName": "Kim Kardashian",
        "TopicEntityMid": "m.0261x8t",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030qb3t",
            "EntityName": "Los Angeles"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0261x8t": "Kim Kardashian"
    },
    "qid_topic_entity": {
      "Q186304": "Kim Kardashian"
    },
    "index": 841
  },
  {
    "QuestionId": "WebQTest-1250",
    "RawQuestion": "where is the national ffa foundation located today?",
    "ProcessedQuestion": "where is the national ffa foundation located today",
    "Parses": [
      {
        "ParseId": "WebQTest-1250.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0158y6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0158y6 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "ffa",
        "TopicEntityName": "National FFA Organization",
        "TopicEntityMid": "m.0158y6",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013h9",
            "EntityName": "Alexandria"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0158y6": "National FFA Organization"
    },
    "qid_topic_entity": {
      "Q4039073": "National FFA Organization"
    },
    "index": 842
  },
  {
    "QuestionId": "WebQTest-490",
    "RawQuestion": "what did the ancient romans speak?",
    "ProcessedQuestion": "what did the ancient romans speak",
    "Parses": [
      {
        "ParseId": "WebQTest-490.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cmp ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "romans",
        "TopicEntityName": "Roman Empire",
        "TopicEntityMid": "m.06cmp",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04h9h",
            "EntityName": "Latin Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06cmp": "Roman Empire"
    },
    "qid_topic_entity": {
      "Q2277": "Roman Empire"
    },
    "index": 843
  },
  {
    "QuestionId": "WebQTest-500",
    "RawQuestion": "what is the zip code for trenton?",
    "ProcessedQuestion": "what is the zip code for trenton",
    "Parses": [
      {
        "ParseId": "WebQTest-500.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fvxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fvxz ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "trenton",
        "TopicEntityName": "Trenton",
        "TopicEntityMid": "m.0fvxz",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206ng_",
            "EntityName": "08628"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206njw",
            "EntityName": "08618"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206nlg",
            "EntityName": "08638"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206qfx",
            "EntityName": "08610"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206qgw",
            "EntityName": "08619"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206qlh",
            "EntityName": "08620"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206qq6",
            "EntityName": "08691"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0206qr2",
            "EntityName": "08611"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02075l8",
            "EntityName": "08609"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02075s5",
            "EntityName": "08608"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02075z3",
            "EntityName": "08629"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03dtqlk",
            "EntityName": "08625"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03dtqmy",
            "EntityName": "08641"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03dtqnj",
            "EntityName": "08690"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtm_",
            "EntityName": "08695"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtn6",
            "EntityName": "08666"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtnf",
            "EntityName": "08650"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtnn",
            "EntityName": "08647"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtnw",
            "EntityName": "08646"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtp2",
            "EntityName": "08645"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtp9",
            "EntityName": "08607"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtpj",
            "EntityName": "08606"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtpr",
            "EntityName": "08605"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtpz",
            "EntityName": "08604"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtq5",
            "EntityName": "08603"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtqd",
            "EntityName": "08602"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nrtqm",
            "EntityName": "08601"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fvxz": "Trenton"
    },
    "qid_topic_entity": {
      "Q25330": "Trenton"
    },
    "index": 844
  },
  {
    "QuestionId": "WebQTest-1897",
    "RawQuestion": "what are the names of ariel's six sisters?",
    "ProcessedQuestion": "what are the names of ariel 's six sisters",
    "Parses": [
      {
        "ParseId": "WebQTest-1897.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cl19h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cl19h ns:fictional_universe.fictional_character.siblings ?y .\n?y ns:fictional_universe.sibling_relationship_of_fictional_characters.siblings ?x .\n}\n",
        "PotentialTopicEntityMention": "ariel",
        "TopicEntityName": "Ariel",
        "TopicEntityMid": "m.0cl19h",
        "InferentialChain": [
          "fictional_universe.fictional_character.siblings",
          "fictional_universe.sibling_relationship_of_fictional_characters.siblings"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hkfx",
            "EntityName": "Alana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hkg2",
            "EntityName": "Attina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hkg8",
            "EntityName": "Andrina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hkgg",
            "EntityName": "Arista"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hkgp",
            "EntityName": "Adella"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065hkgw",
            "EntityName": "Aquata"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cl19h": "Ariel"
    },
    "qid_topic_entity": {
      "Q892442": "Ariel"
    },
    "index": 845
  },
  {
    "QuestionId": "WebQTest-428",
    "RawQuestion": "what states make up the midwest us?",
    "ProcessedQuestion": "what states make up the midwest us",
    "Parses": [
      {
        "ParseId": "WebQTest-428.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0q76g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0q76g ns:location.location.contains ?x .\n}\n",
        "PotentialTopicEntityMention": "midwest",
        "TopicEntityName": "Midwestern United States",
        "TopicEntityMid": "m.0q76g",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03kch9",
            "EntityName": "Avenue of the Saints"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03pz_y",
            "EntityName": "West North Central States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03pzys",
            "EntityName": "East North Central States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03s0w",
            "EntityName": "Iowa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v0t",
            "EntityName": "Illinois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03v1s",
            "EntityName": "Indiana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0488g",
            "EntityName": "Kansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04rrx",
            "EntityName": "Michigan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ykg",
            "EntityName": "Minnesota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fhy",
            "EntityName": "Nebraska"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fky",
            "EntityName": "North Dakota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kkh",
            "EntityName": "Ohio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mz5",
            "EntityName": "South Dakota"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0824r",
            "EntityName": "Wisconsin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0t8xg",
            "EntityName": "Council Grove"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0q76g": "Midwestern United States"
    },
    "qid_topic_entity": {
      "Q186545": "Midwestern United States"
    },
    "index": 846
  },
  {
    "QuestionId": "WebQTest-1219",
    "RawQuestion": "what nationality is rihanna?",
    "ProcessedQuestion": "what nationality is rihanna",
    "Parses": [
      {
        "ParseId": "WebQTest-1219.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mt91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mt91 ns:people.person.nationality ?x .\n}\n",
        "PotentialTopicEntityMention": "rihanna",
        "TopicEntityName": "Rihanna",
        "TopicEntityMid": "m.06mt91",
        "InferentialChain": [
          "people.person.nationality"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mt91": "Rihanna"
    },
    "qid_topic_entity": {
      "Q36844": "Rihanna"
    },
    "index": 847
  },
  {
    "QuestionId": "WebQTest-1540",
    "RawQuestion": "what is newt gingrich's wife's name?",
    "ProcessedQuestion": "what is newt gingrich 's wife 's name",
    "Parses": [
      {
        "ParseId": "WebQTest-1540.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018fzs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018fzs ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?x ns:people.person.gender ns:m.02zsn .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "newt gingrich",
        "TopicEntityName": "Newt Gingrich",
        "TopicEntityMid": "m.018fzs",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 1,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "people.marriage.from",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05znhhq",
            "EntityName": "Callista Gingrich"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.018fzs": "Newt Gingrich"
    },
    "qid_topic_entity": {
      "Q182788": "Newt Gingrich"
    },
    "index": 848
  },
  {
    "QuestionId": "WebQTest-1965",
    "RawQuestion": "who did the voice for lola bunny?",
    "ProcessedQuestion": "who did the voice for lola bunny",
    "Parses": [
      {
        "ParseId": "WebQTest-1965.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Union. Original comment: F Union Voice actors for both movie and TV show"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t{ \n\t  # Film\n\t  ns:m.0534r8 ns:film.film_character.portrayed_in_films ?y .\n\t  ?y ns:film.performance.actor ?x .\n\t  ?y ns:film.performance.special_performance_type ns:m.02nsjvf . #voice\n\t}\n\tUNION\n\t{\n\t  # TV\n\t  ns:m.0534r8 ns:tv.tv_character.appeared_in_tv_program ?y .\n\t  ?y ns:tv.regular_tv_appearance.actor ?x .\n\t}\n}",
        "PotentialTopicEntityMention": "lola bunny",
        "TopicEntityName": "Lola Bunny",
        "TopicEntityMid": "m.0534r8",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.024my5",
            "EntityName": "Kath Soucie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08vr94",
            "EntityName": "Kristen Wiig"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fm5ld",
            "EntityName": "Britt McKillip"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0534r8": "Lola Bunny"
    },
    "qid_topic_entity": {
      "Q1575844": "Lola Bunny"
    },
    "index": 849
  },
  {
    "QuestionId": "WebQTest-656",
    "RawQuestion": "who is the president of costa rica in 2012?",
    "ProcessedQuestion": "who is the president of costa rica in 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-656.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "Can't filter on year"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "costa rica",
        "TopicEntityName": "Costa Rica",
        "TopicEntityMid": "m.01p8s",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.060c4",
            "EntityName": "President",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bh9gpm",
            "EntityName": "Laura Chinchilla"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01p8s": "Costa Rica"
    },
    "qid_topic_entity": {
      "Q800": "Costa Rica"
    },
    "index": 850
  },
  {
    "QuestionId": "WebQTest-23",
    "RawQuestion": "what town was martin luther king assassinated in?",
    "ProcessedQuestion": "what town was martin luther king assassinated in",
    "Parses": [
      {
        "ParseId": "WebQTest-23.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "martin luther king",
        "TopicEntityName": "Martin Luther King, Jr.",
        "TopicEntityMid": "m.051cc",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_m3",
            "EntityName": "Memphis"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.051cc": "Martin Luther King, Jr."
    },
    "qid_topic_entity": {
      "Q8027": "Martin Luther King, Jr."
    },
    "index": 851
  },
  {
    "QuestionId": "WebQTest-497",
    "RawQuestion": "who was the father of king george vi?",
    "ProcessedQuestion": "who was the father of king george vi",
    "Parses": [
      {
        "ParseId": "WebQTest-497.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "PotentialTopicEntityMention": "king george vi",
        "TopicEntityName": "George VI",
        "TopicEntityMid": "m.0cm83",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.05zppz",
            "EntityName": "Male",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cmpn",
            "EntityName": "George V"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cm83": "George VI"
    },
    "qid_topic_entity": {
      "Q280856": "George VI"
    },
    "index": 852
  },
  {
    "QuestionId": "WebQTest-1125",
    "RawQuestion": "what area of science did sir isaac newton study?",
    "ProcessedQuestion": "what area of science did sir isaac newton study",
    "Parses": [
      {
        "ParseId": "WebQTest-1125.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "sir isaac newton",
        "TopicEntityName": "Isaac Newton",
        "TopicEntityMid": "m.03s9v",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01pxg",
            "EntityName": "Chemist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h6fbs",
            "EntityName": "Philosopher"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04s2z",
            "EntityName": "Mathematician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05snw",
            "EntityName": "Physicist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2q",
            "EntityName": "Scientist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h9c",
            "EntityName": "Astronomer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03s9v": "Isaac Newton"
    },
    "qid_topic_entity": {
      "Q935": "Isaac Newton"
    },
    "index": 853
  },
  {
    "QuestionId": "WebQTest-1054",
    "RawQuestion": "who played denver in four christmases?",
    "ProcessedQuestion": "who played denver in four christmases",
    "Parses": [
      {
        "ParseId": "WebQTest-1054.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03gttvn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03gttvn ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0zw3029 .\n}\n",
        "PotentialTopicEntityMention": "four christmases",
        "TopicEntityName": "Four Christmases",
        "TopicEntityMid": "m.03gttvn",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0zw3029",
            "EntityName": "Denver",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01twdk",
            "EntityName": "Jon Favreau filmography"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03gttvn": "Four Christmases"
    },
    "qid_topic_entity": {
      "Q315592": "Four Christmases"
    },
    "index": 854
  },
  {
    "QuestionId": "WebQTest-1643",
    "RawQuestion": "who does the voice for chucky in child's play?",
    "ProcessedQuestion": "who does the voice for chucky in child 's play",
    "Parses": [
      {
        "ParseId": "WebQTest-1643.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mkzj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mkzj ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.06jpdm .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n?y ns:film.performance.film ns:m.02mkzj .\n}\n",
        "PotentialTopicEntityMention": "child 's play",
        "TopicEntityName": "Child's Play",
        "TopicEntityMid": "m.02mkzj",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.06jpdm",
            "EntityName": "Chucky",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02mkzj",
            "EntityName": "Child's Play",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bfmn",
            "EntityName": "Brad Dourif"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03czqtb",
            "EntityName": "Edan Gross"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hw0m",
            "EntityName": "John Franklin"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mkzj": "Child's Play"
    },
    "qid_topic_entity": {
      "Q935945": "Child's Play"
    },
    "index": 855
  },
  {
    "QuestionId": "WebQTest-643",
    "RawQuestion": "where does princess leia live?",
    "ProcessedQuestion": "where does princess leia live",
    "Parses": [
      {
        "ParseId": "WebQTest-643.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddqw ns:fictional_universe.fictional_character.places_lived ?x .\n}\n",
        "PotentialTopicEntityMention": "leia",
        "TopicEntityName": "Leia Organa",
        "TopicEntityMid": "m.0ddqw",
        "InferentialChain": [
          "fictional_universe.fictional_character.places_lived"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065lhy",
            "EntityName": "Alderaan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ddqw": "Leia Organa"
    },
    "qid_topic_entity": {
      "Q51797": "Leia Organa"
    },
    "index": 856
  },
  {
    "QuestionId": "WebQTest-1061",
    "RawQuestion": "where does greek language come from?",
    "ProcessedQuestion": "where does greek language come from",
    "Parses": [
      {
        "ParseId": "WebQTest-1061.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "?? "
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0349s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0349s ns:base.rosetta.languoid.parent ?x .\n}\n",
        "PotentialTopicEntityMention": "greek language",
        "TopicEntityName": "Greek Language",
        "TopicEntityMid": "m.0349s",
        "InferentialChain": [
          "base.rosetta.languoid.parent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tk2xx",
            "EntityName": "Attic Group"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0349s": "Greek Language"
    },
    "qid_topic_entity": {
      "Q9129": "Greek Language"
    },
    "index": 857
  },
  {
    "QuestionId": "WebQTest-810",
    "RawQuestion": "what language do people from greece speak?",
    "ProcessedQuestion": "what language do people from greece speak",
    "Parses": [
      {
        "ParseId": "WebQTest-810.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "greece",
        "TopicEntityName": "Greece",
        "TopicEntityMid": "m.035qy",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012v8",
            "EntityName": "Albanian language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0349s",
            "EntityName": "Greek Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-810.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "greece",
        "TopicEntityName": "Greece",
        "TopicEntityMid": "m.035qy",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0349s",
            "EntityName": "Greek Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035qy": "Greece"
    },
    "qid_topic_entity": {
      "Q41": "Greece"
    },
    "index": 858
  },
  {
    "QuestionId": "WebQTest-441",
    "RawQuestion": "what killed john bonham?",
    "ProcessedQuestion": "what killed john bonham",
    "Parses": [
      {
        "ParseId": "WebQTest-441.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015pvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015pvx ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "john bonham",
        "TopicEntityName": "John Bonham",
        "TopicEntityMid": "m.015pvx",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.023l3k_",
            "EntityName": "Inhalation of vomit"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015pvx": "John Bonham"
    },
    "qid_topic_entity": {
      "Q485490": "John Bonham"
    },
    "index": 859
  },
  {
    "QuestionId": "WebQTest-1618",
    "RawQuestion": "what teams has manny ramirez played for?",
    "ProcessedQuestion": "what teams has manny ramirez played for",
    "Parses": [
      {
        "ParseId": "WebQTest-1618.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06tjlc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06tjlc ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "manny ramirez",
        "TopicEntityName": "Manny Ramirez",
        "TopicEntityMid": "m.06tjlc",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d5z",
            "EntityName": "Boston Red Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01slc",
            "EntityName": "Chicago White Sox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yhm",
            "EntityName": "Cleveland Indians"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01yjl",
            "EntityName": "Chicago Cubs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04mjl",
            "EntityName": "Los Angeles Dodgers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05m_8",
            "EntityName": "Oakland Athletics"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8f",
            "EntityName": "Tampa Bay Rays"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8x",
            "EntityName": "Texas Rangers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08tdk2",
            "EntityName": "EDA Rhinos"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06tjlc": "Manny Ramirez"
    },
    "qid_topic_entity": {
      "Q375648": "Manny Ramirez"
    },
    "index": 860
  },
  {
    "QuestionId": "WebQTest-1244",
    "RawQuestion": "who was sir walter raleigh and what did he do?",
    "ProcessedQuestion": "who was sir walter raleigh and what did he do",
    "Parses": [
      {
        "ParseId": "WebQTest-1244.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.084t6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.084t6 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "walter raleigh",
        "TopicEntityName": "Walter Raleigh",
        "TopicEntityMid": "m.084t6",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016wtf",
            "EntityName": "Sailor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01h3_3",
            "EntityName": "Courtier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05z96",
            "EntityName": "Poet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.099md",
            "EntityName": "Soldier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.084t6": "Walter Raleigh"
    },
    "qid_topic_entity": {
      "Q189144": "Walter Raleigh"
    },
    "index": 861
  },
  {
    "QuestionId": "WebQTest-939",
    "RawQuestion": "what type of art did pablo picasso paint?",
    "ProcessedQuestion": "what type of art did pablo picasso paint",
    "Parses": [
      {
        "ParseId": "WebQTest-939.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060_7 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "pablo picasso",
        "TopicEntityName": "Pablo Picasso",
        "TopicEntityMid": "m.060_7",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070vcg",
            "EntityName": "Analytic cubism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071bmq",
            "EntityName": "Picasso's Rose Period"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072333",
            "EntityName": "Picasso's Blue Period"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073_6",
            "EntityName": "Surrealism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07hm5p",
            "EntityName": "Picasso's African Period"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07pcpz",
            "EntityName": "Synthetic cubism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ff3",
            "EntityName": "Cubism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.060_7": "Pablo Picasso"
    },
    "qid_topic_entity": {
      "Q5593": "Pablo Picasso"
    },
    "index": 862
  },
  {
    "QuestionId": "WebQTest-1527",
    "RawQuestion": "what political party does barack obama represent?",
    "ProcessedQuestion": "what political party does barack obama represent",
    "Parses": [
      {
        "ParseId": "WebQTest-1527.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "barack obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d075m",
            "EntityName": "Democratic Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 863
  },
  {
    "QuestionId": "WebQTest-388",
    "RawQuestion": "what are the important holidays of islam?",
    "ProcessedQuestion": "what are the important holidays of islam",
    "Parses": [
      {
        "ParseId": "WebQTest-388.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.holidays ?x .\n}\n",
        "PotentialTopicEntityMention": "islam",
        "TopicEntityName": "Islam",
        "TopicEntityMid": "m.0flw86",
        "InferentialChain": [
          "religion.religion.holidays"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_tkhhs",
            "EntityName": "Eid al-Fitr Eve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_tkryk",
            "EntityName": "Eid-Ul-Adha Eve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_403",
            "EntityName": "Eid al-Adha"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0114y4k_",
            "EntityName": "Lailat al Mi'raj"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011njw8h",
            "EntityName": "Nuzul Al-Quran"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0148n3",
            "EntityName": "Eid al-Fitr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027cs49",
            "EntityName": "Day of Arafat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02gk03",
            "EntityName": "Day of Ashura"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03clhwf",
            "EntityName": "Mourning of Muharram"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04b4l4",
            "EntityName": "Laylat al-Qadr"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jc26j",
            "EntityName": "Barat Night"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q3_d",
            "EntityName": "Mawlid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j8x",
            "EntityName": "Ramadan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_46x",
            "EntityName": "Islamic New Year"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vpsp_r",
            "EntityName": "Night of Wishes"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0flw86": "Islam"
    },
    "qid_topic_entity": {
      "Q432": "Islam"
    },
    "index": 864
  },
  {
    "QuestionId": "WebQTest-398",
    "RawQuestion": "where is the university of the rockies located?",
    "ProcessedQuestion": "where is the university of the rockies located",
    "Parses": [
      {
        "ParseId": "WebQTest-398.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wbmx5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wbmx5 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "university of the rockies",
        "TopicEntityName": "University of the Rockies",
        "TopicEntityMid": "m.03wbmx5",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n4w",
            "EntityName": "Colorado"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vsl",
            "EntityName": "Colorado Springs"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          }
        ]
      },
      {
        "ParseId": "WebQTest-398.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wbmx5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wbmx5 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "university of the rockies",
        "TopicEntityName": "University of the Rockies",
        "TopicEntityMid": "m.03wbmx5",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vsl",
            "EntityName": "Colorado Springs"
          }
        ]
      },
      {
        "ParseId": "WebQTest-398.P2",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wbmx5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wbmx5 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.state_province_region ?x .\n}\n",
        "PotentialTopicEntityMention": "university of the rockies",
        "TopicEntityName": "University of the Rockies",
        "TopicEntityMid": "m.03wbmx5",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.state_province_region"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01n4w",
            "EntityName": "Colorado"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03wbmx5": "University of the Rockies"
    },
    "qid_topic_entity": {
      "Q7896768": "University of the Rockies"
    },
    "index": 865
  },
  {
    "QuestionId": "WebQTest-928",
    "RawQuestion": "what colleges did harper lee attend?",
    "ProcessedQuestion": "what colleges did harper lee attend",
    "Parses": [
      {
        "ParseId": "WebQTest-928.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq7x ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "harper lee",
        "TopicEntityName": "Harper Lee",
        "TopicEntityMid": "m.01bq7x",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wdl3",
            "EntityName": "University of Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069vxk",
            "EntityName": "Huntingdon College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fv_v",
            "EntityName": "University of Alabama School of Law"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tgn",
            "EntityName": "University of Oxford"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bq7x": "Harper Lee"
    },
    "qid_topic_entity": {
      "Q182658": "Harper Lee"
    },
    "index": 866
  },
  {
    "QuestionId": "WebQTest-1952",
    "RawQuestion": "where was the prophet mohammed from?",
    "ProcessedQuestion": "where was the prophet mohammed from",
    "Parses": [
      {
        "ParseId": "WebQTest-1952.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04s9n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04s9n ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "mohammed",
        "TopicEntityName": "Muhammad in Islam",
        "TopicEntityMid": "m.04s9n",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.058wp",
            "EntityName": "Mecca"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04s9n": "Muhammad in Islam"
    },
    "qid_topic_entity": {
      "Q9458": "Muhammad in Islam"
    },
    "index": 867
  },
  {
    "QuestionId": "WebQTest-957",
    "RawQuestion": "what language did the sioux indians speak?",
    "ProcessedQuestion": "what language did the sioux indians speak",
    "Parses": [
      {
        "ParseId": "WebQTest-957.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fk3s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fk3s ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "sioux indians",
        "TopicEntityName": "Sioux",
        "TopicEntityMid": "m.0fk3s",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0565z6",
            "EntityName": "Sioux language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064_8sq",
            "EntityName": "French"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fk3s": "Sioux"
    },
    "qid_topic_entity": {
      "Q107434": "Sioux"
    },
    "index": 868
  },
  {
    "QuestionId": "WebQTest-1522",
    "RawQuestion": "who does kroy biermann play football for?",
    "ProcessedQuestion": "who does kroy biermann play football for",
    "Parses": [
      {
        "ParseId": "WebQTest-1522.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043m195)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043m195 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "kroy biermann",
        "TopicEntityName": "Kroy Biermann",
        "TopicEntityMid": "m.043m195",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0wsr",
            "EntityName": "Atlanta Falcons"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.043m195": "Kroy Biermann"
    },
    "qid_topic_entity": {
      "Q6439123": "Kroy Biermann"
    },
    "index": 869
  },
  {
    "QuestionId": "WebQTest-179",
    "RawQuestion": "what artistic movement did henri matisse belong to?",
    "ProcessedQuestion": "what artistic movement did henri matisse belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-179.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gct_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gct_ ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "henri matisse",
        "TopicEntityName": "Henri Matisse",
        "TopicEntityMid": "m.0gct_",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xj1",
            "EntityName": "Impressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.049xrv",
            "EntityName": "Neo-impressionism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lx1",
            "EntityName": "Fauvism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04y41",
            "EntityName": "Modernism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gct_": "Henri Matisse"
    },
    "qid_topic_entity": {
      "Q5589": "Henri Matisse"
    },
    "index": 870
  },
  {
    "QuestionId": "WebQTest-415",
    "RawQuestion": "what movies did tupac star in?",
    "ProcessedQuestion": "what movies did tupac star in",
    "Parses": [
      {
        "ParseId": "WebQTest-415.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "tupac",
        "TopicEntityName": "Tupac Shakur",
        "TopicEntityMid": "m.07pzc",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pkz7",
            "EntityName": "Murder Was the Case"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06974q",
            "EntityName": "Poetic Justice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dk0b",
            "EntityName": "Gridlock'd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dk10",
            "EntityName": "Above the Rim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08w51z",
            "EntityName": "Juice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c6vx0",
            "EntityName": "Nothing but Trouble"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc2r_",
            "EntityName": "Gang Related"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f4nt1",
            "EntityName": "Bullet"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07pzc": "Tupac Shakur"
    },
    "qid_topic_entity": {
      "Q6107": "Tupac Shakur"
    },
    "index": 871
  },
  {
    "QuestionId": "WebQTest-1309",
    "RawQuestion": "what art did wassily kandinsky do?",
    "ProcessedQuestion": "what art did wassily kandinsky do",
    "Parses": [
      {
        "ParseId": "WebQTest-1309.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? \"Associated Periods Or Movements\" seem to contain equally suitable answers."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0856z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0856z ns:visual_art.visual_artist.art_forms ?x .\n}\n",
        "PotentialTopicEntityMention": "wassily kandinsky",
        "TopicEntityName": "Wassily Kandinsky",
        "TopicEntityMid": "m.0856z",
        "InferentialChain": [
          "visual_art.visual_artist.art_forms"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qdh",
            "EntityName": "Painting"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0856z": "Wassily Kandinsky"
    },
    "qid_topic_entity": {
      "Q61064": "Wassily Kandinsky"
    },
    "index": 872
  },
  {
    "QuestionId": "WebQTest-1179",
    "RawQuestion": "what role did george lucas play in star wars?",
    "ProcessedQuestion": "what role did george lucas play in star wars",
    "Parses": [
      {
        "ParseId": "WebQTest-1179.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0343h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0343h ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0fdv3 .\n}\n",
        "PotentialTopicEntityMention": "george lucas",
        "TopicEntityName": "George Lucas",
        "TopicEntityMid": "m.0343h",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fdv3",
            "EntityName": "Star Wars Episode III: Revenge of the Sith",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nwmq1",
            "EntityName": "Baron Papanoida"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0343h": "George Lucas"
    },
    "qid_topic_entity": {
      "Q38222": "George Lucas"
    },
    "index": 873
  },
  {
    "QuestionId": "WebQTest-1800",
    "RawQuestion": "what year was first world series?",
    "ProcessedQuestion": "what year was first world series",
    "Parses": [
      {
        "ParseId": "WebQTest-1800.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fjp3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fjp3 ns:time.recurring_event.instances ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "PotentialTopicEntityMention": "world series",
        "TopicEntityName": "World Series",
        "TopicEntityMid": "m.0fjp3",
        "InferentialChain": [
          "time.recurring_event.instances"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Ascending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.start_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018n8",
            "EntityName": "1903 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fjp3": "World Series"
    },
    "qid_topic_entity": {
      "Q265538": "World Series"
    },
    "index": 874
  },
  {
    "QuestionId": "WebQTest-689",
    "RawQuestion": "what was the first language spoken in spain?",
    "ProcessedQuestion": "what was the first language spoken in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-689.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 875
  },
  {
    "QuestionId": "WebQTest-202",
    "RawQuestion": "what is the currency used in italy?",
    "ProcessedQuestion": "what is the currency used in italy",
    "Parses": [
      {
        "ParseId": "WebQTest-202.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 876
  },
  {
    "QuestionId": "WebQTest-1890",
    "RawQuestion": "what songs did franz liszt compose?",
    "ProcessedQuestion": "what songs did franz liszt compose",
    "Parses": [
      {
        "ParseId": "WebQTest-1890.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hqgp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hqgp ns:music.composer.compositions ?x .\n}\n",
        "PotentialTopicEntityMention": "franz liszt",
        "TopicEntityName": "Life of Franz Liszt",
        "TopicEntityMid": "m.0hqgp",
        "InferentialChain": [
          "music.composer.compositions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.122bxplw",
            "EntityName": "Etude in Twelve Exercises"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "g.1235wfk4",
            "EntityName": ""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5_5n6",
            "EntityName": "Grand galop chromatique, S. 219 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5_c5y",
            "EntityName": "Introduction et Polonaise de l'op\u00e9ra I puritani, S. 391"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5_tll",
            "EntityName": "Die Lorelei, S. 532"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5_tpf",
            "EntityName": "Totentanz, S. 126: VII. Cadenza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5y20_",
            "EntityName": "Valse-Impromptu, S. 213a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5y7yn",
            "EntityName": "Hexam\u00e9ron, S. 365b: VII. Variation V. Vivo e brillante - Fuocoso molto energico - Lento quasi recitativo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5yjl4",
            "EntityName": "Hungarian Rhapsody no. 14 in F minor, S. 244 no. 14"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5yytx",
            "EntityName": "Valse oubli\u00e9e no. 3, S. 215 no. 3a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zcx_",
            "EntityName": "Ihr Auge, S. 310/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zm1r",
            "EntityName": "Mephisto Waltz No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zy57",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 1. Sz\u00e9ch\u00e9nyi Istvan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_5zzn1",
            "EntityName": "Les Sab\u00e9ennes, berceuse de l\u2019op\u00e9ra La Reine de Saba, S. 408"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6__pc",
            "EntityName": "Eine Faust-Symphonie, S. 108: I. Faust. Lento assai"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6_vp5",
            "EntityName": "Es war ein K\u00f6nig in Thule, S. 278/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_603c4",
            "EntityName": "Five Hungarian Folksongs, S. 245: No. 5. B\u00fasongva. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_60g6b",
            "EntityName": "Der du von dem Himmel bist, S. 279/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_620tb",
            "EntityName": "Fantaisie sur des motifs de l'op\u00e9ra Lucrezia Borgia de G. Donizetti, S. 399a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_629s7",
            "EntityName": "Hexam\u00e9ron, S. 392: I. Introduction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_62shp",
            "EntityName": "Chor\u00e4le, S. 506a: No. 4. Nun danket alle Gott"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_63ml2",
            "EntityName": "Les Adieux, r\u00eaverie sur un motif de Rom\u00e9o et Juliette, S. 409"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_63th4",
            "EntityName": "Fantaisie sur des motifs de La pastorella dell\u2019Alpi e Li marinari des Soir\u00e9es musicales, S. 423"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_65d9w",
            "EntityName": "Ein Fichtenbaum steht einsam, S. 309"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_65kj2",
            "EntityName": "A magyarok Istene, S. 543bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_65nl4",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 9. La Lampe du temple (Andante lagrimoso)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6678z",
            "EntityName": "Canzonetta del Salvator Rosa, S. 157c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66gn_",
            "EntityName": "Un portrait en musique de la Marquise de Blocqueville, S. 190: III. M\u00eame mouvement mais avec incertitude"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66l8y",
            "EntityName": "R\u00e9miniscences de Lucrezia Borgia, S. 400: I. Trio du seconde Acte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_66r3j",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 5 in G-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67897",
            "EntityName": "Totentanz, S. 126: IX. Cadenza"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_678df",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 1. Invocation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6797v",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 6 in A major \\\"Attente\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67mfy",
            "EntityName": "Canzonetta del Salvator Rosa, S. 161 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67n0j",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 5. De\u00e1k Ferenc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_67vcm",
            "EntityName": "Zwei Orchesters\u00e4tze aus dem Oratorium Christus, S. 498b: Nr. 2. Die heiligen drei K\u00f6nige \u2013 Marsch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_687jm",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 17 in A minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_68vl1",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 3. B\u00e9n\u00e9diction de Dieu dans la solitude"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_690zn",
            "EntityName": "Hexam\u00e9ron, S. 365b: IV. Variation II. Moderato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_69914",
            "EntityName": "2 Polonaises, S. 223: no. 1 \\\"Polonaise m\u00e9lancolique\\\" in C minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_69fg6",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 4. Litanies de Marie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6bbsj",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 19 in F-sharp minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6bp8p",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 14 in A minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6btk_",
            "EntityName": "Vexilla regis prodeunt, S. 185"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6btzf",
            "EntityName": "Tre sonetti di Petrarca, S. 158: No. 2. Sonetto CIV. Pace non trovo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6c_87",
            "EntityName": "Hungarian Rhapsody for Orchestra no. 5 in E minor, S. 359/5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6chcq",
            "EntityName": "Fantasie und Fuge \u00fcber das Thema B-A-C-H, S. 529/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6cv0q",
            "EntityName": "K\u00fcnstlerfestzug zur Schillerfeier 1859, S. 520/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6cv43",
            "EntityName": "Hungarian Rhapsody for Orchestra no. 3 in D major, S. 359/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6cvxc",
            "EntityName": "Deux l\u00e9gendes, S. 175: II bis. St. Fran\u00e7ois de Paule marchant sur les flots"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6cvz6",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 8 in D major. Allegro con brio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6d90q",
            "EntityName": "Zwei St\u00fccke aus dem Oratorium Christus, S. 498c: No. 1. Einleitung - Pastorale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dk_9",
            "EntityName": "Stabat mater, S. 172b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dl06",
            "EntityName": "Fantasia on Hungarian Folk Melodies for piano and orchestra, S. 123"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6dpww",
            "EntityName": "Hungarian Coronation Mass, S. 11: II. Gloria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6f6qm",
            "EntityName": "Gretchen aus Faust-Symphonie, S. 513"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6fqpg",
            "EntityName": "Album-Leaf: Freudvoll und leidvoll, S. 166n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6fxlh",
            "EntityName": "Hexam\u00e9ron, S. 365b: I. Introduction. Extr\u00eamement lent"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6g5_9",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 6 in A minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6gzmy",
            "EntityName": "Ave Maria (d'Arcadelt), S. 183 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6h3ck",
            "EntityName": "Ihr Glocken von Marling, S. 328"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6hdm9",
            "EntityName": "Sonetto 47 del Petrarca, S. 161 no. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6hwmv",
            "EntityName": "Hungarian Rhapsody no. 1 in C-sharp minor, S. 244 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6jpg7",
            "EntityName": "Zwei Orchesters\u00e4tze aus dem Oratorium Christus, S. 498b: Nr. 1. Hirtengesang an der Krippe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6kdk6",
            "EntityName": "Grandes \u00e9tudes de Paganini, S. 141: No. 1. Tremolo in G minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6ky5_",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 2. E\u00f6tv\u00f6s Jozsef"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6lqqp",
            "EntityName": "Deux \u00e9pisodes d'apres le Faust de Lenau, S. 110: II. Der Tanz in der Dorfschenke (Erster Mephisto-Walzer)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6lr33",
            "EntityName": "Weihnachtsbaum, S. 185a: IV. Adeste fideles (gleichsam als Marsch der heiligen drei K\u00f6nige)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6mh8q",
            "EntityName": "Weimars Volkslied, S. 542/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6mq_1",
            "EntityName": "Hungarian Rhapsody no. 2 in C-sharp minor, S. 244 no. 2 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6n6zj",
            "EntityName": "Sursum corda, S. 163 no. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6n882",
            "EntityName": "Chor\u00e4le, S. 506a: No. 6. O Haupt voll Blut und Wunden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6n8s8",
            "EntityName": "Ave Maria in D major, S. 504/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nfht",
            "EntityName": "Orpheus, S. 511b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nj66",
            "EntityName": "Coro di festa e marcia funebre de Don Carlos, S. 435"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6np4d",
            "EntityName": "Via Crucis, S. 504a: Vexilla regis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nqdt",
            "EntityName": "Marche fun\u00e8bre et Cavatine de Lucia de Lammermoor, S. 398"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nqg3",
            "EntityName": "Hungarian Battle March, S. 119"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nrm4",
            "EntityName": "Klavierst\u00fcck in E major, S. 192 no. 1. Sehr langsam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nx58",
            "EntityName": "Tre sonetti di Petrarca, S. 158: No. 1. Sonetto XLVII. Benedetto sia il giorno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nx5f",
            "EntityName": "Tre sonetti di Petrarca, S. 270: II. Benedetto sia 'l giorno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nzl8",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 4b in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nzqr",
            "EntityName": "Schwebe, schwebe, blaues Auge, S. 305/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6nzwm",
            "EntityName": "Enfant, si j'\u00e9tais roi, S. 537"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6p0fw",
            "EntityName": "Album-Leaf: Larghetto in D-flat major, S. 167p"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6p0m3",
            "EntityName": "Ave Maria in D-flat major, S. 504/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6p7gj",
            "EntityName": "Totentanz, S. 126: IV. Variation III"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pd3w",
            "EntityName": "S'il est un charmant gazon, S. 538"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pd78",
            "EntityName": "Album-Leaf: Aus den Mephisto-Walzer. Episode aus Lenaus Faust - Der Tanz in der Dorfschenke, S. 167m"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pdmh",
            "EntityName": "Grandes \u00e9tudes de Paganini, S. 141: No. 2. Octave in E-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pfl4",
            "EntityName": "Liebestr\u00e4ume no. 2, S. 541a \\\"Gestorben war ich\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pknn",
            "EntityName": "Totentanz, S. 126: V. Variation IV"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pkp2",
            "EntityName": "Totentanz, S. 126: VI. Variation V"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pllm",
            "EntityName": "Vergiftet sind mein Lieder, S. 289/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pnpx",
            "EntityName": "Album Leaf in E major (Vienna), S. 164a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pwrl",
            "EntityName": "Drei M\u00e4rsche von Franz Schubert, S. 426: No. 1. Trauermarsch (Grande Marche fun\u00e8bre)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6pxbf",
            "EntityName": "Der du von dem Himmel bist, S. 279/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6q7v2",
            "EntityName": "2 Polonaises, S. 223: no. 2 in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6q841",
            "EntityName": "O lieb, so lang du lieben kannst!, S. 540a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_6y5_j",
            "EntityName": "Illustrations du Proph\u00e8te, S. 414: No. 2: Les Patineurs: Scherzo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7234b",
            "EntityName": "In Liebeslust, S. 318"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_735lb",
            "EntityName": "Five Hungarian Folksongs, S. 245: No. 2. M\u00e9rsek\u00e9lve. Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_75zc1",
            "EntityName": "Resignazione, S. 187b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_77zpg",
            "EntityName": "Hungarian Rag"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7b4_4",
            "EntityName": "Leyer und Schwert, S. 452: III. Gebet (vor der Schlacht)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7bm2y",
            "EntityName": "Album-Leaf: Aus dem Purgatorio des Dante Sinfonie. Lamentoso in B minor, S. 166r/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7cpgx",
            "EntityName": "Und sprich, S. 329"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7j_vd",
            "EntityName": "Ave maris stella, S. 669 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7kynh",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 1 in G minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7m01t",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 6. Hymne de l'enfant \u00e0 son r\u00e9veil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7nyl3",
            "EntityName": "La Marseillaise, S. 237"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7p2r6",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 9 in E-flat major. Andante cantabile quasi adagio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7rtmq",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 2. Hymne du matin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7s309",
            "EntityName": "Weimars Volkslied, S. 542/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7wbs8",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 20 in G minor \\\"Rumanian Rhapsody\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7wy4d",
            "EntityName": "O sacrum convivium, S. 674a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_7yz11",
            "EntityName": "Mephisto Waltz no. 3, S. 215a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_80k19",
            "EntityName": "Hungarian Coronation Mass, S. 11: I. Kyrie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_dkg10",
            "EntityName": "Elegy no. 1, S. 130b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_frzx1",
            "EntityName": "Consolations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_h_3jr",
            "EntityName": "Jeanne d'Arc au b\u00fbcher, S. 293/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_h_tyn",
            "EntityName": "Ich liebe dich, S. 542a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hnybx",
            "EntityName": "Album Leaf in F-sharp minor, S. 163a/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hnyjz",
            "EntityName": "Die Zelle in Nonnenwerth, S. 534/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hq1lv",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 7. Hymne de l'enfant \u00e0 son r\u00e9veil"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hq661",
            "EntityName": "Variations sur Le Carnaval de Venise, S. 700a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hqdyd",
            "EntityName": "Lieder aus Schillers Wilhelm Tell, S. 292a: Nr. 2. Der Hirt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hqv4l",
            "EntityName": "Trois \u00e9tudes de concert, S. 144: I. \\\"Il lamento\\\" in A-flat minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hqwf4",
            "EntityName": "Hungarian Rhapsody no. 7 in D minor, S. 244 no. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hr0l3",
            "EntityName": "Kling leise, mein Lied, S. 301/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hr9fp",
            "EntityName": "19 Hungarian Rhapsodies for Piano, S 244 No. 15 \\\"R\u00e1k\u00f3czy March\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hs2dq",
            "EntityName": "La lugubre gondola, S. 200/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hs5rn",
            "EntityName": "Zwei St\u00fccke aus der heiligen Elisabeth, S. 693a: No. 2. Der Sturm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hsn64",
            "EntityName": "Apr\u00e8s une lecture du Dante - Fantasia quasi Sonata, S. 158c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_htrhs",
            "EntityName": "Gaudeamus igitur, S. 240/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv0n5",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 5a in E major \\\"La Chasse\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv0zr",
            "EntityName": "Magyar dalok, S. 242: No. 1 in C minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv1ml",
            "EntityName": "Hungarian Coronation Mass, S. 11: VII. Benedictus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hv9l3",
            "EntityName": "Hexam\u00e9ron, S. 392: IX. Finale. Molto vivace quasi prestissimo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvgyl",
            "EntityName": "J'ai perdu ma force et ma vie, S. 327"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvpvc",
            "EntityName": "R\u00e9miniscences de Robert le Diable, S. 413"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvq9m",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 3. Les Cloches de G*****"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hvrfn",
            "EntityName": "Hungarian Rhapsody no. 11 in A minor, S. 244 no. 11"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hw1pk",
            "EntityName": "Die Loreley, S. 273/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hw2gs",
            "EntityName": "Grandes \u00e9tudes de Paganini, S. 141: No. 5. La Chasse in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hw6m1",
            "EntityName": "Waltz in E-flat major, S. 209a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hwq3x",
            "EntityName": "Schwanengesang und Marsch aus Hunyadi L\u00e1szl\u00f3, S. 405"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hwy34",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 6. Pater noster, d'apr\u00e8s la Psalmodie de l'\u00c9glise"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hx_6x",
            "EntityName": "Klavierst\u00fcck in A-flat major, S. 189a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hx8q9",
            "EntityName": "Mazeppa, S. 511c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hxgzt",
            "EntityName": "Chor\u00e4le, S. 506a: No. 10. Was Gott tut, das ist wohlgetan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hy123",
            "EntityName": "Totentanz, S. 126: III. Variation II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hy30s",
            "EntityName": "Pri\u00e8re et Berceuse de La muette de Portici d'Auber, S. 387: Introduction"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hy6ff",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 4. Adeste fideles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyh80",
            "EntityName": "Winzerchor aus den entfesselten Prometheus, S. 692e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hyl15",
            "EntityName": "Am Rhein, im sch\u00f6nen Strome, S. 531 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hz31w",
            "EntityName": "Five Hungarian Folksongs, S. 245: No. 4. Kiss\u00e9 \u00e9l\u00e9nken. Vivace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hz3h2",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 4 in D-flat major \\\"Derni\u00e8re illusion\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hz4df",
            "EntityName": "Eine Faust-Symphonie, S. 108: III. Mephistopheles. Allegro vivace, ironico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzd24",
            "EntityName": "Zwei St\u00fccke aus dem Oratorium Christus, S. 498c: No. 2. Das Wunder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzd3w",
            "EntityName": "Weihnachtslied \\\"Christus ist geboren\\\", S. 502"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_hzh_w",
            "EntityName": "Von der Wiege bis zum Grabe, S. 512: III. Die Wiege des zukunftigen Lebens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_2n4",
            "EntityName": "Muttergottes-Str\u00e4usslein zum Mai-Monate, S. 316: Nr. 1. Das Veilchen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_43g",
            "EntityName": "Totentanz, S. 126: X. Allegro animato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j_h00",
            "EntityName": "Hungarian Coronation Mass, S. 11: V. Offertorium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j1_td",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 2 in C minor \\\"Langueur?\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j16n_",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 1 in E-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j1mnv",
            "EntityName": "Hexam\u00e9ron, S. 365b: VIIIb. Coda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2h4y",
            "EntityName": "Ave Maria in E major, S. 182 \\\"Die Glocken von Rom\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2p1_",
            "EntityName": "Hexam\u00e9ron, S. 365b: V. Variation III di bravura - Ritornello"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2rx1",
            "EntityName": "Album Leaf in G major (Dante-Symphony progression), S. 167f"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2t2d",
            "EntityName": "Gaudeamus igitur, S. 240/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j2wm8",
            "EntityName": "Hungarian Rhapsody no. 17 in D minor, S. 244 no. 17"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j34rt",
            "EntityName": "Sonetto 123 del Petrarca, S. 161 no. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j3fc_",
            "EntityName": "Totentanz, S. 525, R. 188"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j3jj7",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 154"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j4brl",
            "EntityName": "Die Zelle in Nonnenwerth, S. 534/2 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j4v93",
            "EntityName": "Ballade aus Der fliegende Holl\u00e4nder, S. 441"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j4x_b",
            "EntityName": "Von der Wiege bis zum Grabe, S. 512: I. Die Wiege"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j4zg5",
            "EntityName": "Lieder aus Schillers Wilhelm Tell, S. 292a: Nr. 3. Der Alpenj\u00e4ger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j50zw",
            "EntityName": "Tr\u00fcbe Wolken (Nuages gris), S. 199, R. 78"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j56z7",
            "EntityName": "Album Leaf in A major, S. 166k"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j5qkf",
            "EntityName": "Freudvoll und Leidvoll, S. 280/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j5ttp",
            "EntityName": "2 Cs\u00e1rd\u00e1s, S. 225: No. 1. Cs\u00e1rd\u00e1s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j5v7p",
            "EntityName": "Totentanz, S. 126: VIII. Variation VI"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j5zvl",
            "EntityName": "Mephisto Waltz no. 4, S. 216b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j66kk",
            "EntityName": "Die Rose, S. 571"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j6829",
            "EntityName": "Im Rhein, im sch\u00f6nen Strome, S. 272/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j6b9s",
            "EntityName": "Hexam\u00e9ron, S. 392: VII. Variation V. Vivo e brillante - Fuocoso molto energico - Lento quasi recitativo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j741k",
            "EntityName": "Le Rossignol, S. 249d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j7d6r",
            "EntityName": "Im Rhein, im sch\u00f6nen Strome, S. 272/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j7fnl",
            "EntityName": "Hungarian Coronation Mass, S. 11: VIII. Agnus Dei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j7y2j",
            "EntityName": "Fantaisie romantique sur deux m\u00e9lodies suisses"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8lb6",
            "EntityName": "Lieder aus Schillers Wilhelm Tell, S. 292a: Nr. 1. Der Fischerknabe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8rjg",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 12 in E minor \\\"Hero\u00efde \u00e9l\u00e9giaque\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8scb",
            "EntityName": "Consolation in E major, S. 171a no. 2: Un poco pi\u00f9 mosso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j8y9s",
            "EntityName": "Ann\u00e9es de p\u00e8lerinage : Premi\u00e8re ann\u00e9e : Suisse, S. 160"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j9fgn",
            "EntityName": "Angiolin dal biondo crin, S. 269/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j9kvx",
            "EntityName": "Symphonisches Zwischenspiel zu \u00dcber allen Zauber Liebe, S. 497"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_j9ymm",
            "EntityName": "Hamlet, S. 104"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jb0n8",
            "EntityName": "Les Pr\u00e9ludes, S. 511a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jb1d8",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 8. Prose des morts - De profundis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jb406",
            "EntityName": "Liebestraum No. 3 As-dur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jb9wm",
            "EntityName": "Grandes \u00e9tudes de Paganini, S. 141: No. 6. Variations in A minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jbs7b",
            "EntityName": "Le Rossignol, S. 250 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jcd8n",
            "EntityName": "Piano Concerto in E-flat major, S. 125a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jchhj",
            "EntityName": "Hexam\u00e9ron, S. 365b: IX. Finale. Molto vivace quasi prestissimo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jcmw5",
            "EntityName": "La lugubre gondola, S. 199a/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jd90y",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 1. \u00c9levez-vous, voix de mon \u00e2me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jf1c3",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 15 in D minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jf2lf",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 21 in E minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jg9bc",
            "EntityName": "Marche hongroise, S. 425/2c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jh08d",
            "EntityName": "Hungarian Rhapsody no. 18 in F-sharp minor, S. 244 no. 18/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jh98b",
            "EntityName": "Festkl\u00e4nge, S. 511d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jhg6m",
            "EntityName": "Two Hungarian Recruiting Dances, S. 241 \\\"Zum Andenken\\\": No. 2. Lass\u00fa magyar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jhqny",
            "EntityName": "Valse-Impromptu, S. 213 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jj3vt",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 1 in C minor. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jkc_7",
            "EntityName": "R\u00e1k\u00f3czi March, S. 608"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jkmmk",
            "EntityName": "Grande Fantaisie sur des motifs de Soir\u00e9es musicales, S. 422/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jkn2d",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 9. Andante lagrimoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jkv2b",
            "EntityName": "Feuilles d\u2019album, S. 165"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jl28w",
            "EntityName": "R\u00e1k\u00f3czi March, S. 242a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jlmwx",
            "EntityName": "Schnitterchor aus den entfesselten Prometheus, S. 507a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jlvh2",
            "EntityName": "Chor\u00e4le, S. 506a: No. 11. Wer nur den lieben Gott l\u00e4sst walten?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jm_x6",
            "EntityName": "Adagio in C major, S. 158d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jm48l",
            "EntityName": "Concerto path\u00e9tique, S. 365a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jms1l",
            "EntityName": "Chapelle de Guillaume Tell, S. 160 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jmslh",
            "EntityName": "Muttergottes-Str\u00e4usslein zum Mai-Monate, S. 316: Nr. 2. Die Schl\u00fcsselblumen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jmxr6",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 6. Pet\u00f6fi Sandor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jndzb",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 2 in E-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jp5z0",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 7 in E major \\\"Alternative\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jpgcp",
            "EntityName": "Eine Faust-Symphonie, S. 108: II. Gretchen. Andante soave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jpl_g",
            "EntityName": "Air cosaque, S. 249c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jpqjm",
            "EntityName": "Le Lac de Wallenstadt, S. 156/2a bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jps4r",
            "EntityName": "Hungarian Rhapsody no. 16 in A minor, S. 244 no. 16"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jq62f",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 7. Mosonyi Mih\u00e1ly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jq800",
            "EntityName": "La cloche sonne, S. 238"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqkg9",
            "EntityName": "Spirto gentil, S. 400a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqmjr",
            "EntityName": "Album-Leaf in C minor (Pressburg), S. 163c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jqxz_",
            "EntityName": "Weihnachtsbaum, S. 185a: II. O heilige Nacht"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jrb0n",
            "EntityName": "Consolation in D-flat major, S. 171a no. 4: Quasi adagio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jrc1v",
            "EntityName": "Five Hungarian Folksongs, S. 245: No. 1. Lassan. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jrj98",
            "EntityName": "Album Leaf in E-flat (Leipzig), S. 164b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_js2c2",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 8 in D-flat major \\\"M. K.\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jskv9",
            "EntityName": "Au bord d'une source, S. 160 no. 4 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jssrj",
            "EntityName": "Weinen, Klagen, Sorgen, Zagen, Pr\u00e4ludium nach Johann Sebastian Bach, S. 179"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jsw1s",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 1a in G minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jt5m7",
            "EntityName": "Consolation in E major, S. 171a no. 5: Andantino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jt5p6",
            "EntityName": "Hungaria, S. 511e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtl45",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 13 in A minor \\\"R\u00e1k\u00f3czi-Marsch\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtq5q",
            "EntityName": "Sposalizio, S. 157a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtt0s",
            "EntityName": "Liebestraum Es-Dur \\\"Seliger Tod\\\", S. 541 Nr. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtvb6",
            "EntityName": "Eine Faust-Symphonie, S. 108: IV. Chorus mysticus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jtvm7",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 5. Pater noster"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jv_js",
            "EntityName": "God Save the Queen, S. 235"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jv68z",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 22 in E flat major \\\"Pester Carneval\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jvzj6",
            "EntityName": "Trois \u00e9tudes de concert, S. 144: II. \\\"La leggierezza\\\" in F minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jw39s",
            "EntityName": "Kennst du das Land, S. 531 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jwb1q",
            "EntityName": "Spinnerin-Lied, Transkripition aus Wagners \\\"Der fliegende Holl\u00e4nder\\\", S. 440"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jwlfl",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 18 in C-sharp minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jwpdc",
            "EntityName": "Grande fantaisie de concert, S. 393/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jwycf",
            "EntityName": "Glanes de Woronince, S. 249: No. 2. M\u00e9lodies polonaises"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jx27k",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 10. (Hymne)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jx9l4",
            "EntityName": "Bist du, S. 277/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy26g",
            "EntityName": "Marche hongroise, S. 425/2b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy398",
            "EntityName": "Polonaise aus Tschaikowskys \\\"Eugen Onegin\\\", S. 429"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jy4qw",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 3 in D-flat major. Sehr langsam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jyz7b",
            "EntityName": "Tannh\u00e4user Overture"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jz_2s",
            "EntityName": "Totentanz, S. 126: II. Variation I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jz1hv",
            "EntityName": "Glanes de Woronince, S. 249: No. 3. Complainte (Dumka)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jz2j8",
            "EntityName": "Variationen \u00fcber das Motiv von Bach, S. 673"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzccw",
            "EntityName": "Five Hungarian Folksongs, S. 245: No. 3. Lassan. Andante"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzgc1",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 10. Cantique d'amour"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzglv",
            "EntityName": "Hungarian Rhapsody no. 10 in E major, S. 244 no. 10 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzj6t",
            "EntityName": "B\u00e9n\u00e9diction et serment de Benvenuto Cellini, S. 396"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_jzr19",
            "EntityName": "Consolation in E major, S. 171a no. 1: Andante con moto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k042l",
            "EntityName": "Tre sonetti di Petrarca, S. 270: I. Pace non trovo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0f1h",
            "EntityName": "De Profundis, S. 121a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k0wtn",
            "EntityName": "R\u00e9miniscences de Lucrezia Borgia, S. 400: II. Chanson \u00e0 boire (Orgie). Duo-finale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k12xr",
            "EntityName": "Ave Maria IV in G major, S. 545"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k1cv9",
            "EntityName": "Walhall aus Der Ring des Nibelungen, S. 449"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k1p42",
            "EntityName": "Valse oubli\u00e9e no. 4, S. 215 no. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k1vyy",
            "EntityName": "Grande fantaisie dramatique sur des th\u00e8mes de l'op\u00e9ra Les Huguenots, S. 412/3, R. 211 \\\"R\u00e9miniscences des Huguenots\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k1zfy",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 3. Hymne de la nuit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k2hjr",
            "EntityName": "La Campanella : Nu Rave"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k2w2c",
            "EntityName": "Von der Wiege bis zum Grabe, S. 107: II. Der Kampf ums Dasein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k3r2f",
            "EntityName": "Album-Leaf: Fugue chromatique. Allegro in G minor, S. 167j"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k4wp1",
            "EntityName": "Album-Leaf: Schlusschor des entfesselten Prometheus. Andante solenne in D-flat major, S. 167q"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5_7f",
            "EntityName": "Glanes de Woronince, S. 249: No. 1. Ballade ukraine (Dumka)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5h1b",
            "EntityName": "Hexam\u00e9ron, S. 392: IV. Variation II. Moderato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5tlv",
            "EntityName": "Fantasie \u00fcber zwei Motive aus W. A. Mozarts Die Hochzeit des Figaro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5txc",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 4 in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k5z3t",
            "EntityName": "Orpheus, S. 672a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7_83",
            "EntityName": "Album-Leaf: Andante religioso, S. 166h"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7d20",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 8. Miserere d'apr\u00e8s Palestrina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7jrj",
            "EntityName": "Hungarian Coronation Mass, S. 11: III. Graduale (Psalm 116)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7r_6",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 2. Ave Maria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7tcp",
            "EntityName": "Romance oubli\u00e9e, S. 527 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7v7x",
            "EntityName": "Rigoletto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k7xc4",
            "EntityName": "Die Zelle in Nonnenwerth, S. 534/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k80_t",
            "EntityName": "Concerto for Piano and Orchestra no. 1 in E-flat major, S. 124: II. Quasi adagio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k8585",
            "EntityName": "Album Leaf in E major, S. 166a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k8g5x",
            "EntityName": "La perla, S. 326/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k8h3z",
            "EntityName": "Comment, disaient-ils, S. 535"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k8mfj",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 8c. Allegro moderato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k8w7x",
            "EntityName": "Hungarian Rhapsody no. 18 in F-sharp minor, S. 244 no. 18/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k8y_9",
            "EntityName": "Hungarian Rhapsody no. 4 in E-flat major, S. 244 no. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_k9270",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 2b. Au bord d'une source"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kc4xt",
            "EntityName": "Pr\u00e9ludes et Harmonies po\u00e9tiques et religieuses, S. 171d: No. 3 in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kch83",
            "EntityName": "Totentanz, S. 126/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kclgl",
            "EntityName": "Two Hungarian Recruiting Dances, S. 241 \\\"Zum Andenken\\\": No. 1. Kinizsi n\u00f3t\u00e1ja"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kd3k_",
            "EntityName": "Totentanz, S. 126: I. Andante - Allegro - Allegro moderato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kdclb",
            "EntityName": "Tre sonetti di Petrarca, S. 158: No. 3. Sonetto CXXIII. I' vidi in terra angelici costumi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kdg9m",
            "EntityName": "Die Lorelei, S. 531 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kdvb9",
            "EntityName": "Von der Wiege bis zum Grabe, S. 512: II. Der Kampf ums Dasein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kgn3h",
            "EntityName": "Marche fun\u00e8bre de Dom S\u00e9bastien, S. 402"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kgnnw",
            "EntityName": "Der Gl\u00fcckliche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kgy4j",
            "EntityName": "Hungarian Coronation Mass, S. 11: VI. Sanctus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh0xh",
            "EntityName": "Cavatine de Robert le Diable, S. 412a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kh114",
            "EntityName": "2 Cs\u00e1rd\u00e1s, S. 225: No. 2. Cs\u00e1rd\u00e1s obstin\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kj8cq",
            "EntityName": "Vive Henri IV, S. 239"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kknxt",
            "EntityName": "Ann\u00e9es de p\u00e8lerinage : Troisi\u00e8me ann\u00e9e, S. 163"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kky8l",
            "EntityName": "Hungarian Rhapsody no. 10 in E major, S. 244 no. 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kl2b_",
            "EntityName": "Tarantelle di bravura d\u2019apr\u00e8s la tarantelle de La muette de Portici, S. 386/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kl48s",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 5 in E major \\\"La Chasse\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_klb3q",
            "EntityName": "Romancero espagnol, S. 695c: No. 3. Jota aragonesa and coda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_klsjb",
            "EntityName": "Pilgerchor aus Tannh\u00e4user, S. 443/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_klt0f",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 11. (B\u00e9n\u00e9diction) (Pr\u00e9lude)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_km0pr",
            "EntityName": "Sz\u00f3zat und Hymnus, S. 486"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kmdzc",
            "EntityName": "Ave maris stella, S. 506"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_kmg7n",
            "EntityName": "Salve Regina, S. 669 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_zm3k2",
            "EntityName": "Hungarian Coronation Mass, S. 11: IV. Credo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010_2s39",
            "EntityName": "Romance oubli\u00e9e, S. 132c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010_h4tm",
            "EntityName": "Huldigungsmarsch, S. 228/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0102jhf9",
            "EntityName": "Die Ideale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010rq_ds",
            "EntityName": "Comment, disaient-ils, S. 276/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010sktc9",
            "EntityName": "Liebestraum As-Dur \\\"Oh Lieb, so lang du lieben kannst\\\", S. 541 Nr. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010t5vss",
            "EntityName": "S'il est un charmant gazon, S. 284/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010tqjtl",
            "EntityName": "Trois \u00e9tudes de concert, S. 144: III. \\\"Un sospiro\\\" in D-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010tvp4y",
            "EntityName": "Liebestraum As-Dur \\\"Oh Lieb, so lang du lieben kannst\\\", S. 541 Nr. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010v18r4",
            "EntityName": "Elegy no. 2, S. 131"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010vnfnb",
            "EntityName": "Enfant, si j'\u00e9tais roi, S. 283/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010xrcv1",
            "EntityName": "\u00c0 la Chapelle Sixtine, S. 461/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010xwjh8",
            "EntityName": "Slavimo slavno, Slaveni!, S. 503"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010xz0bw",
            "EntityName": "Ave Maria (d'Arcadelt), S. 659"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010xzd84",
            "EntityName": "Venezia e Napoli, S. 159"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010ylrsg",
            "EntityName": "La lugubre gondola"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010yv41_",
            "EntityName": "R\u00e9miniscences de Don Juan, S. 656"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010yzhb_",
            "EntityName": "Tu es Petrus, S. 664"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010z9xx3",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 259"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010zg4h2",
            "EntityName": "Marche hongroise, S. 425/2e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.010zp_k7",
            "EntityName": "\u00c9l\u00e9gie sur des motifs du Prince Louis Ferdinand de Prusse, S. 168/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0111plvp",
            "EntityName": "Pri\u00e8re et Berceuse de La muette de Portici d'Auber, S. 387: Pri\u00e8re"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0111rknp",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 259: III. Fugue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0111sz27",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 259: II. Adagio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0112d2jj",
            "EntityName": "Der traurige M\u00f6nch, S. 348"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0112k7sg",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 259: I. Fantasie"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012pkms8",
            "EntityName": "Ave Maria II, S. 38"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012qh9ny",
            "EntityName": "Fantasia quasi Concerto \\\"After Reading Dante\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rm3kh",
            "EntityName": "Festkantate zur Enth\u00fcllung des Beethoven-Denkmals in Bonn, S. 67: III. Andante mesto - Allegro maestoso - Recitativo - Largo maestoso - Allegro fuocoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rmc_6",
            "EntityName": "Festkantate zur Enth\u00fcllung des Beethoven-Denkmals in Bonn, S. 67: II. Allegro deciso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rmfq2",
            "EntityName": "Missa solennis zur Einweihung der Basilika in Gran, S. 9 \\\"Graner Messe\\\": I. Kyrie. Andante solenne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rr3sd",
            "EntityName": "Festkantate zur Enth\u00fcllung des Beethoven-Denkmals in Bonn, S. 67: I. Maestoso - Quasi allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rs0rl",
            "EntityName": "Missa solennis zur Einweihung der Basilika in Gran, S. 9 \\\"Graner Messe\\\": III. Credo. Antande maestoso, risoluto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012rs1yn",
            "EntityName": "Requiem f\u00fcr die Orgel, S. 266: VII. Postludium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012s01nw",
            "EntityName": "Festpolonaise, S. 619a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012txvd4",
            "EntityName": "La lugubre gondola, S. 134b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01326119",
            "EntityName": "Trauerode (Die Todten), S. 268 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0136h9xq",
            "EntityName": "Von der Wiege bis zum Grabe, S. 107"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0139fb8r",
            "EntityName": "Introitus, S. 268 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01v8ts",
            "EntityName": "Hungarian Rhapsodies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01vnc8",
            "EntityName": "La campanella"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02612sb",
            "EntityName": "Transcendental \u00c9tude No. 11"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02612wf",
            "EntityName": "Transcendental \u00c9tude No. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02639w6",
            "EntityName": "Transcendental \u00c9tude No. 12"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026dh9w",
            "EntityName": "Transcendental \u00c9tude No. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026dhf_",
            "EntityName": "Grande \u00e9tude de perfectionnement"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026h0ny",
            "EntityName": "Hungarian Rhapsody No. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026hcjw",
            "EntityName": "Transcendental \u00c9tude No. 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027067w",
            "EntityName": "Grand galop chromatique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027190w",
            "EntityName": "Transcendental \u00c9tude No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0271938",
            "EntityName": "Transcendental \u00c9tude No. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027197r",
            "EntityName": "Transcendental \u00c9tude No. 9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0272hyp",
            "EntityName": "Slavimo Slavno Slaveni!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027ltlc",
            "EntityName": "Christus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027p4hb",
            "EntityName": "Sposalizio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0281swx",
            "EntityName": "Transcendental \u00c9tude No. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pl1wj",
            "EntityName": "Transcendental \u00c9tude No. 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pl25h",
            "EntityName": "Transcendental \u00c9tude No. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pl2sr",
            "EntityName": "L\u00e9gende No. 1: St Fran\u00e7ois d'Assise"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q87w3",
            "EntityName": "Les pr\u00e9ludes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qj03k",
            "EntityName": "Hunnenschlacht"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02qyp74",
            "EntityName": "Hungarian Rhapsody No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rgtp1",
            "EntityName": "Don Sanche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rwyr2",
            "EntityName": "Ballade No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02xbdck",
            "EntityName": "Symphonic poems"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02z33nw",
            "EntityName": "Ce qu'on entend sur la montagne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c2fb3",
            "EntityName": "Fantasy and Fugue on the Theme B-A-C-H"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c2vm3",
            "EntityName": "Beethoven Symphonies"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c2wb1",
            "EntityName": "Feuille d'album, S.165"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c33k4",
            "EntityName": "Variation on a Waltz by Diabelli"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03cqyp7",
            "EntityName": "Prometheus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d82l9",
            "EntityName": "Piano Concerto No. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03hkrph",
            "EntityName": "Fantasy and Fugue on the chorale 'Ad nos ad salutarem undam'"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.046tk4",
            "EntityName": "Transcendental \u00c9tudes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047td29",
            "EntityName": "Hungarian Rhapsody No. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04csqyj",
            "EntityName": "Cs\u00e1rd\u00e1s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04cwnbx",
            "EntityName": "Mephisto Polka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04f0b80",
            "EntityName": "Sarabande and Chaconne from Handel's Almira"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gkv2m",
            "EntityName": "Tasso, Lamento e Trionfo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gm1w5",
            "EntityName": "Orpheus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqn2",
            "EntityName": "Ann\u00e9es de p\u00e8lerinage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hqzg",
            "EntityName": "Bagatelle sans tonalit\u00e9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jm_px",
            "EntityName": "Hungaria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04r0d6",
            "EntityName": "Totentanz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0509_d",
            "EntityName": "Mephisto Waltzes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.053lkj",
            "EntityName": "Sonata in B minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgkm",
            "EntityName": "Liebestr\u00e4ume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05p2482",
            "EntityName": "Ungarische Zigeunerweisen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zrsg_",
            "EntityName": "Waldesrauschen (Forest Murmurs)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zvtqk",
            "EntityName": "Gnomenreigen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zyy17",
            "EntityName": "Two Concert \u00c9tudes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.060wj1",
            "EntityName": "Nuages gris"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064bdl",
            "EntityName": "R\u00e9miniscences de Don Juan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0650nn",
            "EntityName": "Fantasy on Themes from Mozart's Figaro and Don Giovanni"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06571n",
            "EntityName": "Three Concert \u00c9tudes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06b73x",
            "EntityName": "Un sospiro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fhy0",
            "EntityName": "Faust Symphony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.070lyg",
            "EntityName": "Piano Concerto No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.076_vg",
            "EntityName": "Concerto path\u00e9tique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08db_x",
            "EntityName": "Dante Symphony"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08ftns",
            "EntityName": "Grandes etudes de Paganini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08pp46",
            "EntityName": "Piano Concerto No. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093r39",
            "EntityName": "Fun\u00e9railles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.093r4b",
            "EntityName": "Harmonies po\u00e9tiques et religieuses"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c8c3",
            "EntityName": "Dante Sonata"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gb9cp",
            "EntityName": "Hungarian Rhapsody No. 19"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gcpc6",
            "EntityName": "Sardanapale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09gdbkn",
            "EntityName": "Au bord d'une source"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b6lsc7",
            "EntityName": "Glanes de Woronince"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bx_6tv",
            "EntityName": "Rhapsodie espagnole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1c9kt",
            "EntityName": "Ouvert\u00fcre zu Tannh\u00e4user von Richard Wagner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1c9pf",
            "EntityName": "O du mein holder Abendstern: Recitativ und Romanze aus Wagners T\u00e4nnhauser"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1ghr6",
            "EntityName": "Tre sonetti del Petrarca"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1gj7f",
            "EntityName": "Dante Symphony (arrangement for piano)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chfwx",
            "EntityName": "Transcendental \u00c9tude No. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cq468",
            "EntityName": "Valse-Impromptu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dryn0m",
            "EntityName": "Hungarian Rhapsody no. 5 in E minor, S. 244 no. 5 \\\"H\u00e9ro\u00efde \u00e9l\u00e9giaque\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g52f7",
            "EntityName": "Dem Andenken Pet\u0151fis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgh9",
            "EntityName": "A magyarok Istene"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctghk",
            "EntityName": "An Edlitam. Zur silbernen Hochzeit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctghv",
            "EntityName": "Wartburglieder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgj_",
            "EntityName": "Six poesies. Buch der Lieder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgjs",
            "EntityName": "Bist du"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgl6",
            "EntityName": "Blume und Duft"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgn_",
            "EntityName": "Walther von der Vogelweide"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgnc",
            "EntityName": "Heinrich von Ofterdingen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgnp",
            "EntityName": "Am Rhein"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgp9",
            "EntityName": "Wolfram von Eschenbach"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgpm",
            "EntityName": "Der tugendhafte Schreiber"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgq8",
            "EntityName": "Reimar der Alte"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgql",
            "EntityName": "Biterolf und der Schmied von Ruhla"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgty",
            "EntityName": "An Frau Minne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgv7",
            "EntityName": "Tre sonetti di Petrarca"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgwr",
            "EntityName": "Pace non trovo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgxr",
            "EntityName": "Benedetto sia 'l giorno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gctgyr",
            "EntityName": "I' vidi in terra angelici costumi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcth3c",
            "EntityName": "Cantico del sol di San Francisco d'Assisi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxlt",
            "EntityName": "Der 18. Psalm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxm4",
            "EntityName": "Comment, disaient-ils"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxn7",
            "EntityName": "Das Grab und die Rose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxnk",
            "EntityName": "Der alte Vagabund"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxp4",
            "EntityName": "Muttergottes-Str\u00e4u\u00dflein zum Maimonate"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxqg",
            "EntityName": "Die Schl\u00fcsselblumen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gcwxqs",
            "EntityName": "Das Veilchen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjw5b",
            "EntityName": "Des toten Dichters Liebe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjw60",
            "EntityName": "Drei Lieder aus Schillers Wilhelm Tell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjw6y",
            "EntityName": "Die drei Zigeuner"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjw7h",
            "EntityName": "Der traurige M\u00f6nch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjw8d",
            "EntityName": "Des Tages laute Stimmen schweigen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwfb",
            "EntityName": "Der Alpenj\u00e4ger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwg0",
            "EntityName": "Der Hirt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwh7",
            "EntityName": "Der Fischerknabe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwrq",
            "EntityName": "Die Loreley"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwsb",
            "EntityName": "Die Macht der Musik"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwt4",
            "EntityName": "Die Perle"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwtg",
            "EntityName": "Die Lore Ley: neue umgearbeitete Ausg."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdjwvk",
            "EntityName": "Die stille Wasserrose"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdphzq",
            "EntityName": "Weimars Volkslied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdphzz",
            "EntityName": "Weil noch, Sonnenstrahl"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj03",
            "EntityName": "Wo weilt er? (Heimat)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj0d",
            "EntityName": "Wie entgehn der Gefahr?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj1c",
            "EntityName": "Was tun?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj1r",
            "EntityName": "Wer nie sein Brot mit Tr\u00e4nen a\u00df"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj2x",
            "EntityName": "Wir sind nicht Mumien"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj3d",
            "EntityName": "Wie singt die Lerche sch\u00f6n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdpj4n",
            "EntityName": "Wieder m\u00f6cht' ich dir begegnen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gds0jl",
            "EntityName": "Angiolin dal biondo crin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gds0k8",
            "EntityName": "Angiolin dal biondo crin (Arranged for solo piano)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gvbrm5",
            "EntityName": "Anfangs wollt ich fast verzagen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1dgb2",
            "EntityName": "Mazeppa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h42bj",
            "EntityName": "Variation on the March from Bellini's I Puritani"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j43t42",
            "EntityName": "Hungarian Rhapsody no. 8 in F-sharp minor, S. 244 no. 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7j269",
            "EntityName": "Hungarian Rhapsody no. 12 in C-sharp minor, S. 244 no. 12"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7myct",
            "EntityName": "Hungarian Rhapsody No. 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7n240",
            "EntityName": "Hungarian Rhapsody no. 9 in E-flat major, S. 244 no. 9 \\\"Carnival in Pest\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jwsjv4",
            "EntityName": "Hungarian Rhapsody No. 15"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0rg1s",
            "EntityName": "Hungarian Rhapsody no. 18 in F-sharp minor, S. 244 no. 18"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7f6v",
            "EntityName": "Apr\u00e9s une lecture du Dante, S. 161/7 (Ann\u00e9es de P\u00e9l\u00e8rinage II/7)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7f7c",
            "EntityName": "La Lugubre gondola I, S. 200/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7f92",
            "EntityName": "R.W.-Venezia, S. 201"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7f9v",
            "EntityName": "Li marinari"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7fcn",
            "EntityName": "Valse-caprice No. 9 (Sehnsuchtswalzer), S. 427/9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7fcy",
            "EntityName": "Seven brilliant variations on a theme by Rossini, S. 149"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pd7fd6",
            "EntityName": "Isoldens Liebestod, S. 447"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rpglnv",
            "EntityName": "Salve Regina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh13q9",
            "EntityName": "Pastorale, S. 160 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh22tw",
            "EntityName": "Gondoliera, S. 162 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh304l",
            "EntityName": "Konzert-Walzer \u00fcber zwei Themen aus Donizettis \\\"Lucia und Parisina\\\", S. 401"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh3j8j",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 12. Polnisch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh47g4",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 11. Ungarisch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh4t1x",
            "EntityName": "Ai No Yume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh616r",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 5 in B-flat major (Equalmente)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh6cr5",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 9 in A-flat major (Andantino)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh7_4z",
            "EntityName": "Legend no. 2: \\\"St. Francis Walking on the Waves\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zh8zg7",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 7. Schlummerlied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhb9lb",
            "EntityName": "Pr\u00e4ludium und Fuge \u00fcber den Namen BACH, S. 260: I. Pr\u00e4ludium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhc9zq",
            "EntityName": "Deux l\u00e9gendes, S. 175: St. Fran\u00e7ois d'Assise: la pr\u00e9dication aux oiseaux"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhdq_k",
            "EntityName": "Pr\u00e4ludium und Fuge \u00fcber den Namen BACH, S. 260: II. Fuge"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhdzp6",
            "EntityName": "En r\u00eave - Nocturne, S. 207"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhgsrh",
            "EntityName": "Magyarische Litanei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhkncb",
            "EntityName": "Consolation in Des-Dur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhm7b6",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 11 in D-flat major (Lento assai)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhmvpz",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 5. Scherzoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhss7z",
            "EntityName": "Consolation in E-Dur"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhw_6d",
            "EntityName": "Marche fun\u00e8bre, S. 163 no. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhxggl",
            "EntityName": "Klavierst\u00fcck in F-sharp major, S. 192 no. 3. Sehr langsam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhxt9m",
            "EntityName": "Orage, S. 160 no. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhywqf",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 3. Die Hirten an der Krippe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zhz5dw",
            "EntityName": "\u00c0 la Chapelle Sixtine, S. 360"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj0w5h",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 10 in F minor (Presto molto agitato)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj0wf3",
            "EntityName": "Fantasie \u00fcber Themen aus Beethoven's Ruinen von Athen, S. 388b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj170z",
            "EntityName": "Aus Lohengrin, S. 446: No. 3. Lohengrins Verweis an Elsa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj22vc",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 8. Altes provenzalisches Weihnachtslied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj2n1k",
            "EntityName": "Hungarian Rhapsody for Orchestra no. 2 in C minor, S. 359/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj3yh8",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 6. Carillon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj78m1",
            "EntityName": "Romance oubli\u00e9e, S. 527"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj7lmr",
            "EntityName": "Grande Fantaisie Symphonique on themes from Berlioz's \\\"L\u00e9lio\\\" for Piano and Orchestra, S. 120"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj8d6y",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 2 in A minor (Molto vivace a capriccio)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj9n6t",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 3 in F major (Poco adagio)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zj9v48",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 9. Abendglocken"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjgqjt",
            "EntityName": "Symphonic Poem no. 2 \\\"Tasso, Lament and Triumph\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjh6j6",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 7 in E-flat major (Allegro deciso)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjjt2l",
            "EntityName": "Ang\u00e9lus ! Pri\u00e8re aux anges gardiens, S. 163 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjk847",
            "EntityName": "Hungarian Rhapsody for Orchestra no. 4 in D minor, S. 359/4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjkxm2",
            "EntityName": "Consolation in D-flat major, S. 172 no. 4: Quasi adagio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjlcfy",
            "EntityName": "Variationen \u00fcber das Motiv von Bach, S. 180"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjmxll",
            "EntityName": "Unstern! Sinistre, disastro, S. 208, R. 80"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjnn4t",
            "EntityName": "Danza sacra e duetto finale d\u2019Aida, S. 436"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjq8q_",
            "EntityName": "Ballade No. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjrgg0",
            "EntityName": "O lieb, so lang du lieben kannst, S. 298/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjt0lb",
            "EntityName": "Aux cypr\u00e8s de la Villa d'Este II : Thr\u00e9nodie, S. 163 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjt7ql",
            "EntityName": "Consolation in E major, S. 172 no. 5: Andantino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjxbzb",
            "EntityName": "Tarantella, S. 162 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjzqqy",
            "EntityName": "Sz\u00f3zat und Hymnus, S. 353"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zjzxvn",
            "EntityName": "Vall\u00e9e d'Obermann, S. 160 no. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk09kw",
            "EntityName": "Consolation in E major, S. 172 no. 6: Allegretto sempre cantabile"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk1ppd",
            "EntityName": "Ebony Rhapsody"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk28h0",
            "EntityName": "Hungarian Rhapsody no. 3 in B-flat major, S. 244 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk2cx7",
            "EntityName": "Christmas Again"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk3833",
            "EntityName": "Canzone, S. 162 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk4pdz",
            "EntityName": "Die Trauer-Gondel (La lugubre gondola), S. 134"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk593z",
            "EntityName": "Deux \u00e9pisodes d'apres le Faust de Lenau, S. 110: I. Der n\u00e4chtliche Zug"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk8plm",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 12 in B-flat minor (Andantino)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zk9vgt",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 6 in G minor (Largo patetico)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkb_rb",
            "EntityName": "O du mein holder Abendstern, S. 444"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkbdlp",
            "EntityName": "Berceuse, S. 174/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkc2gw",
            "EntityName": "Romance oubli\u00e9e, S. 132a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkd68l",
            "EntityName": "Wiegenlied, S. 198"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkdlml",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 6 in A minor. Allegro con strepito"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkdxqh",
            "EntityName": "Grande \u00e9tude d'apr\u00e8s Paganini no. 2 in E-flat major, BV B 70"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkf0s1",
            "EntityName": "Consolation in E major, S. 172 no. 1: Andante con moto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkgy4w",
            "EntityName": "Consolation No. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkhdp6",
            "EntityName": "Elegy no. 1, S. 196"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkhv_k",
            "EntityName": "Valse oubli\u00e9e no. 2 in A-flat major, S. 215 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkkvnd",
            "EntityName": "Impromptu in F-sharp major, S. 191/2, R. 59 \\\"Nocturne\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zklkdl",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 1 in C major (Presto)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkm3nk",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 8 in C minor (Presto strepitoso)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkmn74",
            "EntityName": "Mal\u00e9diction, S. 121"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkmrw3",
            "EntityName": "Consolation in E major, S. 172 no. 2: Un poco pi\u00f9 mosso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkn057",
            "EntityName": "Les Jeux d'eaux \u00e0 la Villa d'Este, S. 163 no. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkpfnb",
            "EntityName": "Sunt lacrymae rerum / En mode hongrois, S. 163 no. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkqpvg",
            "EntityName": "Eglogue, S. 160 no. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkrwc5",
            "EntityName": "Es muss ein Wunderbares sein, S. 314"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zksllg",
            "EntityName": "R\u00e1koczy March in A minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkvv95",
            "EntityName": "Il penseroso, S. 161 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zkwzgb",
            "EntityName": "Valse oubli\u00e9e no. 3, S. 215 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl10ls",
            "EntityName": "Hungarian Rhapsody for Orchestra no. 1 in F minor, S. 359/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl17yh",
            "EntityName": "Carrousel de Madame Pelet-Narbonne, S. 214a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl5xgs",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 10. Ehemals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl7dhj",
            "EntityName": "Einleitung, Fuge und Magnificat, S. 672b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl84x2",
            "EntityName": "Hungarian Rhapsody for Orchestra no. 6 in D-flat major \\\"Carnival in Pest\\\", S. 359/6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zl9xd1",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 2. O heilige Nacht!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zld9tx",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 7 in A major. Allegro spiritoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zldbx2",
            "EntityName": "Douze grandes \u00e9tudes, S. 137: No. 4 in D minor (Allegro patetico)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zldhcv",
            "EntityName": "R\u00e9miniscences de Boccanegra, S. 438"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zldq44",
            "EntityName": "Eine Symphonie zu Dantes Divina Commedia, S. 109: II. Purgatorio - Magnificat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlgv4f",
            "EntityName": "Aux cypr\u00e8s de la Villa d'Este I : Thr\u00e9nodie, S. 163 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlh1yh",
            "EntityName": "Miserere du Trovatore, S. 433"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlhgnv",
            "EntityName": "Au lac de Wallenstadt, S. 160 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlhgvj",
            "EntityName": "Evocation \u00e0 la Chapelle Sixtine, S. 658"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlntld",
            "EntityName": "\u00c0 la Chapelle Sixtine, S. 461/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlpc6t",
            "EntityName": "Valse oubli\u00e9e no. 1, S. 215 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlqwtq",
            "EntityName": "\u00dcber allen Gipfeln ist Ruh, S. 306"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlrrg1",
            "EntityName": "Weihnachtsbaum, S. 186: Nr. 1. Altes Weihnacthslied (Psalite)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlsts8",
            "EntityName": "Liebestraum As-Dur \\\"Hohe Liebe\\\", S. 541 Nr. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlsxz2",
            "EntityName": "Le Mal du pays, S. 160 no. 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zltqdr",
            "EntityName": "Sonetto 104 del Petrarca"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlwbzp",
            "EntityName": "Die Zelle in Nonnenwerth, S. 382"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlwd67",
            "EntityName": "Eine Symphonie zu Dantes Divina Commedia, S. 109: I. Inferno"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlwkdd",
            "EntityName": "Morceau de salon (\u00e9tude de perfectionnement), S. 142"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlx8ty",
            "EntityName": "Freisch\u00fctz Fantasie, S. 451"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlxw04",
            "EntityName": "R\u00e1k\u00f3czy March, S. 117"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zlzv51",
            "EntityName": "Pilgerchor aus Tannh\u00e4user, S. 443/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm1y8k",
            "EntityName": "Fantasie \u00fcber Motive aus Beethovens Ruinen von Athen, S. 122"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm3sy6",
            "EntityName": "Valse de l'op\u00e9ra \\\"Faust\\\", S. 407"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zm40hc",
            "EntityName": "Suite no. 4 in G major, op. 61 \\\"Mozartiana\\\": III. Preghiera: Andante non tanto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp_kv0",
            "EntityName": "In festo transfigurationis Domini nostri Jesu Christi, S. 188"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp_m4m",
            "EntityName": "Abschied, S. 251"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp4c_5",
            "EntityName": "Le Triomphe fun\u00e8bre du Tasse, S. 517"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp4f_l",
            "EntityName": "Illustrations de l'op\u00e9ra L'Africaine, S. 415: No. 2. Marche indienne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp5gxt",
            "EntityName": "\u00c9l\u00e9gie sur des motifs du Prince Louis Ferdinand de Prusse, S. 168/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp6qyb",
            "EntityName": "Mephisto Waltz no. 2, S. 515"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp7_fz",
            "EntityName": "Via Crucis, S. 504a: Station X: J\u00e9sus est d\u00e9pouill\u00e9 de ses v\u00eatements"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp7c05",
            "EntityName": "Trauervorspiel und Trauermarsch, S. 206: No. 2. Trauermarsch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp7p5q",
            "EntityName": "Recueillement, S. 204"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp7rh5",
            "EntityName": "Am Grabe Richard Wagners, S. 202"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp7stm",
            "EntityName": "Drei St\u00fccke aus der Legende der heiligen Elisabeth, S. 498a: Nr. 3. Interludium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp8_g7",
            "EntityName": "Via Crucis, S. 504a: Station VII: J\u00e9sus tombe pour la seconde fois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp85wb",
            "EntityName": "Les Morts, S. 516"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp8646",
            "EntityName": "Aus der Ungarischen Kr\u00f6nungsmesse, S. 501: II. Offertorium"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp8xxk",
            "EntityName": "Via Crucis, S. 53: Station VII: Jesus f\u00e4llt zum zweiten Mal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp99ms",
            "EntityName": "Trauervorspiel und Trauermarsch, S. 206: No. 1. Trauervorspiel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zp9n0p",
            "EntityName": "Via Crucis, S. 53: Station III: Jesus f\u00e4llt zum ersten Mal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpczyb",
            "EntityName": "Alleluia, S. 183 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zph5c9",
            "EntityName": "Elegy no. 2, S. 197"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zphdb5",
            "EntityName": "Epithalam, S. 526"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zphw6n",
            "EntityName": "Deux Polonaises de l'oratorio St. Stanislas, S. 519: Polonaise II"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpkfbh",
            "EntityName": "Drei St\u00fccke aus der Legende der heiligen Elisabeth, S. 498a: Nr. 1. Orchester Einleitung"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpl05p",
            "EntityName": "Von der Wiege bis zum Grabe, S. 107: I. Die Wiege"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpl3ln",
            "EntityName": "Klavierst\u00fcck in A-flat major, S. 192 no. 2. Lento assai"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zplsm9",
            "EntityName": "Mephisto Waltz no. 3, S. 216"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpmrb7",
            "EntityName": "Klavierst\u00fcck \u00fcber ein fremdes Thema, S. 387a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpn84l",
            "EntityName": "Via Crucis, S. 504a: Station IV: J\u00e9sus rencontre sa tr\u00e8s sainte m\u00e8re"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpnz8y",
            "EntityName": "Via Crucis, S. 53: Station I: Jesus wird zum Tode verdammt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zppnx5",
            "EntityName": "Salve Polonia, S. 518"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpqxy7",
            "EntityName": "Via Crucis, S. 504a: Station XI: J\u00e9sus est attach\u00e9 \u00e0 la croix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpr9x8",
            "EntityName": "Via Crucis, S. 504a: Station V: Simon le Cyr\u00e9n\u00e9en aide J\u00e9sus \u00e0 porter sa croix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zprmr4",
            "EntityName": "Via Crucis, S. 53: Station XI: Jesus wird ans Kreuz geschlagen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpsp0v",
            "EntityName": "Via Crucis, S. 504a: Station VIII: Les Femmes de J\u00e9rusalem"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zptwrx",
            "EntityName": "Drei St\u00fccke aus der Legende der heiligen Elisabeth, S. 498a: Nr. 2. Marsch der Kreuzritter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpw6rk",
            "EntityName": "Via Crucis, S. 53: Station XIV: Jesus wird ins grab gelegt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpxl0n",
            "EntityName": "Halloh!, Jagdchor und Steyrer aus der Oper Tony, S. 404"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpy618",
            "EntityName": "Albumblatt in Walzerform, S. 166"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpzg5l",
            "EntityName": "Sospiri!, S. 192 no. 5. Andante"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zpzvvv",
            "EntityName": "Via Crucis, S. 504a: Station VI: Sancta Veronica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq_2js",
            "EntityName": "Deux Polonaises de l'oratorio St. Stanislas, S. 519: Polonaise I"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq_8wm",
            "EntityName": "Von der Wiege bis zum Grabe, S. 107: III. Die Wiege des zukunftigen Lebens"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq10fr",
            "EntityName": "Via Crucis, S. 53: Station V: Simon von Kyrene hilft Jesus das Kreuz zu tragen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq2bcd",
            "EntityName": "Mariotte \u2013 Valse de Marie, S. 212b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq33hb",
            "EntityName": "Puszta-Wehmut, S. 246"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq39sx",
            "EntityName": "Via Crucis, S. 53: Station VIII: Die Frauen von Jerusalem"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq3z68",
            "EntityName": "Via Crucis, S. 504a: Station IX: J\u00e9sus tombe une troisi\u00e8me fois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq43hs",
            "EntityName": "In domum Domini ibimus, S. 505"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq4cjk",
            "EntityName": "Valse de bravoure, S. 214 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq4fzq",
            "EntityName": "O Roma nobilis, S. 546a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq50nx",
            "EntityName": "Chor\u00e4le, S. 506a: No. 3. Meine Seele erhebt den Herrn (Der Kirchensegen, Psalm 67)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq5470",
            "EntityName": "Klavierst\u00fcck in F-sharp major, S. 192 no. 4. Andantino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq5yvd",
            "EntityName": "Grosses Konzertsolo, S. 176"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq7236",
            "EntityName": "La notte, S. 516a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq74gz",
            "EntityName": "Via Crucis, S. 53: Station IX: Jesus f\u00e4llt zum dritten Mal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq797c",
            "EntityName": "Via Crucis, S. 504a: Station XIV: J\u00e9sus est mis dans le sepulcre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq9c1c",
            "EntityName": "Via Crucis, S. 53: Station VI: Sancta Veronica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zq9xcx",
            "EntityName": "L'Id\u00e9e fixe, S. 470a no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqbfvd",
            "EntityName": "Via Crucis, S. 53: Station IV: Jesus begegnet seiner Heiligen Mutter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqbh1g",
            "EntityName": "Via Crucis, S. 53: Station XII: Jesus stirbt am Kreuze"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqfmw7",
            "EntityName": "Resignazione, S. 187a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqfznl",
            "EntityName": "Mephisto Waltz no. 2, S. 111"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqgzgr",
            "EntityName": "Der blinde S\u00e4nger, S. 546"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqhbpx",
            "EntityName": "Chor\u00e4le, S. 506a: No. 2. Jesu Christe: Die f\u00fcnf Wunden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqhgwg",
            "EntityName": "Via Crucis, S. 504a: Station XIII: J\u00e9sus est d\u00e9pos\u00e9 de la croix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqhwvg",
            "EntityName": "Valse m\u00e9lancolique, S. 214 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqknvb",
            "EntityName": "Illustrations de l'op\u00e9ra L'Africaine, S. 415: No. 1. Pri\u00e8re des matelots \\\"\u00d4 grand Saint Dominique\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqldnc",
            "EntityName": "Chor\u00e4le, S. 506a: No. 5. Nun ruhen all W\u00e4lder"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqlyzk",
            "EntityName": "Via Crucis, S. 53: Station XIII: Jesus wird vom Kreuz genommen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqmzs_",
            "EntityName": "R\u00e9miniscences de Norma, S. 394"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqn246",
            "EntityName": "Via Crucis, S. 504a: Station XII: J\u00e9sus meurt sur la croix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqqvpl",
            "EntityName": "Aus der Ungarischen Kr\u00f6nungsmesse, S. 501: I. Benedictus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqsknl",
            "EntityName": "Mephisto Waltz no. 4, S. 696"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqtbr2",
            "EntityName": "Klavierst\u00fcck in A-flat major, S. 189"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqthnq",
            "EntityName": "Mosonyis Grabgeleit, S. 194"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqvs04",
            "EntityName": "L'Id\u00e9e fixe, S. 395"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqw_pt",
            "EntityName": "Schlaflos!, S. 203"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqwkmf",
            "EntityName": "Chor\u00e4le, S. 506a: No. 8. O Traurigkeit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqxjvc",
            "EntityName": "Via Crucis, S. 504a: Station II: J\u00e9sus est charg\u00e9 de sa croix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqxjvj",
            "EntityName": "Via Crucis, S. 53: Station II: Jesus tr\u00e4gt sein Kreuz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqxwpl",
            "EntityName": "Sancta Dorothea, S. 187"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqys2p",
            "EntityName": "Magyar kir\u00e1ly-dal, S. 544"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zqzzjs",
            "EntityName": "Tscherkessenmarsch aus Russlan und Ludmilla, S. 406/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr0_fj",
            "EntityName": "Urbi et orbi, S. 184"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr0xnp",
            "EntityName": "L'Hymne du Pape, S. 530"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr1_3r",
            "EntityName": "Via Crucis, S. 504a: Station I: J\u00e9sus est condamn\u00e9 \u00e0 mort"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr29b8",
            "EntityName": "Klavierst\u00fcck in F-sharp major, S. 193"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr2nkk",
            "EntityName": "Toccata, S. 197a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr33_n",
            "EntityName": "Festkl\u00e4nge, S. 101"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr3x3t",
            "EntityName": "Via Crucis, S. 53: Station X: Jesus wird entkleidet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr5tpn",
            "EntityName": "Chor\u00e4le, S. 506a: No. 1. Crux ave benedicta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr5v53",
            "EntityName": "L\u00e4ndler in A-flat major, S. 211"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zr6y77",
            "EntityName": "H\u00e9ro\u00efde fun\u00e8bre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs8bz5",
            "EntityName": "Fantasie sur l'\u00f3pera hongroise Sz\u00e9p Ilonka, S. 417"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs8kpt",
            "EntityName": "\u00c9tude en douze exercices, S. 136: V. Moderato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs8mdw",
            "EntityName": "Festvorspiel, S. 226"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs8qr2",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 7a. Allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs8v0s",
            "EntityName": "Huit variations, op. 1, S. 148"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs8zwj",
            "EntityName": "Apparitions, S. 155: No. 1. Senza lentezza quasi allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs9145",
            "EntityName": "Ungarische Nationalmelodien, S. 243: No. 2. Animato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs93pc",
            "EntityName": "Vom Fels zum Meer!, S. 229"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs96rb",
            "EntityName": "Huldigungsmarsch, S. 228ii"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs9gw4",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 624: III. Fugue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs9jln",
            "EntityName": "Mazurka brilliante, S. 221"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zs9y4c",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 9a. Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsb8ly",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 8a. Andante con sentimento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsbd5c",
            "EntityName": "Il m'aimait tant, S. 533"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsbdw4",
            "EntityName": "Konzertparaphrase \u00fcber Mendelssohns Hochzeitsmarsch und Elfenreigen aus der Musik zu Shakespeares Sommernachtstraum, S. 410"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsbvsr",
            "EntityName": "Hussitenlied, S. 234"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsbz63",
            "EntityName": "Aus der Musik von Eduard Lassen zu Hebbels Nibelungen und Goethes Faust, S. 496: II. Faust: 2. Hoffest: Marsch und Polonaise"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsc49m",
            "EntityName": "Walzer in A major, S. 208a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zscc9f",
            "EntityName": "\u00c9tude en douze exercices, S. 136: II. Allegro con molto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsclh4",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 6. Psaume"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zscssg",
            "EntityName": "San Francesco, S. 498d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zscxhr",
            "EntityName": "Oh! quand je dors, S. 536"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsd1pg",
            "EntityName": "Galop (in A minor), S. 218"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsd70y",
            "EntityName": "Marche h\u00e9ro\u00efque, S. 510"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsd9m4",
            "EntityName": "Festpolonaise, S. 230a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsdbc7",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 4. Vall\u00e9e d'Obermann"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsdcb_",
            "EntityName": "Apparitions, S. 155: No. 3. Fantaisie sur une valse de Fran\u00e7ois Schubert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsdf99",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 9c. Andantino con molto sentimento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsds29",
            "EntityName": "Illustrations du Proph\u00e8te, S. 414: No. 3: Pastorale - Appel aux armes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsdvh9",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 7c. Allegro pastorale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsdx6j",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 624: I. Fantasy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsf004",
            "EntityName": "Feuille d\u2019album no. 1 in E major, S. 164"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsfvk4",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 1. Lyon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsg6l6",
            "EntityName": "Gebet, S. 265"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsg81f",
            "EntityName": "Klavierst\u00fcck aus der Bonn Beethoven-Kantate, S. 507"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsgdtw",
            "EntityName": "Apparitions, S. 155: No. 2. Vivamente"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsgqvj",
            "EntityName": "Adela\u00efde von Beethoven, S. 466: Cadenza ad libitum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsgxk4",
            "EntityName": "\u00c9tude en douze exercices, S. 136: VII. Allegretto con molta espressione"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsgxv3",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 8b. Andante molto espressivo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsh_rj",
            "EntityName": "Canzone napolitana, S. 248"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsh0k3",
            "EntityName": "Pastorale, S. 508"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsh0kw",
            "EntityName": "Scherzo und Marsch, S. 177"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsh4t9",
            "EntityName": "Album d'un voyageur, S. 156: III. Paraphrases: 10. Ranz de vaches [de F. Huber] - Aufzug auf die Alp - Improvisata"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsh94g",
            "EntityName": "Scherzo in G minor, S. 153"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshf14",
            "EntityName": "\u00c9tude en douze exercices, S. 136: VI. Molto agitato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshgjr",
            "EntityName": "La Tombe et la rose, S. 539"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshl1d",
            "EntityName": "Romance, S. 169"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshlyh",
            "EntityName": "\u00c9tude en douze exercices, S. 136: III. Allegro sempre legato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshrhb",
            "EntityName": "Aus der Musik von Eduard Lassen zu Hebbels Nibelungen und Goethes Faust, S. 496: II. Faust: 1. Osterhymne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshs5p",
            "EntityName": "Grande Fantaisie sur des motifs de Soir\u00e9es musicales, S. 422/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshy90",
            "EntityName": "Sept variations brillantes sur un th\u00e8me de Rossini, op. 2, S. 149"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zshzqf",
            "EntityName": "\u00c9tude en douze exercices, S. 136: X. Moderato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsj1sh",
            "EntityName": "Venezia e Napoli, S. 159: No. 2. Allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsj3xx",
            "EntityName": "Ungarischer Geschwindmarsch, S. 233"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsj98w",
            "EntityName": "Album d'un voyageur, S. 156: III. Paraphrases: 11. Un soir dans les montagnes [de Knop] - Nocturne pastorale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjbl_",
            "EntityName": "\u00c9tude en douze exercices, S. 136: XII. Allegro non troppo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjdmq",
            "EntityName": "\u00c9tude en douze exercices, S. 136: I. Allegro con fuoco"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjghw",
            "EntityName": "B\u00fclow-Marsch, S. 230"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjgw7",
            "EntityName": "Leyer und Schwert, S. 452: I. [Introduction]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjjhl",
            "EntityName": "Siegesmarsch, S. 233a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjlb2",
            "EntityName": "Zweite Festmarsch nach Motiven von E H z S-C-G, S. 522"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjrq9",
            "EntityName": "Fantasie und Fuge \u00fcber den Choral Ad nos, ad salutarem undam, S. 624: II. Adagio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjwcr",
            "EntityName": "Feierlicher Marsch zum heiligen Gral aus Parsifal, S. 450"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjy9y",
            "EntityName": "Ungarischer Sturmmarsch, S. 524"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjyhn",
            "EntityName": "Rondo di bravura, op. 4 no. 2, S. 152"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsjynd",
            "EntityName": "Album d'un voyageur, S. 156: III. Paraphrases: 12. Ranz de chevres [de F. Huber] - Allegro finale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsk0n7",
            "EntityName": "\u00c9tude en douze exercices, S. 136: XI. Allegro grazioso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsk1c8",
            "EntityName": "Canzone napolitana, S. 248a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsk781",
            "EntityName": "Aus der Musik von Eduard Lassen zu Hebbels Nibelungen und Goethes Faust, S. 496: I. Nibelungen: 1. Hagen und Kriemhild"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsk9vy",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 9b. Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zskcgc",
            "EntityName": "Ungarischer Marsch zur Kr\u00f6nungsfeier in Ofen-Pest am 8. Juni 1867, S. 523"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsklrc",
            "EntityName": "Aus der Musik von Eduard Lassen zu Hebbels Nibelungen und Goethes Faust, S. 496: I. Nibelungen: 2. Bechlarn"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zskmjy",
            "EntityName": "Venezia e Napoli, S. 159: No. 3. Andante placido"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zskptm",
            "EntityName": "Venezia e Napoli, S. 159: No. 4. Tarantelles napolitaines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zskvzf",
            "EntityName": "Faribolo pastour, S. 236 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zskwrz",
            "EntityName": "Gastibelza, S. 540"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsl61h",
            "EntityName": "K\u00fcnstlerfestzug zur Schillerfeier 1859, S. 520/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zslbt2",
            "EntityName": "Illustrations du Proph\u00e8te, S. 414: No. 1. Pri\u00e8re - Hymne triomphal - Marche du sacre"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsljt_",
            "EntityName": "R\u00e1k\u00f3czi-Marsch, S. 244a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zslkjc",
            "EntityName": "Marche hongroise, S. 233b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zslkmr",
            "EntityName": "\u00c9tude en douze exercices, S. 136: IV. Allegro grazioso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zslsy0",
            "EntityName": "Angiolin, S. 531 no. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsltdr",
            "EntityName": "Ora pro nobis, S. 262"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsm3b4",
            "EntityName": "Ungarische Nationalmelodien, S. 243: No. 3. Pr\u00e9lude. Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsm3q_",
            "EntityName": "Es war ein K\u00f6nig in Thule, S. 531 no. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsm4l7",
            "EntityName": "Schlummerlied mit Arabesken, S. 454"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsm553",
            "EntityName": "\u00c9tude en douze exercices, S. 136: IX. Allegro grazioso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsm562",
            "EntityName": "\u00c9tude en douze exercices, S. 136: VIII. Allegro con spirito"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsm5b4",
            "EntityName": "Feuille d'album no. 2, S. 167"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsmvl3",
            "EntityName": "Festmarsch zur Goethe-Jubil\u00e4umfeier, S. 521"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsn9vs",
            "EntityName": "Leyer und Schwert, S. 452: II. Schwertlied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsnbcw",
            "EntityName": "Der du vom Himmel bist, S. 531 no. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsnkng",
            "EntityName": "Chanson du B\u00e9arn, S. 236 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsnq7_",
            "EntityName": "Venezia e Napoli, S. 159: No. 1. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsnws0",
            "EntityName": "Impromptu brillant sur des th\u00e8mes de Rossini et Spontini, op. 3, S. 150"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsnxq1",
            "EntityName": "Album d'un voyageur, S. 156: II. Fleurs m\u00e9lodiques des Alpes: 7b. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsp37c",
            "EntityName": "Allegro di bravura, op. 4 no. 1, S. 151"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsp7j0",
            "EntityName": "Ungarische Nationalmelodien, S. 243: No. 1. Tempo giusto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zspwpm",
            "EntityName": "Variation \u00fcber einen Walzer von Diabelli, S. 147"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsq1nx",
            "EntityName": "Capriccio alla turca sur des motifs de Beethoven, S. 388"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsqhq2",
            "EntityName": "Petite Valse favorite, S. 212a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsqks3",
            "EntityName": "Heroischer Marsch im ungarischem Stil, S. 231"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsqw6z",
            "EntityName": "Einsam bin ich, nicht allein, S. 453"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zsqwtj",
            "EntityName": "Galop de bal, S. 220"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv44tc",
            "EntityName": "Den Cypressen der Villa d'Este, S. 162b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv463w",
            "EntityName": "Grande fantaisie sur la tyrolienne de l'op\u00e9ra La fianc\u00e9e de Auber, S. 385/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv46zm",
            "EntityName": "Magyar dalok, S. 242: No. 8 in F minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv47zg",
            "EntityName": "A holt k\u00f6lt\u0151 szerelme, S. 349"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4868",
            "EntityName": "Magyar dalok, S. 242: No. 6 in G minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv48td",
            "EntityName": "Marie-Po\u00e8me, S. 701b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4fbs",
            "EntityName": "Elsas Brautzug zum M\u00fcnster, S. 445 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4fzg",
            "EntityName": "Helge's Treue, S. 686"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4g6z",
            "EntityName": "Paraphrase de concert sur Ernani I, S. 431a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4kl1",
            "EntityName": "Valse \u00e0 capriccio sur deux motifs de Lucia et Parisina de Donizetti, S. 401"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4mq3",
            "EntityName": "Schlummerlied, S. 186/7a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4n3n",
            "EntityName": "Valse m\u00e9lancolique, S. 210"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4p06",
            "EntityName": "Valse, S. 210b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4qnl",
            "EntityName": "Glasgow fragment, S. 701f"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4sx_",
            "EntityName": "Magnificat, S. 182a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4sxx",
            "EntityName": "Album-Leaf: Moderato in D-flat major, S. 164k"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4v57",
            "EntityName": "Melodie in Dorische Tonart, S. 701d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4wxn",
            "EntityName": "Deux marches dans le genre hongrois, S. 693: No. 2 in B-flat minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4x13",
            "EntityName": "M\u00e9lodies hongroises d'apr\u00e8s Franz Schubert, S. 425: No. 1. Andante"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv4z0j",
            "EntityName": "Marche des Tcherkesses de l'op\u00e9ra Rouslan et Loudmila de Glinka, S. 406/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5_qc",
            "EntityName": "Morceau en fa majeur, S. 695"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv51tp",
            "EntityName": "R\u00e1k\u00f3czi-Marsch, S. 244b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv53_5",
            "EntityName": "Album-Leaf: Tempo di marcia in E-flat major, S. 167o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5482",
            "EntityName": "Marche hongroise, S. 425/2e bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv55w6",
            "EntityName": "R\u00e9miniscences des Puritains, S. 390/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5607",
            "EntityName": "Album-Leaf in A-flat, S. 166c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv56p0",
            "EntityName": "M\u00e9lodies hongroises d'apr\u00e8s Franz Schubert, S. 425: No. 3. Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5djm",
            "EntityName": "M\u00e9lodies hongroises d'apr\u00e8s Franz Schubert, S. 425: No. 2. Marche hongroise"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5f5s",
            "EntityName": "Phantasiest\u00fcck \u00fcber Motive aus Rienzi, S. 439"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5fd9",
            "EntityName": "Dante fragment, S. 701e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5hdx",
            "EntityName": "Il penseroso, S. 157b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5njx",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 10 in F major. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5r3q",
            "EntityName": "Album-Leaf, S. 167h"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv5sd_",
            "EntityName": "Responsorien und Antiphonen, S. 30: IV. Sabbato sancto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6_m1",
            "EntityName": "Krakowiak, S. 166m/4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv61hk",
            "EntityName": "Magyar tempo, S. 241b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv65ps",
            "EntityName": "Aus Lohengrin, S. 446: No. 2. Elsas Traum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv67d0",
            "EntityName": "La Mandragore, S. 698"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv686g",
            "EntityName": "Album-Leaf: Vivace ma non troppo in D-flat major, S. 167g"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6ctd",
            "EntityName": "Album-Leaf: Braunschweig Preludio, S. 166f"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6d56",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 11 in A minor. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6g1_",
            "EntityName": "Einleitung und Coda zu Rubinsteins \u00c9tude in C-Dur, S. 554a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6l1t",
            "EntityName": "Einleitung und Coda zu Raffs Walzer in Des-Dur, S. 551a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6mjm",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 1. Sz\u00e9chenyi Istv\u00e1n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6mlt",
            "EntityName": "Angelus!, S. 162a/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6svj",
            "EntityName": "Rosario, S. 670: No. 1. Mysteria gaudiosa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv6vhc",
            "EntityName": "Album-Leaf in E major, S. 167t"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv72h_",
            "EntityName": "Den Schutz-Engeln, S. 162a/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv77bq",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 2 in A-flat major. Poco allegro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv78_r",
            "EntityName": "Dumka, S. 249b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7839",
            "EntityName": "Schuberts ungarische Melodien, S. 425a: No. 3. Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7f56",
            "EntityName": "Introduction des Variations sur une marche du Si\u00e8ge de Corinthe, S. 421a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7gg8",
            "EntityName": "Album-Leaf: Magyar, S. 164e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7qdr",
            "EntityName": "Concerto sans orchestre, S. 524a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7r83",
            "EntityName": "Anfang einer Jugendsonate, S. 692b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7s7l",
            "EntityName": "Album-Leaf in D major, S. 164h"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7sbj",
            "EntityName": "Trois Chansons, S. 510a: No. 2. Avant la bataille"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7t_9",
            "EntityName": "Weihnachtsbaum, S. 185a: X. [Ehemals]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7wl1",
            "EntityName": "Valse m\u00e9lancolique, S. 210a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv7x5h",
            "EntityName": "Sunt lacrymae rerum \u2013 in ungarischen Weise, S. 162d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv873r",
            "EntityName": "Polnisch, S. 701g"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv8c2g",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 5. V\u00f6r\u00f6smarty Mih\u00e1ly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv8f7n",
            "EntityName": "Weihnachtsbaum, S. 185a: IX. [Abendglocken]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv8gc0",
            "EntityName": "Album-Leaf: Quasi mazurek in C major, S. 163e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv8h23",
            "EntityName": "Klavierst\u00fcck in D-flat major, S. 189b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv8l5n",
            "EntityName": "Litanies de Marie, S. 171e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv8tp5",
            "EntityName": "Album-Leaf: Adagio \u2013 religioso in C major, S. 164l"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9_1c",
            "EntityName": "Hyr\u0107, S. 166m/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9_30",
            "EntityName": "Trois morceaux suisses, S. 156a: No. 3. Ranz de ch\u00e8vres"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv917z",
            "EntityName": "Grande valse di bravura, S. 209"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv92ck",
            "EntityName": "Einzug der G\u00e4ste auf der Wartburg, S. 445 no. 1/c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv954m",
            "EntityName": "Seconde marche hongroise, S. 232"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv967p",
            "EntityName": "Geharnischte Lieder, S. 511: No. 2. Nicht gezagt!"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9b1p",
            "EntityName": "Album-Leaf in E major (Detmold), S. 164d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9bjr",
            "EntityName": "St. Stanislaus fragment, S. 688a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9d2m",
            "EntityName": "Magyar dalok, S. 242: No. 7 in E-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9frc",
            "EntityName": "Album-Leaf: Andantino in E-flat, S. 163a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9hg5",
            "EntityName": "Album-Leaf: Andante in E-flat major, S. 167r"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9jy6",
            "EntityName": "Album-Leaf in A-flat (Portugal), S. 166b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9kx_",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 5 in G-flat major. Moderato cantabile con affetto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9m6r",
            "EntityName": "Schuberts ungarische Melodien, S. 425a: No. 1. Andante"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9p46",
            "EntityName": "Album-Leaf, S. 167e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9q01",
            "EntityName": "Geharnischte Lieder, S. 511: No. 3. Es rufet Gott uns mahnend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9trf",
            "EntityName": "Schuberts ungarische Melodien, S. 425a: No. 2. Marcia (Marche hongroise)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zv9y53",
            "EntityName": "Weihnachtsbaum, S. 185a: I. Psallite - Altes Weihnachtslied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvb_6d",
            "EntityName": "Album-Leaf: Andante religiosamente in G major, S. 166j"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvb1cl",
            "EntityName": "L\u00e4ndler, S. 211a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvb6b0",
            "EntityName": "Grand solo de concert, S. 175a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvb9w6",
            "EntityName": "R\u00e9miniscences des Huguenots, S. 412/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvbbhm",
            "EntityName": "Trois Chansons, S. 510a: No. 1. La Consolation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvbc2m",
            "EntityName": "Fantasie \u00fcber englische Themen, S. 694"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvbjpj",
            "EntityName": "Ballade no. 2, S. 170a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvblhz",
            "EntityName": "Grande Fantaisie sur des th\u00e8mes de Paganini, S. 700/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvbmcc",
            "EntityName": "Festmarsch zu S\u00e4kularfeier von Goethes Geburtstag, S. 227"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvbp2t",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 9 in A-flat major. Preludio a capriccio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvbtct",
            "EntityName": "Marche hongroise, S425/2b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc_91",
            "EntityName": "Valse-caprice no. 6, S.427/6b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc0fc",
            "EntityName": "Weihnachtsbaum, S. 185a: VIII. [Alt-provenzalische No\u00ebl]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc0z7",
            "EntityName": "Drei M\u00e4rsche von Franz Schubert, S. 426: No. 2. Grande Marche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc277",
            "EntityName": "Chanson boh\u00e9mienne, S. 250 no. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc3n1",
            "EntityName": "Variations de bravoure sur des th\u00e8mes de Paganini, S. 700/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc6zj",
            "EntityName": "Schlummerlied im Grabe, S. 195a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvc8k8",
            "EntityName": "Ungarische National-Melodie, S. 242/13 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcjb3",
            "EntityName": "Entwurf der Ramann-Elegie, S. 196a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvclt7",
            "EntityName": "Magyar dalok, S. 242: No. 5 in D-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcn9m",
            "EntityName": "Trois Chansons, S. 510a: No. 3. L'Esp\u00e9rance"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcnkt",
            "EntityName": "Paralipom\u00e8nes \u00e0 la Divina Commedia, S. 158a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcq2c",
            "EntityName": "Magyar dalok, S. 242: No. 2 in C major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcrhr",
            "EntityName": "Mazurek, S. 166m/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcrnw",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 2 in C major. Andantino"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcw2d",
            "EntityName": "Responsorien und Antiphonen, S. 30: V. In officio defunctorum"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcwk6",
            "EntityName": "Ouvert\u00fcre zu Tannh\u00e4user, S. 442"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcwkf",
            "EntityName": "Album-Leaf in A major, S. 166s"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvcwyc",
            "EntityName": "Angelus! Pri\u00e8re \u00e0 l'ange gardien, S. 162a/4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvczyv",
            "EntityName": "Operatic aria, S. 701h/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvd1_2",
            "EntityName": "Prol\u00e9gom\u00e8nes \u00e0 la Divina Commedia, S. 158b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvd1_8",
            "EntityName": "Weihnachtsbaum, S. 185a: XII. Polnisch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvd87n",
            "EntityName": "Ungarische National-Melodien (Im leichten Style bearbeitet), S. 243bis: No. 2 in C major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvdd4t",
            "EntityName": "Adagio non troppo, S. 151a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvdj3s",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 6. Pet\u00f6fi S\u00e1ndor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvdkwx",
            "EntityName": "Prozinsky Fragment for piano, S. 701v"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvdyl8",
            "EntityName": "Romancero espagnol, S. 695c: No. 2. Elaboration of an unidentified theme"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvf2n7",
            "EntityName": "Postludium, S. 162f"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvfg04",
            "EntityName": "Album-Leaf: Andantino in A-flat major, S. 166p"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvfhkb",
            "EntityName": "Aus Lohengrin, S. 446: No. 1. Festspiel und Brautlied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvfhvv",
            "EntityName": "Paraphrase de concert sur Ernani II, S. 432"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvfjmy",
            "EntityName": "Responsorien und Antiphonen, S. 30: I. In nativitate Domini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvfnjf",
            "EntityName": "Valse de concert, S. 430"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvftcj",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 3. Teleki L\u00e1szl\u00f3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvfzkt",
            "EntityName": "Romancero espagnol, S. 695c: No. 1. Introduction and Fandango with variations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvg_9y",
            "EntityName": "Magyar dalok, S. 242: No. 3 in D-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvg51_",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 4 in C-sharp major. Animato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvg63w",
            "EntityName": "Lenore, S. 346"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgbxy",
            "EntityName": "Rondeau fantastique sur un th\u00e8me espagnol \\\"La Contrabandista\\\", S.252"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgg5p",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 3 in E major. Allegro vivace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgg74",
            "EntityName": "R\u00e9miniscences des Huguenots, S. 412/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgj54",
            "EntityName": "Album-Leaf in E-flat major, S. 167k"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgk49",
            "EntityName": "Album-Leaf: Andantino in E major, S. 163d/ii"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgkpb",
            "EntityName": "\u0421\u043b\u0463\u043f\u043e\u0439, S. 350"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgll1",
            "EntityName": "Deux marches dans le genre hongrois, S. 693: No. 1 in D minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgqv_",
            "EntityName": "Responsorien und Antiphonen, S. 30: II. Feria V in coena Domini"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgtjg",
            "EntityName": "Es rauschen die Winde, S. 294/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgv_f",
            "EntityName": "Paraphrases pour piano sur le th\u00e8me favori et oblig\u00e9: 1a. Pr\u00e9lude \u00e0 la Polka de Borodine, S. 207a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvgznj",
            "EntityName": "Album-Leaf: Lyon Pr\u00e9lude, S. 166d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvh1qq",
            "EntityName": "Album-Leaf, S. 167c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvh7hz",
            "EntityName": "Korrekturblatt, S. 701k"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvh812",
            "EntityName": "Album-Leaf in G minor, S. 166l/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvhg1y",
            "EntityName": "Album-Leaf: Magyar II in B-flat minor, S. 164e/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvhjx_",
            "EntityName": "La romanesca, S. 252a/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvhk3b",
            "EntityName": "Zwei St\u00fccke aus der heiligen Elisabeth, S. 693a: No. 1. Das Rosenmirakel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvhk4y",
            "EntityName": "Album-Leaf: Preludio, S. 164j"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvhrjh",
            "EntityName": "Marche fun\u00e8bre, S. 226a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvhv9n",
            "EntityName": "Ungarische National-Melodien (Im leichten Style bearbeitet), S. 243bis: No. 3 in B-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvj1m0",
            "EntityName": "Album-Leaf: Allegretto in A major, S. 167n"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvjg7y",
            "EntityName": "Album-Leaf: Langsam in C-sharp minor, S. 166o"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvjgzr",
            "EntityName": "R\u00e9miniscences des Puritains, S. 390/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvjr91",
            "EntityName": "Consolation in E major, S. 171a no. 6: Allegretto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvjtb7",
            "EntityName": "Kaiser Wilhelm!, S. 197b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvjts6",
            "EntityName": "Variations on \\\"Tisz\u00e1ntuli sz\u00e9p l\u00e9any\\\", S. 384a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvjxqq",
            "EntityName": "Technische Studien, S. 146: No. 62. Spr\u00fcnge mit der Tremolo-Begleitung"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvk__v",
            "EntityName": "Harmonie nach Rossini's Carit\u00e0, S. 701j"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvk77b",
            "EntityName": "Album-Leaf: Purgatorio. Andante in B minor, S. 166r/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkbsh",
            "EntityName": "Einzug der G\u00e4ste auf der Wartburg, S. 445 no. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkcpr",
            "EntityName": "Weihnachtsbaum, S. 185a: VI. R\u00e9veille-Matin (Wecker)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkcq4",
            "EntityName": "Einleitung und Schlu\u00dftakte zu Tausigs 3. Valse-Caprice, S. 571a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkfmb",
            "EntityName": "Magyar dalok, S. 242: No. 9 in A minor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkgs6",
            "EntityName": "Magyar dalok, S. 242: No. 11 in B-flat major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkjwl",
            "EntityName": "Geharnischte Lieder, S. 511: No. 1. Vor der Schlacht"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkpgy",
            "EntityName": "Cadenza, S. 695f"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkpmk",
            "EntityName": "Responsorien und Antiphonen, S. 30: III. Feria VI in Parasceve"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvkwmd",
            "EntityName": "Trois morceaux suisses, S. 156a: No. 2. Un soir dans la montagne"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl_sk",
            "EntityName": "R\u00e9miniscences de La Scala, S. 458"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl07l",
            "EntityName": "C\u00e9l\u00e8bre m\u00e9lodie hongroise, S. 243a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl317",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 5 in D flat major. Tempo giusto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl3nk",
            "EntityName": "Weihnachtsbaum, S. 185a: VII. Schlummerlied"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl4m7",
            "EntityName": "P\u00e1sztor Lakodalmas, S. 405a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl4z8",
            "EntityName": "Drei M\u00e4rsche von Franz Schubert, S. 426: No. 3. Grande Marche caracteristique"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvl80t",
            "EntityName": "Album-Leaf in A-flat major, S. 166l"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvlgy0",
            "EntityName": "Fantaisie sur des motifs favoris de l'op\u00e9ra Somnambula de Bellini, S. 393/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvlk8q",
            "EntityName": "Trois morceaux suisses, S. 156a: No. 1. Ranz de vaches"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvll12",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 4. E\u00f6tv\u00f6s J\u00f3zsef"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvlmr9",
            "EntityName": "Album-Leaf in A minor (R\u00e1k\u00f3czi-Marsch), S. 164f"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvln3p",
            "EntityName": "Ungarische National-Melodien (Im leichten Style bearbeitet), S. 243bis: No. 1 in D major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvlph_",
            "EntityName": "Am stillen Herd, S. 448"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvlxfv",
            "EntityName": "Petite Valse, S. 695d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvm_94",
            "EntityName": "La romanesca, S. 252a/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvm149",
            "EntityName": "Weihnachtsbaum, S. 185a: V. Scherzoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvm26v",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 4 in D-flat major. Andantino a capriccio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvm4y6",
            "EntityName": "Album-Leaf: Serenade, S. 166g"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvm8f4",
            "EntityName": "Allegro maestoso, S. 692c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmczk",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 8 in D major. Adagio sostenuto a capriccio"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmhj1",
            "EntityName": "Valse de concert sur deux motifs de Lucia et Parisina de Donizetti, S. 214 no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmkxn",
            "EntityName": "Grosse Konzertfantasie \u00fcber spanische Weisen, S. 253"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmlvj",
            "EntityName": "Tyrolean Melody, S. 385a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmngk",
            "EntityName": "Der n\u00e4chtliche Zug, S. 513a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmsdw",
            "EntityName": "Sunt lacrymae rerum, S. 162c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmx5k",
            "EntityName": "Album-Leaf: Magyar in D-flat major, S. 164e/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmx6n",
            "EntityName": "Album-Leaf: Berlin Preludio, S. 164g"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmy33",
            "EntityName": "Souvenir de la fianc\u00e9e, S. 385/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmz0j",
            "EntityName": "Album-Leaf: Exeter Preludio, S. 164c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvmzz5",
            "EntityName": "Consolation in C-sharp minor, S. 171a no. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvn22x",
            "EntityName": "Pri\u00e8re d'un enfant \u00e0 son r\u00e9veil, S. 171c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvn5hd",
            "EntityName": "Aux anges gardiens, S. 162a/1 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvn9rt",
            "EntityName": "Magyar dalok, S. 242: No. 10 in D major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvnj4d",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 7 in A minor \\\"R\u00e1k\u00f3czi-Marsch\\\". Tempo di marcia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvnkqx",
            "EntityName": "Album-Leaf (Premi\u00e8re Consolation), S. 171b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvnn01",
            "EntityName": "Nocturne, S. 191/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvnqvd",
            "EntityName": "Album-Leaf in E major (Leipzig), S. 163d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvnqzc",
            "EntityName": "Grande paraphrase de la Marche de Donizetti pour le Sultan Abdul-Medjid Khan, S. 403 bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvnxj3",
            "EntityName": "Andante sensibilissimo, S. 701c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvp07j",
            "EntityName": "Zigeuner-Epos, S. 695b: No. 6 in G minor. Lento"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvp45x",
            "EntityName": "Album-Leaf in C major, S. 167s \\\"Lyon\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvp52f",
            "EntityName": "Ungarischer Marsch in B-flat major, S. 229a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvp668",
            "EntityName": "Grande paraphrase de la Marche de Donizetti pour le Sultan Abdul-Medjid Khan, S. 403"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvpf7_",
            "EntityName": "R\u00e1k\u00f3czi-Marsch, S. 692d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvpg7j",
            "EntityName": "Wilde Jagd: Scherzo, S. 176a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvpm0b",
            "EntityName": "Angelus! Pri\u00e8re \u00e0 l'ange gardien, S. 162a/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvpmxw",
            "EntityName": "Feuille morte, S. 428"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvpt8b",
            "EntityName": "Album-Leaf: Pr\u00e9lude omnitonique, S. 166e"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvq0cg",
            "EntityName": "Pr\u00e4ludium und Fuge \u00fcber das Motiv B.A.C.H., S. 529/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvq3fp",
            "EntityName": "Magyar rapsz\u00f3dia, S. 244/16/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvq4x8",
            "EntityName": "Excelsior!, S. 500"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvqb2g",
            "EntityName": "Soir\u00e9es de Vienne, S. 427: No. 1 in A-flat major. Allegretto malinconico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvqf0b",
            "EntityName": "Grosse Concert-Fantasie aus der Oper Sonnambula, S. 393/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvqf1v",
            "EntityName": "Album-Leaf in G major, S. 166q"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvqmxn",
            "EntityName": "Grand solo de concert, S. 365"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvqqnh",
            "EntityName": "Album-Leaf: Agitato in G major, S. 167l"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr1_r",
            "EntityName": "Album-Leaf, S. 167d"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr383",
            "EntityName": "M\u00e9lodie polonaise, S. 249a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr58j",
            "EntityName": "Grande fantaisie sur des th\u00e8mes de l'op\u00e9ra Niobe, S. 419"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr5nn",
            "EntityName": "Fanfare zur Enth\u00fcllung des Carl-Augusts Monument, S. 542b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr5rg",
            "EntityName": "Weihnachtsbaum, S. 185a: XI. Ungarisch"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr653",
            "EntityName": "Album-Leaf: Introduction to the Grande \u00c9tude de Paganini no. 6, S. 141/6bis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvr65g",
            "EntityName": "Grande Fantaisie di bravura sur La Clochette de Paganini, S. 420"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvrbqb",
            "EntityName": "Magyar dalok, S. 242: No. 4 in C-sharp major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvrdk4",
            "EntityName": "Album-Leaf: Andantino in E-flat major, S. 163a/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvrl6f",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 2. De\u00e1k Ferenc"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvrvbp",
            "EntityName": "Lilie, S. 166m/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvrvxc",
            "EntityName": "Seconda mazurka di Tirindelli, S. 573a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvs_ty",
            "EntityName": "Rosario, S. 670: No. 2. Mysteria dolorosa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvs011",
            "EntityName": "Historische ungarische Bildnisse, S. 205a: No. 7. Mosonyi Mih\u00e1ly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvsdt1",
            "EntityName": "Pens\u00e9es \\\"Nocturne,\\\" S. 168b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvszzx",
            "EntityName": "Album-Leaf (Ah, vous dirai-je, maman), S. 163b"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvtsq3",
            "EntityName": "Einleitung und Coda zu Smetanas Polka, S. 570a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvv0q1",
            "EntityName": "Valse-caprice no. 6, S.427/6a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zvv1j5",
            "EntityName": "Rosario, S. 670: No. 3. Mysteria gloriosa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx2c1l",
            "EntityName": "Concerto for Piano No. 1 in E flat major, S 124: III. Allegretto vivace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx49c3",
            "EntityName": "Orpheus, S. 98"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx4rgt",
            "EntityName": "Cantico del Sol di San Francesco d'Assisi, S. 499"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx4w27",
            "EntityName": "R\u00e9miniscences de Lucia di Lammermoor, S. 397"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx4wbc",
            "EntityName": "Hexam\u00e9ron, S. 392: V. Variation III di bravura - Ritornello"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx5ryj",
            "EntityName": "Gaudeamus igitur, S. 509"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx5v6j",
            "EntityName": "Marche militaire, S. 426a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx715q",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 173: No. 4. Pens\u00e9e des morts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx7zdt",
            "EntityName": "Hungarian Rhapsody no. 13 in A minor, S. 244 no. 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx88h6",
            "EntityName": "Ann\u00e9es de p\u00e8lerinage : Deuxi\u00e8me ann\u00e9e : Italie, S. 161"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx8kkr",
            "EntityName": "Oh! quand je dors, S. 282/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx8vfg",
            "EntityName": "Via Crucis, S. 504a: Station III: J\u00e9sus tombe pour la premi\u00e8re fois"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx95sn",
            "EntityName": "Leyer und Schwert, S. 452: IV. Lutzows wilde Jagd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9jjj",
            "EntityName": "Weihnachtsbaum, S. 185a: III. Die Hirten an der Krippe (In dulci jubilo)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9lg4",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 5. La chapelle de Guillaume Tell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zx9w6p",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 4. Teleki Laszlo"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxczlq",
            "EntityName": "Pri\u00e8re et Berceuse de La muette de Portici d'Auber, S. 387: Berceuse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxd069",
            "EntityName": "Cadenza to the first movement of Beethoven's Piano Concerto no. 3, S. 389a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxgvnz",
            "EntityName": "Chor\u00e4le, S. 506a: No. 7. O Lamm Gottes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxh_5h",
            "EntityName": "Die Zelle in Nonnenwerth, S. 534/2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxh3_2",
            "EntityName": "Concerto for Piano and Orchestra no. 1 in E-flat major, S. 124: I. Allegro maestoso"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxhcjl",
            "EntityName": "Ab irato, grande \u00e9tude de perfectionnement, S. 143"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxhh5n",
            "EntityName": "Fantasie \u00fcber Motive aus Beethovens Ruinen von Athen, S. 389"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxhhj7",
            "EntityName": "Magyar rapsz\u00f3di\u00e1k, S. 242: No. 16 in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxj0b3",
            "EntityName": "Grandes \u00e9tudes de Paganini, S. 141: No. 4. Arpeggio in E major"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxj4mq",
            "EntityName": "Klavierkonzert No. 1 Es-dur: III. Allegro marciale animato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxj7gb",
            "EntityName": "Les Cloches de Gen\u00e8ve : Nocturne, S. 160 no. 9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxj8d1",
            "EntityName": "R\u00e1k\u00f3czi-Marsch, S. 244c"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxl64m",
            "EntityName": "A magyarok Istene, S. 543"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxndyj",
            "EntityName": "Tre sonetti di Petrarca, S. 270: III. I' vidi in terra angelici costumi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxnzng",
            "EntityName": "Tarantelle di bravura d\u2019apr\u00e8s la tarantelle de La muette de Portici, S. 386/1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxpntg",
            "EntityName": "Mazeppa, S. 138"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxqlqm",
            "EntityName": "R\u00e9miniscences de \\\"La Juive\\\", S. 409a"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxr3f2",
            "EntityName": "Chor\u00e4le, S. 506a: No. 9. Vexilla regis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxsg9z",
            "EntityName": "Harmonies po\u00e9tiques et religieuses, S. 172a: No. 5. Miserere"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxtc9t",
            "EntityName": "\u00c9tudes d'ex\u00e9cution transcendante d'apr\u00e8s Paganini, S. 140: No. 3 in A-flat minor \\\"La Campanella\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxttjn",
            "EntityName": "Album d'un voyageur, S. 156: I. Impressions et po\u00e9sies: 2a. Le Lac de Wallenstadt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxvq8b",
            "EntityName": "Hexam\u00e9ron, S. 392: VIII. Variation VI. Largo - Coda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxx6xk",
            "EntityName": "Historical Hungarian Portraits, S. 205: No. 3. V\u00f6r\u00f6smarty Mihaly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxxs9k",
            "EntityName": "Cadenza for \\\"Un sospiro\\\", S. 144/3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0zxyw51",
            "EntityName": "Via Crucis, S. 53: Einleitung. Vexilla regis"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hqgp": "Life of Franz Liszt"
    },
    "qid_topic_entity": {
      "Q41309": "Life of Franz Liszt"
    },
    "index": 877
  },
  {
    "QuestionId": "WebQTest-2003",
    "RawQuestion": "what movies have robert pattinson in them?",
    "ProcessedQuestion": "what movies have robert pattinson in them",
    "Parses": [
      {
        "ParseId": "WebQTest-2003.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062dn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062dn7 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "PotentialTopicEntityMention": "robert pattinson",
        "TopicEntityName": "Robert Pattinson",
        "TopicEntityMid": "m.062dn7",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.film"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_s30t6",
            "EntityName": "Life"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012sdm5f",
            "EntityName": "The Childhood of a Leader"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031786",
            "EntityName": "Harry Potter and the Goblet of Fire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.031hcx",
            "EntityName": "Harry Potter and the Order of the Phoenix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03nm_fh",
            "EntityName": "Twilight"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047fhg8",
            "EntityName": "How to Be"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04m_qkz",
            "EntityName": "Little Ashes"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04qk12",
            "EntityName": "Vanity Fair"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pdh86",
            "EntityName": "The Twilight Saga: New Moon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065_t2_",
            "EntityName": "Unbound Captives"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06w67tn",
            "EntityName": "Remember Me"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075wx7_",
            "EntityName": "Eclipse"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.075wx89",
            "EntityName": "The Twilight Saga: Breaking Dawn - Part 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09v9mks",
            "EntityName": "Bel Ami"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bpkq4",
            "EntityName": "Dark Kingdom: The Dragon King"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1sgd3",
            "EntityName": "Water for Elephants"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crwqwj",
            "EntityName": "The Bad Mother's Handbook"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0djz0rc",
            "EntityName": "The Twilight Saga: Breaking Dawn - Part 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsmw2",
            "EntityName": "Maps to the Stars"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g57n3s",
            "EntityName": "Love & Distrust"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gtvrv3",
            "EntityName": "Cosmopolis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gx3vhy",
            "EntityName": "The Summer House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j310_v",
            "EntityName": "The Haunted Airman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k24hpb",
            "EntityName": "Mission: Blacklist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngns90",
            "EntityName": "Queen of the Desert"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ngxkxx",
            "EntityName": "The Rover"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w1yhhx",
            "EntityName": "Hold on to Me"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.062dn7": "Robert Pattinson"
    },
    "qid_topic_entity": {
      "Q36767": "Robert Pattinson"
    },
    "index": 878
  },
  {
    "QuestionId": "WebQTest-439",
    "RawQuestion": "where is the time zone line in south dakota?",
    "ProcessedQuestion": "where is the time zone line in south dakota",
    "Parses": [
      {
        "ParseId": "WebQTest-439.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mz5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mz5 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "south dakota",
        "TopicEntityName": "South Dakota",
        "TopicEntityMid": "m.06mz5",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hczc",
            "EntityName": "Mountain Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mz5": "South Dakota"
    },
    "qid_topic_entity": {
      "Q1211": "South Dakota"
    },
    "index": 879
  },
  {
    "QuestionId": "WebQTest-453",
    "RawQuestion": "what languages do they speak in costa rica?",
    "ProcessedQuestion": "what languages do they speak in costa rica",
    "Parses": [
      {
        "ParseId": "WebQTest-453.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "costa rica",
        "TopicEntityName": "Costa Rica",
        "TopicEntityMid": "m.01p8s",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hwk2m",
            "EntityName": "Bribri Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ygk0",
            "EntityName": "Jamaican Creole English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06k02z",
            "EntityName": "Limonese Creole"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-453.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "costa rica",
        "TopicEntityName": "Costa Rica",
        "TopicEntityMid": "m.01p8s",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01p8s": "Costa Rica"
    },
    "qid_topic_entity": {
      "Q800": "Costa Rica"
    },
    "index": 880
  },
  {
    "QuestionId": "WebQTest-1677",
    "RawQuestion": "where was terry waite born?",
    "ProcessedQuestion": "where was terry waite born",
    "Parses": [
      {
        "ParseId": "WebQTest-1677.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013p_j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013p_j ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "terry waite",
        "TopicEntityName": "Terry Waite",
        "TopicEntityMid": "m.013p_j",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01425k",
            "EntityName": "Bollington"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.013p_j": "Terry Waite"
    },
    "qid_topic_entity": {
      "Q2504773": "Terry Waite"
    },
    "index": 881
  },
  {
    "QuestionId": "WebQTest-1824",
    "RawQuestion": "what type of currency do they use in spain?",
    "ProcessedQuestion": "what type of currency do they use in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-1824.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02l6h",
            "EntityName": "Euro"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 882
  },
  {
    "QuestionId": "WebQTest-1155",
    "RawQuestion": "what are the seven nations of central america?",
    "ProcessedQuestion": "what are the seven nations of central america",
    "Parses": [
      {
        "ParseId": "WebQTest-1155.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tzh ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "central america",
        "TopicEntityName": "Central America",
        "TopicEntityMid": "m.01tzh",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01p8s",
            "EntityName": "Costa Rica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k8k",
            "EntityName": "El Salvador"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0345_",
            "EntityName": "Guatemala"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qx1",
            "EntityName": "Panama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dkz7x",
            "EntityName": "Gran Colombia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01tzh": "Central America"
    },
    "qid_topic_entity": {
      "Q27611": "Central America"
    },
    "index": 883
  },
  {
    "QuestionId": "WebQTest-798",
    "RawQuestion": "what states share a border with tennessee?",
    "ProcessedQuestion": "what states share a border with tennessee",
    "Parses": [
      {
        "ParseId": "WebQTest-798.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07h34)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07h34 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"State\")\n}\n",
        "PotentialTopicEntityMention": "tennessee",
        "TopicEntityName": "Tennessee",
        "TopicEntityMid": "m.07h34",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Value",
            "Argument": "State",
            "EntityName": null,
            "SourceNodeIndex": 1,
            "NodePredicate": "base.biblioness.bibs_location.loc_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0498y",
            "EntityName": "Kentucky"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tgp",
            "EntityName": "Mississippi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ych",
            "EntityName": "Missouri"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05fkf",
            "EntityName": "North Carolina"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z1m",
            "EntityName": "Virginia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0x8",
            "EntityName": "Georgia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gyh",
            "EntityName": "Alabama"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0vbk",
            "EntityName": "Arkansas"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07h34": "Tennessee"
    },
    "qid_topic_entity": {
      "Q1509": "Tennessee"
    },
    "index": 884
  },
  {
    "QuestionId": "WebQTest-1659",
    "RawQuestion": "what is the zip code for walnut creek?",
    "ProcessedQuestion": "what is the zip code for walnut creek",
    "Parses": [
      {
        "ParseId": "WebQTest-1659.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0qyzb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0qyzb ns:location.citytown.postal_codes ?x .\n}\n",
        "PotentialTopicEntityMention": "walnut creek",
        "TopicEntityName": "Walnut Creek",
        "TopicEntityMid": "m.0qyzb",
        "InferentialChain": [
          "location.citytown.postal_codes"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zs6f0",
            "EntityName": "94596"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zs6ht",
            "EntityName": "94598"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zs6ms",
            "EntityName": "94597"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zs75v",
            "EntityName": "94595"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0qyzb": "Walnut Creek"
    },
    "qid_topic_entity": {
      "Q493261": "Walnut Creek"
    },
    "index": 885
  },
  {
    "QuestionId": "WebQTest-1611",
    "RawQuestion": "what is armenian currency?",
    "ProcessedQuestion": "what is armenian currency",
    "Parses": [
      {
        "ParseId": "WebQTest-1611.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgx ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "armenian",
        "TopicEntityName": "Armenia",
        "TopicEntityMid": "m.0jgx",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.033xr3",
            "EntityName": "Armenian dram"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgx": "Armenia"
    },
    "qid_topic_entity": {
      "Q399": "Armenia"
    },
    "index": 886
  },
  {
    "QuestionId": "WebQTest-1221",
    "RawQuestion": "what college did joakim noah?",
    "ProcessedQuestion": "what college did joakim noah",
    "Parses": [
      {
        "ParseId": "WebQTest-1221.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2yrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2yrf ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "joakim noah",
        "TopicEntityName": "Joakim Noah",
        "TopicEntityMid": "m.0c2yrf",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j_sncb",
            "EntityName": "University of Florida"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c2yrf": "Joakim Noah"
    },
    "qid_topic_entity": {
      "Q311735": "Joakim Noah"
    },
    "index": 887
  },
  {
    "QuestionId": "WebQTest-408",
    "RawQuestion": "who was the first president of the afl?",
    "ProcessedQuestion": "who was the first president of the afl",
    "Parses": [
      {
        "ParseId": "WebQTest-408.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ysy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ysy ns:organization.organization.founders ?x .\n}\n",
        "PotentialTopicEntityMention": "afl",
        "TopicEntityName": "American Football League",
        "TopicEntityMid": "m.0ysy",
        "InferentialChain": [
          "organization.organization.founders"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01wtr5",
            "EntityName": "Lamar Hunt"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yc3",
            "EntityName": "Bud Adams"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0ysy": "American Football League"
    },
    "qid_topic_entity": {
      "Q464508": "American Football League"
    },
    "index": 888
  },
  {
    "QuestionId": "WebQTest-165",
    "RawQuestion": "who plays donna noble?",
    "ProcessedQuestion": "who plays donna noble",
    "Parses": [
      {
        "ParseId": "WebQTest-165.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pcf8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pcf8b ns:tv.tv_character.appeared_in_tv_episodes ?y .\n?y ns:tv.tv_guest_role.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "donna noble",
        "TopicEntityName": "Donna Noble",
        "TopicEntityMid": "m.02pcf8b",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_episodes",
          "tv.tv_guest_role.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l0j5",
            "EntityName": "Catherine Tate"
          }
        ]
      },
      {
        "ParseId": "WebQTest-165.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pcf8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pcf8b ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "donna noble",
        "TopicEntityName": "Donna Noble",
        "TopicEntityMid": "m.02pcf8b",
        "InferentialChain": [
          "tv.tv_character.appeared_in_tv_program",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05l0j5",
            "EntityName": "Catherine Tate"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02pcf8b": "Donna Noble"
    },
    "qid_topic_entity": {
      "Q2987625": "Donna Noble"
    },
    "index": 889
  },
  {
    "QuestionId": "WebQTest-983",
    "RawQuestion": "where did tennessee williams go to college?",
    "ProcessedQuestion": "where did tennessee williams go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-983.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c4y8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c4y8 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "tennessee williams",
        "TopicEntityName": "Tennessee Williams",
        "TopicEntityMid": "m.0c4y8",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0187nd",
            "EntityName": "University of Missouri"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j_9c",
            "EntityName": "University of Iowa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06thjt",
            "EntityName": "The New School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g2jl",
            "EntityName": "Washington University in St. Louis"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c4y8": "Tennessee Williams"
    },
    "qid_topic_entity": {
      "Q134262": "Tennessee Williams"
    },
    "index": 890
  },
  {
    "QuestionId": "WebQTest-1914",
    "RawQuestion": "what year was allen iverson mvp?",
    "ProcessedQuestion": "what year was allen iverson mvp",
    "Parses": [
      {
        "ParseId": "WebQTest-1914.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sg7_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sg7_ ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02yqk8 .\n}\n",
        "PotentialTopicEntityMention": "allen iverson",
        "TopicEntityName": "Allen Iverson",
        "TopicEntityMid": "m.01sg7_",
        "InferentialChain": [
          "sports.sports_award_winner.awards",
          "sports.sports_award.season"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02yqk8",
            "EntityName": "NBA Most Valuable Player Award",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_award.award",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.080b2d",
            "EntityName": "2000\u201301 NBA season"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01sg7_": "Allen Iverson"
    },
    "qid_topic_entity": {
      "Q190094": "Allen Iverson"
    },
    "index": 891
  },
  {
    "QuestionId": "WebQTest-783",
    "RawQuestion": "what county is houston tx in?",
    "ProcessedQuestion": "what county is houston tx in",
    "Parses": [
      {
        "ParseId": "WebQTest-783.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03l2n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03l2n ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "houston",
        "TopicEntityName": "Houston",
        "TopicEntityMid": "m.03l2n",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fxwx",
            "EntityName": "Montgomery County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03l2n": "Houston"
    },
    "qid_topic_entity": {
      "Q16555": "Houston"
    },
    "index": 892
  },
  {
    "QuestionId": "WebQTest-984",
    "RawQuestion": "what is the name of airport in new york?",
    "ProcessedQuestion": "what is the name of airport in new york",
    "Parses": [
      {
        "ParseId": "WebQTest-984.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_286)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_286 ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?y ns:travel.transportation.mode_of_transportation ns:m.025t3bg .\n?x ns:location.location.containedby ns:m.059rby .\n}\n",
        "PotentialTopicEntityMention": "new york",
        "TopicEntityName": "New York City",
        "TopicEntityMid": "m.02_286",
        "InferentialChain": [
          "travel.travel_destination.how_to_get_here",
          "travel.transportation.transport_terminus"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.025t3bg",
            "EntityName": "Air travel",
            "SourceNodeIndex": 0,
            "NodePredicate": "travel.transportation.mode_of_transportation",
            "ValueType": "String"
          },
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.059rby",
            "EntityName": "New York",
            "SourceNodeIndex": 1,
            "NodePredicate": "location.location.containedby",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0p1l2",
            "EntityName": "John F. Kennedy International Airport"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_286": "New York City"
    },
    "qid_topic_entity": {
      "Q60": "New York City"
    },
    "index": 893
  },
  {
    "QuestionId": "WebQTest-646",
    "RawQuestion": "where did mary bell live?",
    "ProcessedQuestion": "where did mary bell live",
    "Parses": [
      {
        "ParseId": "WebQTest-646.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j324)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j324 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "mary bell",
        "TopicEntityName": "Mary Bell",
        "TopicEntityMid": "m.01j324",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j7ng",
            "EntityName": "Newcastle upon Tyne"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01j324": "Mary Bell"
    },
    "qid_topic_entity": {
      "Q241076": "Mary Bell"
    },
    "index": 894
  },
  {
    "QuestionId": "WebQTest-1458",
    "RawQuestion": "who owns chrysler corporation 2011?",
    "ProcessedQuestion": "who owns chrysler corporation 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-1458.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_bp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_bp ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.to ?sk0} || \nEXISTS {?y ns:organization.organization_relationship.to ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.organization_relationship.from ?sk2} || \nEXISTS {?y ns:organization.organization_relationship.from ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "chrysler corporation",
        "TopicEntityName": "Chrysler Group LLC",
        "TopicEntityMid": "m.01_bp",
        "InferentialChain": [
          "organization.organization.parent",
          "organization.organization_relationship.parent"
        ],
        "Constraints": [
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "organization.organization_relationship.to",
            "ValueType": "DateTime"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "organization.organization_relationship.from",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0_gywj9",
            "EntityName": "Fiat Chrysler Automobiles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01bqks",
            "EntityName": "Federal government of the United States"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wz7x",
            "EntityName": "Government of Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c40gm",
            "EntityName": "Voluntary Employee Beneficiary Association"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c7mv",
            "EntityName": "Fiat S.p.A."
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01_bp": "Chrysler Group LLC"
    },
    "qid_topic_entity": {
      "Q181114": "Chrysler Group LLC"
    },
    "index": 895
  },
  {
    "QuestionId": "WebQTest-1074",
    "RawQuestion": "who is lamar odom playing for this year?",
    "ProcessedQuestion": "who is lamar odom playing for this year",
    "Parses": [
      {
        "ParseId": "WebQTest-1074.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_nkp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_nkp ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "lamar odom",
        "TopicEntityName": "Lamar Odom",
        "TopicEntityMid": "m.02_nkp",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05s9mb",
            "EntityName": "Saski Baskonia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jm3v",
            "EntityName": "New York Knicks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jmcv",
            "EntityName": "Dallas Mavericks"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jmjr",
            "EntityName": "Los Angeles Clippers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jmk7",
            "EntityName": "Los Angeles Lakers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02_nkp": "Lamar Odom"
    },
    "qid_topic_entity": {
      "Q296403": "Lamar Odom"
    },
    "index": 896
  },
  {
    "QuestionId": "WebQTest-1694",
    "RawQuestion": "what was shakespeare's wife called?",
    "ProcessedQuestion": "what was shakespeare 's wife called",
    "Parses": [
      {
        "ParseId": "WebQTest-1694.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081k8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081k8 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "PotentialTopicEntityMention": "shakespeare",
        "TopicEntityName": "William Shakespeare",
        "TopicEntityMid": "m.081k8",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mzbg",
            "EntityName": "Anne Hathaway"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.081k8": "William Shakespeare"
    },
    "qid_topic_entity": {
      "Q692": "William Shakespeare"
    },
    "index": 897
  },
  {
    "QuestionId": "WebQTest-367",
    "RawQuestion": "what makes elvis presley famous?",
    "ProcessedQuestion": "what makes elvis presley famous",
    "Parses": [
      {
        "ParseId": "WebQTest-367.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jq1 ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "elvis presley",
        "TopicEntityName": "Elvis Presley",
        "TopicEntityMid": "m.02jq1",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.099md",
            "EntityName": "Soldier"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09jwl",
            "EntityName": "Musician"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l65",
            "EntityName": "Singer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02jq1": "Elvis Presley"
    },
    "qid_topic_entity": {
      "Q303": "Elvis Presley"
    },
    "index": 898
  },
  {
    "QuestionId": "WebQTest-1996",
    "RawQuestion": "who played maggie in himym?",
    "ProcessedQuestion": "who played maggie in himym",
    "Parses": [
      {
        "ParseId": "WebQTest-1996.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h67q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h67q ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "PotentialTopicEntityMention": "maggie",
        "TopicEntityName": "Maggie Simpson",
        "TopicEntityMid": "m.0h67q",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0sw62",
            "EntityName": "Nancy Cartwright"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0h67q": "Maggie Simpson"
    },
    "qid_topic_entity": {
      "Q7834": "Maggie Simpson"
    },
    "index": 899
  },
  {
    "QuestionId": "WebQTest-1494",
    "RawQuestion": "who is kevin jonas married to?",
    "ProcessedQuestion": "who is kevin jonas married to",
    "Parses": [
      {
        "ParseId": "WebQTest-1494.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d_mtq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d_mtq ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "kevin jonas",
        "TopicEntityName": "Kevin Jonas",
        "TopicEntityMid": "m.04d_mtq",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.04ztj",
            "EntityName": "Marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064hjjr",
            "EntityName": "Danielle Deleasa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04d_mtq": "Kevin Jonas"
    },
    "qid_topic_entity": {
      "Q210172": "Kevin Jonas"
    },
    "index": 900
  },
  {
    "QuestionId": "WebQTest-456",
    "RawQuestion": "what part did winona ryder play in star trek?",
    "ProcessedQuestion": "what part did winona ryder play in star trek",
    "Parses": [
      {
        "ParseId": "WebQTest-456.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.086sj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.086sj ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.08phg9 .\n}\n",
        "PotentialTopicEntityMention": "winona ryder",
        "TopicEntityName": "Winona Ryder",
        "TopicEntityMid": "m.086sj",
        "InferentialChain": [
          "film.actor.film",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.08phg9",
            "EntityName": "Star Trek",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02thlt",
            "EntityName": "Amanda Grayson"
          }
        ]
      },
      {
        "ParseId": "WebQTest-456.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08phg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08phg9 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.086sj .\n}\n",
        "PotentialTopicEntityMention": "star trek",
        "TopicEntityName": "Star Trek",
        "TopicEntityMid": "m.08phg9",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.086sj",
            "EntityName": "Winona Ryder",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02thlt",
            "EntityName": "Amanda Grayson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.086sj": "Winona Ryder",
      "m.08phg9": "Star Trek"
    },
    "qid_topic_entity": {
      "Q101797": "Winona Ryder",
      "Q213081": "Star Trek"
    },
    "index": 901
  },
  {
    "QuestionId": "WebQTest-1969",
    "RawQuestion": "what team is kris humphries play for?",
    "ProcessedQuestion": "what team is kris humphries play for",
    "Parses": [
      {
        "ParseId": "WebQTest-1969.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0730b4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0730b4 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "kris humphries",
        "TopicEntityName": "Kris Humphries",
        "TopicEntityMid": "m.0730b4",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jm5b",
            "EntityName": "Washington Wizards"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0730b4": "Kris Humphries"
    },
    "qid_topic_entity": {
      "Q363421": "Kris Humphries"
    },
    "index": 902
  },
  {
    "QuestionId": "WebQTest-506",
    "RawQuestion": "what the time zone in england?",
    "ProcessedQuestion": "what the time zone in england",
    "Parses": [
      {
        "ParseId": "WebQTest-506.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02jx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02jx1 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "england",
        "TopicEntityName": "England",
        "TopicEntityMid": "m.02jx1",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03bdv",
            "EntityName": "Greenwich Mean Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02jx1": "England"
    },
    "qid_topic_entity": {
      "Q21": "England"
    },
    "index": 903
  },
  {
    "QuestionId": "WebQTest-222",
    "RawQuestion": "where is the seychelles on world map?",
    "ProcessedQuestion": "where is the seychelles on world map",
    "Parses": [
      {
        "ParseId": "WebQTest-222.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06sw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06sw9 ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "seychelles",
        "TopicEntityName": "Seychelles",
        "TopicEntityMid": "m.06sw9",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3n1",
            "EntityName": "Africa"
          }
        ]
      },
      {
        "ParseId": "WebQTest-222.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06sw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06sw9 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "seychelles",
        "TopicEntityName": "Seychelles",
        "TopicEntityMid": "m.06sw9",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rm8kw",
            "EntityName": "Southern Sun Hotel Group"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3n1",
            "EntityName": "Africa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06sw9": "Seychelles"
    },
    "qid_topic_entity": {
      "Q1042": "Seychelles"
    },
    "index": 904
  },
  {
    "QuestionId": "WebQTest-1777",
    "RawQuestion": "what is rihanna mum called?",
    "ProcessedQuestion": "what is rihanna mum called",
    "Parses": [
      {
        "ParseId": "WebQTest-1777.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mt91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mt91 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "PotentialTopicEntityMention": "rihanna",
        "TopicEntityName": "Rihanna",
        "TopicEntityMid": "m.06mt91",
        "InferentialChain": [
          "people.person.parents"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02zsn",
            "EntityName": "Female",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.person.gender",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h30zg_",
            "EntityName": "Monica Braithwaite"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mt91": "Rihanna"
    },
    "qid_topic_entity": {
      "Q36844": "Rihanna"
    },
    "index": 905
  },
  {
    "QuestionId": "WebQTest-1319",
    "RawQuestion": "who has pudge rodriguez played for?",
    "ProcessedQuestion": "who has pudge rodriguez played for",
    "Parses": [
      {
        "ParseId": "WebQTest-1319.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p6g7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p6g7 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "PotentialTopicEntityMention": "pudge rodriguez",
        "TopicEntityName": "Iv\u00e1n Rodr\u00edguez",
        "TopicEntityMid": "m.02p6g7",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02__x",
            "EntityName": "Miami Marlins"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02d02",
            "EntityName": "Detroit Tigers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07l8x",
            "EntityName": "Texas Rangers"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02p6g7": "Iv\u00e1n Rodr\u00edguez"
    },
    "qid_topic_entity": {
      "Q706908": "Iv\u00e1n Rodr\u00edguez"
    },
    "index": 906
  },
  {
    "QuestionId": "WebQTest-588",
    "RawQuestion": "what wars did robert e lee served in?",
    "ProcessedQuestion": "what wars did robert e lee served in",
    "Parses": [
      {
        "ParseId": "WebQTest-588.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f5j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f5j ns:military.military_commander.military_commands ?y .\n?y ns:military.military_command.military_conflict ?x .\n}\n",
        "PotentialTopicEntityMention": "robert e lee",
        "TopicEntityName": "Robert E. Lee",
        "TopicEntityMid": "m.06f5j",
        "InferentialChain": [
          "military.military_commander.military_commands",
          "military.military_command.military_conflict"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012lb3ht",
            "EntityName": "Battle of Malvern Hill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jnm",
            "EntityName": "Battle of Gettysburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01mwc1",
            "EntityName": "Battle of Fort Stedman"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027r0yc",
            "EntityName": "Battle of Darbytown and New Market Roads"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02n29c",
            "EntityName": "Battle of South Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03xzs_",
            "EntityName": "Seven Days Battles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047g1bq",
            "EntityName": "Battle of Franklin's Crossing"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jnfr",
            "EntityName": "Second Battle of Rappahannock Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04lf234",
            "EntityName": "Battle of Frederick"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04q33ft",
            "EntityName": "John Brown's raid on Harpers Ferry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vqf8",
            "EntityName": "Battle of Oak Grove"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vqhq",
            "EntityName": "Battle of Beaver Dam Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vqpt",
            "EntityName": "Battle of Gaines's Mill"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vqyp",
            "EntityName": "Battle of Glendale"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vt26",
            "EntityName": "Battle of Cheat Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wbkc",
            "EntityName": "Battle of Williamsport"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xsb_",
            "EntityName": "Overland Campaign"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0541vp",
            "EntityName": "Battle of Chaffin's Farm"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.054pn2",
            "EntityName": "Battle of Appomattox Court House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05740w",
            "EntityName": "Gettysburg Campaign"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05jzx8",
            "EntityName": "Second Battle of Petersburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k0fs",
            "EntityName": "Third Battle of Petersburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k4d6",
            "EntityName": "Battle of White Oak Road"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kxs5",
            "EntityName": "Battle of Mine Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lhjt",
            "EntityName": "Battle of Totopotomoy Creek"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lv52",
            "EntityName": "Northern Virginia Campaign"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05lxjz",
            "EntityName": "Maryland Campaign"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zhyqj",
            "EntityName": "Stoneman's 1863 Raid"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.097_v4",
            "EntityName": "Siege of Fort Pulaski"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09q9fk",
            "EntityName": "Battle of Cumberland Church"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c00cv3",
            "EntityName": "Richmond in the American Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c16t",
            "EntityName": "Mexican\u2013American War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0mw",
            "EntityName": "Battle of Chancellorsville"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0y7",
            "EntityName": "Battle of Fredericksburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0yp",
            "EntityName": "Battle of the Wilderness"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d20b",
            "EntityName": "Battle of Spotsylvania Court House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d220",
            "EntityName": "Battle of Cold Harbor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dgkk",
            "EntityName": "Battle of the Crater"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f777",
            "EntityName": "Second Battle of Bull Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fgkhp",
            "EntityName": "Second Battle of Deep Bottom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h1hwvh",
            "EntityName": "Western Virginia Campaign"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kbcg",
            "EntityName": "Siege of Petersburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kbq",
            "EntityName": "American Civil War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0lkxb",
            "EntityName": "Battle of Antietam"
          }
        ]
      },
      {
        "ParseId": "WebQTest-588.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06f5j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06f5j ns:military.military_person.participated_in_conflicts ?x .\n}\n",
        "PotentialTopicEntityMention": "robert e lee",
        "TopicEntityName": "Robert E. Lee",
        "TopicEntityMid": "m.06f5j",
        "InferentialChain": [
          "military.military_person.participated_in_conflicts"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c16t",
            "EntityName": "Mexican\u2013American War"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0mw",
            "EntityName": "Battle of Chancellorsville"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kbq",
            "EntityName": "American Civil War"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06f5j": "Robert E. Lee"
    },
    "qid_topic_entity": {
      "Q165557": "Robert E. Lee"
    },
    "index": 907
  },
  {
    "QuestionId": "WebQTest-1223",
    "RawQuestion": "who plays billy elliot?",
    "ProcessedQuestion": "who plays billy elliot",
    "Parses": [
      {
        "ParseId": "WebQTest-1223.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016mhd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016mhd ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0by43z3 .\n}\n",
        "PotentialTopicEntityMention": "billy elliot",
        "TopicEntityName": "Billy Elliot",
        "TopicEntityMid": "m.016mhd",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0by43z3",
            "EntityName": "Billy Elliot",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g81j",
            "EntityName": "Jamie Bell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051zd1n",
            "EntityName": "Adam Cooper"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.016mhd": "Billy Elliot"
    },
    "qid_topic_entity": {
      "Q458629": "Billy Elliot"
    },
    "index": 908
  },
  {
    "QuestionId": "WebQTest-1176",
    "RawQuestion": "what time zone is pennsylvania in right now?",
    "ProcessedQuestion": "what time zone is pennsylvania in right now",
    "Parses": [
      {
        "ParseId": "WebQTest-1176.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "pennsylvania",
        "TopicEntityName": "Pennsylvania",
        "TopicEntityMid": "m.05tbn",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_37z",
            "EntityName": "UTC\u221205:00"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hcv8",
            "EntityName": "Eastern Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05tbn": "Pennsylvania"
    },
    "qid_topic_entity": {
      "Q1400": "Pennsylvania"
    },
    "index": 909
  },
  {
    "QuestionId": "WebQTest-1072",
    "RawQuestion": "who is the current governor of arizona 2010?",
    "ProcessedQuestion": "who is the current governor of arizona 2010",
    "Parses": [
      {
        "ParseId": "WebQTest-1072.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? current vs. 2010"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "arizona",
        "TopicEntityName": "Arizona",
        "TopicEntityMid": "m.0vmt",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fkvn",
            "EntityName": "Governor",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2010-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2010-01-01",
          "End": "2010-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2010"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02pkb1c",
            "EntityName": "Jan Brewer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0vmt": "Arizona"
    },
    "qid_topic_entity": {
      "Q816": "Arizona"
    },
    "index": 910
  },
  {
    "QuestionId": "WebQTest-301",
    "RawQuestion": "what were amelia earhart's achievements?",
    "ProcessedQuestion": "what were amelia earhart 's achievements",
    "Parses": [
      {
        "ParseId": "WebQTest-301.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lngf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lngf ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "amelia earhart",
        "TopicEntityName": "Amelia Earhart",
        "TopicEntityMid": "m.0lngf",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cbd2",
            "EntityName": "Writer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hltv",
            "EntityName": "Pilot"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0lngf": "Amelia Earhart"
    },
    "qid_topic_entity": {
      "Q3355": "Amelia Earhart"
    },
    "index": 911
  },
  {
    "QuestionId": "WebQTest-250",
    "RawQuestion": "what type of government does usa follow?",
    "ProcessedQuestion": "what type of government does usa follow",
    "Parses": [
      {
        "ParseId": "WebQTest-250.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "usa",
        "TopicEntityName": "United States of America",
        "TopicEntityMid": "m.09c7w0",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01d9r3",
            "EntityName": "Presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j729",
            "EntityName": "Federal republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c7w0": "United States of America"
    },
    "qid_topic_entity": {
      "Q30": "United States of America"
    },
    "index": 912
  },
  {
    "QuestionId": "WebQTest-681",
    "RawQuestion": "who is the president of the european union 2012?",
    "ProcessedQuestion": "who is the president of the european union 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-681.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? official title is more than just \"president\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_6t_z8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_6t_z8 ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.039h0j .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "european union",
        "TopicEntityName": "European Union",
        "TopicEntityMid": "m.0_6t_z8",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.039h0j",
            "EntityName": "President of the European Parliament",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.036y38",
            "EntityName": "Jerzy Buzek"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0_6t_z8": "European Union"
    },
    "qid_topic_entity": {
      "Q458": "European Union"
    },
    "index": 913
  },
  {
    "QuestionId": "WebQTest-1197",
    "RawQuestion": "what language do people speak in brazil?",
    "ProcessedQuestion": "what language do people speak in brazil",
    "Parses": [
      {
        "ParseId": "WebQTest-1197.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zj58",
            "EntityName": "Brazilian Portuguese"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1197.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "brazil",
        "TopicEntityName": "Brazil",
        "TopicEntityMid": "m.015fr",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05zjd",
            "EntityName": "Portuguese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.015fr": "Brazil"
    },
    "qid_topic_entity": {
      "Q155": "Brazil"
    },
    "index": 914
  },
  {
    "QuestionId": "WebQTest-819",
    "RawQuestion": "where was bin laden found and killed?",
    "ProcessedQuestion": "where was bin laden found and killed",
    "Parses": [
      {
        "ParseId": "WebQTest-819.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "bin laden",
        "TopicEntityName": "Osama bin Laden",
        "TopicEntityMid": "m.05mg9",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011hs1",
            "EntityName": "Abbottabad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mg9": "Osama bin Laden"
    },
    "qid_topic_entity": {
      "Q1317": "Osama bin Laden"
    },
    "index": 915
  },
  {
    "QuestionId": "WebQTest-2016",
    "RawQuestion": "where does fabio capello come from?",
    "ProcessedQuestion": "where does fabio capello come from",
    "Parses": [
      {
        "ParseId": "WebQTest-2016.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030_wt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030_wt ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "fabio capello",
        "TopicEntityName": "Fabio Capello",
        "TopicEntityMid": "m.030_wt",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fgn_n",
            "EntityName": "San Canzian d'Isonzo"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.030_wt": "Fabio Capello"
    },
    "qid_topic_entity": {
      "Q183108": "Fabio Capello"
    },
    "index": 916
  },
  {
    "QuestionId": "WebQTest-606",
    "RawQuestion": "who were alexander graham bell's siblings?",
    "ProcessedQuestion": "who were alexander graham bell 's siblings",
    "Parses": [
      {
        "ParseId": "WebQTest-606.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k70 ns:people.person.sibling_s ?y .\n?y ns:people.sibling_relationship.sibling ?x .\n}\n",
        "PotentialTopicEntityMention": "alexander graham bell",
        "TopicEntityName": "Alexander Graham Bell",
        "TopicEntityMid": "m.0k70",
        "InferentialChain": [
          "people.person.sibling_s",
          "people.sibling_relationship.sibling"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k257qt",
            "EntityName": "Melville James Bell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0w17rt6",
            "EntityName": "Edward Charles Bell"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0k70": "Alexander Graham Bell"
    },
    "qid_topic_entity": {
      "Q34286": "Alexander Graham Bell"
    },
    "index": 917
  },
  {
    "QuestionId": "WebQTest-1556",
    "RawQuestion": "when's the last time the mets won the world series?",
    "ProcessedQuestion": "when 's the last time the mets won the world series",
    "Parses": [
      {
        "ParseId": "WebQTest-1556.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05g76)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05g76 ns:sports.sports_team.championships ?x .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "mets",
        "TopicEntityName": "New York Mets",
        "TopicEntityMid": "m.05g76",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "time.event.end_date",
          "ValueType": "DateTime"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q9lc",
            "EntityName": "1986 World Series"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05g76": "New York Mets"
    },
    "qid_topic_entity": {
      "Q692417": "New York Mets"
    },
    "index": 918
  },
  {
    "QuestionId": "WebQTest-1639",
    "RawQuestion": "where did frank baum die?",
    "ProcessedQuestion": "where did frank baum die",
    "Parses": [
      {
        "ParseId": "WebQTest-1639.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04mby)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04mby ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "frank baum",
        "TopicEntityName": "L. Frank Baum",
        "TopicEntityMid": "m.04mby",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f2wj",
            "EntityName": "Hollywood"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04mby": "L. Frank Baum"
    },
    "qid_topic_entity": {
      "Q207544": "L. Frank Baum"
    },
    "index": 919
  },
  {
    "QuestionId": "WebQTest-870",
    "RawQuestion": "where does the celtics practice?",
    "ProcessedQuestion": "where does the celtics practice",
    "Parses": [
      {
        "ParseId": "WebQTest-870.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bwjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bwjj ns:sports.sports_team.arena_stadium ?x .\n}\n",
        "PotentialTopicEntityMention": "celtics",
        "TopicEntityName": "Boston Celtics",
        "TopicEntityMid": "m.0bwjj",
        "InferentialChain": [
          "sports.sports_team.arena_stadium"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hqj2",
            "EntityName": "TD Garden"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tbsj",
            "EntityName": "XL Center"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bwjj": "Boston Celtics"
    },
    "qid_topic_entity": {
      "Q131371": "Boston Celtics"
    },
    "index": 920
  },
  {
    "QuestionId": "WebQTest-1851",
    "RawQuestion": "what countries are located near egypt?",
    "ProcessedQuestion": "what countries are located near egypt",
    "Parses": [
      {
        "ParseId": "WebQTest-1851.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.location.adjoin_s",
          "location.adjoining_relationship.adjoins"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01mp",
            "EntityName": "Country",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04gqr",
            "EntityName": "Libya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 921
  },
  {
    "QuestionId": "WebQTest-188",
    "RawQuestion": "where did bristol palin go to school?",
    "ProcessedQuestion": "where did bristol palin go to school",
    "Parses": [
      {
        "ParseId": "WebQTest-188.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jg1kh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jg1kh ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "bristol palin",
        "TopicEntityName": "Bristol Palin",
        "TopicEntityMid": "m.04jg1kh",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqd7",
            "EntityName": "Juneau-Douglas High School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04jdv0r",
            "EntityName": "Wasilla High School"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08r1_d",
            "EntityName": "West Anchorage High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04jg1kh": "Bristol Palin"
    },
    "qid_topic_entity": {
      "Q2190766": "Bristol Palin"
    },
    "index": 922
  },
  {
    "QuestionId": "WebQTest-1956",
    "RawQuestion": "which country in europe has the largest land area?",
    "ProcessedQuestion": "which country in europe has the largest land area",
    "Parses": [
      {
        "ParseId": "WebQTest-1956.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: F Aggregation. Original comment: F None of the relations capture \"countries within Europe\", and then we don't have a way to filter on largest land area"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n                ns:m.02j9z ns:base.locations.continents.countries_within ?x .\n                ?x ns:location.location.area ?y .\n}\nORDER BY DESC(xsd:float(?y))\nLIMIT 1",
        "PotentialTopicEntityMention": "europe",
        "TopicEntityName": "Europe",
        "TopicEntityMid": "m.02j9z",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bnz",
            "EntityName": "Russia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02j9z": "Europe"
    },
    "qid_topic_entity": {
      "Q46": "Europe"
    },
    "index": 923
  },
  {
    "QuestionId": "WebQTest-313",
    "RawQuestion": "who does albert pujols play for 2012?",
    "ProcessedQuestion": "who does albert pujols play for 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-313.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035gcb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035gcb ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "albert pujols",
        "TopicEntityName": "Albert Pujols",
        "TopicEntityMid": "m.035gcb",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2012-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2012-01-01",
          "End": "2012-12-31",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "2012"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wmvz",
            "EntityName": "Los Angeles Angels of Anaheim"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3wm2",
            "EntityName": "Scottsdale Scorpions"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.035gcb": "Albert Pujols"
    },
    "qid_topic_entity": {
      "Q148726": "Albert Pujols"
    },
    "index": 924
  },
  {
    "QuestionId": "WebQTest-1590",
    "RawQuestion": "what are the most popular religions in israel?",
    "ProcessedQuestion": "what are the most popular religions in israel",
    "Parses": [
      {
        "ParseId": "WebQTest-1590.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03spz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03spz ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n?y ns:location.religion_percentage.percentage ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "PotentialTopicEntityMention": "israel",
        "TopicEntityName": "Israel",
        "TopicEntityMid": "m.03spz",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": {
          "SortOrder": "Descending",
          "Start": 0,
          "Count": 1,
          "SourceNodeIndex": 0,
          "NodePredicate": "location.religion_percentage.percentage",
          "ValueType": "Number"
        },
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_gx",
            "EntityName": "Judaism"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03spz": "Israel"
    },
    "qid_topic_entity": {
      "Q801": "Israel"
    },
    "index": 925
  },
  {
    "QuestionId": "WebQTest-794",
    "RawQuestion": "who does the voice for darth vader?",
    "ProcessedQuestion": "who does the voice for darth vader",
    "Parses": [
      {
        "ParseId": "WebQTest-794.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "PotentialTopicEntityMention": "darth vader",
        "TopicEntityName": "Darth Vader",
        "TopicEntityMid": "m.0f2y0",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.02nsjvf",
            "EntityName": "Voice",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.special_performance_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0113l6zy",
            "EntityName": "Dr. Smoov"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06wm0z",
            "EntityName": "Zac Efron"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0945y8",
            "EntityName": "Abraham Benrubi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b2l8f",
            "EntityName": "Matt Lanter"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f6_x",
            "EntityName": "James Earl Jones"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0f2y0": "Darth Vader"
    },
    "qid_topic_entity": {
      "Q51752": "Darth Vader"
    },
    "index": 926
  },
  {
    "QuestionId": "WebQTest-1490",
    "RawQuestion": "what language is spoken in argentina?",
    "ProcessedQuestion": "what language is spoken in argentina",
    "Parses": [
      {
        "ParseId": "WebQTest-1490.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bjrlw",
            "EntityName": "Italian Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w_hsv",
            "EntityName": "Guaran\u00ed language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03d9kg",
            "EntityName": "Quechuan languages"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0880p",
            "EntityName": "Yiddish Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1490.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jgd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jgd ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "argentina",
        "TopicEntityName": "Argentina",
        "TopicEntityMid": "m.0jgd",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0jgd": "Argentina"
    },
    "qid_topic_entity": {
      "Q414": "Argentina"
    },
    "index": 927
  },
  {
    "QuestionId": "WebQTest-1216",
    "RawQuestion": "what country was stalin in charge of?",
    "ProcessedQuestion": "what country was stalin in charge of",
    "Parses": [
      {
        "ParseId": "WebQTest-1216.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? hold position != in charge, but for certain positions, it is."
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_lf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_lf ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.jurisdiction_of_office ?x .\n}\n",
        "PotentialTopicEntityMention": "stalin",
        "TopicEntityName": "Joseph Stalin",
        "TopicEntityMid": "m.03_lf",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.jurisdiction_of_office"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05vz3zq",
            "EntityName": "Soviet Union"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_lf": "Joseph Stalin"
    },
    "qid_topic_entity": {
      "Q855": "Joseph Stalin"
    },
    "index": 928
  },
  {
    "QuestionId": "WebQTest-1756",
    "RawQuestion": "what languages do people speak in spain?",
    "ProcessedQuestion": "what languages do people speak in spain",
    "Parses": [
      {
        "ParseId": "WebQTest-1756.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "spain",
        "TopicEntityName": "Spain",
        "TopicEntityMid": "m.06mkj",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06nm1",
            "EntityName": "Spanish Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mkj": "Spain"
    },
    "qid_topic_entity": {
      "Q29": "Spain"
    },
    "index": 929
  },
  {
    "QuestionId": "WebQTest-1503",
    "RawQuestion": "where did thomas paine die?",
    "ProcessedQuestion": "where did thomas paine die",
    "Parses": [
      {
        "ParseId": "WebQTest-1503.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07kwl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07kwl ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "thomas paine",
        "TopicEntityName": "Thomas Paine",
        "TopicEntityMid": "m.07kwl",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_286",
            "EntityName": "New York City"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07kwl": "Thomas Paine"
    },
    "qid_topic_entity": {
      "Q126462": "Thomas Paine"
    },
    "index": 930
  },
  {
    "QuestionId": "WebQTest-119",
    "RawQuestion": "who plays london tipton in suite life on deck?",
    "ProcessedQuestion": "who plays london tipton in suite life on deck",
    "Parses": [
      {
        "ParseId": "WebQTest-119.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mj4jm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mj4jm ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.07g8r3 .\n}\n",
        "PotentialTopicEntityMention": "suite life on deck",
        "TopicEntityName": "The Suite Life on Deck",
        "TopicEntityMid": "m.03mj4jm",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07g8r3",
            "EntityName": "London Tipton",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05pmzb",
            "EntityName": "Brenda Song"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03mj4jm": "The Suite Life on Deck"
    },
    "qid_topic_entity": {
      "Q139849": "The Suite Life on Deck"
    },
    "index": 931
  },
  {
    "QuestionId": "WebQTest-175",
    "RawQuestion": "where did joe flacco attend college?",
    "ProcessedQuestion": "where did joe flacco attend college",
    "Parses": [
      {
        "ParseId": "WebQTest-175.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d4lw7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d4lw7 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "joe flacco",
        "TopicEntityName": "Joe Flacco",
        "TopicEntityMid": "m.03d4lw7",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01swxv",
            "EntityName": "University of Delaware"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03d4lw7": "Joe Flacco"
    },
    "qid_topic_entity": {
      "Q795406": "Joe Flacco"
    },
    "index": 932
  },
  {
    "QuestionId": "WebQTest-1982",
    "RawQuestion": "what type of music did vivaldi compose?",
    "ProcessedQuestion": "what type of music did vivaldi compose",
    "Parses": [
      {
        "ParseId": "WebQTest-1982.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pth)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pth ns:music.artist.genre ?x .\n}\n",
        "PotentialTopicEntityMention": "vivaldi",
        "TopicEntityName": "Antonio Vivaldi",
        "TopicEntityMid": "m.0pth",
        "InferentialChain": [
          "music.artist.genre"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fsz",
            "EntityName": "Baroque music"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ggq0m",
            "EntityName": "Classical music"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0pth": "Antonio Vivaldi"
    },
    "qid_topic_entity": {
      "Q1340": "Antonio Vivaldi"
    },
    "index": 933
  },
  {
    "QuestionId": "WebQTest-1457",
    "RawQuestion": "what kind of currency does mexico use?",
    "ProcessedQuestion": "what kind of currency does mexico use",
    "Parses": [
      {
        "ParseId": "WebQTest-1457.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "mexico",
        "TopicEntityName": "Mexico",
        "TopicEntityMid": "m.0b90_r",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012ts8",
            "EntityName": "Mexican peso"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0b90_r": "Mexico"
    },
    "qid_topic_entity": {
      "Q96": "Mexico"
    },
    "index": 934
  },
  {
    "QuestionId": "WebQTest-1189",
    "RawQuestion": "what is the capital of italy today?",
    "ProcessedQuestion": "what is the capital of italy today",
    "Parses": [
      {
        "ParseId": "WebQTest-1189.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.capital ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.capital"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06c62",
            "EntityName": "Rome"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 935
  },
  {
    "QuestionId": "WebQTest-577",
    "RawQuestion": "where did derek fisher go to college?",
    "ProcessedQuestion": "where did derek fisher go to college",
    "Parses": [
      {
        "ParseId": "WebQTest-577.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lvwk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lvwk ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "derek fisher",
        "TopicEntityName": "Derek Fisher",
        "TopicEntityMid": "m.04lvwk",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rc6f",
            "EntityName": "University of Arkansas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dtym",
            "EntityName": "University of Arkansas at Little Rock"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04lvwk": "Derek Fisher"
    },
    "qid_topic_entity": {
      "Q314621": "Derek Fisher"
    },
    "index": 936
  },
  {
    "QuestionId": "WebQTest-326",
    "RawQuestion": "what did gerald r ford die from?",
    "ProcessedQuestion": "what did gerald r ford die from",
    "Parses": [
      {
        "ParseId": "WebQTest-326.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c_md_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c_md_ ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "gerald r ford",
        "TopicEntityName": "Gerald Ford",
        "TopicEntityMid": "m.0c_md_",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k6hp",
            "EntityName": "Cardiovascular disease"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0c_md_": "Gerald Ford"
    },
    "qid_topic_entity": {
      "Q9582": "Gerald Ford"
    },
    "index": 937
  },
  {
    "QuestionId": "WebQTest-769",
    "RawQuestion": "which is the main train station in rome?",
    "ProcessedQuestion": "which is the main train station in rome",
    "Parses": [
      {
        "ParseId": "WebQTest-769.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c62 ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?y ns:travel.transportation.mode_of_transportation ns:m.07jdr .\n}\n",
        "PotentialTopicEntityMention": "rome",
        "TopicEntityName": "Rome",
        "TopicEntityMid": "m.06c62",
        "InferentialChain": [
          "travel.travel_destination.how_to_get_here",
          "travel.transportation.transport_terminus"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.07jdr",
            "EntityName": "Train",
            "SourceNodeIndex": 0,
            "NodePredicate": "travel.transportation.mode_of_transportation",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02683tb",
            "EntityName": "Roma Termini railway station"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06c62": "Rome"
    },
    "qid_topic_entity": {
      "Q220": "Rome"
    },
    "index": 938
  },
  {
    "QuestionId": "WebQTest-1698",
    "RawQuestion": "where do burmese cats originate from?",
    "ProcessedQuestion": "where do burmese cats originate from",
    "Parses": [
      {
        "ParseId": "WebQTest-1698.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mvkt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mvkt ns:biology.animal_breed.place_of_origin ?x .\n}\n",
        "PotentialTopicEntityMention": "burmese cats",
        "TopicEntityName": "Burmese cat",
        "TopicEntityMid": "m.01mvkt",
        "InferentialChain": [
          "biology.animal_breed.place_of_origin"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xn_",
            "EntityName": "Myanmar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f1x",
            "EntityName": "Thailand"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01mvkt": "Burmese cat"
    },
    "qid_topic_entity": {
      "Q42573": "Burmese cat"
    },
    "index": 939
  },
  {
    "QuestionId": "WebQTest-999",
    "RawQuestion": "when did celtics win the championship?",
    "ProcessedQuestion": "when did celtics win the championship",
    "Parses": [
      {
        "ParseId": "WebQTest-999.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bwjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bwjj ns:sports.sports_team.championships ?x .\n}\n",
        "PotentialTopicEntityMention": "celtics",
        "TopicEntityName": "Boston Celtics",
        "TopicEntityMid": "m.0bwjj",
        "InferentialChain": [
          "sports.sports_team.championships"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0403mzq",
            "EntityName": "2008 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08dxfs",
            "EntityName": "1969 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08x9wd",
            "EntityName": "1986 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08x9xt",
            "EntityName": "1984 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08x9zw",
            "EntityName": "1981 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l8zn",
            "EntityName": "1976 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs1gb",
            "EntityName": "1974 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs222",
            "EntityName": "1968 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs24h",
            "EntityName": "1966 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs266",
            "EntityName": "1965 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs27l",
            "EntityName": "1964 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs29b",
            "EntityName": "1963 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs2f4",
            "EntityName": "1962 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs2fv",
            "EntityName": "1961 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs2h6",
            "EntityName": "1960 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs2hx",
            "EntityName": "1959 NBA Finals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cs2n0",
            "EntityName": "1957 NBA Finals"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0bwjj": "Boston Celtics"
    },
    "qid_topic_entity": {
      "Q131371": "Boston Celtics"
    },
    "index": 940
  },
  {
    "QuestionId": "WebQTest-1964",
    "RawQuestion": "who played stanley kowalski in a streetcar named desire movie?",
    "ProcessedQuestion": "who played stanley kowalski in a streetcar named desire movie",
    "Parses": [
      {
        "ParseId": "WebQTest-1964.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097zcz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097zcz ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.03bhwh .\n}\n",
        "PotentialTopicEntityMention": "a streetcar named desire movie",
        "TopicEntityName": "A Streetcar Named Desire",
        "TopicEntityMid": "m.097zcz",
        "InferentialChain": [
          "film.film.starring",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.03bhwh",
            "EntityName": "Stanley Kowalski",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04__f",
            "EntityName": "Marlon Brando"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1964.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bhwh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bhwh ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.097zcz .\n}\n",
        "PotentialTopicEntityMention": "stanley kowalski",
        "TopicEntityName": "Stanley Kowalski",
        "TopicEntityMid": "m.03bhwh",
        "InferentialChain": [
          "film.film_character.portrayed_in_films",
          "film.performance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.097zcz",
            "EntityName": "A Streetcar Named Desire",
            "SourceNodeIndex": 0,
            "NodePredicate": "film.performance.film",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04__f",
            "EntityName": "Marlon Brando"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.097zcz": "A Streetcar Named Desire",
      "m.03bhwh": "Stanley Kowalski"
    },
    "qid_topic_entity": {
      "Q212129": "A Streetcar Named Desire",
      "Q3496842": "Stanley Kowalski"
    },
    "index": 941
  },
  {
    "QuestionId": "WebQTest-1672",
    "RawQuestion": "what language do the maasai speak?",
    "ProcessedQuestion": "what language do the maasai speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1672.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054vv ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "maasai",
        "TopicEntityName": "Maasai people",
        "TopicEntityMid": "m.054vv",
        "InferentialChain": [
          "people.ethnicity.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.064kl7",
            "EntityName": "Maasai Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.054vv": "Maasai people"
    },
    "qid_topic_entity": {
      "Q163022": "Maasai people"
    },
    "index": 942
  },
  {
    "QuestionId": "WebQTest-856",
    "RawQuestion": "what types of art did andy warhol do?",
    "ProcessedQuestion": "what types of art did andy warhol do",
    "Parses": [
      {
        "ParseId": "WebQTest-856.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kc6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "PotentialTopicEntityMention": "andy warhol",
        "TopicEntityName": "Andy Warhol",
        "TopicEntityMid": "m.0kc6",
        "InferentialChain": [
          "visual_art.visual_artist.associated_periods_or_movements"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.015r61",
            "EntityName": "Modern art"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q4mn",
            "EntityName": "Pop art"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0kc6": "Andy Warhol"
    },
    "qid_topic_entity": {
      "Q5603": "Andy Warhol"
    },
    "index": 943
  },
  {
    "QuestionId": "WebQTest-1713",
    "RawQuestion": "what disease did abraham lincoln had?",
    "ProcessedQuestion": "what disease did abraham lincoln had",
    "Parses": [
      {
        "ParseId": "WebQTest-1713.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:medicine.notable_person_with_medical_condition.condition ?x .\n}\n",
        "PotentialTopicEntityMention": "abraham lincoln",
        "TopicEntityName": "Abraham Lincoln",
        "TopicEntityMid": "m.0gzh",
        "InferentialChain": [
          "medicine.notable_person_with_medical_condition.condition"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02s645",
            "EntityName": "Strabismus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06vr2",
            "EntityName": "Smallpox"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc6n",
            "EntityName": "Marfan syndrome"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gzh": "Abraham Lincoln"
    },
    "qid_topic_entity": {
      "Q91": "Abraham Lincoln"
    },
    "index": 944
  },
  {
    "QuestionId": "WebQTest-1873",
    "RawQuestion": "where is traditional chinese used?",
    "ProcessedQuestion": "where is traditional chinese used",
    "Parses": [
      {
        "ParseId": "WebQTest-1873.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "VeryLow",
          "FreeFormComment": "??"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "chinese",
        "TopicEntityName": "Chinese language",
        "TopicEntityMid": "m.01r2l",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r2l": "Chinese language"
    },
    "qid_topic_entity": {
      "Q7850": "Chinese language"
    },
    "index": 945
  },
  {
    "QuestionId": "WebQTest-1421",
    "RawQuestion": "who did woody harrelson play on cheers?",
    "ProcessedQuestion": "who did woody harrelson play on cheers",
    "Parses": [
      {
        "ParseId": "WebQTest-1421.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0170s4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0170s4 ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.01s81 .\n}\n",
        "PotentialTopicEntityMention": "woody harrelson",
        "TopicEntityName": "Woody Harrelson",
        "TopicEntityMid": "m.0170s4",
        "InferentialChain": [
          "tv.tv_actor.starring_roles",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01s81",
            "EntityName": "Cheers",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.series",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065xmv",
            "EntityName": "Woody Boyd"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1421.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s81)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s81 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.actor ns:m.0170s4 .\n}\n",
        "PotentialTopicEntityMention": "cheers",
        "TopicEntityName": "Cheers",
        "TopicEntityMid": "m.01s81",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.character"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0170s4",
            "EntityName": "Woody Harrelson",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.actor",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065xmv",
            "EntityName": "Woody Boyd"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0170s4": "Woody Harrelson",
      "m.01s81": "Cheers"
    },
    "qid_topic_entity": {
      "Q201279": "Woody Harrelson",
      "Q732063": "Cheers"
    },
    "index": 946
  },
  {
    "QuestionId": "WebQTest-402",
    "RawQuestion": "what does joey jordison play in slipknot?",
    "ProcessedQuestion": "what does joey jordison play in slipknot",
    "Parses": [
      {
        "ParseId": "WebQTest-402.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01wt4wc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01wt4wc ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.group ns:m.0ntq7 .\n}\n",
        "PotentialTopicEntityMention": "joey jordison",
        "TopicEntityName": "Joey Jordison",
        "TopicEntityMid": "m.01wt4wc",
        "InferentialChain": [
          "music.group_member.membership",
          "music.group_membership.role"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0ntq7",
            "EntityName": "Slipknot",
            "SourceNodeIndex": 0,
            "NodePredicate": "music.group_membership.group",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hnl",
            "EntityName": "Drums"
          }
        ]
      },
      {
        "ParseId": "WebQTest-402.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ntq7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ntq7 ns:music.musical_group.member ?y .\n?y ns:music.group_membership.role ?x .\n?y ns:music.group_membership.member ns:m.01wt4wc .\n}\n",
        "PotentialTopicEntityMention": "slipknot",
        "TopicEntityName": "Slipknot",
        "TopicEntityMid": "m.0ntq7",
        "InferentialChain": [
          "music.musical_group.member",
          "music.group_membership.role"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01wt4wc",
            "EntityName": "Joey Jordison",
            "SourceNodeIndex": 0,
            "NodePredicate": "music.group_membership.member",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hnl",
            "EntityName": "Drums"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01wt4wc": "Joey Jordison",
      "m.0ntq7": "Slipknot"
    },
    "qid_topic_entity": {
      "Q295817": "Joey Jordison",
      "Q254138": "Slipknot"
    },
    "index": 947
  },
  {
    "QuestionId": "WebQTest-1525",
    "RawQuestion": "who were we fighting in the gulf war?",
    "ProcessedQuestion": "who were we fighting in the gulf war",
    "Parses": [
      {
        "ParseId": "WebQTest-1525.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? Might want to exclude \"we\""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018w0j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018w0j ns:military.military_conflict.combatants ?y .\n?y ns:military.military_combatant_group.combatants ?x .\n}\n",
        "PotentialTopicEntityMention": "gulf war",
        "TopicEntityName": "Gulf War",
        "TopicEntityMid": "m.018w0j",
        "InferentialChain": [
          "military.military_conflict.combatants",
          "military.military_combatant_group.combatants"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01z215",
            "EntityName": "Saudi Arabia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05q4",
            "EntityName": "Iraq"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f8l9c",
            "EntityName": "France"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jgd",
            "EntityName": "Argentina"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.018w0j": "Gulf War"
    },
    "qid_topic_entity": {
      "Q37643": "Gulf War"
    },
    "index": 948
  },
  {
    "QuestionId": "WebQTest-329",
    "RawQuestion": "what type of government was formed when italy unified?",
    "ProcessedQuestion": "what type of government was formed when italy unified",
    "Parses": [
      {
        "ParseId": "WebQTest-329.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03rjj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03rjj ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "italy",
        "TopicEntityName": "Italy",
        "TopicEntityMid": "m.03rjj",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c9rw5",
            "EntityName": "Constitutional republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0glnsx",
            "EntityName": "Parliamentary republic"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03rjj": "Italy"
    },
    "qid_topic_entity": {
      "Q38": "Italy"
    },
    "index": 949
  },
  {
    "QuestionId": "WebQTest-1240",
    "RawQuestion": "what football team is michael vick on?",
    "ProcessedQuestion": "what football team is michael vick on",
    "Parses": [
      {
        "ParseId": "WebQTest-1240.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027f42)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027f42 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "michael vick",
        "TopicEntityName": "Michael Vick",
        "TopicEntityMid": "m.027f42",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "0000-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": null
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05g49",
            "EntityName": "New York Jets"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.027f42": "Michael Vick"
    },
    "qid_topic_entity": {
      "Q505431": "Michael Vick"
    },
    "index": 950
  },
  {
    "QuestionId": "WebQTest-1462",
    "RawQuestion": "who is running for vice president with barack obama 2012?",
    "ProcessedQuestion": "who is running for vice president with barack obama 2012",
    "Parses": [
      {
        "ParseId": "WebQTest-1462.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "barack obama",
        "TopicEntityName": "Barack Obama",
        "TopicEntityMid": "m.02mjmr",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.012gx2",
            "EntityName": "Joe Biden"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02mjmr": "Barack Obama"
    },
    "qid_topic_entity": {
      "Q76": "Barack Obama"
    },
    "index": 951
  },
  {
    "QuestionId": "WebQTest-1860",
    "RawQuestion": "what discovery did galileo make?",
    "ProcessedQuestion": "what discovery did galileo make",
    "Parses": [
      {
        "ParseId": "WebQTest-1860.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034ks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034ks ns:astronomy.astronomer.astronomical_objects_discovered ?x .\n}\n",
        "PotentialTopicEntityMention": "galileo",
        "TopicEntityName": "Galileo Galilei",
        "TopicEntityMid": "m.034ks",
        "InferentialChain": [
          "astronomy.astronomer.astronomical_objects_discovered"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041sd6",
            "EntityName": "Io"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bt_p",
            "EntityName": "Callisto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bv05",
            "EntityName": "Europa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f58c",
            "EntityName": "Ganymede"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034ks": "Galileo Galilei"
    },
    "qid_topic_entity": {
      "Q307": "Galileo Galilei"
    },
    "index": 952
  },
  {
    "QuestionId": "WebQTest-650",
    "RawQuestion": "what political party does julia gillard belong to?",
    "ProcessedQuestion": "what political party does julia gillard belong to",
    "Parses": [
      {
        "ParseId": "WebQTest-650.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02kx9r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02kx9r ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "PotentialTopicEntityMention": "julia gillard",
        "TopicEntityName": "Julia Gillard",
        "TopicEntityMid": "m.02kx9r",
        "InferentialChain": [
          "government.politician.party",
          "government.political_party_tenure.party"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02w5p3q",
            "EntityName": "Queensland Labor Party"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0q96",
            "EntityName": "Australian Labor Party"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02kx9r": "Julia Gillard"
    },
    "qid_topic_entity": {
      "Q41563": "Julia Gillard"
    },
    "index": 953
  },
  {
    "QuestionId": "WebQTest-1161",
    "RawQuestion": "what is the clemson mascot name?",
    "ProcessedQuestion": "what is the clemson mascot name",
    "Parses": [
      {
        "ParseId": "WebQTest-1161.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012vwb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012vwb ns:education.educational_institution.mascot ?x .\n}\n",
        "PotentialTopicEntityMention": "clemson",
        "TopicEntityName": "Clemson University",
        "TopicEntityMid": "m.012vwb",
        "InferentialChain": [
          "education.educational_institution.mascot"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02nv3yz",
            "EntityName": "Clemson University The Tiger"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05h9xpr",
            "EntityName": "The Tiger and the Cub"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.012vwb": "Clemson University"
    },
    "qid_topic_entity": {
      "Q631066": "Clemson University"
    },
    "index": 954
  },
  {
    "QuestionId": "WebQTest-1732",
    "RawQuestion": "where did theodor schwann get his education?",
    "ProcessedQuestion": "where did theodor schwann get his education",
    "Parses": [
      {
        "ParseId": "WebQTest-1732.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040000)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040000 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "PotentialTopicEntityMention": "theodor schwann",
        "TopicEntityName": "Theodor Schwann",
        "TopicEntityMid": "m.040000",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01stzp",
            "EntityName": "Humboldt University of Berlin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03563j",
            "EntityName": "University of W\u00fcrzburg"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0m7yh",
            "EntityName": "University of Bonn"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.040000": "Theodor Schwann"
    },
    "qid_topic_entity": {
      "Q76745": "Theodor Schwann"
    },
    "index": 955
  },
  {
    "QuestionId": "WebQTest-676",
    "RawQuestion": "what did the akkadian empire include?",
    "ProcessedQuestion": "what did the akkadian empire include",
    "Parses": [
      {
        "ParseId": "WebQTest-676.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0q_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0q_7 ns:location.location.contains ?x .\n}\n",
        "PotentialTopicEntityMention": "akkadian empire",
        "TopicEntityName": "Akkadian Empire",
        "TopicEntityMid": "m.0q_7",
        "InferentialChain": [
          "location.location.contains"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n541jb",
            "EntityName": "Akkad"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0q_7": "Akkadian Empire"
    },
    "qid_topic_entity": {
      "Q4461035": "Akkadian Empire"
    },
    "index": 956
  },
  {
    "QuestionId": "WebQTest-540",
    "RawQuestion": "what college did brett favre?",
    "ProcessedQuestion": "what college did brett favre",
    "Parses": [
      {
        "ParseId": "WebQTest-540.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cv72h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cv72h ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "PotentialTopicEntityMention": "brett favre",
        "TopicEntityName": "Brett Favre",
        "TopicEntityMid": "m.0cv72h",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01y2hnl",
            "EntityName": "College/University",
            "SourceNodeIndex": 1,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cchk3",
            "EntityName": "University of Southern Mississippi"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0cv72h": "Brett Favre"
    },
    "qid_topic_entity": {
      "Q267088": "Brett Favre"
    },
    "index": 957
  },
  {
    "QuestionId": "WebQTest-1187",
    "RawQuestion": "where are english speakers distributed?",
    "ProcessedQuestion": "where are english speakers distributed",
    "Parses": [
      {
        "ParseId": "WebQTest-1187.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.countries_spoken_in"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0160w",
            "EntityName": "Bahamas"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162b",
            "EntityName": "Bangladesh"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0162v",
            "EntityName": "Barbados"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0164b",
            "EntityName": "Belize"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0165b",
            "EntityName": "Bermuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0166v",
            "EntityName": "Botswana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0167v",
            "EntityName": "Brunei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016p5p",
            "EntityName": "Transkei"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019pcs",
            "EntityName": "Ethiopia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019rg5",
            "EntityName": "Kenya"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01k0p4",
            "EntityName": "State of Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nln",
            "EntityName": "Cameroon"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nty",
            "EntityName": "Cayman Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01ppq",
            "EntityName": "Cyprus"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.020p1",
            "EntityName": "Cook Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wtlf",
            "EntityName": "Territory of Papua and New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.027nb",
            "EntityName": "Dominica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02lx0",
            "EntityName": "Timor-Leste"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02wt0",
            "EntityName": "Fiji"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03__y",
            "EntityName": "Jordan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_xj",
            "EntityName": "Jersey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034m8",
            "EntityName": "Guyana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.034tl",
            "EntityName": "Guam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035dk",
            "EntityName": "Ghana"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hm",
            "EntityName": "Gibraltar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035hr8",
            "EntityName": "South Yemen"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.035yg",
            "EntityName": "Grenada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h2c",
            "EntityName": "Honduras"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03h64",
            "EntityName": "Hong Kong"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03ryn",
            "EntityName": "Indonesia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03spz",
            "EntityName": "Israel"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03t1s",
            "EntityName": "Isle of Man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047t_",
            "EntityName": "Kiribati"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hvw",
            "EntityName": "Lesotho"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hzj",
            "EntityName": "Liberia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3q",
            "EntityName": "Malta"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v6v",
            "EntityName": "Marshall Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04wcf",
            "EntityName": "Montserrat"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bmq",
            "EntityName": "Namibia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05br2",
            "EntityName": "Nauru"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05cgv",
            "EntityName": "Nigeria"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05qkp",
            "EntityName": "Papua New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05r7t",
            "EntityName": "Puerto Rico"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05v8c",
            "EntityName": "Philippines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.065skb",
            "EntityName": "Gazankulu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0697s",
            "EntityName": "Qatar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dfg",
            "EntityName": "Rwanda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m_5",
            "EntityName": "Sri Lanka"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ryl",
            "EntityName": "Saint Kitts and Nevis"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s_2",
            "EntityName": "Sierra Leone"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s0l",
            "EntityName": "Saint Lucia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s6l",
            "EntityName": "Saint Vincent and the Grenadines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06s9y",
            "EntityName": "Samoa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06t2t",
            "EntityName": "Singapore"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06tw8",
            "EntityName": "Sudan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06v36",
            "EntityName": "Swaziland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dzf",
            "EntityName": "Tanzania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07f9q",
            "EntityName": "Tokelau"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fr_",
            "EntityName": "Turks and Caicos Islands"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07fsv",
            "EntityName": "Tuvalu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tp2",
            "EntityName": "Uganda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ytt",
            "EntityName": "Vatican City"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07z5n",
            "EntityName": "Vanuatu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088q4",
            "EntityName": "Zimbabwe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.088vb",
            "EntityName": "Zambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09pmkv",
            "EntityName": "Malaysia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09wfqp",
            "EntityName": "Territory of New Guinea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d05w3",
            "EntityName": "China"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0h44w",
            "EntityName": "Mandatory Palestine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hbgh",
            "EntityName": "Cura\u00e7ao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hdx8",
            "EntityName": "Gambia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzlz",
            "EntityName": "South Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0l3h",
            "EntityName": "Antigua and Barbuda"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rdr4",
            "EntityName": "Bonaire"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1187.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02h40lc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02h40lc ns:language.human_language.main_country ?x .\n}\n",
        "PotentialTopicEntityMention": "english",
        "TopicEntityName": "English Language",
        "TopicEntityMid": "m.02h40lc",
        "InferentialChain": [
          "language.human_language.main_country"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014tss",
            "EntityName": "Kingdom of Great Britain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rt9",
            "EntityName": "Republic of Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07ssc",
            "EntityName": "United Kingdom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09c7w0",
            "EntityName": "United States of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0chghy",
            "EntityName": "Australia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0ctw_b",
            "EntityName": "New Zealand"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d060g",
            "EntityName": "Canada"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02h40lc": "English Language"
    },
    "qid_topic_entity": {
      "Q1860": "English Language"
    },
    "index": 958
  },
  {
    "QuestionId": "WebQTest-1235",
    "RawQuestion": "what was sir isaac newton's inventions?",
    "ProcessedQuestion": "what was sir isaac newton 's inventions",
    "Parses": [
      {
        "ParseId": "WebQTest-1235.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "sir isaac newton",
        "TopicEntityName": "Isaac Newton",
        "TopicEntityMid": "m.03s9v",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nhc9",
            "EntityName": "Reflecting telescope"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.079vqm",
            "EntityName": "Pet door"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03s9v": "Isaac Newton"
    },
    "qid_topic_entity": {
      "Q935": "Isaac Newton"
    },
    "index": 959
  },
  {
    "QuestionId": "WebQTest-1871",
    "RawQuestion": "what is the stanley cup named after?",
    "ProcessedQuestion": "what is the stanley cup named after",
    "Parses": [
      {
        "ParseId": "WebQTest-1871.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hn79)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hn79 ns:symbols.namesake.named_after ?x .\n}\n",
        "PotentialTopicEntityMention": "stanley cup",
        "TopicEntityName": "Stanley Cup",
        "TopicEntityMid": "m.0hn79",
        "InferentialChain": [
          "symbols.namesake.named_after"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q69p",
            "EntityName": "Frederick Stanley, 16th Earl of Derby"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0hn79": "Stanley Cup"
    },
    "qid_topic_entity": {
      "Q211872": "Stanley Cup"
    },
    "index": 960
  },
  {
    "QuestionId": "WebQTest-1994",
    "RawQuestion": "what did whoopi goldberg won a grammy for?",
    "ProcessedQuestion": "what did whoopi goldberg won a grammy for",
    "Parses": [
      {
        "ParseId": "WebQTest-1994.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fb1q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fb1q ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n?y ns:award.award_honor.ceremony ns:m.019qq6 .\n}\n",
        "PotentialTopicEntityMention": "whoopi goldberg",
        "TopicEntityName": "Whoopi Goldberg",
        "TopicEntityMid": "m.0fb1q",
        "InferentialChain": [
          "award.award_winner.awards_won",
          "award.award_honor.award"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.019qq6",
            "EntityName": "28th Annual Grammy Awards",
            "SourceNodeIndex": 0,
            "NodePredicate": "award.award_honor.ceremony",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019bnn",
            "EntityName": "Grammy Award for Best Comedy Album"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0fb1q": "Whoopi Goldberg"
    },
    "qid_topic_entity": {
      "Q49001": "Whoopi Goldberg"
    },
    "index": 961
  },
  {
    "QuestionId": "WebQTest-514",
    "RawQuestion": "where is denmark situated?",
    "ProcessedQuestion": "where is denmark situated",
    "Parses": [
      {
        "ParseId": "WebQTest-514.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k6nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k6nt ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n",
        "PotentialTopicEntityMention": "denmark",
        "TopicEntityName": "Denmark",
        "TopicEntityMid": "m.0k6nt",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nt",
            "EntityName": "Region",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0140mf",
            "EntityName": "Nordic countries"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06mx8",
            "EntityName": "Scandinavia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0k6nt": "Denmark"
    },
    "qid_topic_entity": {
      "Q35": "Denmark"
    },
    "index": 962
  },
  {
    "QuestionId": "WebQTest-1531",
    "RawQuestion": "where is mali located?",
    "ProcessedQuestion": "where is mali located",
    "Parses": [
      {
        "ParseId": "WebQTest-1531.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v09)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v09 ns:base.locations.countries.continent ?x .\n}\n",
        "PotentialTopicEntityMention": "mali",
        "TopicEntityName": "Mali",
        "TopicEntityMid": "m.04v09",
        "InferentialChain": [
          "base.locations.countries.continent"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3n1",
            "EntityName": "Africa"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1531.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v09)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v09 ns:location.location.containedby ?x .\n}\n",
        "PotentialTopicEntityMention": "mali",
        "TopicEntityName": "Mali",
        "TopicEntityMid": "m.04v09",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dg3n1",
            "EntityName": "Africa"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hqjh",
            "EntityName": "West Africa"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04v09": "Mali"
    },
    "qid_topic_entity": {
      "Q912": "Mali"
    },
    "index": 963
  },
  {
    "QuestionId": "WebQTest-1839",
    "RawQuestion": "what's my timezone in oklahoma?",
    "ProcessedQuestion": "what 's my timezone in oklahoma",
    "Parses": [
      {
        "ParseId": "WebQTest-1839.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mph ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "oklahoma",
        "TopicEntityName": "Oklahoma",
        "TopicEntityMid": "m.05mph",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02fqwt",
            "EntityName": "Central Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05mph": "Oklahoma"
    },
    "qid_topic_entity": {
      "Q1649": "Oklahoma"
    },
    "index": 964
  },
  {
    "QuestionId": "WebQTest-1481",
    "RawQuestion": "what city is the university of oregon state in?",
    "ProcessedQuestion": "what city is the university of oregon state in",
    "Parses": [
      {
        "ParseId": "WebQTest-1481.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "University of Oregon State -> (1) University of Oregon (2) Oregon State University"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n6r0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n6r0 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "the university of oregon",
        "TopicEntityName": "University of Oregon",
        "TopicEntityMid": "m.01n6r0",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mf7",
            "EntityName": "Eugene"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n6r0": "University of Oregon"
    },
    "qid_topic_entity": {
      "Q766145": "University of Oregon"
    },
    "index": 965
  },
  {
    "QuestionId": "WebQTest-1577",
    "RawQuestion": "who did cliff lee play for last year?",
    "ProcessedQuestion": "who did cliff lee play for last year",
    "Parses": [
      {
        "ParseId": "WebQTest-1577.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bz_j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bz_j ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2014-08-10\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "cliff lee",
        "TopicEntityName": "Cliff Lee",
        "TopicEntityMid": "m.05bz_j",
        "InferentialChain": [
          "sports.pro_athlete.teams",
          "sports.sports_team_roster.team"
        ],
        "Constraints": [
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2015-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2014-08-10",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": true,
          "Start": "-0001-00-00",
          "End": "0000-00-00",
          "AssociatedConstraints": [
            0,
            1
          ],
          "PotentialTimeMention": "last year"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05xvj",
            "EntityName": "Philadelphia Phillies"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05bz_j": "Cliff Lee"
    },
    "qid_topic_entity": {
      "Q978930": "Cliff Lee"
    },
    "index": 966
  },
  {
    "QuestionId": "WebQTest-809",
    "RawQuestion": "what is the current time in bangalore india?",
    "ProcessedQuestion": "what is the current time in bangalore india",
    "Parses": [
      {
        "ParseId": "WebQTest-809.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c17)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c17 ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "bangalore",
        "TopicEntityName": "Bangalore",
        "TopicEntityMid": "m.09c17",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02k8gd",
            "EntityName": "India Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.09c17": "Bangalore"
    },
    "qid_topic_entity": {
      "Q1355": "Bangalore"
    },
    "index": 967
  },
  {
    "QuestionId": "WebQTest-209",
    "RawQuestion": "where is laos in world map?",
    "ProcessedQuestion": "where is laos in world map",
    "Parses": [
      {
        "ParseId": "WebQTest-209.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04hhv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04hhv ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01nt .\n}\n",
        "PotentialTopicEntityMention": "laos",
        "TopicEntityName": "Laos",
        "TopicEntityMid": "m.04hhv",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01nt",
            "EntityName": "Region",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.073q1",
            "EntityName": "Southeast Asia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04hhv": "Laos"
    },
    "qid_topic_entity": {
      "Q819": "Laos"
    },
    "index": 968
  },
  {
    "QuestionId": "WebQTest-127",
    "RawQuestion": "what type of cancer did gilda radner die of?",
    "ProcessedQuestion": "what type of cancer did gilda radner die of",
    "Parses": [
      {
        "ParseId": "WebQTest-127.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0mj4n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0mj4n ns:people.deceased_person.cause_of_death ?x .\n?x ns:people.cause_of_death.parent_cause_of_death ns:m.0qcr0 .\n}\n",
        "PotentialTopicEntityMention": "gilda radner",
        "TopicEntityName": "Gilda Radner",
        "TopicEntityMid": "m.0mj4n",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0qcr0",
            "EntityName": "Cancer",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.cause_of_death.parent_cause_of_death",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025hl8",
            "EntityName": "Ovarian cancer"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0mj4n": "Gilda Radner"
    },
    "qid_topic_entity": {
      "Q266808": "Gilda Radner"
    },
    "index": 969
  },
  {
    "QuestionId": "WebQTest-892",
    "RawQuestion": "what did miles davis died of?",
    "ProcessedQuestion": "what did miles davis died of",
    "Parses": [
      {
        "ParseId": "WebQTest-892.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.053yx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.053yx ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "miles davis",
        "TopicEntityName": "Miles Davis",
        "TopicEntityMid": "m.053yx",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.019dmc",
            "EntityName": "Respiratory failure"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02y0js",
            "EntityName": "Stroke"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dq9p",
            "EntityName": "Pneumonia"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.053yx": "Miles Davis"
    },
    "qid_topic_entity": {
      "Q93341": "Miles Davis"
    },
    "index": 970
  },
  {
    "QuestionId": "WebQTest-492",
    "RawQuestion": "where was st. lucy born?",
    "ProcessedQuestion": "where was st. lucy born",
    "Parses": [
      {
        "ParseId": "WebQTest-492.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r0zd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r0zd ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "st . lucy",
        "TopicEntityName": "Saint Lucy",
        "TopicEntityMid": "m.01r0zd",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071bn",
            "EntityName": "Syracuse"
          }
        ]
      },
      {
        "ParseId": "WebQTest-492.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r0zd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r0zd ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "st . lucy",
        "TopicEntityName": "Saint Lucy",
        "TopicEntityMid": "m.01r0zd",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.071bn",
            "EntityName": "Syracuse"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01r0zd": "Saint Lucy"
    },
    "qid_topic_entity": {
      "Q183240": "Saint Lucy"
    },
    "index": 971
  },
  {
    "QuestionId": "WebQTest-1325",
    "RawQuestion": "what language do maltese speak?",
    "ProcessedQuestion": "what language do maltese speak",
    "Parses": [
      {
        "ParseId": "WebQTest-1325.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "maltese",
        "TopicEntityName": "Malta",
        "TopicEntityMid": "m.04v3q",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-1325.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "maltese",
        "TopicEntityName": "Malta",
        "TopicEntityMid": "m.04v3q",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02h40lc",
            "EntityName": "English Language"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t3_",
            "EntityName": "Maltese Language"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.04v3q": "Malta"
    },
    "qid_topic_entity": {
      "Q233": "Malta"
    },
    "index": 972
  },
  {
    "QuestionId": "WebQTest-0",
    "RawQuestion": "what does jamaican people speak?",
    "ProcessedQuestion": "what does jamaican people speak",
    "Parses": [
      {
        "ParseId": "WebQTest-0.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.languages_spoken ?x .\n}\n",
        "PotentialTopicEntityMention": "jamaican",
        "TopicEntityName": "Jamaica",
        "TopicEntityMid": "m.03_r3",
        "InferentialChain": [
          "location.country.languages_spoken"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01428y",
            "EntityName": "Jamaican English"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ygk0",
            "EntityName": "Jamaican Creole English Language"
          }
        ]
      },
      {
        "ParseId": "WebQTest-0.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.official_language ?x .\n}\n",
        "PotentialTopicEntityMention": "jamaican",
        "TopicEntityName": "Jamaica",
        "TopicEntityMid": "m.03_r3",
        "InferentialChain": [
          "location.country.official_language"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01428y",
            "EntityName": "Jamaican English"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03_r3": "Jamaica"
    },
    "qid_topic_entity": {
      "Q766": "Jamaica"
    },
    "index": 973
  },
  {
    "QuestionId": "WebQTest-1",
    "RawQuestion": "what did james k polk do before he was president?",
    "ProcessedQuestion": "what did james k polk do before he was president",
    "Parses": [
      {
        "ParseId": "WebQTest-1.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "!Manual Sparql. Comment: Done.  Assuming the question is about the government positions before President.. Original comment: F cannot handle before"
        },
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  {\n    SELECT ?pFrom \n    WHERE {\n      ns:m.042f1 ns:government.politician.government_positions_held ?y . # James K. Polk\n      ?y ns:government.government_position_held.office_position_or_title ?x ; \n         ns:government.government_position_held.basic_title ns:m.060c4 ; # President\n         ns:government.government_position_held.from ?pFrom .\n    }\n  }\n  ns:m.042f1 ns:government.politician.government_positions_held ?y . # James K. Polk\n  ?y ns:government.government_position_held.office_position_or_title ?x ; \n     ns:government.government_position_held.from ?from .\n  \n  FILTER(xsd:dateTime(?pFrom) - xsd:dateTime(?from) > 0)\n}",
        "PotentialTopicEntityMention": "james k polk",
        "TopicEntityName": "James K. Polk",
        "TopicEntityMid": "m.042f1",
        "InferentialChain": null,
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02_bcst",
            "EntityName": "United States Representative"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04x_n9q",
            "EntityName": "Governor of Tennessee"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cgqx",
            "EntityName": "Speaker of the United States House of Representatives"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.042f1": "James K. Polk"
    },
    "qid_topic_entity": {
      "Q11891": "James K. Polk"
    },
    "index": 974
  },
  {
    "QuestionId": "WebQTest-3",
    "RawQuestion": "who plays ken barlow in coronation street?",
    "ProcessedQuestion": "who plays ken barlow in coronation street",
    "Parses": [
      {
        "ParseId": "WebQTest-3.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_2n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_2n ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.015lwh .\n}\n",
        "PotentialTopicEntityMention": "coronation street",
        "TopicEntityName": "Coronation Street",
        "TopicEntityMid": "m.01_2n",
        "InferentialChain": [
          "tv.tv_program.regular_cast",
          "tv.regular_tv_appearance.actor"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.015lwh",
            "EntityName": "Ken Barlow",
            "SourceNodeIndex": 0,
            "NodePredicate": "tv.regular_tv_appearance.character",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01j_gs",
            "EntityName": "William Roache"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01_2n": "Coronation Street"
    },
    "qid_topic_entity": {
      "Q945030": "Coronation Street"
    },
    "index": 975
  },
  {
    "QuestionId": "WebQTest-8",
    "RawQuestion": "what else did ben franklin invent?",
    "ProcessedQuestion": "what else did ben franklin invent",
    "Parses": [
      {
        "ParseId": "WebQTest-8.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:law.inventor.inventions ?x .\n}\n",
        "PotentialTopicEntityMention": "ben franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "law.inventor.inventions"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0135nr",
            "EntityName": "Lightning rod"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.013cqs",
            "EntityName": "Bifocals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zh8g",
            "EntityName": "Glass harmonica"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.029mmz",
            "EntityName": "Franklin stove"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 976
  },
  {
    "QuestionId": "WebQTest-12",
    "RawQuestion": "who is governor of ohio 2011?",
    "ProcessedQuestion": "who is governor of ohio 2011",
    "Parses": [
      {
        "ParseId": "WebQTest-12.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "2011"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kkh ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "PotentialTopicEntityMention": "ohio",
        "TopicEntityName": "Ohio",
        "TopicEntityMid": "m.05kkh",
        "InferentialChain": [
          "government.governmental_jurisdiction.governing_officials",
          "government.government_position_held.office_holder"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0fkvn",
            "EntityName": "Governor",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.basic_title",
            "ValueType": "String"
          },
          {
            "Operator": "LessOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-12-31",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.from",
            "ValueType": "DateTime"
          },
          {
            "Operator": "GreaterOrEqual",
            "ArgumentType": "Value",
            "Argument": "2011-01-01",
            "EntityName": "",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.to",
            "ValueType": "DateTime"
          }
        ],
        "Time": {
          "IsRelativeToNow": false,
          "Start": "2011-01-01",
          "End": "2011-12-31",
          "AssociatedConstraints": [
            1,
            2
          ],
          "PotentialTimeMention": "2011"
        },
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02zzm_",
            "EntityName": "John Kasich"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0340r0",
            "EntityName": "Return J. Meigs, Jr."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.039rqy",
            "EntityName": "Ted Strickland"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05kkh": "Ohio"
    },
    "qid_topic_entity": {
      "Q1397": "Ohio"
    },
    "index": 977
  },
  {
    "QuestionId": "WebQTest-22",
    "RawQuestion": "what kind government does egypt have?",
    "ProcessedQuestion": "what kind government does egypt have",
    "Parses": [
      {
        "ParseId": "WebQTest-22.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.form_of_government ?x .\n}\n",
        "PotentialTopicEntityMention": "egypt",
        "TopicEntityName": "Egypt",
        "TopicEntityMid": "m.02k54",
        "InferentialChain": [
          "location.country.form_of_government"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dw03",
            "EntityName": "Semi-presidential system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02tz3y",
            "EntityName": "Provisional government"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02k54": "Egypt"
    },
    "qid_topic_entity": {
      "Q79": "Egypt"
    },
    "index": 978
  },
  {
    "QuestionId": "WebQTest-24",
    "RawQuestion": "where did edgar allan poe died?",
    "ProcessedQuestion": "where did edgar allan poe died",
    "Parses": [
      {
        "ParseId": "WebQTest-24.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lt8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lt8 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "edgar allan poe",
        "TopicEntityName": "Edgar Allan Poe",
        "TopicEntityMid": "m.02lt8",
        "InferentialChain": [
          "people.deceased_person.place_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.094jv",
            "EntityName": "Baltimore"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02lt8": "Edgar Allan Poe"
    },
    "qid_topic_entity": {
      "Q16867": "Edgar Allan Poe"
    },
    "index": 979
  },
  {
    "QuestionId": "WebQTest-31",
    "RawQuestion": "where did andy murray started playing tennis?",
    "ProcessedQuestion": "where did andy murray started playing tennis",
    "Parses": [
      {
        "ParseId": "WebQTest-31.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "?"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wc52)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wc52 ns:tennis.tennis_player.year_turned_pro ?x .\n}\n",
        "PotentialTopicEntityMention": "andy murray",
        "TopicEntityName": "Andy Murray",
        "TopicEntityMid": "m.03wc52",
        "InferentialChain": [
          "tennis.tennis_player.year_turned_pro"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Value",
            "AnswerArgument": "2005",
            "EntityName": null
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03wc52": "Andy Murray"
    },
    "qid_topic_entity": {
      "Q10125": "Andy Murray"
    },
    "index": 980
  },
  {
    "QuestionId": "WebQTest-32",
    "RawQuestion": "what is the australian dollar called?",
    "ProcessedQuestion": "what is the australian dollar called",
    "Parses": [
      {
        "ParseId": "WebQTest-32.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kz1h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kz1h ns:finance.currency.currency_code ?x .\n}\n",
        "PotentialTopicEntityMention": "australian dollar",
        "TopicEntityName": "Australian dollar",
        "TopicEntityMid": "m.0kz1h",
        "InferentialChain": [
          "finance.currency.currency_code"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Value",
            "AnswerArgument": "AUD",
            "EntityName": null
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0kz1h": "Australian dollar"
    },
    "qid_topic_entity": {
      "Q259502": "Australian dollar"
    },
    "index": 981
  },
  {
    "QuestionId": "WebQTest-35",
    "RawQuestion": "what county is frederick md in?",
    "ProcessedQuestion": "what county is frederick md in",
    "Parses": [
      {
        "ParseId": "WebQTest-35.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dhml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dhml ns:location.hud_county_place.county ?x .\n}\n",
        "PotentialTopicEntityMention": "frederick md",
        "TopicEntityName": "Frederick",
        "TopicEntityMid": "m.0dhml",
        "InferentialChain": [
          "location.hud_county_place.county"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc07",
            "EntityName": "Frederick County"
          }
        ]
      },
      {
        "ParseId": "WebQTest-35.P1",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dhml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dhml ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
        "PotentialTopicEntityMention": "frederick md",
        "TopicEntityName": "Frederick",
        "TopicEntityMid": "m.0dhml",
        "InferentialChain": [
          "location.location.containedby"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0kpym_",
            "EntityName": "US County",
            "SourceNodeIndex": 0,
            "NodePredicate": "common.topic.notable_types",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0cc07",
            "EntityName": "Frederick County"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0dhml": "Frederick"
    },
    "qid_topic_entity": {
      "Q472675": "Frederick"
    },
    "index": 982
  },
  {
    "QuestionId": "WebQTest-36",
    "RawQuestion": "what highschool did harper lee go to?",
    "ProcessedQuestion": "what highschool did harper lee go to",
    "Parses": [
      {
        "ParseId": "WebQTest-36.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq7x ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:education.educational_institution.school_type ns:m.0bpgx .\n}\n",
        "PotentialTopicEntityMention": "harper lee",
        "TopicEntityName": "Harper Lee",
        "TopicEntityMid": "m.01bq7x",
        "InferentialChain": [
          "people.person.education",
          "education.education.institution"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.0bpgx",
            "EntityName": "High school",
            "SourceNodeIndex": 1,
            "NodePredicate": "education.educational_institution.school_type",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crdc8g",
            "EntityName": "Monroe County High School"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01bq7x": "Harper Lee"
    },
    "qid_topic_entity": {
      "Q182658": "Harper Lee"
    },
    "index": 983
  },
  {
    "QuestionId": "WebQTest-37",
    "RawQuestion": "what timezone is utah in?",
    "ProcessedQuestion": "what timezone is utah in",
    "Parses": [
      {
        "ParseId": "WebQTest-37.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07srw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07srw ns:location.location.time_zones ?x .\n}\n",
        "PotentialTopicEntityMention": "utah",
        "TopicEntityName": "Utah",
        "TopicEntityMid": "m.07srw",
        "InferentialChain": [
          "location.location.time_zones"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hczc",
            "EntityName": "Mountain Time Zone"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07srw": "Utah"
    },
    "qid_topic_entity": {
      "Q829": "Utah"
    },
    "index": 984
  },
  {
    "QuestionId": "WebQTest-45",
    "RawQuestion": "where was rihanna born and raised?",
    "ProcessedQuestion": "where was rihanna born and raised",
    "Parses": [
      {
        "ParseId": "WebQTest-45.P0",
        "AnnotatorId": 5,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Low",
          "FreeFormComment": "? raised = birthplace"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mt91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mt91 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "rihanna",
        "TopicEntityName": "Rihanna",
        "TopicEntityMid": "m.06mt91",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p5kp",
            "EntityName": "Saint Michael Parish"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.06mt91": "Rihanna"
    },
    "qid_topic_entity": {
      "Q36844": "Rihanna"
    },
    "index": 985
  },
  {
    "QuestionId": "WebQTest-46",
    "RawQuestion": "what year did president william henry harrison take office?",
    "ProcessedQuestion": "what year did president william henry harrison take office",
    "Parses": [
      {
        "ParseId": "WebQTest-46.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0835q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0835q ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.from ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.060d2 .\n}\n",
        "PotentialTopicEntityMention": "william henry harrison",
        "TopicEntityName": "William Henry Harrison",
        "TopicEntityMid": "m.0835q",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.from"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.060d2",
            "EntityName": "President of the United States",
            "SourceNodeIndex": 0,
            "NodePredicate": "government.government_position_held.office_position_or_title",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Value",
            "AnswerArgument": "1841-03-04",
            "EntityName": null
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0835q": "William Henry Harrison"
    },
    "qid_topic_entity": {
      "Q11869": "William Henry Harrison"
    },
    "index": 986
  },
  {
    "QuestionId": "WebQTest-47",
    "RawQuestion": "where george lopez was born?",
    "ProcessedQuestion": "where george lopez was born",
    "Parses": [
      {
        "ParseId": "WebQTest-47.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xfj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xfj0 ns:people.person.place_of_birth ?x .\n}\n",
        "PotentialTopicEntityMention": "george lopez",
        "TopicEntityName": "George Lopez",
        "TopicEntityMid": "m.02xfj0",
        "InferentialChain": [
          "people.person.place_of_birth"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kfz0",
            "EntityName": "Mission Hills"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xfj0": "George Lopez"
    },
    "qid_topic_entity": {
      "Q73035": "George Lopez"
    },
    "index": 987
  },
  {
    "QuestionId": "WebQTest-48",
    "RawQuestion": "where are samsung based?",
    "ProcessedQuestion": "where are samsung based",
    "Parses": [
      {
        "ParseId": "WebQTest-48.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07gv72)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07gv72 ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "PotentialTopicEntityMention": "samsung",
        "TopicEntityName": "Samsung Group",
        "TopicEntityMid": "m.07gv72",
        "InferentialChain": [
          "organization.organization.headquarters",
          "location.mailing_address.citytown"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02j2b1",
            "EntityName": "Suwon"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07gv72": "Samsung Group"
    },
    "qid_topic_entity": {
      "Q20716": "Samsung Group"
    },
    "index": 988
  },
  {
    "QuestionId": "WebQTest-52",
    "RawQuestion": "what did george orwell died of?",
    "ProcessedQuestion": "what did george orwell died of",
    "Parses": [
      {
        "ParseId": "WebQTest-52.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034bs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034bs ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "george orwell",
        "TopicEntityName": "George Orwell",
        "TopicEntityMid": "m.034bs",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07jwr",
            "EntityName": "Tuberculosis"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.034bs": "George Orwell"
    },
    "qid_topic_entity": {
      "Q3335": "George Orwell"
    },
    "index": 989
  },
  {
    "QuestionId": "WebQTest-54",
    "RawQuestion": "what country did adolf hitler control?",
    "ProcessedQuestion": "what country did adolf hitler control",
    "Parses": [
      {
        "ParseId": "WebQTest-54.P0",
        "AnnotatorId": 3,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.jurisdiction_of_office ?x .\n}\n",
        "PotentialTopicEntityMention": "adolf hitler",
        "TopicEntityName": "Adolf Hitler",
        "TopicEntityMid": "m.07_m9_",
        "InferentialChain": [
          "government.politician.government_positions_held",
          "government.government_position_held.jurisdiction_of_office"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059z0",
            "EntityName": "Nazi Germany"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07_m9_": "Adolf Hitler"
    },
    "qid_topic_entity": {
      "Q352": "Adolf Hitler"
    },
    "index": 990
  },
  {
    "QuestionId": "WebQTest-55",
    "RawQuestion": "who is michael buble?",
    "ProcessedQuestion": "who is michael buble",
    "Parses": [
      {
        "ParseId": "WebQTest-55.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xkkq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xkkq ns:people.person.profession ?x .\n}\n",
        "PotentialTopicEntityMention": "michael buble",
        "TopicEntityName": "Michael Bubl\u00e9",
        "TopicEntityMid": "m.02xkkq",
        "InferentialChain": [
          "people.person.profession"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh1q",
            "EntityName": "Actor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09l65",
            "EntityName": "Singer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0nbcg",
            "EntityName": "Songwriter"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.02xkkq": "Michael Bubl\u00e9"
    },
    "qid_topic_entity": {
      "Q153694": "Michael Bubl\u00e9"
    },
    "index": 991
  },
  {
    "QuestionId": "WebQTest-59",
    "RawQuestion": "when did annie open?",
    "ProcessedQuestion": "when did annie open",
    "Parses": [
      {
        "ParseId": "WebQTest-59.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01_1m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01_1m4 ns:theater.play.date_of_first_performance ?x .\n}\n",
        "PotentialTopicEntityMention": "annie",
        "TopicEntityName": "Annie",
        "TopicEntityMid": "m.01_1m4",
        "InferentialChain": [
          "theater.play.date_of_first_performance"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Value",
            "AnswerArgument": "1976-08-10",
            "EntityName": null
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01_1m4": "Annie"
    },
    "qid_topic_entity": {
      "Q566892": "Annie"
    },
    "index": 992
  },
  {
    "QuestionId": "WebQTest-61",
    "RawQuestion": "what are the religions practiced in indonesia?",
    "ProcessedQuestion": "what are the religions practiced in indonesia",
    "Parses": [
      {
        "ParseId": "WebQTest-61.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "PotentialTopicEntityMention": "indonesia",
        "TopicEntityName": "Indonesia",
        "TopicEntityMid": "m.03ryn",
        "InferentialChain": [
          "location.statistical_region.religions",
          "location.religion_percentage.religion"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03j6c",
            "EntityName": "Hinduism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sfs",
            "EntityName": "Protestantism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.03ryn": "Indonesia"
    },
    "qid_topic_entity": {
      "Q252": "Indonesia"
    },
    "index": 993
  },
  {
    "QuestionId": "WebQTest-63",
    "RawQuestion": "who was vp for lincoln?",
    "ProcessedQuestion": "who was vp for lincoln",
    "Parses": [
      {
        "ParseId": "WebQTest-63.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:government.us_president.vice_president ?x .\n}\n",
        "PotentialTopicEntityMention": "lincoln",
        "TopicEntityName": "Abraham Lincoln",
        "TopicEntityMid": "m.0gzh",
        "InferentialChain": [
          "government.us_president.vice_president"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03mpk",
            "EntityName": "Hannibal Hamlin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0rmg",
            "EntityName": "Andrew Johnson"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.0gzh": "Abraham Lincoln"
    },
    "qid_topic_entity": {
      "Q91": "Abraham Lincoln"
    },
    "index": 994
  },
  {
    "QuestionId": "WebQTest-64",
    "RawQuestion": "what other books did charles dickens write?",
    "ProcessedQuestion": "what other books did charles dickens write",
    "Parses": [
      {
        "ParseId": "WebQTest-64.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01v9724)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01v9724 ns:book.author.book_editions_published ?x .\n}\n",
        "PotentialTopicEntityMention": "charles dickens",
        "TopicEntityName": "Charles Dickens",
        "TopicEntityMid": "m.01v9724",
        "InferentialChain": [
          "book.author.book_editions_published"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028x_z3",
            "EntityName": "The Old Curiosity Shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.028y4jr",
            "EntityName": "The Old Curiosity Shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dcd",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dcw",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ddb",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_ddt",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_df8",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dfr",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dg5",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dgn",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dh3",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dhl",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_djh",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dql",
            "EntityName": "The life and adventures of Nicholas Nickleby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_dqx",
            "EntityName": "The life and adventures of Nicholas Nickleby"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_fzb",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_hj1",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_hjf",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_kp7",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_kpq",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_kqs",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t_kr7",
            "EntityName": "Oliver Twist"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqhs",
            "EntityName": "The cricket on the hearth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzqjs",
            "EntityName": "The cricket on the hearth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztj0",
            "EntityName": "Our mutual friend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztjh",
            "EntityName": "Our mutual friend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tztjz",
            "EntityName": "Our mutual friend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzw25",
            "EntityName": "Our mutual friend."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzxdm",
            "EntityName": "Our mutual friend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzxf2",
            "EntityName": "Our mutual friend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04tzxfk",
            "EntityName": "Our mutual friend"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cp5",
            "EntityName": "The old curiosity shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cpx",
            "EntityName": "The old curiosity shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_cqc",
            "EntityName": "The old curiosity shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_ggt",
            "EntityName": "The old curiosity shop."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_kqz",
            "EntityName": "The old curiosity shop"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00pl",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00q2",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00qk",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00r8",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00s0",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00sh",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00st",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00t8",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00tr",
            "EntityName": "Bleak house"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00vg",
            "EntityName": "Bleak House."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00vy",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00w7",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00wq",
            "EntityName": "Bleak House."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00x5",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00xn",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00y3",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00yl",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v00zw",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v015x",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0176",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v017p",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0184",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v018m",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0192",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v019k",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01b8",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01cz",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01df",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01dx",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01fd",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01fw",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01gc",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01gv",
            "EntityName": "Great expectations."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01h9",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v01j0",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v02_r",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v02z9",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v02zk",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v030g",
            "EntityName": "Hard times"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03bs",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03c7",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03d5",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03tx",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03vv",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v03wk",
            "EntityName": "Bleak House"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v05lp",
            "EntityName": "Great Expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07k8",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07kr",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07l4",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07ly",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07mp",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07nn",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07p3",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07pl",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v07q1",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rjz",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rkf",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rkx",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rlt",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rm8",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rml",
            "EntityName": "The Mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rn2",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rnd",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rnw",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0rqd",
            "EntityName": "The mystery of Edwin Drood"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v45",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v5p",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v64",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v6m",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v72",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v7k",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v80",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v8h",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v8z",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0v9z",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0vbq",
            "EntityName": "David Copperfield."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0ws9",
            "EntityName": "The Pickwick papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wt5",
            "EntityName": "The Pickwick papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wtn",
            "EntityName": "The Pickwick Papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wv3",
            "EntityName": "The Pickwick papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wwg",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wy1",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0wzg",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v0x0w",
            "EntityName": "David Copperfield"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xs6",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xsp",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xt4",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xtm",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v2xv2",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v3014",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v301v",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v302s",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v303_",
            "EntityName": "Little Dorrit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4zb0",
            "EntityName": "Sketches by Boz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v4zbs",
            "EntityName": "Sketches by Boz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v504r",
            "EntityName": "Sketches by Boz"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p1n",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p2p",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p3f",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p3v",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p47",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p4q",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5p5d",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5q3s",
            "EntityName": "Martin Chuzzlewit"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5vb4",
            "EntityName": "Dombey and Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5vbn",
            "EntityName": "Dombey and Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5vcc",
            "EntityName": "Dombey and Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5vcv",
            "EntityName": "Dombey and Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5vd4",
            "EntityName": "Dombey and Son."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5x2r",
            "EntityName": "Dombey and son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5x3d",
            "EntityName": "Dombey and Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v5y5v",
            "EntityName": "Dombey and Son"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb00",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb09",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb0l",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb0w",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb1_",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb14",
            "EntityName": "A Christmas Carol (Reissue)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb1f",
            "EntityName": "A Christmas Carol (Reissue)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb1q",
            "EntityName": "A Christmas Carol (Reissue)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb29",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb2m",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb2y",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb37",
            "EntityName": "A Christmas Carol (Dramascripts)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb3k",
            "EntityName": "A Christmas Carol. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb3w",
            "EntityName": "A Christmas Carol (Dramascripts)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb44",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb4g",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb4s",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb51",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb5c",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb5n",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb5z",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb67",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb6k",
            "EntityName": "A Christmas Carol (Soundings)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb6v",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb74",
            "EntityName": "A Christmas Carol"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb7g",
            "EntityName": "A Christmas Carol (R)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb7r",
            "EntityName": "A CHRISTMAS CAROL"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb81",
            "EntityName": "A Christmas Carol. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb8r",
            "EntityName": "A Christmas Carol. (Lernmaterialien)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb91",
            "EntityName": "A Christmas Carol (Puffin Choice)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb9b",
            "EntityName": "A Christmas Carol (Puffin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb9m",
            "EntityName": "A Christmas Carol (Puffin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqb9x",
            "EntityName": "A Christmas Carol (Puffin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbb5",
            "EntityName": "A Christmas Carol (Classics Illustrated)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbbg",
            "EntityName": "A Christmas Carol (Scholastic Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbbr",
            "EntityName": "A Christmas Carol (Apple Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbc0",
            "EntityName": "A Christmas Carol (Whole Story)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbcb",
            "EntityName": "A Christmas Carol (Whole Story)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbcn",
            "EntityName": "A Christmas Carol (Aladdin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbcz",
            "EntityName": "A Christmas Carol (Bantam Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbd8",
            "EntityName": "A Christmas Carol (Ladybird Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbdl",
            "EntityName": "A Christmas Carol (Watermill Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbdw",
            "EntityName": "A Christmas Carol (Watermill Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbf5",
            "EntityName": "A Christmas Carol (Bantam Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbfg",
            "EntityName": "A Christmas Carol (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbfs",
            "EntityName": "A Christmas Carol (Radio Theatre)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbg1",
            "EntityName": "A Christmas Carol (Radio Theatre)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbgb",
            "EntityName": "A Christmas Carol (Great Stories)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbgn",
            "EntityName": "A Christmas Carol (Saddleback Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbgz",
            "EntityName": "A Christmas Carol (Illustrated Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbh7",
            "EntityName": "A Christmas Carol (Audio Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbhj",
            "EntityName": "A Christmas Carol (Family Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbht",
            "EntityName": "A Christmas Carol (Large Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbj3",
            "EntityName": "A Christmas Carol (Cover to Cover)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbjd",
            "EntityName": "A Christmas Carol (Classic Fiction)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbjp",
            "EntityName": "A Christmas Carol (Classic Fiction)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbjz",
            "EntityName": "A Christmas Carol (Pacemaker Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbk8",
            "EntityName": "A Christmas Carol (Tor Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbkk",
            "EntityName": "A Christmas Carol (Pacemaker Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbkv",
            "EntityName": "A Christmas Carol (Children's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbl6",
            "EntityName": "A Christmas Carol (Acting Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqblj",
            "EntityName": "A Christmas Carol (Classic Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqblv",
            "EntityName": "A Christmas Carol (Limited Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbm_",
            "EntityName": "A Christmas Carol (Clear Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbm3",
            "EntityName": "A Christmas Carol (Take Part)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbmf",
            "EntityName": "A Christmas Carol (Cp 1135)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbmq",
            "EntityName": "A Christmas Carol (Enriched Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbn9",
            "EntityName": "A Christmas Carol (Illustrated Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbnm",
            "EntityName": "A Christmas Carol (Value Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbny",
            "EntityName": "A Christmas Carol (Penguin Student Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbp6",
            "EntityName": "A Christmas Carol (Ladybird Children's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbpl",
            "EntityName": "A Christmas Carol (Penguin Readers, Level 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbpx",
            "EntityName": "A Christmas Carol (Usborne Young Reading)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbq6",
            "EntityName": "A Christmas Carol (Read & Listen Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbqj",
            "EntityName": "A Christmas Carol (Through the Magic Window Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbqv",
            "EntityName": "A Christmas Carol (Illustrated Classics (Graphic Novels))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbr3",
            "EntityName": "A Christmas Carol (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbrf",
            "EntityName": "A Christmas Carol (Classics for Young Adults and Adults)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbrr",
            "EntityName": "A Christmas Carol (Green Integer, 50)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbs1",
            "EntityName": "A Christmas Carol (Chrysalis Children's Classics Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbsc",
            "EntityName": "A Christmas Carol (Wordsworth Collection) (Wordsworth Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbsz",
            "EntityName": "A Christmas Carol (Everyman's Library Children's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbt8",
            "EntityName": "A Christmas Carol (Dramascripts Classic Texts)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbtl",
            "EntityName": "A Christmas Carol (Thornes Classic Novels)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbtx",
            "EntityName": "A Christmas Carol (Young Reading Series 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbv6",
            "EntityName": "A Christmas Carol (Penguin Student Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbvj",
            "EntityName": "A Christmas Carol (Nelson Graded Readers)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbvx",
            "EntityName": "A Christmas Carol (Oxford Bookworms Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbw5",
            "EntityName": "A Christmas Carol (The Kennett Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbwg",
            "EntityName": "A Christmas Carol (Gollancz Children's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbws",
            "EntityName": "A Christmas Carol (Webster's Portuguese Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbx2",
            "EntityName": "A Christmas Carol (Webster's Korean Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbxd",
            "EntityName": "A Christmas Carol (Classic, Picture, Ladybird)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqbxq",
            "EntityName": "A Christmas Carol (New Longman Literature)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04yqby0",
            "EntityName": "A Christmas Carol (Children's Theatre Playscript)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjhl",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjj0",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjjh",
            "EntityName": "Great expectations."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjjs",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjk_",
            "EntityName": "Great Expectations."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjk7",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.051jjkj",
            "EntityName": "Great expectations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cj_7",
            "EntityName": "A Tale of Two Cities (10 Cassettes)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cj_j",
            "EntityName": "A Tale of Two Cities (Student's Novels)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cj_t",
            "EntityName": "A Tale of Two Cities (Oxford Playscripts)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjld",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjlp",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjlz",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjm7",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjmj",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjmv",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjn_",
            "EntityName": "A Tale of Two Cities (Soundings)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjn3",
            "EntityName": "A TALE OF TWO CITIES"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjnd",
            "EntityName": "A Tale of Two Cities"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjnq",
            "EntityName": "A Tale of Two Cities (Dramatized)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjp8",
            "EntityName": "A Tale of Two Cities (Masterworks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjpl",
            "EntityName": "A Tale of Two Cities (Puffin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjpw",
            "EntityName": "A Tale of Two Cities (Penguin Popular Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjq_",
            "EntityName": "A Tale of Two Cities (Illustrated Junior Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjq4",
            "EntityName": "A Tale of Two Cities (Prentice Hall Science)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjqf",
            "EntityName": "A Tale of Two Cities (Penguin Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjqq",
            "EntityName": "A Tale of Two Cities (Silver Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjr8",
            "EntityName": "A Tale of Two Cities (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjrk",
            "EntityName": "A Tale of Two Cities (Signet Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjrv",
            "EntityName": "A Tale of Two Cities (Everyman's Library (Paper))"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjs_",
            "EntityName": "A Tale of Two Cities (Bantam Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjs3",
            "EntityName": "A Tale of Two Cities (Classic Retelling)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjsd",
            "EntityName": "A Tale of Two Cities (Dover Thrift Editions)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjsq",
            "EntityName": "A Tale of Two Cities (Enriched Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjt9",
            "EntityName": "A Tale of Two Cities (Paperback Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjtm",
            "EntityName": "A Tale of Two Cities (Ladybird Children's Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjty",
            "EntityName": "A Tale of Two Cities (Bantam Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjv6",
            "EntityName": "A Tale of Two Cities (Courage Literary Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjvj",
            "EntityName": "A Tale of Two Cities (Saddleback Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjvv",
            "EntityName": "A Tale of Two Cities (Illustrated Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjw_",
            "EntityName": "A Tale of Two Cities (Collector's Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjw3",
            "EntityName": "A Tale of Two Cities (Cover to Cover Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjwd",
            "EntityName": "A Tale of Two Cities (Cover to Cover Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjwp",
            "EntityName": "A Tale of Two Cities (Classics Illustrated Notes)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjx9",
            "EntityName": "A Tale Of Two Cities (Adult Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjxl",
            "EntityName": "A Tale of Two Cities (The Classic Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjxw",
            "EntityName": "A Tale of Two Cities (Konemann Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjy5",
            "EntityName": "A Tale of Two Cities (Wordsworth Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjyh",
            "EntityName": "A Tale of Two Cities (Everyman's Library Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjyt",
            "EntityName": "A Tale of Two Cities (Naxos AudioBooks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjz2",
            "EntityName": "A Tale of Two Cities (Oxford Bookworms Library)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjzc",
            "EntityName": "A Tale of Two Cities (Acting Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjzn",
            "EntityName": "A Tale of Two Cities (Tor Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059cjzy",
            "EntityName": "A Tale of Two Cities (Longman Fiction)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck02",
            "EntityName": "A Tale of Two Cities (Progressive English)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck0d",
            "EntityName": "A Tale of Two Cities (Everyman Paperbacks)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck0p",
            "EntityName": "A Tale of Two Cities (Piccolo Books)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck0z",
            "EntityName": "A Tale of Two Cities (Macmillan Students' Novels)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck17",
            "EntityName": "A Tale of Two Cities (Dramascripts S.)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck1j",
            "EntityName": "A Tale of Two Cities (Simple English)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck1v",
            "EntityName": "A Tale of Two Cities (Classics Illustrated)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck23",
            "EntityName": "A Tale of Two Cities (Adopted Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck2f",
            "EntityName": "A Tale of Two Cities (Compact English Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck2r",
            "EntityName": "A Tale of Two Cities (Pacemaker Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck30",
            "EntityName": "A Tale of Two Cities (Unabridged Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck39",
            "EntityName": "A Tale of Two Cities (Dodo Press)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck3m",
            "EntityName": "A Tale of Two Cities (Large Print Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck3y",
            "EntityName": "A Tale of Two Cities (Clear Print)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck47",
            "EntityName": "A Tale of Two Cities (Cyber Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck4t",
            "EntityName": "A Tale of Two Cities (Cyber Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck55",
            "EntityName": "A Tale of Two Cities (Ultimate Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck5g",
            "EntityName": "A Tale of Two Cities (BBC Audio Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck5r",
            "EntityName": "A Tale of Two Cities (Illustrated Classics)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck61",
            "EntityName": "A Tale of Two Cities (Cassette (1 Hr).)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck6b",
            "EntityName": "A Tale Of Two Cities (Adult Classics in Audio)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck6m",
            "EntityName": "A Tale of Two Cities (Classic Fiction)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck6x",
            "EntityName": "A Tale of Two Cities (New Oxford Illustrated Dickens)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck75",
            "EntityName": "A Tale of Two Cities (The Greatest Historical Novels)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck7h",
            "EntityName": "A Tale of Two Cities (Penguin Readers, Level 5)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck7t",
            "EntityName": "A Tale of Two Cities (Collected Works of Charles Dickens)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck8_",
            "EntityName": "A Tale of Two Cities (Classic Literature with Classical Music)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck82",
            "EntityName": "A Tale of Two Cities (Amsco Literature Program - N 380 ALS)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck8d",
            "EntityName": "A Tale of Two Cities (Unabridged Classics for High School and Adults)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck8p",
            "EntityName": "A Tale of Two Cities (Barnes & Noble Classics Series)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck98",
            "EntityName": "A Tale of Two Cities (Bookcassette(r) Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck9k",
            "EntityName": "A Tale of Two Cities (Webster's Chinese-Simplified Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ck9w",
            "EntityName": "A Tale of Two Cities (Webster's German Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckb5",
            "EntityName": "A Tale of Two Cities (Webster's Italian Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckbt",
            "EntityName": "A Tale of Two Cities (Webster's Chinese-Traditional Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckc3",
            "EntityName": "A Tale of Two Cities (Webster's Portuguese Thesaurus Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckcf",
            "EntityName": "A Tale of Two Cities (Longman Classics, Stage 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckcr",
            "EntityName": "A Tale of Two Cities (Lake Illustrated Classics, Collection 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckd1",
            "EntityName": "A Tale of Two Cities (Isis Clear Type Classic)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckdc",
            "EntityName": "A Tale Of Two Cities (Classic Books on Cassettes Collection)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckdn",
            "EntityName": "A Tale of Two Cities (40th Anniversary Edition)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckdy",
            "EntityName": "A Tale of Two Cities (Lake Illustrated Classics, Collection 2)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckf7",
            "EntityName": "A Tale of Two Cities (Unabridged Classics for High School and Adults)"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059ckfj",
            "EntityName": "A Tale of Two Cities (Unabridged Classics for High School and Adults)"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01v9724": "Charles Dickens"
    },
    "qid_topic_entity": {
      "Q5686": "Charles Dickens"
    },
    "index": 995
  },
  {
    "QuestionId": "WebQTest-66",
    "RawQuestion": "what is the currency of puerto rico called?",
    "ProcessedQuestion": "what is the currency of puerto rico called",
    "Parses": [
      {
        "ParseId": "WebQTest-66.P0",
        "AnnotatorId": 1,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05r7t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05r7t ns:location.country.currency_used ?x .\n}\n",
        "PotentialTopicEntityMention": "puerto rico",
        "TopicEntityName": "Puerto Rico",
        "TopicEntityMid": "m.05r7t",
        "InferentialChain": [
          "location.country.currency_used"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09nqf",
            "EntityName": "United States Dollar"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.05r7t": "Puerto Rico"
    },
    "qid_topic_entity": {
      "Q1183": "Puerto Rico"
    },
    "index": 996
  },
  {
    "QuestionId": "WebQTest-67",
    "RawQuestion": "what kind of cancer did carl wilson have?",
    "ProcessedQuestion": "what kind of cancer did carl wilson have",
    "Parses": [
      {
        "ParseId": "WebQTest-67.P0",
        "AnnotatorId": 2,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n9vwg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n9vwg ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "PotentialTopicEntityMention": "carl wilson",
        "TopicEntityName": "Carl Wilson",
        "TopicEntityMid": "m.01n9vwg",
        "InferentialChain": [
          "people.deceased_person.cause_of_death"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04p3w",
            "EntityName": "Lung cancer"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09969",
            "EntityName": "Brain tumor"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.01n9vwg": "Carl Wilson"
    },
    "qid_topic_entity": {
      "Q504920": "Carl Wilson"
    },
    "index": 997
  },
  {
    "QuestionId": "WebQTest-72",
    "RawQuestion": "what battles did stonewall jackson fight in?",
    "ProcessedQuestion": "what battles did stonewall jackson fight in",
    "Parses": [
      {
        "ParseId": "WebQTest-72.P0",
        "AnnotatorId": 0,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": "First-round parse verification"
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07r8h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07r8h ns:military.military_commander.military_commands ?y .\n?y ns:military.military_command.military_conflict ?x .\n}\n",
        "PotentialTopicEntityMention": "stonewall jackson",
        "TopicEntityName": "Stonewall Jackson",
        "TopicEntityMid": "m.07r8h",
        "InferentialChain": [
          "military.military_commander.military_commands",
          "military.military_command.military_conflict"
        ],
        "Constraints": [],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_nvh",
            "EntityName": "First Battle of Winchester"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01xvgq",
            "EntityName": "How Few Remain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021h20",
            "EntityName": "Jackson's Valley Campaign"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02bckn",
            "EntityName": "Battle of Chantilly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02p037",
            "EntityName": "Battle of Harpers Ferry"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q5_1r",
            "EntityName": "Romney Expedition"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_mz",
            "EntityName": "Battle of Cedar Mountain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_qr",
            "EntityName": "First Battle of Rappahannock Station"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04v_xx",
            "EntityName": "Manassas Station Operations"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vqvv",
            "EntityName": "Battle of White Oak Swamp"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vt8k",
            "EntityName": "Battle of Hoke's Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vyf2",
            "EntityName": "Battle of Hancock"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vyvq",
            "EntityName": "First Battle of Kernstown"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vyw1",
            "EntityName": "Battle of McDowell"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vyxv",
            "EntityName": "Battle of Front Royal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04vz0r",
            "EntityName": "Battle of Port Republic"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0d0mw",
            "EntityName": "Battle of Chancellorsville"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f777",
            "EntityName": "Second Battle of Bull Run"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kbq",
            "EntityName": "American Civil War"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.07r8h": "Stonewall Jackson"
    },
    "qid_topic_entity": {
      "Q216124": "Stonewall Jackson"
    },
    "index": 998
  },
  {
    "QuestionId": "WebQTest-74",
    "RawQuestion": "who did benjamin franklin get married to?",
    "ProcessedQuestion": "who did benjamin franklin get married to",
    "Parses": [
      {
        "ParseId": "WebQTest-74.P0",
        "AnnotatorId": 4,
        "AnnotatorComment": {
          "ParseQuality": "Complete",
          "QuestionQuality": "Good",
          "Confidence": "Normal",
          "FreeFormComment": ""
        },
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.01bl8s .\n}\n",
        "PotentialTopicEntityMention": "benjamin franklin",
        "TopicEntityName": "Benjamin Franklin",
        "TopicEntityMid": "m.019fz",
        "InferentialChain": [
          "people.person.spouse_s",
          "people.marriage.spouse"
        ],
        "Constraints": [
          {
            "Operator": "Equal",
            "ArgumentType": "Entity",
            "Argument": "m.01bl8s",
            "EntityName": "Common-law marriage",
            "SourceNodeIndex": 0,
            "NodePredicate": "people.marriage.type_of_union",
            "ValueType": "String"
          }
        ],
        "Time": null,
        "Order": null,
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b15_0",
            "EntityName": "Deborah Read"
          }
        ]
      }
    ],
    "topic_entity": {
      "m.019fz": "Benjamin Franklin"
    },
    "qid_topic_entity": {
      "Q34969": "Benjamin Franklin"
    },
    "index": 999
  }
]